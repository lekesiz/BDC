version: '3.8'\n\nservices:\n  # Prometheus - Metrics collection and storage\n  prometheus:\n    image: prom/prometheus:v2.47.0\n    container_name: bdc-prometheus\n    restart: unless-stopped\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./monitoring/prometheus:/etc/prometheus\n      - prometheus_data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/etc/prometheus/console_libraries'\n      - '--web.console.templates=/etc/prometheus/consoles'\n      - '--web.enable-lifecycle'\n      - '--web.enable-admin-api'\n      - '--storage.tsdb.retention.time=30d'\n    networks:\n      - monitoring\n    labels:\n      - \"monitoring.description=Metrics collection and storage\"\n\n  # Grafana - Visualization and dashboards\n  grafana:\n    image: grafana/grafana:10.1.0\n    container_name: bdc-grafana\n    restart: unless-stopped\n    ports:\n      - \"3000:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}\n      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY:-secret}\n      - GF_USERS_ALLOW_SIGN_UP=false\n      - GF_USERS_ALLOW_ORG_CREATE=false\n      - GF_USERS_AUTO_ASSIGN_ORG=true\n      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Viewer\n      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning\n      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards\n    networks:\n      - monitoring\n    depends_on:\n      - prometheus\n    labels:\n      - \"monitoring.description=Metrics visualization and dashboards\"\n\n  # AlertManager - Alert handling and routing\n  alertmanager:\n    image: prom/alertmanager:v0.26.0\n    container_name: bdc-alertmanager\n    restart: unless-stopped\n    ports:\n      - \"9093:9093\"\n    volumes:\n      - ./monitoring/alertmanager:/etc/alertmanager\n      - alertmanager_data:/alertmanager\n    command:\n      - '--config.file=/etc/alertmanager/alertmanager.yml'\n      - '--storage.path=/alertmanager'\n      - '--web.external-url=http://localhost:9093'\n      - '--cluster.advertise-address=0.0.0.0:9093'\n    networks:\n      - monitoring\n    environment:\n      - MAIL_SERVER=${MAIL_SERVER:-localhost}\n      - MAIL_PORT=${MAIL_PORT:-587}\n      - MAIL_USERNAME=${MAIL_USERNAME:-}\n      - MAIL_PASSWORD=${MAIL_PASSWORD:-}\n      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER:-alerts@bdc.local}\n      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}\n      - ADMIN_EMAILS=${ADMIN_EMAILS:-admin@bdc.local}\n      - ALERT_WEBHOOK_URL=${ALERT_WEBHOOK_URL:-}\n      - ALERT_API_KEY=${ALERT_API_KEY:-}\n    labels:\n      - \"monitoring.description=Alert management and routing\"\n\n  # Node Exporter - System metrics\n  node-exporter:\n    image: prom/node-exporter:v1.6.1\n    container_name: bdc-node-exporter\n    restart: unless-stopped\n    ports:\n      - \"9100:9100\"\n    volumes:\n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /:/rootfs:ro\n      - /etc/hostname:/etc/nodename:ro\n      - /etc/localtime:/etc/localtime:ro\n    command:\n      - '--path.procfs=/host/proc'\n      - '--path.sysfs=/host/sys'\n      - '--path.rootfs=/rootfs'\n      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'\n      - '--collector.hostname=/etc/nodename'\n    networks:\n      - monitoring\n    labels:\n      - \"monitoring.description=System metrics collection\"\n\n  # cAdvisor - Container metrics\n  cadvisor:\n    image: gcr.io/cadvisor/cadvisor:v0.47.2\n    container_name: bdc-cadvisor\n    restart: unless-stopped\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - /:/rootfs:ro\n      - /var/run:/var/run:ro\n      - /sys:/sys:ro\n      - /var/lib/docker/:/var/lib/docker:ro\n      - /dev/disk/:/dev/disk:ro\n    privileged: true\n    devices:\n      - /dev/kmsg\n    networks:\n      - monitoring\n    labels:\n      - \"monitoring.description=Container metrics collection\"\n\n  # Redis Exporter - Redis metrics\n  redis-exporter:\n    image: oliver006/redis_exporter:v1.54.0\n    container_name: bdc-redis-exporter\n    restart: unless-stopped\n    ports:\n      - \"9121:9121\"\n    environment:\n      - REDIS_ADDR=${REDIS_URL:-redis://redis:6379}\n    networks:\n      - monitoring\n    depends_on:\n      - redis\n    labels:\n      - \"monitoring.description=Redis metrics collection\"\n\n  # PostgreSQL Exporter - Database metrics\n  postgres-exporter:\n    image: prometheuscommunity/postgres-exporter:v0.13.2\n    container_name: bdc-postgres-exporter\n    restart: unless-stopped\n    ports:\n      - \"9187:9187\"\n    environment:\n      - DATA_SOURCE_NAME=${DATABASE_URL}\n    volumes:\n      - ./monitoring/postgres-exporter:/etc/postgres-exporter\n    networks:\n      - monitoring\n    depends_on:\n      - postgres\n    labels:\n      - \"monitoring.description=PostgreSQL metrics collection\"\n\n  # Blackbox Exporter - External service monitoring\n  blackbox-exporter:\n    image: prom/blackbox-exporter:v0.24.0\n    container_name: bdc-blackbox-exporter\n    restart: unless-stopped\n    ports:\n      - \"9115:9115\"\n    volumes:\n      - ./monitoring/blackbox:/etc/blackbox\n    command:\n      - '--config.file=/etc/blackbox/blackbox.yml'\n    networks:\n      - monitoring\n    labels:\n      - \"monitoring.description=External service monitoring\"\n\n  # Loki - Log aggregation\n  loki:\n    image: grafana/loki:2.9.0\n    container_name: bdc-loki\n    restart: unless-stopped\n    ports:\n      - \"3100:3100\"\n    volumes:\n      - ./monitoring/loki:/etc/loki\n      - loki_data:/tmp/loki\n    command:\n      - '-config.file=/etc/loki/loki-config.yaml'\n    networks:\n      - monitoring\n    labels:\n      - \"monitoring.description=Log aggregation and storage\"\n\n  # Promtail - Log collection\n  promtail:\n    image: grafana/promtail:2.9.0\n    container_name: bdc-promtail\n    restart: unless-stopped\n    volumes:\n      - ./monitoring/promtail:/etc/promtail\n      - /var/log:/var/log:ro\n      - /var/lib/docker/containers:/var/lib/docker/containers:ro\n      - ./data/logs:/app/logs:ro\n    command:\n      - '-config.file=/etc/promtail/promtail-config.yaml'\n    networks:\n      - monitoring\n    depends_on:\n      - loki\n    labels:\n      - \"monitoring.description=Log collection and shipping\"\n\n  # Jaeger - Distributed tracing\n  jaeger:\n    image: jaegertracing/all-in-one:1.49\n    container_name: bdc-jaeger\n    restart: unless-stopped\n    ports:\n      - \"16686:16686\"  # Jaeger UI\n      - \"14250:14250\"  # gRPC\n      - \"14268:14268\"  # HTTP\n      - \"6831:6831/udp\"  # UDP\n      - \"6832:6832/udp\"  # UDP\n    environment:\n      - COLLECTOR_OTLP_ENABLED=true\n      - COLLECTOR_ZIPKIN_HOST_PORT=:9411\n    volumes:\n      - jaeger_data:/tmp\n    networks:\n      - monitoring\n    labels:\n      - \"monitoring.description=Distributed tracing\"\n\n  # Elasticsearch - For advanced log analysis (optional)\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2\n    container_name: bdc-elasticsearch\n    restart: unless-stopped\n    environment:\n      - discovery.type=single-node\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n      - xpack.security.enabled=false\n      - xpack.security.enrollment.enabled=false\n    ports:\n      - \"9200:9200\"\n    volumes:\n      - elasticsearch_data:/usr/share/elasticsearch/data\n    networks:\n      - monitoring\n    profiles:\n      - elk\n    labels:\n      - \"monitoring.description=Advanced log search and analysis\"\n\n  # Kibana - Elasticsearch UI (optional)\n  kibana:\n    image: docker.elastic.co/kibana/kibana:8.10.2\n    container_name: bdc-kibana\n    restart: unless-stopped\n    environment:\n      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200\n      - xpack.security.enabled=false\n    ports:\n      - \"5601:5601\"\n    networks:\n      - monitoring\n    depends_on:\n      - elasticsearch\n    profiles:\n      - elk\n    labels:\n      - \"monitoring.description=Log analysis and visualization\"\n\n  # Uptime Kuma - Uptime monitoring (optional)\n  uptime-kuma:\n    image: louislam/uptime-kuma:1.23.6\n    container_name: bdc-uptime-kuma\n    restart: unless-stopped\n    ports:\n      - \"3001:3001\"\n    volumes:\n      - uptime_kuma_data:/app/data\n    networks:\n      - monitoring\n    profiles:\n      - uptime\n    labels:\n      - \"monitoring.description=Website and service uptime monitoring\"\n\n  # Netdata - Real-time system monitoring (optional)\n  netdata:\n    image: netdata/netdata:v1.43.0\n    container_name: bdc-netdata\n    restart: unless-stopped\n    ports:\n      - \"19999:19999\"\n    volumes:\n      - netdata_lib:/var/lib/netdata\n      - netdata_cache:/var/cache/netdata\n      - /etc/passwd:/host/etc/passwd:ro\n      - /etc/group:/host/etc/group:ro\n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /etc/os-release:/host/etc/os-release:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    cap_add:\n      - SYS_PTRACE\n    security_opt:\n      - apparmor:unconfined\n    environment:\n      - NETDATA_CLAIM_TOKEN=${NETDATA_CLAIM_TOKEN:-}\n      - NETDATA_CLAIM_URL=https://app.netdata.cloud\n    networks:\n      - monitoring\n    profiles:\n      - realtime\n    labels:\n      - \"monitoring.description=Real-time system performance monitoring\"\n\n  # BDC Application with monitoring\n  bdc-app:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    container_name: bdc-app\n    restart: unless-stopped\n    ports:\n      - \"5000:5000\"\n    environment:\n      - FLASK_ENV=${FLASK_ENV:-production}\n      - DATABASE_URL=${DATABASE_URL}\n      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}\n      - SECRET_KEY=${SECRET_KEY}\n      - JWT_SECRET_KEY=${JWT_SECRET_KEY}\n      - MONITORING_APM_ENABLED=true\n      - MONITORING_INFRASTRUCTURE_ENABLED=true\n      - MONITORING_ALERTING_ENABLED=true\n      - MONITORING_AUTO_START=true\n      - PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus\n    volumes:\n      - ./data/uploads:/app/uploads\n      - ./data/logs:/app/logs\n    networks:\n      - monitoring\n      - default\n    depends_on:\n      - postgres\n      - redis\n      - prometheus\n    labels:\n      - \"monitoring.description=BDC main application with monitoring\"\n      - \"prometheus.io/scrape=true\"\n      - \"prometheus.io/port=5000\"\n      - \"prometheus.io/path=/metrics\"\n\n  # BDC Frontend\n  bdc-frontend:\n    build:\n      context: ./client\n      dockerfile: Dockerfile\n    container_name: bdc-frontend\n    restart: unless-stopped\n    ports:\n      - \"3002:80\"\n    environment:\n      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:5000}\n      - REACT_APP_MONITORING_ENABLED=true\n    networks:\n      - monitoring\n      - default\n    depends_on:\n      - bdc-app\n    labels:\n      - \"monitoring.description=BDC frontend application\"\n\n  # Redis - Caching and session storage\n  redis:\n    image: redis:7.2-alpine\n    container_name: bdc-redis\n    restart: unless-stopped\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - redis_data:/data\n      - ./redis/redis.conf:/etc/redis/redis.conf\n    command: redis-server /etc/redis/redis.conf\n    networks:\n      - monitoring\n      - default\n    labels:\n      - \"monitoring.description=Redis cache and session storage\"\n\n  # PostgreSQL - Main database\n  postgres:\n    image: postgres:15-alpine\n    container_name: bdc-postgres\n    restart: unless-stopped\n    ports:\n      - \"5432:5432\"\n    environment:\n      - POSTGRES_DB=${POSTGRES_DB:-bdc}\n      - POSTGRES_USER=${POSTGRES_USER:-bdc_user}\n      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./database/init:/docker-entrypoint-initdb.d\n    networks:\n      - monitoring\n      - default\n    labels:\n      - \"monitoring.description=PostgreSQL main database\"\n\n  # Nginx - Reverse proxy and load balancer\n  nginx:\n    image: nginx:1.25-alpine\n    container_name: bdc-nginx\n    restart: unless-stopped\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/nginx.conf:/etc/nginx/nginx.conf\n      - ./ssl:/etc/ssl/certs\n      - ./data/nginx-logs:/var/log/nginx\n    networks:\n      - monitoring\n      - default\n    depends_on:\n      - bdc-app\n      - bdc-frontend\n    labels:\n      - \"monitoring.description=Nginx reverse proxy\"\n\nvolumes:\n  prometheus_data:\n    driver: local\n  grafana_data:\n    driver: local\n  alertmanager_data:\n    driver: local\n  loki_data:\n    driver: local\n  jaeger_data:\n    driver: local\n  elasticsearch_data:\n    driver: local\n  uptime_kuma_data:\n    driver: local\n  netdata_lib:\n    driver: local\n  netdata_cache:\n    driver: local\n  postgres_data:\n    driver: local\n  redis_data:\n    driver: local\n\nnetworks:\n  monitoring:\n    driver: bridge\n    name: bdc-monitoring\n  default:\n    driver: bridge\n    name: bdc-default"