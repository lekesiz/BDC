# Docker Compose configuration for local testing

services:
  # PostgreSQL Database for local testing
  postgres:
    image: postgres:15-alpine
    container_name: bdc-postgres-test
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-bdc_test}
      POSTGRES_USER: ${POSTGRES_USER:-bdc_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - bdc-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-bdc_user} -d ${POSTGRES_DB:-bdc_test}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache for local testing
  redis:
    image: redis:7-alpine
    container_name: bdc-redis-test
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-test123}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-test123}
    volumes:
      - redis_test_data:/data
    ports:
      - "6379:6379"
    networks:
      - bdc-test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Backend Application
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    container_name: bdc-backend-test
    restart: unless-stopped
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: 1
      DATABASE_URL: postgresql://${POSTGRES_USER:-bdc_user}:${POSTGRES_PASSWORD:-test123}@postgres:5432/${POSTGRES_DB:-bdc_test}
      REDIS_URL: redis://:${REDIS_PASSWORD:-test123}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-for-testing-only}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-jwt-secret-for-testing}
      CORS_ORIGINS: "http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000"
      # Optional external services (can be left empty for local testing)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      MAIL_SERVER: ${MAIL_SERVER:-}
      MAIL_USERNAME: ${MAIL_USERNAME:-}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-}
    volumes:
      - ./server:/app
      - backend_test_uploads:/app/uploads
    ports:
      - "5001:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bdc-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # React Frontend Application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    container_name: bdc-frontend-test
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5001
      VITE_WS_URL: ws://localhost:5001
      VITE_ENVIRONMENT: development
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - bdc-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local
  backend_test_uploads:
    driver: local

networks:
  bdc-test-network:
    driver: bridge
    name: bdc-test-network