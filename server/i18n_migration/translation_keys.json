{
  "message": {
    "realtime.message.real_time_notifications_and_e": "\nReal-time notifications and events using Socket.IO.\n\nThis module provides a centralized way to emit real-time events to clients\nusing Socket.IO. It's designed to be imported by services and API endpoints\nthat need to notify clients of changes or events.\n",
    "realtime.message.configure_socket_io_with_the_a": "Configure Socket.IO with the application context.",
    "realtime.message.socket_io_configured_for_real": "Socket.IO configured for real-time notifications",
    "realtime.message.emit_an_event_to_a_specif": "\n    Emit an event to a specific user.\n    \n    Args:\n        user_id (int): The user's ID\n        event_name (str): The name of the event\n        data (dict): The data to send with the event\n    ",
    "realtime.message.to_user": " to user ",
    "realtime.message.to_user_1": " to user ",
    "realtime.message.emit_an_event_to_all_user": "\n    Emit an event to all users in a tenant.\n    \n    Args:\n        tenant_id (int): The tenant's ID\n        event_name (str): The name of the event\n        data (dict): The data to send with the event\n    ",
    "realtime.message.to_tenant": " to tenant ",
    "realtime.message.to_tenant_1": " to tenant ",
    "realtime.message.emit_an_event_to_all_user_1": "\n    Emit an event to all users with a specific role.\n    \n    Args:\n        role (str): The role name (e.g. 'admin', 'trainer')\n        event_name (str): The name of the event\n        data (dict): The data to send with the event\n    ",
    "realtime.message.to_role": " to role ",
    "realtime.message.to_role_1": " to role ",
    "realtime.message.broadcast_an_event_to_all": "\n    Broadcast an event to all connected clients.\n    \n    Args:\n        event_name (str): The name of the event\n        data (dict): The data to send with the event\n        include_sender (bool): Whether to include the sender in the broadcast\n    ",
    "realtime.message.to_all_clients": " to all clients",
    "realtime.message.emit_event_when_modules_are_re": "Emit event when modules are reordered.",
    "realtime.message.emit_event_when_notifications": "Emit event when notifications are marked as read.",
    "realtime.message.emit_event_when_unread_notific": "Emit event when unread notification count changes.",
    "__init__.message.enhanced_flask_application_fa": "\nEnhanced Flask Application Factory with Performance Optimization\nIntegrates all performance optimization components into the BDC application.\n",
    "__init__.message.enhanced_application_fact": "\n    Enhanced application factory with comprehensive performance optimization.\n    \n    Args:\n        config_name: Configuration environment ('development', 'testing', 'production')\n    \n    Returns:\n        Flask application instance with all optimizations enabled\n    ",
    "__init__.message.http_localhost_5173": "http://localhost:5173",
    "__init__.message.http_localhost_5173_1": "http://localhost:5173",
    "__init__.message.initializing_internationaliz": "🌐 Initializing internationalization middleware...",
    "__init__.message.initializing_comprehensive_p": "🚀 Initializing comprehensive performance optimization...",
    "__init__.message.registered_blueprint": "✅ Registered blueprint: ",
    "__init__.message.initialize_performance_monitor": "Initialize performance monitoring on first request",
    "__init__.message.starting_performance_monitor": "🔍 Starting performance monitoring...",
    "__init__.message.memory_baseline_established": "✅ Memory baseline established",
    "__init__.message.database_indexes_optimized": "✅ Database indexes optimized: ",
    "__init__.message.performance_tracking_for_each": "Performance tracking for each request",
    "__init__.message.performance_logging_after_each": "Performance logging after each request",
    "__init__.message.s": "s) - ",
    "__init__.message.database_cleanup_on_request_te": "Database cleanup on request teardown",
    "__init__.message.2024_01_01t00_00_00z": "2024-01-01T00:00:00Z",
    "__init__.message.1_0_0": "1.0.0",
    "__init__.message.redirect_to_performance_monito": "Redirect to performance monitoring dashboard",
    "__init__.message.performance_performance_dashbo": "performance.performance_dashboard",
    "__init__.message.too_many_requests_please_try": "Too many requests. Please try again later.",
    "__init__.message.cli_command_to_optimize_databa": "CLI command to optimize database performance",
    "__init__.message.running_database_optimizatio": "🔧 Running database optimization...",
    "__init__.message.optimize_db": "optimize-db",
    "__init__.message.cli_command_to_clear_all_cache": "CLI command to clear all caches",
    "__init__.message.clearing_all_caches": "🧹 Clearing all caches...",
    "__init__.message.query_cache_cleared": "✅ Query cache cleared",
    "__init__.message.database_cache_cleared": "✅ Database cache cleared",
    "__init__.message.flask_cache_cleared": "✅ Flask cache cleared",
    "__init__.message.clear_cache": "clear-cache",
    "__init__.message.cli_command_to_generate_perfor": "CLI command to generate performance report",
    "__init__.message.generating_performance_repor": "📊 Generating performance report...",
    "__init__.message.system_health": "\n🏥 SYSTEM HEALTH: ",
    "__init__.message.database_performance": "\n📊 DATABASE PERFORMANCE:",
    "__init__.message.total_queries": "   - Total queries: ",
    "__init__.message.average_query_time": "   - Average query time: ",
    "__init__.message.slow_queries": "   - Slow queries: ",
    "__init__.message.cache_performance": "\n🎯 CACHE PERFORMANCE:",
    "__init__.message.hit_rate": "   - Hit rate: ",
    "__init__.message.total_requests": "   - Total requests: ",
    "__init__.message.memory_usage": "\n💾 MEMORY USAGE:",
    "__init__.message.current": "   - Current: ",
    "__init__.message.mb": " MB",
    "__init__.message.peak": "   - Peak: ",
    "__init__.message.mb_1": " MB",
    "__init__.message.percentage": "   - Percentage: ",
    "__init__.message.recommendations": "\n💡 RECOMMENDATIONS:",
    "__init__.message.": "   - [",
    "__init__.message.performance_report": "performance-report",
    "__init__.message.performance_monitoring_avail": "📈 Performance monitoring available at: /api/performance/dashboard",
    "__init__.message.health_check_available_at": "🏥 Health check available at: /health",
    "container.message.dependency_injection_container": "Dependency injection container for managing service instances.",
    "container.message.set_up_service_registrations": "Set up service registrations.",
    "container.message.register_a_service_wi": "\n        Register a service with the container.\n        \n        Args:\n            name: Service name\n            factory: Factory function to create the service\n            singleton: Whether to create only one instance\n        ",
    "container.message.is_not_registered": "' is not registered",
    "container.message.create_user_repository_instanc": "Create user repository instance.",
    "container.message.create_beneficiary_repository": "Create beneficiary repository instance.",
    "container.message.create_notification_repository": "Create notification repository instance.",
    "container.message.create_document_repository_ins": "Create document repository instance.",
    "container.message.create_appointment_repository": "Create appointment repository instance.",
    "container.message.create_auth_service_instance": "Create auth service instance.",
    "container.message.create_user_service_instance": "Create user service instance.",
    "container.message.create_notification_service_in": "Create notification service instance.",
    "container.message.create_document_service_instan": "Create document service instance.",
    "container.message.create_beneficiary_service_ins": "Create beneficiary service instance.",
    "container.message.create_appointment_service_ins": "Create appointment service instance.",
    "container.message.clear_all_singleton_instances": "Clear all singleton instances.",
    "container.message.get_the_global_container_insta": "Get the global container instance.",
    "container.message.decorator_to_inject_depen": "\n    Decorator to inject dependencies into Flask route handlers.\n    \n    Args:\n        service_name: Name of the service to inject\n        \n    Example:\n        @app.route('/login')\n        @inject('auth_service')\n        def login(auth_service: IAuthService):\n            return auth_service.login(email, password)\n    ",
    "container.message.set_up_per_request_contai": "\n    Set up per-request container handling.\n    \n    Args:\n        app: Flask application instance\n    ",
    "container.message.clean_up_request_scoped_servic": "Clean up request-scoped services.",
    "extensions.message.extensions_module_for_the_flas": "Extensions module for the Flask application.",
    "cli.message.enhanced_cli_commands_for_the": "Enhanced CLI commands for the new architecture.",
    "cli.message.initialize_the_database_with_t": "Initialize the database with the new architecture.",
    "cli.message.initializing_database_with_new": "Initializing database with new architecture...",
    "cli.message.database_initialized_with_te": "✅ Database initialized with test data.",
    "cli.message.database_initialized": "✅ Database initialized.",
    "cli.message.create_tables": "--create-tables",
    "cli.message.with_test_data": "--with-test-data",
    "cli.message.create_test_users_and_data": "Create test users and data",
    "cli.message.create_test_users_and_data_1": "Create test users and data.",
    "cli.message.": "⏭️  ",
    "cli.message.skipped": " skipped, ",
    "cli.message._1": "  - ",
    "cli.message.warnings": "\nWarnings:",
    "cli.message._2": "  ⚠️  ",
    "cli.message._3": "  ❌ ",
    "cli.message.warnings_1": "\nWarnings:",
    "cli.message._4": "  ⚠️  ",
    "cli.message.check_extension_initialization": "Check extension initialization status.",
    "cli.message.initialized_extensions": "✅ Initialized extensions:",
    "cli.message._5": "  - ",
    "cli.message.no_extensions_initialized": "❌ No extensions initialized.",
    "cli.message.check_dependency_injection_ser": "Check dependency injection services.",
    "cli.message.checking_di_container_services": "Checking DI container services...",
    "cli.message.app_services_interfaces_auth_s": "app.services.interfaces.auth_service_interface.IAuthService",
    "cli.message.app_services_interfaces_user_r": "app.services.interfaces.user_repository_interface.IUserRepository",
    "cli.message.app_services_interfaces_docume": "app.services.interfaces.document_service_interface.IDocumentService",
    "cli.message.app_services_interfaces_evalua": "app.services.interfaces.evaluation_service_interface.IEvaluationService",
    "cli.message.registered": " - registered",
    "cli.message.not_registered": " - not registered",
    "cli.message.all_key_services_are_availa": "\n✅ All key services are available.",
    "cli.message.some_services_are_missing_o": "\n❌ Some services are missing or misconfigured.",
    "cli.message.register_enhanced_cli_commands": "Register enhanced CLI commands with the app.",
    "websocket_notifications.message.handle_client_connection_to_no": "Handle client connection to notifications namespace.",
    "websocket_notifications.message.connected_to_notifications": " connected to notifications",
    "websocket_notifications.message.mark_notification_as_read": "Mark notification as read.",
    "websocket_notifications.message.send_notification_to_all_conne": "Send notification to all connected devices of a user.",
    "websocket_notifications.message.handle_client_connection_to_me": "Handle client connection to messages namespace.",
    "websocket_notifications.message.connected_to_messages": " connected to messages",
    "websocket_notifications.message.join_a_message_thread_room": "Join a message thread room.",
    "websocket_notifications.message.leave_a_message_thread_room": "Leave a message thread room.",
    "websocket_notifications.message.handle_when_a_message_is_sent": "Handle when a message is sent.",
    "websocket_notifications.message.sent_you_a_message": " sent you a message",
    "websocket_notifications.message.mark_message_as_read": "Mark message as read.",
    "websocket_notifications.message.emit_an_event_to_all_participa": "Emit an event to all participants in a thread.",
    "websocket_notifications.message.emit_an_event_to_a_specific_us": "Emit an event to a specific user.",
    "exceptions.message.base_exception_for_the_applica": "Base exception for the application.",
    "exceptions.message.convert_exception_to_dictionar": "Convert exception to dictionary for API responses.",
    "exceptions.message.initialize_the_not_found_excep": "Initialize the not found exception.",
    "exceptions.message.exception_for_unauthorized_acc": "Exception for unauthorized access.",
    "exceptions.message.initialize_the_unauthorized_ex": "Initialize the unauthorized exception.",
    "exceptions.message.exception_for_forbidden_access": "Exception for forbidden access.",
    "exceptions.message.initialize_the_forbidden_excep": "Initialize the forbidden exception.",
    "exceptions.message.initialize_the_conflict_except": "Initialize the conflict exception.",
    "exceptions.message.initialize_the_external_servic": "Initialize the external service exception.",
    "exceptions.message.exception_for_tenant_access_vi": "Exception for tenant access violations.",
    "socketio_events.message.websocket_events_for_real_time": "WebSocket events for real-time features.",
    "socketio_events.message.handle_client_connection": "\n    Handle client connection.\n    \n    Authentication can be provided in two ways:\n    1. Via auth parameter (preferred for Socket.IO clients)\n    2. Via query parameter token in the connection URL\n    \n    Returns True to allow the connection, or False to reject it.\n    ",
    "socketio_events.message.no_auth_token_provided_allowi": "No auth token provided, allowing anonymous connection",
    "socketio_events.message.not_found": " not found",
    "socketio_events.message.connected_with_limited_access": "Connected with limited access",
    "socketio_events.message.disconnected": " disconnected",
    "socketio_events.message.disconnected_1": " disconnected",
    "socketio_events.message.join_a_specific_room": "Join a specific room.",
    "socketio_events.message.leave_a_specific_room": "Leave a specific room.",
    "socketio_events.message.message_send_attempt_without_t": "Message send attempt without token",
    "socketio_events.message.tried_to_send_message_to_thre": " tried to send message to thread they're not in: ",
    "socketio_events.message.you_are_not_a_participant_in_t": "You are not a participant in this thread",
    "socketio_events.message.sending_message_in_thread": "Sending message in thread ",
    "socketio_events.message.notifications_as_read_for_use": " notifications as read for user ",
    "socketio_events.message.as_read_for_user": " as read for user ",
    "socketio_events.message.send_a_real_time_notifica": "\n    Send a real-time notification to a specific user.\n    \n    Args:\n        user_id (int): The user's ID\n        notification_data (dict): The notification data to send\n        \n    Returns:\n        bool: True if the notification was sent, False otherwise\n    ",
    "socketio_events.message.sent_notification_to_user": "Sent notification to user ",
    "socketio_events.message.not_connected_notification_n": " not connected, notification not sent",
    "socketio_events.message.broadcast_an_event_to_all": "\n    Broadcast an event to all users in a tenant.\n    \n    Args:\n        tenant_id (int): The tenant's ID\n        event_name (str): The name of the event\n        data (dict): The data to send with the event\n        \n    Returns:\n        bool: True if the event was broadcast, False otherwise\n    ",
    "socketio_events.message.to_tenant": " to tenant ",
    "socketio_events.message.to_tenant_1": " to tenant ",
    "socketio_events.message.broadcast_an_event_to_all_1": "\n    Broadcast an event to all users with a specific role.\n    \n    Args:\n        role (str): The role name (e.g. 'super_admin', 'tenant_admin', 'trainer', 'student')\n        event_name (str): The name of the event\n        data (dict): The data to send with the event\n        \n    Returns:\n        int: The number of users the event was sent to\n    ",
    "socketio_events.message.to_role": " to role ",
    "socketio_events.message.to_role_1": " to role ",
    "middleware_alert_middleware.message.middleware_to_automatical": "\n    Middleware to automatically trigger alerts for various application events\n    ",
    "middleware_alert_middleware.message.initialize_the_middleware_with": "Initialize the middleware with Flask app",
    "middleware_alert_middleware.message.called_before_each_request": "Called before each request",
    "middleware_alert_middleware.message.called_after_each_request": "Called after each request",
    "middleware_alert_middleware.message.critical_response_time_alert": "Critical Response Time Alert",
    "middleware_alert_middleware.message.took": " took ",
    "middleware_alert_middleware.message.s_to_respond": "s to respond",
    "middleware_alert_middleware.message.slow_response_time_warning": "Slow Response Time Warning",
    "middleware_alert_middleware.message.took_1": " took ",
    "middleware_alert_middleware.message.s_to_respond_1": "s to respond",
    "middleware_alert_middleware.message.called_at_the_end_of_each_requ": "Called at the end of each request",
    "middleware_alert_middleware.message.flask_app": "flask-app",
    "middleware_alert_middleware.message.suspicious_404_pattern_detecte": "Suspicious 404 Pattern Detected",
    "middleware_alert_middleware.message.the_requested_resource_was_not": "The requested resource was not found",
    "middleware_alert_middleware.message.unauthorized_access_attempt": ": Unauthorized access attempt",
    "middleware_alert_middleware.message.you_don_t_have_permission_to_a": "You don't have permission to access this resource",
    "middleware_alert_middleware.message.handle_any_unhandled_exception": "Handle any unhandled exceptions",
    "middleware_alert_middleware.message.flask_app_1": "flask-app",
    "middleware_alert_middleware.message.api_export_data": "api.export_data",
    "middleware_alert_middleware.message.check_if_404_path_looks_like_a": "Check if 404 path looks like a security probe",
    "middleware_alert_middleware.message.y_m_d_h_m": "%Y%m%d_%H%M",
    "middleware_alert_middleware.message.flask_app_2": "flask-app",
    "middleware_alert_middleware.message.1_minute": "1 minute",
    "middleware_alert_middleware.message.y_m_d_h_m_1": "%Y%m%d_%H%M",
    "middleware_alert_middleware.message.potential_brute_force_attack": "Potential Brute Force Attack",
    "middleware_alert_middleware.message.1_minute_1": "1 minute",
    "middleware_alert_middleware.message.decorator_to_automaticall": "\n    Decorator to automatically alert on function exceptions\n    \n    Usage:\n        @alert_on_exception(AlertSeverity.CRITICAL)\n        def critical_function():\n            # This will send a critical alert if an exception occurs\n            pass\n    ",
    "middleware_alert_middleware.message.raised_exception": " raised exception: ",
    "middleware_alert_middleware.message.decorator_to_monitor_func": "\n    Decorator to monitor function performance and alert on slow execution\n    \n    Usage:\n        @monitor_performance(warning_threshold=2.0, critical_threshold=5.0)\n        def slow_function():\n            # Will alert if function takes longer than thresholds\n            pass\n    ",
    "middleware_alert_middleware.message.took_2": " took ",
    "middleware_alert_middleware.message.s_to_execute": "s to execute",
    "middleware_alert_middleware.message.took_3": " took ",
    "middleware_alert_middleware.message.s_to_execute_1": "s to execute",
    "middleware_alert_middleware.message.function_exception_with_perfor": "Function Exception with Performance Data: ",
    "middleware_alert_middleware.message.s": "s: ",
    "middleware_cors_middleware.message.cors_middleware_for_debugging": "CORS middleware for debugging and handling CORS issues.",
    "middleware_cors_middleware.message.initialize_cors_debugging_midd": "Initialize CORS debugging middleware.",
    "middleware_cors_middleware.message.handle_preflight_cors_requests": "Handle preflight CORS requests.",
    "middleware_cors_middleware.message.handling_options_preflight_req": "Handling OPTIONS preflight request: ",
    "middleware_cors_middleware.message.add_cors_headers_to_all_respon": "Add CORS headers to all responses.",
    "middleware_cors_middleware.message.for": " for ",
    "middleware_cors_middleware.message.not_in_allowed_origins": " not in allowed origins: ",
    "middleware_i18n_middleware.message.internationalization_middlewar": "Internationalization middleware for automatic language detection and content localization.",
    "middleware_i18n_middleware.message.middleware_for_handling_intern": "Middleware for handling internationalization.",
    "middleware_i18n_middleware.message.initialize_the_middleware_with": "Initialize the middleware with the Flask app.",
    "middleware_i18n_middleware.message.process_request_before_route_h": "Process request before route handler.",
    "middleware_i18n_middleware.message.for_ip": " for IP: ",
    "middleware_i18n_middleware.message.process_response_after_route_h": "Process response after route handler.",
    "middleware_i18n_middleware.message.accept_language_content_lan": ", Accept-Language, Content-Language",
    "middleware_i18n_middleware.message.detect_the_best_language_for_t": "Detect the best language for the current user.",
    "middleware_i18n_middleware.message.get_language_based_on_geolocat": "Get language based on geolocation (if available).",
    "middleware_i18n_middleware.message.get_the_current_user_s_languag": "Get the current user's language (for use in templates).",
    "middleware_i18n_middleware.message.get_fallback_language_for_a_gi": "Get fallback language for a given language.",
    "middleware_i18n_middleware.message.middleware_for_automatic_conte": "Middleware for automatic content localization.",
    "middleware_i18n_middleware.message.initialize_content_localizatio": "Initialize content localization middleware.",
    "middleware_i18n_middleware.message.initialize_the_middleware_with_1": "Initialize the middleware with the Flask app.",
    "middleware_i18n_middleware.message.localize_response_content_if_a": "Localize response content if applicable.",
    "middleware_i18n_middleware.message.recursively_localize_data_stru": "Recursively localize data structure.",
    "middleware_i18n_middleware.message.translate_a_field_value": "Translate a field value.",
    "middleware_i18n_middleware.message.middleware_for_right_to_left": "Middleware for Right-to-Left (RTL) language support.",
    "middleware_i18n_middleware.message.initialize_rtl_support_middlew": "Initialize RTL support middleware.",
    "middleware_i18n_middleware.message.initialize_the_middleware_with_2": "Initialize the middleware with the Flask app.",
    "middleware_i18n_middleware.message.add_rtl_support_to_response": "Add RTL support to response.",
    "middleware_i18n_middleware.message.html": "<html",
    "middleware_i18n_middleware.message.dir": "dir=",
    "middleware_i18n_middleware.message.html_1": "<html",
    "middleware_i18n_middleware.message.html_dir_rtl": "<html dir=\"rtl\"",
    "middleware_i18n_middleware.message.body": "<body",
    "middleware_i18n_middleware.message.class": "class=\"",
    "middleware_i18n_middleware.message.class_1": "class=\"",
    "middleware_i18n_middleware.message.class_rtl": "class=\"rtl ",
    "middleware_i18n_middleware.message.body_1": "<body",
    "middleware_i18n_middleware.message.body_class_rtl": "<body class=\"rtl\"",
    "middleware_request_context.message.decorator_to_require_jwt_authe": "Decorator to require JWT authentication.",
    "middleware_request_context.message.decorator_to_require_admin_rol": "Decorator to require admin role.",
    "middleware_request_context.message.decorator_to_require_specific": "Decorator to require specific role(s).",
    "middleware_rate_limiter.message.rate_limiting_middleware_for_f": "Rate limiting middleware for Flask.",
    "middleware_rate_limiter.message.exception_raised_when_rate_lim": "Exception raised when rate limit is exceeded.",
    "middleware_rate_limiter.message.flask_middleware_for_rate_limi": "Flask middleware for rate limiting requests.",
    "middleware_rate_limiter.message.initialize_the_rate_limiter_wi": "Initialize the rate limiter with the Flask app.",
    "middleware_rate_limiter.message.60_1": "60,1",
    "middleware_rate_limiter.message.get_a_unique_identifier_for_th": "Get a unique identifier for the client (IP address by default).",
    "middleware_rate_limiter.message.127_0_0_1": "127.0.0.1",
    "middleware_rate_limiter.message.check_if_the_request_exceeds_t": "Check if the request exceeds the rate limit.",
    "middleware_rate_limiter.message.rate_limit_exceeded_for": "Rate limit exceeded for ",
    "middleware_rate_limiter.message.requests_in": " requests in ",
    "middleware_rate_limiter.message.seconds": " seconds.",
    "middleware_rate_limiter.message.remove_old_request_timestamps": "Remove old request timestamps to prevent memory leaks.",
    "middleware_rate_limiter.message.handle_rate_limit_exceeded_exc": "Handle rate limit exceeded exception.",
    "middleware_rate_limiter.message.you_have_exceeded_the_rate_lim": "You have exceeded the rate limit of ",
    "middleware_rate_limiter.message.requests_per": " requests per ",
    "middleware_rate_limiter.message.seconds_1": " seconds.",
    "middleware_cache_middleware.message.cache_middleware_for_automatic": "Cache middleware for automatic response caching.",
    "middleware_cache_middleware.message.initialize_cache_middleware_fo": "Initialize cache middleware for the Flask app.",
    "middleware_cache_middleware.message.middleware_for_http_caching_he": "Middleware for HTTP caching headers and ETags.",
    "middleware_cache_middleware.message.initialize_with_flask_app": "Initialize with Flask app.",
    "middleware_cache_middleware.message.check_for_conditional_requests": "Check for conditional requests (If-None-Match).",
    "middleware_cache_middleware.message.etag": "etag:",
    "middleware_cache_middleware.message.add_cache_headers_and_etags_to": "Add cache headers and ETags to responses.",
    "middleware_cache_middleware.message.no_cache": "no-cache",
    "middleware_cache_middleware.message.etag_1": "etag:",
    "middleware_cache_middleware.message.public_max_age_300": "public, max-age=300",
    "middleware_cache_middleware.message.public_max_age_86400": "public, max-age=86400",
    "middleware_cache_middleware.message.private_max_age_60": "private, max-age=60",
    "middleware_cache_middleware.message.decorator_to_set_cache_control": "Decorator to set Cache-Control headers.",
    "middleware_cache_middleware.message.no_cache_1": "no-cache",
    "middleware_cache_middleware.message.no_store": "no-store",
    "middleware_cache_middleware.message.max_age": "max-age=",
    "middleware_cache_middleware.message.decorator_to_add_etag_support": "Decorator to add ETag support to endpoints.",
    "middleware_cache_middleware.message.decorator_to_add_vary_header": "Decorator to add Vary header.",
    "middleware_cache_middleware.message.check_if_provided_etag_matches": "Check if provided ETag matches current request.",
    "middleware_cache_middleware.message.check_if_resource_was_modified": "Check if resource was modified since provided date.",
    "middleware_ip_whitelist.message.ip_whitelist_middleware_for_fl": "IP Whitelist middleware for Flask.",
    "middleware_ip_whitelist.message.wsgi_middleware_that_restricts": "WSGI middleware that restricts access based on IP address whitelist.",
    "middleware_ip_whitelist.message.access_denied_your_ip_is_not": "Access denied: Your IP is not authorized",
    "middleware_ip_whitelist.message.0_0_0_0_0": "0.0.0.0/0",
    "middleware_ip_whitelist.message.127_0_0_1": "127.0.0.1",
    "middleware_ip_whitelist.message.0_0_0_0": "0.0.0.0",
    "middleware_ip_whitelist.message.check_if_ip_is_allowed_based_o": "Check if IP is allowed based on whitelist.",
    "middleware_security_middleware.message.security_middleware_for_produc": "Security middleware for production deployment.",
    "middleware_security_middleware.message.comprehensive_security_middlew": "Comprehensive security middleware for production.",
    "middleware_security_middleware.message.initialize_security_middleware": "Initialize security middleware with Flask app.",
    "middleware_security_middleware.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "middleware_security_middleware.message.redis_not_available_for_securi": "Redis not available for security middleware",
    "middleware_security_middleware.message.execute_security_checks_before": "Execute security checks before each request.",
    "middleware_security_middleware.message.execute_security_enhancements": "Execute security enhancements after each request.",
    "middleware_security_middleware.message.took": " took ",
    "middleware_security_middleware.message.127_0_0_1": "127.0.0.1",
    "middleware_security_middleware.message.127_0_0_1_1": "127.0.0.1",
    "middleware_security_middleware.message.1": "::1",
    "middleware_security_middleware.message.192_168": "192.168.",
    "middleware_security_middleware.message.redirect_http_request_to_https": "Redirect HTTP request to HTTPS.",
    "middleware_security_middleware.message.http": "http://",
    "middleware_security_middleware.message.https": "https://",
    "middleware_security_middleware.message.script_window_location_href": "<script>window.location.href=\"",
    "middleware_security_middleware.message.script": "\";</script>",
    "middleware_security_middleware.message.auth_reset_password": "auth.reset_password",
    "middleware_security_middleware.message.rate_limit": "rate_limit:",
    "middleware_security_middleware.message.detect_potentially_suspicious": "Detect potentially suspicious requests.",
    "middleware_security_middleware.message.javascript": "javascript:",
    "middleware_security_middleware.message.vbscript": "vbscript:",
    "middleware_security_middleware.message.onload": "onload=",
    "middleware_security_middleware.message.": " - ",
    "middleware_security_middleware.message._1": " - ",
    "middleware_security_middleware.message.get_unique_identifier_for_rate": "Get unique identifier for rate limiting.",
    "middleware_security_middleware.message.add_security_headers_to_respon": "Add security headers to response.",
    "middleware_security_middleware.message.1_mode_block": "1; mode=block",
    "middleware_security_middleware.message.strict_origin_when_cross_origi": "strict-origin-when-cross-origin",
    "middleware_security_middleware.message.max_age_31536000_includesubdo": "max-age=31536000; includeSubDomains",
    "middleware_security_middleware.message.decorator_to_require_api_key_f": "Decorator to require API key for certain endpoints.",
    "middleware_security_middleware.message.decorator_to_require_admin_rol": "Decorator to require admin role.",
    "middleware_security_middleware.message.protect_against_csrf_attacks": "Protect against CSRF attacks.",
    "middleware_tracing_middleware.message.tracing_middleware_for_flask": "\nTracing Middleware for Flask Application\nAutomatically instruments HTTP requests with distributed tracing\n",
    "middleware_tracing_middleware.message.middleware_to_automatical": "\n    Middleware to automatically add distributed tracing to Flask requests\n    ",
    "middleware_tracing_middleware.message.initialize_the_middleware_with": "Initialize the middleware with Flask app",
    "middleware_tracing_middleware.message.called_before_each_request_to": "Called before each request to set up tracing context",
    "middleware_tracing_middleware.message.called_after_each_request_to_f": "Called after each request to finalize tracing",
    "middleware_tracing_middleware.message.": "] [",
    "middleware_tracing_middleware.message._1": "] (",
    "middleware_tracing_middleware.message.called_at_the_end_of_request_t": "Called at the end of request to clean up tracing",
    "middleware_tracing_middleware.message.add_tracing_headers_to_respons": "Add tracing headers to response",
    "middleware_tracing_middleware.message.032x": "032x",
    "middleware_tracing_middleware.message.x_correlation_id": "x-correlation-id",
    "middleware_tracing_middleware.message.x_request_id": "x-request-id",
    "middleware_tracing_middleware.message.get_the_route_pattern_for_the": "Get the route pattern for the current request",
    "middleware_tracing_middleware.message.get_opentelemetry_attributes_f": "Get OpenTelemetry attributes for the request",
    "middleware_tracing_middleware.message.http_request_size": "http.request.size",
    "middleware_tracing_middleware.message.http_remote_addr": "http.remote_addr",
    "middleware_tracing_middleware.message.http_query_params": "http.query_params",
    "middleware_tracing_middleware.message.x_api_key": "x-api-key",
    "middleware_tracing_middleware.message.x_auth_token": "x-auth-token",
    "middleware_tracing_middleware.message.http_request_header": "http.request.header.",
    "middleware_tracing_middleware.message.http_response_size": "http.response.size",
    "middleware_tracing_middleware.message.http_response_duration": "http.response.duration",
    "middleware_tracing_middleware.message.set_cookie": "set-cookie",
    "middleware_tracing_middleware.message.http_response_header": "http.response.header.",
    "middleware_tracing_middleware.message.could_not_set_user_context": "Could not set user context: ",
    "middleware_tracing_middleware.message.instrument_external_http": "\n    Instrument external HTTP requests with tracing\n    \n    Usage:\n        import requests\n        response = instrument_external_request('GET', 'https://api.example.com/data')\n    ",
    "middleware_tracing_middleware.message.http_request_type": "http.request.type",
    "middleware_tracing_middleware.message.http_response_duration_1": "http.response.duration",
    "middleware_tracing_middleware.message.http_response_size_1": "http.response.size",
    "middleware_tracing_middleware.message.create_a_child_span_of_th": "\n    Create a child span of the current request span\n    \n    Usage:\n        with create_child_span(\"database_query\", {\"table\": \"users\"}) as span:\n            # Database operation\n            pass\n    ",
    "middleware_tracing_middleware.message.add_attribute_to_current_span": "Add attribute to current span",
    "middleware_tracing_middleware.message.add_event_to_current_span": "Add event to current span",
    "middleware_tracing_middleware.message.record_exception_in_current_sp": "Record exception in current span",
    "middleware_performance_middleware.message.middleware_for_response_compre": "Middleware for response compression",
    "middleware_performance_middleware.message.initialize_with_flask_app": "Initialize with Flask app",
    "middleware_performance_middleware.message.wrap_wsgi_app_with_compression": "Wrap WSGI app with compression",
    "middleware_performance_middleware.message.content_type": "content-type",
    "middleware_performance_middleware.message.content_length": "content-length",
    "middleware_performance_middleware.message.initialize_with_flask_app_1": "Initialize with Flask app",
    "middleware_performance_middleware.message.enhanced_pagination_middleware": "Enhanced pagination middleware with performance optimization",
    "middleware_performance_middleware.message.initialize_with_flask_app_2": "Initialize with Flask app",
    "middleware_performance_middleware.message.middleware_for_tracking_api_pe": "Middleware for tracking API performance metrics",
    "middleware_performance_middleware.message.initialize_with_flask_app_3": "Initialize with Flask app",
    "middleware_performance_middleware.message.middleware_for_streaming_large": "Middleware for streaming large responses",
    "middleware_performance_middleware.message.initialize_with_flask_app_4": "Initialize with Flask app",
    "middleware_performance_middleware.message.create_a_standardized_paginate": "Create a standardized paginated response",
    "middleware_performance_middleware.message.create_a_streaming_json_respon": "Create a streaming JSON response for large datasets",
    "middleware_performance_middleware.message.data": "{\"data\":[",
    "middleware_performance_middleware.message.decorator_to_automatically_pag": "Decorator to automatically paginate query results",
    "middleware_performance_middleware.message.initialize_all_performance_mid": "Initialize all performance middleware",
    "middleware_auth_middleware.message.authentication_and_authorizati": "Authentication and authorization middleware.",
    "middleware_auth_middleware.message.require_authentication_for_a_r": "Require authentication for a route.",
    "middleware_auth_middleware.message.user_not_found_or_inactive": "User not found or inactive",
    "middleware_auth_middleware.message.require_specific_roles_for_a_r": "Require specific roles for a route.",
    "middleware_auth_middleware.message.user_not_found_or_inactive_1": "User not found or inactive",
    "middleware_auth_middleware.message.require_user_to_belong_to_a_te": "Require user to belong to a tenant.",
    "middleware_auth_middleware.message.user_not_found_or_inactive_2": "User not found or inactive",
    "middleware_auth_middleware.message.optional_authentication_sets": "Optional authentication - sets user if authenticated.",
    "middleware_auth_middleware.message.check_if_user_has_specific_per": "Check if user has specific permission.",
    "middleware_auth_middleware.message.user_not_found_or_inactive_3": "User not found or inactive",
    "validation_schema_validator.message.shorter_than_minimum_length": "Shorter than minimum length",
    "validation_schema_validator.message.longer_than_maximum_length": "Longer than maximum length",
    "validation_schema_validator.message.this_field_is_too_short": "This field is too short.",
    "validation_schema_validator.message.this_field_is_too_long": "This field is too long.",
    "validation_schema_validator.message.script_script": "<script.*?>.*?</script>",
    "validation_schema_validator.message.javascript": "javascript:",
    "validation_schema_validator.message.onclick_s": "onclick\\s*=",
    "validation_schema_validator.message.iframe": "<iframe.*?>",
    "validation_schema_validator.message.object": "<object.*?>",
    "validation_schema_validator.message.input_contains_potentially_dan": "Input contains potentially dangerous content",
    "validation_schema_validator.message.script": "<script",
    "validation_schema_validator.message.javascript_1": "javascript:",
    "validation_schema_validator.message.html_contains_potentially_dang": "HTML contains potentially dangerous content",
    "validation_schema_validator.message.s": "[\\s\\-\\(\\)\\.]",
    "validation_schema_validator.message.d_10_15": "^\\+?\\d{10,15}$",
    "validation_schema_validator.message.a_za_z0_9_3_30": "^[a-zA-Z0-9_\\-\\.]{3,30}$",
    "validation_schema_validator.message.a_za_z0_9": "^[a-zA-Z0-9]+$",
    "validation_schema_validator.message.only_letters_and_numbers_are_a": "Only letters and numbers are allowed",
    "validation_schema_validator.message.": "[<>\\\"\\'%;()&+\\[\\]{}\\|\\\\^~`]",
    "validation_schema_validator.message.special_characters_are_not_all": "Special characters are not allowed",
    "validation_schema_validator.message.common_secure_field_definition": "Common secure field definitions.",
    "validation_schema_validator.message.secure_password_field_with_com": "Secure password field with complexity requirements.",
    "validation_schema_validator.message.a_z_a_z_d": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]",
    "validation_schema_validator.message.a_za_z_s": "^[a-zA-Z\\s\\-\\'\\.]+$",
    "validation_schema_validator.message.name_can_only_contain_letters": "Name can only contain letters, spaces, hyphens, apostrophes, and dots",
    "validation_schema_validator.message.d_s": "^[\\+\\d\\s\\-\\(\\)\\.]+$",
    "validation_schema_validator.message.secure_string_field_with_xss_p": "Secure string field with XSS protection.",
    "validation_schema_validator.message.a_za_z0_9_s": "^[a-zA-Z0-9\\s\\-_\\.,:;!?\\'\"]+$",
    "validation_schema_validator.message.special_characters_are_not_all_1": "Special characters are not allowed",
    "validation_schema_validator.message.currency_field_with_proper_dec": "Currency field with proper decimal places.",
    "validation_validators.message.is_not_allowed": "' is not allowed",
    "validation_validators.message.is_not_allowed_1": "' is not allowed",
    "validation_validators.message.test_temp_fake_dummy": "(test|temp|fake|dummy)",
    "validation_validators.message.email_appears_to_be_temporary": "Email appears to be temporary or fake",
    "validation_validators.message.": "!@#$%^&*()_+-=[]{}|;:,.<>?",
    "validation_validators.message.abc123": "abc123",
    "validation_validators.message.password123": "password123",
    "validation_validators.message.password1": "password1",
    "validation_validators.message.characters_long": " characters long",
    "validation_validators.message.characters": " characters",
    "validation_validators.message.a_z": "[A-Z]",
    "validation_validators.message.a_z_1": "[a-z]",
    "validation_validators.message.1_2": "(.)\\1{2,}",
    "validation_validators.message.012_123_234_345_456_567_678_7": "(012|123|234|345|456|567|678|789|890|098|987|876|765|654|543|432|321|210)",
    "validation_validators.message.abc_bcd_cde_def_efg_fgh_ghi_h": "(abc|bcd|cde|def|efg|fgh|ghi|hij|ijk|jkl|klm|lmn|mno|nop|opq|pqr|qrs|rst|stu|tuv|uvw|vwx|wxy|xyz)",
    "validation_validators.message.password_is_too_common_please": "Password is too common. Please choose a more secure password",
    "validation_validators.message.password_admin_user_login": "(password|admin|user|login)",
    "validation_validators.message.calculate_password_strength_sc": "Calculate password strength score and provide feedback.",
    "validation_validators.message.a_z_2": "[a-z]",
    "validation_validators.message.a_z_3": "[A-Z]",
    "validation_validators.message.consider_using_a_longer_passwo": "Consider using a longer password with more character variety",
    "validation_validators.message.good_password_but_could_be_st": "Good password, but could be stronger",
    "validation_validators.message.ip_addresses_are_not_allowed_i": "IP addresses are not allowed in URLs",
    "validation_validators.message.is_not_allowed_2": "' is not allowed",
    "validation_validators.message.is_blocked": "' is blocked",
    "validation_validators.message._1": "[<>\\\"\\'`]",
    "validation_validators.message.javascript_data_vbscript": "(javascript:|data:|vbscript:)",
    "validation_validators.message.url_contains_potentially_dange": "URL contains potentially dangerous protocol",
    "validation_validators.message.image_jpeg": "image/jpeg",
    "validation_validators.message.image_png": "image/png",
    "validation_validators.message.image_gif": "image/gif",
    "validation_validators.message.is_not_allowed_3": "' is not allowed",
    "validation_validators.message.is_not_allowed_4": "' is not allowed",
    "validation_validators.message.file_size_exceeds_maximum_allo": "File size exceeds maximum allowed size of ",
    "validation_validators.message.file_appears_to_be": "File appears to be ",
    "validation_validators.message.which_is_not_allowed": ", which is not allowed",
    "validation_validators.message.get_file_extension_safely": "Get file extension safely.",
    "validation_validators.message.json_structure_exceeds_maximum": "JSON structure exceeds maximum depth of ",
    "validation_validators.message.json_data_exceeds_maximum_size": "JSON data exceeds maximum size of ",
    "validation_validators.message.bytes": " bytes",
    "validation_validators.message.json_key_too_long": "JSON key too long",
    "validation_validators.message.json_array_too_large": "JSON array too large",
    "validation_validators.message.json_string_value_too_long": "JSON string value too long",
    "validation_validators.message._2": "(--|#|\\/\\*|\\*\\/)",
    "validation_validators.message.bor_b_bor_b_band_b": "(\\bOR\\b.*=.*\\bOR\\b|\\bAND\\b.*=.*\\bAND\\b)",
    "validation_validators.message.s_or_s_s_or_s": "(\\'\\s*OR\\s*\\'|\\\"\\s*OR\\s*\\\")",
    "validation_validators.message._3": "(;|\\||&&)",
    "validation_validators.message.xp_sp": "(xp_|sp_)",
    "validation_validators.message.0x_0_9a_fa_f": "(0x[0-9a-fA-F]+)",
    "validation_validators.message.char_concat_chr": "(CHAR\\(|CONCAT\\(|CHR\\()",
    "validation_validators.message._4": "(@@|@)",
    "validation_validators.message.waitfor_delay_benchmark": "(WAITFOR|DELAY|BENCHMARK)",
    "validation_validators.message.into_s_outfile_dumpfile": "(INTO\\s+(OUTFILE|DUMPFILE))",
    "validation_validators.message.input_contains_potentially_dan": "Input contains potentially dangerous SQL content",
    "validation_validators.message.input_contains_encoded_sql_inj": "Input contains encoded SQL injection attempt",
    "validation_validators.message.check_for_encoded_sql_injectio": "Check for encoded SQL injection attempts.",
    "validation_validators.message.a_za_z0_9": "^[A-Za-z0-9+/]+=*$",
    "validation_validators.message.are_not_allowed": " are not allowed",
    "validation_validators.message.y_m_d": "%Y-%m-%d",
    "validation_validators.message.d_m_y": "%d/%m/%Y",
    "validation_validators.message.m_d_y": "%m/%d/%Y",
    "validation_validators.message.y_m_d_1": "%Y/%m/%d",
    "validation_validators.message.future_dates_are_not_allowed": "Future dates are not allowed",
    "validation_validators.message.past_dates_are_not_allowed": "Past dates are not allowed",
    "validation_validators.message.s": "[\\s\\-]",
    "validation_example_usage.message.list_beneficiaries_with_pagina": "List beneficiaries with pagination and sanitization.",
    "validation_example_usage.message.you_do_not_have_permission_to": "You do not have permission to generate reports",
    "validation_example_usage.message.you_do_not_have_access_to_bene": "You do not have access to beneficiary ",
    "validation_example_usage.message.handle_business_rule_violation": "Handle business rule violations.",
    "validation_example_usage.message.a_z_3_d_4": "^[A-Z]{3}\\d{4}$",
    "validation_schemas.message.base_schema_with_common_fields": "Base schema with common fields.",
    "validation_schemas.message.schema_for_pagination_paramete": "Schema for pagination parameters.",
    "validation_schemas.message.d_6": "^\\d{6}$",
    "validation_schemas.message.passwords_do_not_match": "Passwords do not match",
    "validation_schemas.message.password_reset_request_schema": "Password reset request schema.",
    "validation_schemas.message.passwords_do_not_match_1": "Passwords do not match",
    "validation_schemas.message.a_za_z0_9": "^[a-zA-Z0-9_\\-\\.]+$",
    "validation_schemas.message.username_can_only_contain_lett": "Username can only contain letters, numbers, underscore, hyphen, or dot",
    "validation_schemas.message.w_s": "^[\\w\\s\\-]+$",
    "validation_schemas.message.appointments_are_only_availabl": "Appointments are only available on weekdays",
    "validation_validation_middleware.message.initialize_the_middleware_with": "Initialize the middleware with the Flask app.",
    "validation_validation_middleware.message.health_health_check": "health.health_check",
    "validation_validation_middleware.message.data_provided": " data provided",
    "validation_validation_middleware.message.sql_injection_attempt_detected": "SQL injection attempt detected: ",
    "validation_validation_middleware.message.data": " data",
    "validation_validation_middleware.message.decorator_for_rate_li": "\n        Decorator for rate limiting.\n        \n        Args:\n            max_requests: Maximum number of requests allowed\n            window: Time window in seconds\n        ",
    "validation_validation_middleware.message.get_client_identifier_for_rate": "Get client identifier for rate limiting.",
    "validation_validation_middleware.message.user": "user:",
    "validation_validation_middleware.message.ip": "ip:",
    "validation_validation_middleware.message.check_if_client_is_rate_limite": "Check if client is rate limited.",
    "validation_sanitizers.message.input_sanitization_utilities": "\nInput sanitization utilities.\n",
    "validation_sanitizers.message.comprehensive_input_sanit": "\n    Comprehensive input sanitization for various data types.\n    ",
    "validation_sanitizers.message.sanitize_a_string_val": "\n        Sanitize a string value.\n        \n        Args:\n            value: Value to sanitize\n            max_length: Maximum allowed length\n            trim: Whether to trim whitespace\n            lowercase: Whether to convert to lowercase\n            \n        Returns:\n            Sanitized string\n        ",
    "validation_sanitizers.message.sanitize_html_content": "\n        Sanitize HTML content to prevent XSS.\n        \n        Args:\n            html_content: HTML content to sanitize\n            allowed_tags: List of allowed HTML tags\n            allowed_attributes: Dict of allowed attributes per tag\n            \n        Returns:\n            Sanitized HTML\n        ",
    "validation_sanitizers.message.sanitize_email_addres": "\n        Sanitize email address.\n        \n        Args:\n            email: Email address to sanitize\n            \n        Returns:\n            Sanitized email\n        ",
    "validation_sanitizers.message.w": "[^\\w\\.\\-\\+]",
    "validation_sanitizers.message.w_1": "[^\\w\\.\\-]",
    "validation_sanitizers.message.sanitize_url": "\n        Sanitize URL.\n        \n        Args:\n            url: URL to sanitize\n            allowed_schemes: List of allowed URL schemes\n            \n        Returns:\n            Sanitized URL\n        ",
    "validation_sanitizers.message.": "://",
    "validation_sanitizers.message.sanitize_filename_for": "\n        Sanitize filename for safe storage.\n        \n        Args:\n            filename: Filename to sanitize\n            max_length: Maximum allowed length\n            \n        Returns:\n            Sanitized filename\n        ",
    "validation_sanitizers.message.w_2": "[^\\w\\.\\-]",
    "validation_sanitizers.message._1": "\\.+",
    "validation_sanitizers.message.recursively_sanitize": "\n        Recursively sanitize dictionary values.\n        \n        Args:\n            data: Dictionary to sanitize\n            max_depth: Maximum recursion depth\n            \n        Returns:\n            Sanitized dictionary\n        ",
    "validation_sanitizers.message.maximum_recursion_depth_exceed": "Maximum recursion depth exceeded",
    "validation_sanitizers.message.recursively_sanitize_1": "\n        Recursively sanitize list values.\n        \n        Args:\n            data: List to sanitize\n            max_depth: Maximum recursion depth\n            \n        Returns:\n            Sanitized list\n        ",
    "validation_sanitizers.message.maximum_recursion_depth_exceed_1": "Maximum recursion depth exceeded",
    "validation_sanitizers.message.sanitize_sql_identifi": "\n        Sanitize SQL identifier (table/column name).\n        \n        Args:\n            identifier: SQL identifier to sanitize\n            \n        Returns:\n            Sanitized identifier\n        ",
    "validation_sanitizers.message.w_3": "[^\\w]",
    "validation_sanitizers.message.javascript": "javascript:",
    "validation_sanitizers.message.vbscript": "vbscript:",
    "validation_sanitizers.message.data_base64": "data:.*?base64",
    "validation_sanitizers.message.on_w_s": "on\\w+\\s*=",
    "validation_sanitizers.message.expression_s": "expression\\s*\\(",
    "validation_sanitizers.message.html_escape_text_for": "\n        HTML escape text for safe display.\n        \n        Args:\n            text: Text to escape\n            \n        Returns:\n            HTML-escaped text\n        ",
    "validation_sanitizers.message.unescape_html_entitie": "\n        Unescape HTML entities.\n        \n        Args:\n            text: Text to unescape\n            \n        Returns:\n            Unescaped text\n        ",
    "validation_business_validators.message.y_m_d": "%Y-%m-%d",
    "validation_business_validators.message.d_9_12": "^\\d{9,12}$",
    "validation_business_validators.message.national_id_already_registered": "National ID already registered",
    "validation_business_validators.message.beneficiary_is_already_enrolle": "Beneficiary is already enrolled in this program",
    "validation_business_validators.message.program_is_at_full_capacity": "Program is at full capacity",
    "validation_business_validators.message.years_old": " years old",
    "validation_business_validators.message.years_old_1": " years old",
    "validation_business_validators.message.appointments_are_only_availabl": "Appointments are only available on weekdays",
    "validation_business_validators.message.check_for_scheduling_conflicts": "Check for scheduling conflicts.",
    "validation_business_validators.message.trainer_has_another_appointmen": "Trainer has another appointment at this time",
    "validation_business_validators.message.beneficiary_has_another_appoin": "Beneficiary has another appointment at this time",
    "validation_business_validators.message.appointment": " appointment",
    "validation_business_validators.message.you_are_not_authorized_to_canc": "You are not authorized to cancel this appointment",
    "validation_business_validators.message.y_m_d_1": "%Y-%m-%d",
    "validation_business_validators.message.y_m_d_2": "%Y-%m-%d",
    "validation_business_validators.message.a_program_with_this_name_alrea": "A program with this name already exists",
    "validation_business_validators.message.beneficiary_is_not_enrolled_in": "Beneficiary is not enrolled in this program",
    "validation_business_validators.message.attendance_already_marked_for": "Attendance already marked for this session",
    "validation_business_validators.message.scores": "scores.",
    "validation_business_validators.message.scores_1": "scores.",
    "validation_business_validators.message.time_taken_seems_unrealistic": "Time taken seems unrealistic (max 8 hours)",
    "validation_business_validators.message.evaluation_deadline_has_passed": "Evaluation deadline has passed",
    "validation_business_validators.message.only_admins_can_change_user_ro": "Only admins can change user roles",
    "validation_business_validators.message.maximum_number_of_admins_reach": "Maximum number of admins reached for this tenant",
    "validation_business_validators.message.a_za_z0_9_3_30": "^[a-zA-Z0-9_\\-\\.]{3,30}$",
    "validation_decorators.message.shorthand_for_rate_limiti": "\n    Shorthand for rate limiting decorator.\n    \n    Example:\n        @app.route('/api/expensive-operation')\n        @rate_limit(max_requests=10, window=3600)\n        def expensive_operation():\n            # Limited to 10 requests per hour\n    ",
    "tasks_maintenance.message.clean_up_old_read_notification": "Clean up old read notifications.",
    "tasks_maintenance.message.old_notifications": " old notifications",
    "tasks_maintenance.message.clean_up_orphaned_document_fil": "Clean up orphaned document files.",
    "tasks_maintenance.message.upload_directory_does_not_exis": "Upload directory does not exist",
    "tasks_maintenance.message.orphaned_files": " orphaned files",
    "tasks_maintenance.message.clean_up_old_audit_log_entries": "Clean up old audit log entries.",
    "tasks_maintenance.message.old_audit_log_entries": " old audit log entries",
    "tasks_maintenance.message.clean_up_abandoned_test_sessio": "Clean up abandoned test sessions.",
    "tasks_maintenance.message.test_sessions_as_abandoned": " test sessions as abandoned",
    "tasks_maintenance.message.run_database_optimization_task": "Run database optimization tasks.",
    "tasks_maintenance.message.check_storage_usage_and_send_a": "Check storage usage and send alerts if needed.",
    "tasks_maintenance.message.storage_usage_has_exceeded": "Storage usage has exceeded ",
    "tasks_maintenance.message.files": " files",
    "tasks_evaluations.message.check_for_overdue_evaluations": "Check for overdue evaluations and send notifications.",
    "tasks_evaluations.message.for": "\" for ",
    "tasks_evaluations.message.is_overdue": " is overdue.",
    "tasks_evaluations.message.overdue_evaluations": " overdue evaluations",
    "tasks_evaluations.message.not_found": " not found",
    "tasks_evaluations.message.evaluation_not_found_for_sessi": "Evaluation not found for session ",
    "tasks_evaluations.message.ai_analysis_for_your_evaluatio": "AI analysis for your evaluation \"",
    "tasks_evaluations.message.is_ready": "\" is ready.",
    "tasks_evaluations.message.send_reminder_for_an_upcoming": "Send reminder for an upcoming evaluation deadline.",
    "tasks_evaluations.message.not_found_1": " not found",
    "tasks_evaluations.message.is_due_in": "\" is due in ",
    "tasks_evaluations.message.days": " days.",
    "tasks_evaluations.message.sent_reminder_for_evaluation": "Sent reminder for evaluation ",
    "tasks_email.message.send_bulk_emails_to_multiple_r": "Send bulk emails to multiple recipients.",
    "tasks_email.message.sent": " sent, ",
    "tasks_email.message.send_welcome_email_to_a_new_us": "Send welcome email to a new user.",
    "tasks_email.message.not_found": " not found",
    "tasks_email.message.welcome_email_sent_to_user": "Welcome email sent to user ",
    "tasks_email.message.send_password_reset_email": "Send password reset email.",
    "tasks_email.message.not_found_1": " not found",
    "tasks_email.message.password_reset_email_sent_to_u": "Password reset email sent to user ",
    "tasks_email.message.not_found_2": " not found",
    "tasks_reports.message.report_generation_celery_tasks": "Report generation Celery tasks.",
    "tasks_reports.message.generate_weekly_reports_for_al": "Generate weekly reports for all tenants.",
    "tasks_reports.message.weekly_reports": " weekly reports",
    "tasks_reports.message.generate_monthly_analytics_rep": "Generate monthly analytics reports.",
    "tasks_reports.message.monthly_analytics_reports": " monthly analytics reports",
    "tasks_reports.message.generate_progress_report_for_a": "Generate progress report for a specific beneficiary.",
    "tasks_reports.message.not_found": " not found",
    "tasks_reports.message.generated_progress_report_for": "Generated progress report for beneficiary ",
    "tasks_reports.message.generate_weekly_data_for_a_ten": "Generate weekly data for a tenant.",
    "tasks_reports.message.generate_monthly_analytics_for": "Generate monthly analytics for a tenant.",
    "tasks_reports.message.y_m_d": "%Y-%m-%d",
    "tasks_reports.message.y_m_d_1": "%Y-%m-%d",
    "tasks_reports.message.generate_progress_data_for_a_b": "Generate progress data for a beneficiary.",
    "tasks_notifications.message.send_reminders_for_upcoming_ap": "Send reminders for upcoming appointments.",
    "tasks_notifications.message.you_have_an_appointment_in": "You have an appointment in ",
    "tasks_notifications.message.hours_with": " hours with ",
    "tasks_notifications.message.appointment_reminders": " appointment reminders",
    "tasks_notifications.message.send_a_notification_to_multipl": "Send a notification to multiple users.",
    "tasks_notifications.message.notifications": " notifications",
    "tasks_notifications.message.send_a_notification_to_all_use": "Send a notification to all users with a specific role.",
    "tasks_notifications.message.notifications_to": " notifications to ",
    "tasks_notifications.message.users": " users",
    "tasks_sms.message.sms_tasks_for_asynchronous_pro": "SMS tasks for asynchronous processing.",
    "tasks_sms.message.send_a_scheduled_sms_message": "Send a scheduled SMS message.",
    "tasks_sms.message.not_found": " not found",
    "tasks_sms.message.is_not_pending": " is not pending",
    "tasks_sms.message.process_bulk_sms_sending": "Process bulk SMS sending.",
    "tasks_sms.message.execute_an_sms_campaign": "Execute an SMS campaign.",
    "tasks_sms.message.not_found_1": " not found",
    "tasks_sms.message.send_appointment_reminders_for": "Send appointment reminders for upcoming appointments.",
    "tasks_sms.message.clean_up_old_sms_records": "Clean up old SMS records.",
    "tasks_sms.message.old_sms_records": " old SMS records",
    "core_app_factory.message.clean_application_factory_with": "Clean application factory with no import-time dependencies.",
    "core_app_factory.message.factory_for_creating_flask_app": "Factory for creating Flask applications with clean initialization.",
    "core_app_factory.message.register_application_blueprint": "Register application blueprints (lazy loaded).",
    "core_app_factory.message.register_main_api_blueprints": "Register main API blueprints.",
    "core_app_factory.message.app_api_users": "app.api.users",
    "core_app_factory.message.app_api_beneficiaries_v2": "app.api.beneficiaries_v2",
    "core_app_factory.message.app_api_profile": "app.api.profile",
    "core_app_factory.message.app_api_documents": "app.api.documents",
    "core_app_factory.message.app_api_appointments": "app.api.appointments",
    "core_app_factory.message.app_api_notifications": "app.api.notifications",
    "core_app_factory.message.app_api_availability": "app.api.availability",
    "core_app_factory.message.app_api_reports": "app.api.reports",
    "core_app_factory.message.app_api_tenants": "app.api.tenants",
    "core_app_factory.message.app_api_folders": "app.api.folders",
    "core_app_factory.message.app_api_calendar": "app.api.calendar",
    "core_app_factory.message.app_api_messages": "app.api.messages",
    "core_app_factory.message.app_api_analytics": "app.api.analytics",
    "core_app_factory.message.app_api_user_settings": "app.api.user_settings",
    "core_app_factory.message.app_api_user_activities": "app.api.user_activities",
    "core_app_factory.message.app_api_tests": "app.api.tests",
    "core_app_factory.message.app_api_programs_v2": "app.api.programs_v2",
    "core_app_factory.message.app_api_portal": "app.api.portal",
    "core_app_factory.message.app_api_settings": "app.api.settings",
    "core_app_factory.message.app_api_settings_general": "app.api.settings_general",
    "core_app_factory.message.app_api_settings_appearance": "app.api.settings_appearance",
    "core_app_factory.message.app_api_calendars_availability": "app.api.calendars_availability",
    "core_app_factory.message.app_api_assessment": "app.api.assessment",
    "core_app_factory.message.app_api_assessment_templates": "app.api.assessment_templates",
    "core_app_factory.message.app_api_health": "app.api.health",
    "core_app_factory.message.app_api_settings_routes": "app.api.settings_routes",
    "core_app_factory.message.app_api_recurring_appointments": "app.api.recurring_appointments",
    "core_app_factory.message.app_api_ai_reports": "app.api.ai_reports",
    "core_app_factory.message.app_api_sms": "app.api.sms",
    "core_app_factory.message.app_api_adaptive_tests": "app.api.adaptive_tests",
    "core_app_factory.message.app_api_question_randomization": "app.api.question_randomization",
    "core_app_factory.message.app_api_evaluations": "app.api.evaluations",
    "core_app_factory.message.app_api_tests_simple": "app.api.tests_simple",
    "core_app_factory.message.register_v2_api_blueprints": "Register v2 API blueprints.",
    "core_app_factory.message.could_not_import_v2_api_bluepr": "Could not import v2 API blueprints: ",
    "core_app_factory.message.register_optional_middleware_b": "Register optional middleware based on configuration.",
    "core_app_factory.message.cache_middleware_not_available": "Cache middleware not available",
    "core_app_factory.message.ip_whitelist_middleware_enable": "IP whitelist middleware enabled",
    "core_app_factory.message.content_type_authorization_x": "Content-Type, Authorization, X-Requested-With, Accept",
    "core_app_factory.message.1_mode_block": "1; mode=block",
    "core_app_factory.message.max_age_31536000_includesubdo": "max-age=31536000; includeSubDomains",
    "core_app_factory.message.content_type_authorization_x_1": "Content-Type, Authorization, X-Requested-With, Accept",
    "core_app_factory.message.set_up_environment_specific_fe": "Set up environment-specific features.",
    "core_app_factory.message.set_up_production_specific_fea": "Set up production-specific features.",
    "core_app_factory.message.production_security_middleware": "Production security middleware enabled",
    "core_app_factory.message.security_middleware_not_availa": "Security middleware not available",
    "core_app_factory.message.backup_manager_not_available": "Backup manager not available",
    "core_app_factory.message.prometheus_metrics_enabled_at": "Prometheus metrics enabled at /metrics",
    "core_app_factory.message.prometheus_flask_exporter_not": "prometheus_flask_exporter not installed; metrics disabled",
    "core_app_factory.message.set_up_development_specific_fe": "Set up development-specific features.",
    "core_app_factory.message.": " - ",
    "core_app_factory.message._1": " - ",
    "core_app_factory.message.bytes": " bytes",
    "core_app_factory.message.register_health_check_endpoint": "Register health check endpoints.",
    "core_app_factory.message.advanced_health_checker_not_av": "Advanced health checker not available",
    "core_app_factory.message.initialize_database_tables_no": "Initialize database tables (no data).",
    "core_app_factory.message.create_flask_application_using": "Create Flask application using the factory.\n    \n    Args:\n        config_object: Optional configuration object to use\n        \n    Returns:\n        Configured Flask application instance\n    ",
    "core_query_cache.message.advanced_query_caching_with_re": "Advanced query caching with Redis backend",
    "core_query_cache.message.query_cache": "query_cache:",
    "core_query_cache.message.cache_stats": "cache_stats:",
    "core_query_cache.message.generate_a_unique_cache_key_fo": "Generate a unique cache key for a query",
    "core_query_cache.message.serialize_data_for_redis_stora": "Serialize data for Redis storage",
    "core_query_cache.message.get_cached_query_result": "Get cached query result",
    "core_query_cache.message.set_cached_query_result": "Set cached query result",
    "core_query_cache.message.ttl": " (TTL: ",
    "core_query_cache.message.cache_entries_matching_patter": " cache entries matching pattern: ",
    "core_query_cache.message.execute_a_query_with_caching": "Execute a query with caching",
    "core_query_cache.message.query_executed_and_cached": "Query executed and cached: ",
    "core_query_cache.message.execution": " (execution: ",
    "core_query_cache.message.entries_for_tag": " entries for tag: ",
    "core_query_cache.message.get_cache_performance_statisti": "Get cache performance statistics",
    "core_query_cache.message.pre_warm_cache_with_important": "Pre-warm cache with important queries",
    "core_query_cache.message.starting_cache_warming_with": "Starting cache warming with ",
    "core_query_cache.message.queries": " queries",
    "core_query_cache.message.clean_up_expired_cache_entries": "Clean up expired cache entries (maintenance task)",
    "core_query_cache.message.expired_cache_entries": " expired cache entries",
    "core_query_cache.message.cache_entries_for": " cache entries for ",
    "core_query_cache.message.handle_model_change_events": "Handle model change events",
    "core_query_cache.message.decorator_for_caching_query_re": "Decorator for caching query results",
    "core_query_cache.message.query": "query:",
    "core_query_cache.message.initialize_query_cache_with_fl": "Initialize query cache with Flask app",
    "core_query_cache.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "core_query_cache.message.query_cache_initialized_with_r": "Query cache initialized with Redis: ",
    "core_config_manager.message.enhanced_configuration_managem": "Enhanced configuration management system.",
    "core_config_manager.message.sqlite": "sqlite://",
    "core_config_manager.message.sqlite_memory": "sqlite:///:memory:",
    "core_config_manager.message.sqlite_1": "sqlite:///",
    "core_config_manager.message.dev_secret_key_change_in_produ": "dev-secret-key-change-in-production",
    "core_config_manager.message.using_default_secret_key_in_no": "Using default SECRET_KEY in non-production environment",
    "core_config_manager.message.jwt_secret_key_change_in_produ": "jwt-secret-key-change-in-production",
    "core_config_manager.message.using_default_jwt_secret_key_i": "Using default JWT_SECRET_KEY in non-production environment",
    "core_config_manager.message.redis_url_not_configured_some": "REDIS_URL not configured, some features may be disabled",
    "core_config_manager.message.determine_which_configuration": "Determine which configuration object to use based on environment.",
    "core_extension_manager.message.extension_initialization_and_m": "Extension initialization and management system.",
    "core_extension_manager.message.interface_for_extension_initia": "Interface for extension initializers.",
    "core_extension_manager.message.get_the_extension_name": "Get the extension name.",
    "core_extension_manager.message.get_list_of_extension_dependen": "Get list of extension dependencies.",
    "core_extension_manager.message.check_if_token_is_revoked": "Check if token is revoked.",
    "core_extension_manager.message.the_token_has_expired": "The token has expired",
    "core_extension_manager.message.initializes_rate_limiting_exte": "Initializes rate limiting extensions.",
    "core_extension_manager.message.initialize_rate_limiting_exten": "Initialize rate limiting extensions.",
    "core_extension_manager.message.rate_limiting_disabled_by_conf": "Rate limiting disabled by configuration",
    "core_extension_manager.message.manages_extension_initializati": "Manages extension initialization with proper dependency ordering.",
    "core_extension_manager.message.register_default_extension_ini": "Register default extension initializers.",
    "core_extension_manager.message.register_an_extension_initiali": "Register an extension initializer.",
    "core_extension_manager.message.not_found_in_initializers": " not found in initializers",
    "core_extension_manager.message.exception_during_initializatio": "Exception during initialization of ",
    "core_extension_manager.message.circular_dependency_detected_i": "Circular dependency detected involving ",
    "core_extension_manager.message.check_if_an_extension_is_initi": "Check if an extension is initialized.",
    "core_performance_init.message.performance_optimization_init": "\nPerformance Optimization Initialization\nCentralized initialization for all performance optimization components.\n",
    "core_performance_init.message.initialize_comprehensive_perfo": "Initialize comprehensive performance optimization for the BDC application",
    "core_performance_init.message.database_performance_optimiz": "✅ Database performance optimization initialized",
    "core_performance_init.message.query_caching_initialized": "✅ Query caching initialized",
    "core_performance_init.message.memory_optimization_initiali": "✅ Memory optimization initialized",
    "core_performance_init.message.performance_middleware_initi": "✅ Performance middleware initialized",
    "core_performance_init.message.performance_monitoring_api_r": "✅ Performance monitoring API registered",
    "core_performance_init.message.celery_optimization_initiali": "✅ Celery optimization initialized",
    "core_performance_init.message.celery_not_configured_skip": "⚠️ Celery not configured, skipping Celery optimization",
    "core_performance_init.message.performance_monitoring_hooks": "✅ Performance monitoring hooks configured",
    "core_performance_init.message.setup_application_level_perfor": "Setup application-level performance monitoring hooks",
    "core_performance_init.message.run_optimizations_on_first_req": "Run optimizations on first request",
    "core_performance_init.message.database_cleanup_on_request_te": "Database cleanup on request teardown",
    "core_performance_init.message.run_initial_performance_optimi": "Run initial performance optimizations",
    "core_performance_init.message.warm_up_critical_application_c": "Warm up critical application caches",
    "core_performance_init.message.stats_active_users_count": "stats:active_users_count",
    "core_performance_init.message.stats_beneficiaries_count": "stats:beneficiaries_count",
    "core_performance_init.message.system_status": "system:status",
    "core_performance_init.message.get_count_of_active_users_for": "Get count of active users for cache warming",
    "core_performance_init.message.2024_01_01t00_00_00z": "2024-01-01T00:00:00Z",
    "core_performance_init.message.2024_01_01t00_00_00z_1": "2024-01-01T00:00:00Z",
    "core_performance_init.message.get_count_of_beneficiaries_for": "Get count of beneficiaries for cache warming",
    "core_performance_init.message.2024_01_01t00_00_00z_2": "2024-01-01T00:00:00Z",
    "core_performance_init.message.2024_01_01t00_00_00z_3": "2024-01-01T00:00:00Z",
    "core_performance_init.message.get_system_status_for_cache_wa": "Get system status for cache warming",
    "core_performance_init.message.2024_01_01t00_00_00z_4": "2024-01-01T00:00:00Z",
    "core_performance_init.message.2024_01_01t00_00_00z_5": "2024-01-01T00:00:00Z",
    "core_performance_init.message.check_the_health_of_all_perfor": "Check the health of all performance optimization components",
    "core_performance_init.message.generate_a_comprehensive_perfo": "Generate a comprehensive performance report",
    "core_performance_init.message.2024_01_01t00_00_00z_6": "2024-01-01T00:00:00Z",
    "core_performance_init.message.generate_performance_optimizat": "Generate performance optimization recommendations",
    "core_performance_init.message.average_query_time_is_high_co": "Average query time is high, consider optimizing slow queries and adding indexes",
    "core_performance_init.message.cache_hit_rate_is_low": "Cache hit rate is low (",
    "core_performance_init.message.consider_increasing_cache": "%), consider increasing cache TTL or warming more data",
    "core_performance_init.message.memory_usage_is_high": "Memory usage is high (",
    "core_performance_init.message.consider_scaling_up_or_opt": "%), consider scaling up or optimizing memory usage",
    "core_performance_init.message.high_slow_request_rate": "High slow request rate (",
    "core_performance_init.message.consider_optimizing_slow_e": "%), consider optimizing slow endpoints",
    "core_cache_manager.message.advanced_cache_management_for": "Advanced cache management for API responses.",
    "core_cache_manager.message.manages_caching_strategies_for": "Manages caching strategies for API responses.",
    "core_cache_manager.message.generate_a_unique_cache_key_ba": "Generate a unique cache key based on function arguments.",
    "core_cache_manager.message.set_value_in_cache_with_ttl": "Set value in cache with TTL.",
    "core_cache_manager.message.clear_all_cache_entries_matchi": "Clear all cache entries matching a pattern.",
    "core_cache_manager.message.clear_all_cache_entries": "Clear all cache entries.",
    "core_cache_manager.message.decorator_to_cache_api_respons": "Decorator to cache API responses.",
    "core_cache_manager.message.cache_hit_for_key": "Cache hit for key: ",
    "core_cache_manager.message.cache_miss_for_key": "Cache miss for key: ",
    "core_cache_manager.message.private_max_age": "private, max-age=",
    "core_cache_manager.message.decorator_with_custom_cache_ke": "Decorator with custom cache key generation.",
    "core_cache_manager.message.api_response_user": "api_response:user:",
    "core_cache_manager.message.api_response_user_1": "api_response:*:user_",
    "core_cache_manager.message.api_response_beneficiary": "api_response:beneficiary:",
    "core_cache_manager.message.api_response_beneficiary_1": "api_response:*:beneficiary_",
    "core_cache_manager.message.api_response_tenant": "api_response:tenant:",
    "core_cache_manager.message.api_response_tenant_1": "api_response:*:tenant_",
    "core_cache_manager.message.no_cache": "no-cache",
    "core_database_manager.message.database_management_and_migrat": "Database management and migration system.",
    "core_database_manager.message.result_of_a_migration_operatio": "Result of a migration operation.",
    "core_database_manager.message.interface_for_database_migrati": "Interface for database migrations.",
    "core_database_manager.message.check_if_migration_can_be_exec": "Check if migration can be executed.",
    "core_database_manager.message.handles_database_initializatio": "Handles database initialization with proper separation of concerns.",
    "core_database_manager.message.create_test_data_for_developme": "Create test data for development/testing.",
    "core_database_manager.message.create_default_tenant_if_neede": "Create default tenant if needed.",
    "core_database_manager.message.admin_default_com": "admin@default.com",
    "core_database_manager.message.no_tenant_available_for_user_c": "No tenant available for user creation",
    "core_database_manager.message.generate_a_secure_random_passw": "Generate a secure random password",
    "core_database_manager.message.admin_bdc_com": "admin@bdc.com",
    "core_database_manager.message.tenant_bdc_com": "tenant@bdc.com",
    "core_database_manager.message.trainer_bdc_com": "trainer@bdc.com",
    "core_database_manager.message.student_bdc_com": "student@bdc.com",
    "core_database_manager.message.total_users_in_database": "Total users in database: ",
    "core_database_manager.message.migration_to_create_default_te": "Migration to create default tenant.",
    "core_database_manager.message.1_0_0": "1.0.0",
    "core_database_manager.message.default_tenant_already_exists": "Default tenant already exists",
    "core_database_manager.message.admin_default_com_1": "admin@default.com",
    "core_database_manager.message.check_if_migration_can_be_exec_1": "Check if migration can be executed.",
    "core_database_manager.message.migration_to_create_admin_user": "Migration to create admin user.",
    "core_database_manager.message.1_0_0_1": "1.0.0",
    "core_database_manager.message.admin_bdc_com_1": "admin@bdc.com",
    "core_database_manager.message.admin_user_already_exists": "Admin user already exists",
    "core_database_manager.message.default_tenant_not_found_run": "Default tenant not found, run create_default_tenant migration first",
    "core_database_manager.message.admin_bdc_com_2": "admin@bdc.com",
    "core_database_manager.message.admin_bdc_com_3": "admin@bdc.com",
    "core_database_manager.message.check_if_migration_can_be_exec_2": "Check if migration can be executed.",
    "core_database_manager.message.admin_bdc_com_4": "admin@bdc.com",
    "core_database_manager.message.run_a_specific_migration": "Run a specific migration.",
    "core_database_manager.message.not_found": " not found",
    "core_database_manager.message.run_all_registered_migrations": "Run all registered migrations.",
    "core_database_manager.message.skipped": " skipped, ",
    "core_database_manager.message.get_list_of_available_migratio": "Get list of available migrations.",
    "core_database_performance.message.enhanced_database_performance": "\nEnhanced Database Performance Optimization Module\nProvides comprehensive database optimization including connection pooling,\nquery caching, index management, and performance monitoring.\n",
    "core_database_performance.message.comprehensive_database_perform": "Comprehensive database performance optimization",
    "core_database_performance.message.initialize_with_flask_app": "Initialize with Flask app",
    "core_database_performance.message.configure_optimized_database_c": "Configure optimized database connection pooling",
    "core_database_performance.message.configured_database_connection": "Configured database connection pool: ",
    "core_database_performance.message.set_up_query_performance_monit": "Set up query performance monitoring",
    "core_database_performance.message.log_slow_queries_for_analysis": "Log slow queries for analysis",
    "core_database_performance.message.s": "s - ",
    "core_database_performance.message.clean_up_database_session": "Clean up database session",
    "core_database_performance.message.context_manager_for_optimized": "Context manager for optimized database sessions",
    "core_database_performance.message.execute_a_query_with_caching": "Execute a query with caching",
    "core_database_performance.message.execution": " (execution: ",
    "core_database_performance.message.records": " records",
    "core_database_performance.message.records_1": " records",
    "core_database_performance.message.analyze_query_performance_usin": "Analyze query performance using EXPLAIN",
    "core_database_performance.message.database_engine_not_available": "Database engine not available",
    "core_database_performance.message.": "://",
    "core_database_performance.message.analyze_execution_plan_and_pro": "Analyze execution plan and provide recommendations",
    "core_database_performance.message.seq_scan": "seq scan",
    "core_database_performance.message.full_table_scan": "full table scan",
    "core_database_performance.message.consider_adding_an_index": "Consider adding an index",
    "core_database_performance.message.consider_increasing_work_mem_o": "Consider increasing work_mem or adding an index",
    "core_database_performance.message.cost": "cost=",
    "core_database_performance.message.cost_1": "cost=",
    "core_database_performance.message.get_comprehensive_database_per": "Get comprehensive database performance statistics",
    "core_database_performance.message.clear_the_query_cache": "Clear the query cache",
    "core_database_performance.message.query": "query:*",
    "core_database_performance.message.decorator_for_monitoring_datab": "Decorator for monitoring database operation performance",
    "core_database_performance.message.s_1": "s: ",
    "core_database_performance.message.provide_a_transactional_scope": "Provide a transactional scope around a series of operations",
    "core_cdn_config.message.cdn_configuration_for_static": "\nCDN Configuration for Static Assets\nConfigures Content Delivery Network settings for optimal static asset delivery.\n",
    "core_cdn_config.message.manages_cdn_configuration_and": "Manages CDN configuration and asset delivery optimization",
    "core_cdn_config.message.public_max_age_31536000": "public, max-age=31536000",
    "core_cdn_config.message.public_max_age_31536000_1": "public, max-age=31536000",
    "core_cdn_config.message.public_max_age_31536000_2": "public, max-age=31536000",
    "core_cdn_config.message.public_max_age_31536000_3": "public, max-age=31536000",
    "core_cdn_config.message.public_max_age_86400": "public, max-age=86400",
    "core_cdn_config.message.public_max_age_604800": "public, max-age=604800",
    "core_cdn_config.message.initialize_cdn_configuration_w": "Initialize CDN configuration with Flask app",
    "core_cdn_config.message.inject_cdn_helper_functions_in": "Inject CDN helper functions into template context",
    "core_cdn_config.message.setup_cdn_routing_for_static_f": "Setup CDN routing for static files",
    "core_cdn_config.message.get_cdn_url_for_a_given_path": "Get CDN URL for a given path",
    "core_cdn_config.message.": "://",
    "core_cdn_config.message.get_optimized_url_for_static_a": "Get optimized URL for static assets",
    "core_cdn_config.message.get_optimized_url_for_specific": "Get optimized URL for specific asset types",
    "core_cdn_config.message.add_cache_busting_parameter_to": "Add cache busting parameter to filename",
    "core_cdn_config.message.v": "?v=",
    "core_cdn_config.message.1_0_0": "1.0.0",
    "core_cdn_config.message.v_1": "?v=",
    "core_cdn_config.message.get_http_headers_for_asset_del": "Get HTTP headers for asset delivery",
    "core_cdn_config.message.public_max_age_3600": "public, max-age=3600",
    "core_cdn_config.message.get_content_type_for_filename": "Get content type for filename",
    "core_cdn_config.message.image_jpeg": "image/jpeg",
    "core_cdn_config.message.image_jpeg_1": "image/jpeg",
    "core_cdn_config.message.image_png": "image/png",
    "core_cdn_config.message.image_gif": "image/gif",
    "core_cdn_config.message.image_webp": "image/webp",
    "core_cdn_config.message.image_svg_xml": "image/svg+xml",
    "core_cdn_config.message.font_woff": "font/woff",
    "core_cdn_config.message.font_woff2": "font/woff2",
    "core_cdn_config.message.font_ttf": "font/ttf",
    "core_cdn_config.message.font_otf": "font/otf",
    "core_cdn_config.message.video_mp4": "video/mp4",
    "core_cdn_config.message.audio_mpeg": "audio/mpeg",
    "core_cdn_config.message.generate_asset_manifest_for_ca": "Generate asset manifest for cache management",
    "core_cdn_config.message.1_0_0_1": "1.0.0",
    "core_cdn_config.message.2024_01_01t00_00_00z": "2024-01-01T00:00:00Z",
    "core_cdn_config.message.analyze_and_optimize_asset_del": "Analyze and optimize asset delivery",
    "core_cdn_config.message.large_assets_that_could_be_op": " large assets that could be optimized",
    "core_cdn_config.message.consider_setting_up_a_cdn_for": "Consider setting up a CDN for better asset delivery performance",
    "core_cdn_config.message.initialize_cdn_configuration_f": "Initialize CDN configuration for Flask app",
    "core_cdn_config.message.image": "image/",
    "core_cdn_config.message.font": "font/",
    "core_cdn_config.message.public_max_age_31536000_4": "public, max-age=31536000",
    "core_cdn_config.message.get_optimized_url_for_an_asset": "Get optimized URL for an asset",
    "core_cdn_config.message.generate_html_preload_tags_for": "Generate HTML preload tags for critical assets",
    "core_cdn_config.message.link_rel_preload_href": "<link rel=\"preload\" href=\"",
    "core_cdn_config.message.as_style": "\" as=\"style\">",
    "core_cdn_config.message.link_rel_preload_href_1": "<link rel=\"preload\" href=\"",
    "core_cdn_config.message.as_script": "\" as=\"script\">",
    "core_cdn_config.message.link_rel_preload_href_2": "<link rel=\"preload\" href=\"",
    "core_cdn_config.message.as_font_type_font_woff2": "\" as=\"font\" type=\"font/woff2\" crossorigin>",
    "core_cdn_config.message.link_rel_preload_href_3": "<link rel=\"preload\" href=\"",
    "core_cdn_config.message.as_image": "\" as=\"image\">",
    "core_celery_optimizer.message.celery_task_optimization_modu": "\nCelery Task Optimization Module\nProvides task prioritization, bulk processing, queue management, and resource limiting.\n",
    "core_celery_optimizer.message.custom_celery_task_class_with": "Custom Celery task class with priority support",
    "core_celery_optimizer.message.apply_task_with_priority": "Apply task with priority",
    "core_celery_optimizer.message.collect_and_analyze_task_execu": "Collect and analyze task execution metrics",
    "core_celery_optimizer.message.get_tasks_that_are_running_slo": "Get tasks that are running slower than threshold",
    "core_celery_optimizer.message.manage_celery_queues_and_routi": "Manage Celery queues and routing",
    "core_celery_optimizer.message.x_max_priority": "x-max-priority",
    "core_celery_optimizer.message.x_max_priority_1": "x-max-priority",
    "core_celery_optimizer.message.x_max_priority_2": "x-max-priority",
    "core_celery_optimizer.message.x_max_priority_3": "x-max-priority",
    "core_celery_optimizer.message.setup_task_routing_rules": "Setup task routing rules",
    "core_celery_optimizer.message.app_tasks_auth": "app.tasks.auth.*",
    "core_celery_optimizer.message.app_tasks_security": "app.tasks.security.*",
    "core_celery_optimizer.message.app_tasks_notifications_send_i": "app.tasks.notifications.send_immediate",
    "core_celery_optimizer.message.app_tasks_realtime": "app.tasks.realtime.*",
    "core_celery_optimizer.message.app_tasks_evaluations_process": "app.tasks.evaluations.process",
    "core_celery_optimizer.message.app_tasks_appointments": "app.tasks.appointments.*",
    "core_celery_optimizer.message.app_tasks_reports_generate": "app.tasks.reports.generate",
    "core_celery_optimizer.message.app_tasks_analytics": "app.tasks.analytics.*",
    "core_celery_optimizer.message.app_tasks_bulk": "app.tasks.bulk.*",
    "core_celery_optimizer.message.app_tasks_maintenance": "app.tasks.maintenance.*",
    "core_celery_optimizer.message.app_tasks_cleanup": "app.tasks.cleanup.*",
    "core_celery_optimizer.message.limit_resource_usage_for_celer": "Limit resource usage for Celery tasks",
    "core_celery_optimizer.message.check_current_resource_usage": "Check current resource usage",
    "core_celery_optimizer.message.check_if_resources_are_availab": "Check if resources are available to start a task",
    "core_celery_optimizer.message.register_task_start_for_resour": "Register task start for resource tracking",
    "core_celery_optimizer.message.register_task_end_and_calculat": "Register task end and calculate resource usage",
    "core_celery_optimizer.message.process_tasks_in_optimized_bat": "Process tasks in optimized batches",
    "core_celery_optimizer.message.add_item_to_a_batch_for_proces": "Add item to a batch for processing",
    "core_celery_optimizer.message.with": "' with ",
    "core_celery_optimizer.message.items": " items",
    "core_celery_optimizer.message.set_timer_for_batch_processing": "Set timer for batch processing",
    "core_celery_optimizer.message.main_celery_optimization_coord": "Main Celery optimization coordinator",
    "core_celery_optimizer.message.setup_celery_signal_handlers_f": "Setup Celery signal handlers for monitoring",
    "core_celery_optimizer.message.": ") - ",
    "core_celery_optimizer.message.in": " in ",
    "core_celery_optimizer.message._1": ") - ",
    "core_celery_optimizer.message.configure_celery_with_optimiza": "Configure Celery with optimization settings",
    "core_celery_optimizer.message.celerybeat_schedule": "celerybeat-schedule",
    "core_celery_optimizer.message.celery_optimization_configurat": "Celery optimization configuration applied",
    "core_celery_optimizer.message.get_comprehensive_optimization": "Get comprehensive optimization statistics",
    "core_celery_optimizer.message.slow_tasks": " slow tasks",
    "core_celery_optimizer.message._2": "': ",
    "core_celery_optimizer.message.memory_usage_is_high_consider": "Memory usage is high, consider increasing limits or optimizing tasks",
    "core_celery_optimizer.message.cpu_usage_is_high_consider_sc": "CPU usage is high, consider scaling workers or optimizing tasks",
    "core_celery_optimizer.message.decorator_to_set_task_priority": "Decorator to set task priority",
    "core_celery_optimizer.message.decorator_for_batch_processing": "Decorator for batch processing tasks",
    "core_celery_optimizer.message.decorator_to_limit_task_resour": "Decorator to limit task resource usage",
    "core_celery_optimizer.message.insufficient_resources_to_star": "Insufficient resources to start task ",
    "core_tenant_isolation.message.manages_tenant_context_th": "\n    Manages tenant context throughout the application lifecycle.\n    Provides thread-safe tenant isolation.\n    ",
    "core_tenant_isolation.message.set_the_tenant_id_in": "\n        Set the tenant ID in both thread-local and request context.\n        \n        Args:\n            tenant_id: The tenant ID to set\n        ",
    "core_tenant_isolation.message.clear_all_tenant_context": "Clear all tenant context.",
    "core_tenant_isolation.message.context_manager_for_t": "\n        Context manager for temporarily setting tenant context.\n        \n        Usage:\n            with TenantContextManager.tenant_context(tenant_id):\n                # All queries within this block will be scoped to tenant_id\n                documents = Document.query.all()\n        ",
    "core_tenant_isolation.message.get_all_tenant_ids_ac": "\n        Get all tenant IDs accessible by a user.\n        \n        Args:\n            user_id: The user ID\n            \n        Returns:\n            List[int]: List of accessible tenant IDs\n        ",
    "core_tenant_isolation.message.return_a_custom_query_class_wi": "Return a custom query class with tenant filtering.",
    "core_tenant_isolation.message.get_query_filtered_by": "\n        Get query filtered by tenant.\n        \n        Args:\n            tenant_id: Specific tenant ID or None for current tenant\n            \n        Returns:\n            Query object filtered by tenant\n        ",
    "core_tenant_isolation.message.no_tenant_context_available": "No tenant context available",
    "core_tenant_isolation.message.create_a_new_instance": "\n        Create a new instance for a specific tenant.\n        \n        Args:\n            tenant_id: Tenant ID or None for current tenant\n            **kwargs: Model attributes\n            \n        Returns:\n            New model instance\n        ",
    "core_tenant_isolation.message.no_tenant_context_for_creation": "No tenant context for creation",
    "core_tenant_isolation.message.id": " (id=",
    "core_tenant_isolation.message.for_tenant": ") for tenant ",
    "core_tenant_isolation.message.no_tenant_context_for_save_ope": "No tenant context for save operation",
    "core_tenant_isolation.message.no_tenant_context_for_bulk_cre": "No tenant context for bulk creation",
    "core_tenant_isolation.message.custom_query_class_that_a": "\n    Custom query class that automatically applies tenant filtering.\n    ",
    "core_tenant_isolation.message.apply_tenant_filter_if_not_alr": "Apply tenant filter if not already applied.",
    "core_tenant_isolation.message.disable_tenant_filter": "\n        Disable tenant filtering for this query.\n        Use with caution - typically only for super admin operations.\n        \n        Returns:\n            Query without tenant filtering\n        ",
    "core_tenant_isolation.message.filter_query_for_a_sp": "\n        Filter query for a specific tenant.\n        \n        Args:\n            tenant_id: The tenant ID to filter by\n            \n        Returns:\n            Filtered query\n        ",
    "core_tenant_isolation.message.override_to_apply_tenant_filte": "Override to apply tenant filter before executing.",
    "core_tenant_isolation.message.override_to_apply_tenant_filte_1": "Override to apply tenant filter before executing.",
    "core_tenant_isolation.message.override_to_apply_tenant_filte_2": "Override to apply tenant filter before executing.",
    "core_tenant_isolation.message.override_to_apply_tenant_filte_3": "Override to apply tenant filter before executing.",
    "core_tenant_isolation.message.override_to_apply_tenant_filte_4": "Override to apply tenant filter before executing.",
    "core_tenant_isolation.message.override_to_apply_tenant_filte_5": "Override to apply tenant filter before executing.",
    "core_tenant_isolation.message.override_to_apply_tenant_filte_6": "Override to apply tenant filter before iterating.",
    "core_tenant_isolation.message.id_1": " (id=",
    "core_tenant_isolation.message.tenant_access_denied": ") - tenant access denied",
    "core_tenant_isolation.message.decorator_to_ensure_tenan": "\n    Decorator to ensure tenant context is set for the request.\n    \n    Usage:\n        @require_tenant\n        def my_view():\n            # Tenant context is guaranteed to be set\n            pass\n    ",
    "core_tenant_isolation.message.no_tenant_context_available_1": "No tenant context available",
    "core_tenant_isolation.message.decorator_to_execute_a_fu": "\n    Decorator to execute a function with a specific tenant context.\n    \n    Args:\n        tenant_id: The tenant ID to use\n        \n    Usage:\n        @with_tenant(1)\n        def process_tenant_data():\n            # All queries will be scoped to tenant 1\n            pass\n    ",
    "core_tenant_isolation.message.initialize_tenant_isolati": "\n    Initialize tenant isolation for the Flask application.\n    \n    Args:\n        app: Flask application instance\n    ",
    "core_tenant_isolation.message.clear_tenant_context_after_req": "Clear tenant context after request.",
    "core_tenant_isolation.message.get_the_current_tenant_ob": "\n    Get the current tenant object.\n    \n    Returns:\n        Tenant object or None\n    ",
    "core_tenant_isolation.message.user_does_not_have_access_to_t": "User does not have access to tenant ",
    "core_container.message.dependency_injection_container": "Dependency injection container configuration.",
    "core_container.message.bind_an_interface_to_a_factory": "Bind an interface to a factory function.",
    "core_container.message.bind_an_interface_to_a_singlet": "Bind an interface to a singleton factory.",
    "core_container.message.get_an_instance_of_the_request": "Get an instance of the requested interface.",
    "core_container.message.no_binding_found_for": "No binding found for ",
    "core_container.message.get_the_current_database_sessi": "Get the current database session.",
    "core_container.message.initialize_the_di_container_wi": "Initialize the DI container with the Flask app.",
    "core_container.message.clear_request_scoped_instances": "Clear request-scoped instances after each request.",
    "core_container.message.get_the_authentication_service": "Get the authentication service.",
    "core_container.message.get_the_beneficiary_service": "Get the beneficiary service.",
    "core_container.message.get_the_user_service": "Get the user service.",
    "core_initialization.message.handles_database_initializatio": "Handles database initialization logic.",
    "core_initialization.message.initialize_database_with_optio": "Initialize database with optional test data creation.\n        \n        Args:\n            app: Flask application instance\n            create_test_data: Whether to create test users and data\n        ",
    "core_initialization.message.create_default_tenant_and_test": "Create default tenant and test users.",
    "core_initialization.message.admin_default_com": "admin@default.com",
    "core_initialization.message.admin_bdc_com": "admin@bdc.com",
    "core_initialization.message.tenant_bdc_com": "tenant@bdc.com",
    "core_initialization.message.trainer_bdc_com": "trainer@bdc.com",
    "core_initialization.message.student_bdc_com": "student@bdc.com",
    "core_initialization.message.total_users_in_database": "Total users in database: ",
    "core_initialization.message.manages_application_configurat": "Manages application configuration and initialization.",
    "core_initialization.message.load_application_configuration": "Load application configuration.\n        \n        Args:\n            app: Flask application instance\n            config_object: Configuration object to use\n        ",
    "core_cache_config.message.cache_configuration_and_strate": "Cache configuration and strategies.",
    "core_cache_config.message.cache_configuration_for_differ": "Cache configuration for different resources.",
    "core_cache_config.message.get_ttl_for_a_resource_type": "Get TTL for a resource type.",
    "core_cache_config.message.cache_aside_lazy_loading_pat": "Cache-aside (lazy loading) pattern.",
    "core_cache_config.message.write_behind_write_back_cach": "Write-behind (write-back) caching pattern.",
    "core_cache_config.message.warm_cache_with_critical_data": "Warm cache with critical data on startup.",
    "core_session_cache.message.session_caching_optimization": "\nSession Caching Optimization with Redis\nOptimizes session storage and retrieval using Redis for better performance.\n",
    "core_session_cache.message.redis_session_interface_for_fl": "Redis session interface for Flask",
    "core_session_cache.message.session": "session:",
    "core_session_cache.message.generate_a_new_session_id": "Generate a new session ID",
    "core_session_cache.message.get_redis_expiration_time_for": "Get Redis expiration time for session",
    "core_session_cache.message.get_redis_key_for_session_id": "Get Redis key for session ID",
    "core_session_cache.message.save_session_to_redis": "Save session to Redis",
    "core_session_cache.message.session_caching_optimizer_with": "Session caching optimizer with additional features",
    "core_session_cache.message.session_1": "session:",
    "core_session_cache.message.user_sessions": "user_sessions:",
    "core_session_cache.message.get_all_active_sessions_for_a": "Get all active sessions for a user",
    "core_session_cache.message.sessions_for_user": " sessions for user ",
    "core_session_cache.message.track_session_id_for_a_user": "Track session ID for a user",
    "core_session_cache.message.get_session_caching_statistics": "Get session caching statistics",
    "core_session_cache.message.clean_up_expired_session_refer": "Clean up expired session references",
    "core_session_cache.message.expired_session_references": " expired session references",
    "core_session_cache.message.initialize_redis_session_cachi": "Initialize Redis session caching for Flask app",
    "core_session_cache.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "core_session_cache.message.session_2": "session:",
    "core_session_cache.message.session_caching_initialized_wi": "Session caching initialized with Redis: ",
    "core_session_cache.message.falling_back_to_default_sessio": "Falling back to default session interface",
    "core_memory_optimizer.message.memory_optimization_module_pr": "\nMemory Optimization Module\nProvides object pooling, memory leak detection, streaming support, and memory monitoring.\n",
    "core_memory_optimizer.message.generic_object_pool_for_memory": "Generic object pool for memory optimization",
    "core_memory_optimizer.message.return_an_object_to_the_pool": "Return an object to the pool",
    "core_memory_optimizer.message.monitor_application_memory_usa": "Monitor application memory usage",
    "core_memory_optimizer.message.get_current_memory_usage_stati": "Get current memory usage statistics",
    "core_memory_optimizer.message.generation_0": "generation_0",
    "core_memory_optimizer.message.generation_1": "generation_1",
    "core_memory_optimizer.message.generation_2": "generation_2",
    "core_memory_optimizer.message.threshold_0": "threshold_0",
    "core_memory_optimizer.message.threshold_1": "threshold_1",
    "core_memory_optimizer.message.threshold_2": "threshold_2",
    "core_memory_optimizer.message.set_the_baseline_memory_usage": "Set the baseline memory usage",
    "core_memory_optimizer.message.mb": " MB",
    "core_memory_optimizer.message.get_memory_growth_since_baseli": "Get memory growth since baseline",
    "core_memory_optimizer.message.get_top_memory_allocations_usi": "Get top memory allocations using tracemalloc",
    "core_memory_optimizer.message.track_an_object_for_memory_mon": "Track an object for memory monitoring",
    "core_memory_optimizer.message.force_garbage_collection_and_r": "Force garbage collection and return statistics",
    "core_memory_optimizer.message.generation_0_1": "generation_0",
    "core_memory_optimizer.message.generation_1_1": "generation_1",
    "core_memory_optimizer.message.generation_2_1": "generation_2",
    "core_memory_optimizer.message.objects_collected": " objects collected, ",
    "core_memory_optimizer.message.": " -> ",
    "core_memory_optimizer.message.objects": " objects",
    "core_memory_optimizer.message.handle_file_uploads_and_downlo": "Handle file uploads and downloads with streaming for memory efficiency",
    "core_memory_optimizer.message.stream_file_upload_to_disk": "Stream file upload to disk",
    "core_memory_optimizer.message.bytes": " bytes",
    "core_memory_optimizer.message.stream_data_response_in_chunks": "Stream data response in chunks",
    "core_memory_optimizer.message.detect_potential_memory_leaks": "Detect potential memory leaks",
    "core_memory_optimizer.message.start_memory_leak_monitoring": "Start memory leak monitoring",
    "core_memory_optimizer.message.memory_leak_monitoring_started": "Memory leak monitoring started",
    "core_memory_optimizer.message.stop_memory_leak_monitoring": "Stop memory leak monitoring",
    "core_memory_optimizer.message.memory_leak_monitoring_stopped": "Memory leak monitoring stopped",
    "core_memory_optimizer.message.check_for_memory_usage_trends": "Check for memory usage trends",
    "core_memory_optimizer.message.potential_memory_leak_detected": "Potential memory leak detected: ",
    "core_memory_optimizer.message.growth_over": " growth over ",
    "core_memory_optimizer.message.samples": " samples",
    "core_memory_optimizer.message.check_for_growing_object_count": "Check for growing object counts",
    "core_memory_optimizer.message.growing_rapidly": "' growing rapidly: ",
    "core_memory_optimizer.message._1": " -> ",
    "core_memory_optimizer.message.main_memory_optimization_coord": "Main memory optimization coordinator",
    "core_memory_optimizer.message.set_up_default_object_pools_fo": "Set up default object pools for common types",
    "core_memory_optimizer.message.get_an_object_pool_by_name": "Get an object pool by name",
    "core_memory_optimizer.message.create_a_new_object_pool": "Create a new object pool",
    "core_memory_optimizer.message.start_all_memory_monitoring": "Start all memory monitoring",
    "core_memory_optimizer.message.memory_optimization_monitoring": "Memory optimization monitoring started",
    "core_memory_optimizer.message.stop_all_memory_monitoring": "Stop all memory monitoring",
    "core_memory_optimizer.message.memory_optimization_monitoring_1": "Memory optimization monitoring stopped",
    "core_memory_optimizer.message.get_comprehensive_memory_repor": "Get comprehensive memory report",
    "core_memory_optimizer.message.perform_memory_optimization_op": "Perform memory optimization operations",
    "core_memory_optimizer.message.decorator_to_use_object_poolin": "Decorator to use object pooling for a function",
    "core_memory_optimizer.message.decorator_for_memory_efficient": "Decorator for memory-efficient function execution",
    "core_memory_optimizer.message.initialize_memory_optimization": "Initialize memory optimization for Flask app",
    "core_tenant_isolation_example.message.example_implementation_of_the": "\nExample implementation of the Tenant Isolation System\n\nThis file demonstrates how to use the tenant isolation features in your models and API endpoints.\n",
    "core_tenant_isolation_example.message.example_document_model_with_te": "Example document model with tenant isolation.",
    "core_tenant_isolation_example.message.list_all_documents_for_th": "\n    List all documents for the current tenant.\n    Documents are automatically filtered by tenant.\n    ",
    "core_tenant_isolation_example.message.create_a_new_document_for_the": "Create a new document for the current tenant.",
    "core_tenant_isolation_example.message.super_admin_endpoint_to_l": "\n    Super admin endpoint to list documents across all tenants.\n    ",
    "core_tenant_isolation_example.message.super_admin_endpoint_to_l_1": "\n    Super admin endpoint to list documents for a specific tenant.\n    ",
    "core_tenant_isolation_example.message.background_task_that_proc": "\n    Background task that processes documents for tenant 1.\n    All queries within this function are scoped to tenant 1.\n    ",
    "core_tenant_isolation_example.message.example_of_operating_acro": "\n    Example of operating across multiple tenants.\n    ",
    "core_tenant_isolation_example.message.only_super_admins_can_migrate": "Only super admins can migrate between tenants",
    "core_tenant_isolation_example.message.bulk_create_documents_for_the": "Bulk create documents for the current tenant.",
    "core_tenant_isolation_example.message.documents": " documents",
    "core_tenant_isolation_example.message.switch_the_current_tenant": "\n    Switch the current tenant context for users with access to multiple tenants.\n    ",
    "core_tenant_isolation_example.message.search_documents_within_the_cu": "Search documents within the current tenant.",
    "core_tenant_isolation_example.message.example_of_how_to_integra": "\n    Example of how to integrate tenant isolation with existing models.\n    ",
    "error_handling_error_manager.message.convert_to_dictionary_for_seri": "Convert to dictionary for serialization.",
    "error_handling_user_messages.message.types_of_user_messages": "Types of user messages.",
    "error_handling_user_messages.message.if_you_continue_to_have_proble": "If you continue to have problems, please contact support.",
    "error_handling_user_messages.message.check_that_your_email_address": "Check that your email address contains an @ symbol",
    "error_handling_user_messages.message.ensure_there_are_no_spaces_in": "Ensure there are no spaces in your email address",
    "error_handling_user_messages.message.make_sure_you_ve_included_a_do": "Make sure you've included a domain (e.g., @example.com)",
    "error_handling_user_messages.message.your_password_doesn_t_meet_our": "Your password doesn't meet our security requirements.",
    "error_handling_user_messages.message.use_at_least_8_characters": "Use at least 8 characters",
    "error_handling_user_messages.message.include_both_uppercase_and_low": "Include both uppercase and lowercase letters",
    "error_handling_user_messages.message.add_at_least_one_number": "Add at least one number",
    "error_handling_user_messages.message.include_at_least_one_special_c": "Include at least one special character (!@#$%^&*)",
    "error_handling_user_messages.message.la_informaci_n_que_proporcion": "La información que proporcionó no es válida. Por favor verifique su entrada e intente nuevamente.",
    "error_handling_user_messages.message.verifique_que_todos_los_campos": "Verifique que todos los campos requeridos estén completados",
    "error_handling_user_messages.message.si_contin_a_teniendo_problemas": "Si continúa teniendo problemas, por favor contacte al soporte.",
    "error_handling_user_messages.message.por_favor_ingrese_una_direcci": "Por favor ingrese una dirección de correo electrónico válida.",
    "error_handling_user_messages.message.verifique_que_su_direcci_n_de": "Verifique que su dirección de correo electrónico contenga un símbolo @",
    "error_handling_user_messages.message.aseg_rese_de_que_no_haya_espac": "Asegúrese de que no haya espacios en su dirección de correo electrónico",
    "error_handling_user_messages.message.aseg_rese_de_haber_incluido_un": "Asegúrese de haber incluido un dominio (ej: @ejemplo.com)",
    "error_handling_user_messages.message.the_email_or_password_you_ente": "The email or password you entered is incorrect.",
    "error_handling_user_messages.message.check_that_you_ve_entered_your": "Check that you've entered your email address correctly",
    "error_handling_user_messages.message.verify_that_your_password_is_c": "Verify that your password is correct",
    "error_handling_user_messages.message.try_using_the_forgot_password": "Try using the 'Forgot Password' link if you can't remember your password",
    "error_handling_user_messages.message.your_account_has_been_temporar": "Your account has been temporarily locked for security reasons.",
    "error_handling_user_messages.message.wait_15_minutes_before_trying": "Wait 15 minutes before trying to log in again",
    "error_handling_user_messages.message.use_the_forgot_password_link": "Use the 'Forgot Password' link to reset your password",
    "error_handling_user_messages.message.account_lockouts_are_automatic": "Account lockouts are automatically lifted after 15 minutes.",
    "error_handling_user_messages.message.your_session_has_expired_plea": "Your session has expired. Please log in again.",
    "error_handling_user_messages.message.click_the_login_button_to_sign": "Click the login button to sign in again",
    "error_handling_user_messages.message.el_correo_electr_nico_o_la_con": "El correo electrónico o la contraseña que ingresó es incorrecta.",
    "error_handling_user_messages.message.verifique_que_haya_ingresado_s": "Verifique que haya ingresado su dirección de correo electrónico correctamente",
    "error_handling_user_messages.message.verifique_que_su_contrase_a_se": "Verifique que su contraseña sea correcta",
    "error_handling_user_messages.message.intente_usar_el_enlace_olvid": "Intente usar el enlace 'Olvidé mi contraseña' si no puede recordar su contraseña",
    "error_handling_user_messages.message.su_sesi_n_ha_expirado_por_fav": "Su sesión ha expirado. Por favor inicie sesión nuevamente.",
    "error_handling_user_messages.message.haga_clic_en_el_bot_n_de_inici": "Haga clic en el botón de inicio de sesión para ingresar nuevamente",
    "error_handling_user_messages.message.sus_datos_han_sido_guardados_y": "Sus datos han sido guardados y estarán disponibles después de iniciar sesión",
    "error_handling_user_messages.message.we_re_experiencing_technical_d": "We're experiencing technical difficulties. Please try again in a few moments.",
    "error_handling_user_messages.message.wait_a_few_minutes_and_try_aga": "Wait a few minutes and try again",
    "error_handling_user_messages.message.clear_your_browser_cache_if_th": "Clear your browser cache if the problem persists",
    "error_handling_user_messages.message.our_technical_team_has_been_no": "Our technical team has been notified and is working to resolve this issue.",
    "error_handling_user_messages.message.this_service_is_temporarily_un": "This service is temporarily unavailable. We're working to restore it as quickly as possible.",
    "error_handling_user_messages.message.try_again_in_a_few_minutes": "Try again in a few minutes",
    "error_handling_user_messages.message.we_apologize_for_the_inconveni": "We apologize for the inconvenience.",
    "error_handling_user_messages.message.we_re_having_trouble_connectin": "We're having trouble connecting to our servers. Please check your internet connection.",
    "error_handling_user_messages.message.check_your_internet_connection": "Check your internet connection",
    "error_handling_user_messages.message.try_refreshing_the_page": "Try refreshing the page",
    "error_handling_user_messages.message.disable_any_vpn_or_proxy_conne": "Disable any VPN or proxy connections temporarily",
    "error_handling_user_messages.message.estamos_experimentando_dificul": "Estamos experimentando dificultades técnicas. Por favor intente nuevamente en unos momentos.",
    "error_handling_user_messages.message.espere_unos_minutos_e_intente": "Espere unos minutos e intente nuevamente",
    "error_handling_user_messages.message.limpie_la_cach_de_su_navegado": "Limpie la caché de su navegador si el problema persiste",
    "error_handling_user_messages.message.nuestro_equipo_t_cnico_ha_sido": "Nuestro equipo técnico ha sido notificado y está trabajando para resolver este problema.",
    "error_handling_user_messages.message.tenemos_problemas_para_conecta": "Tenemos problemas para conectarnos a nuestros servidores. Por favor verifique su conexión a internet.",
    "error_handling_user_messages.message.verifique_su_conexi_n_a_intern": "Verifique su conexión a internet",
    "error_handling_user_messages.message.intente_actualizar_la_p_gina": "Intente actualizar la página",
    "error_handling_user_messages.message.desactive_temporalmente_cualqu": "Desactive temporalmente cualquier conexión VPN o proxy",
    "error_handling_user_messages.message.try_the_action_again": "Try the action again",
    "error_handling_user_messages.message.contact_support_if_the_problem": "Contact support if the problem continues",
    "error_handling_user_messages.message.intente_la_acci_n_nuevamente": "Intente la acción nuevamente",
    "error_handling_user_messages.message.contacte_al_soporte_si_el_prob": "Contacte al soporte si el problema continúa",
    "error_handling_user_messages.message.message_mappings_for_locale": " message mappings for locale: ",
    "error_handling_user_messages.message.map_an_exception_to_a_user_fri": "Map an exception to a user-friendly message.",
    "error_handling_user_messages.message.get_list_of_available_locales": "Get list of available locales.",
    "error_handling_user_messages.message.convert_usermessage_to_diction": "Convert UserMessage to dictionary.",
    "error_handling_user_messages.message.convert_usermessage_to_json_st": "Convert UserMessage to JSON string.",
    "error_handling_user_messages.message.div_class_user_message": "<div class=\"user-message ",
    "error_handling_user_messages.message.h4": "</h4>",
    "error_handling_user_messages.message.p_class_message": "<p class=\"message\">",
    "error_handling_user_messages.message.p": "</p>",
    "error_handling_user_messages.message.div_class_suggested_actions": "<div class=\"suggested-actions\">",
    "error_handling_user_messages.message.h5_what_you_can_do_h5": "<h5>What you can do:</h5>",
    "error_handling_user_messages.message.ul": "<ul>",
    "error_handling_user_messages.message.li": "<li>",
    "error_handling_user_messages.message.li_1": "</li>",
    "error_handling_user_messages.message.ul_1": "</ul>",
    "error_handling_user_messages.message.div": "</div>",
    "error_handling_user_messages.message.div_class_support_info": "<div class=\"support-info\">",
    "error_handling_user_messages.message.div_1": "</div>",
    "error_handling_user_messages.message.div_class_technical_details": "<div class=\"technical-details\"><strong>Technical Details:</strong> ",
    "error_handling_user_messages.message.div_2": "</div>",
    "error_handling_user_messages.message.div_3": "</div>",
    "error_handling_config.message.configuration_file_not_found": "Configuration file not found: ",
    "error_handling_config.message.get_environment_variables_for": "Get environment variables for a configuration section.",
    "error_handling_config.message.merge_new_configuration_with_e": "Merge new configuration with existing configuration.",
    "error_handling_config.message.get_the_current_configuration": "Get the current configuration.",
    "error_handling_config.message.get_circuit_breaker_configurat": "Get circuit breaker configuration.",
    "error_handling_config.message.get_user_messages_configuratio": "Get user messages configuration.",
    "error_handling_config.message.get_a_custom_setting": "Get a custom setting.",
    "error_handling_config.message.set_a_custom_setting": "Set a custom setting.",
    "error_handling_config.message.register_a_callback_to_be_call": "Register a callback to be called when configuration changes.",
    "error_handling_config.message.notify_all_registered_watchers": "Notify all registered watchers about configuration changes.",
    "error_handling_config.message.email_alerts_enabled_but_no_re": "Email alerts enabled but no recipients configured",
    "error_handling_config.message.slack_alerts_enabled_but_no_we": "Slack alerts enabled but no webhook URL configured",
    "error_handling_config.message.webhook_alerts_enabled_but_no": "Webhook alerts enabled but no webhook URL configured",
    "error_handling_config.message.convert_configuration_to_dicti": "Convert configuration to dictionary.",
    "error_handling_retry_manager.message.jitter_types_for_randomizing_r": "Jitter types for randomizing retry delays.",
    "error_handling_retry_manager.message.configuration_for_retry_behavi": "Configuration for retry behavior.",
    "error_handling_retry_manager.message.statistics_for_retry_operation": "Statistics for retry operations.",
    "error_handling_retry_manager.message.manager_for_retry_operations_w": "Manager for retry operations with various strategies.",
    "error_handling_retry_manager.message.calculate_delay_for_the_given": "Calculate delay for the given attempt number.",
    "error_handling_retry_manager.message.calculate_fibonacci_number_wit": "Calculate fibonacci number with memoization.",
    "error_handling_retry_manager.message.apply_jitter_to_the_calculated": "Apply jitter to the calculated delay.",
    "error_handling_retry_manager.message.record_a_retry_attempt_for_sta": "Record a retry attempt for statistics.",
    "error_handling_retry_manager.message.execute_a_function_with_retry": "Execute a function with retry logic.",
    "error_handling_retry_manager.message.succeeded_on_attempt": "' succeeded on attempt ",
    "error_handling_retry_manager.message.after": " after ",
    "error_handling_retry_manager.message.s_before_attempt": "s before attempt ",
    "error_handling_retry_manager.message.execute_an_async_function_with": "Execute an async function with retry logic.",
    "error_handling_retry_manager.message.succeeded_on_attempt_1": "' succeeded on attempt ",
    "error_handling_retry_manager.message.after_1": " after ",
    "error_handling_retry_manager.message.s_before_attempt_1": "s before attempt ",
    "error_handling_retry_manager.message.get_statistics_for_a_specific": "Get statistics for a specific operation.",
    "error_handling_retry_manager.message.get_statistics_for_all_operati": "Get statistics for all operations.",
    "error_handling_retry_manager.message.clear_statistics_for_an_operat": "Clear statistics for an operation or all operations.",
    "error_handling_retry_manager.message.decorator_to_add_retry_behavio": "Decorator to add retry behavior to a function.",
    "error_handling_error_recovery.message.types_of_recovery_strategies": "Types of recovery strategies.",
    "error_handling_error_recovery.message.priority_levels_for_recovery_s": "Priority levels for recovery strategies.",
    "error_handling_error_recovery.message.represents_a_recovery_action_t": "Represents a recovery action to be executed.",
    "error_handling_error_recovery.message.check_if_this_recovery_action": "Check if this recovery action matches the given exception.",
    "error_handling_error_recovery.message.base_class_for_recovery_handle": "Base class for recovery handlers.",
    "error_handling_error_recovery.message.check_if_this_handler_can_hand": "Check if this handler can handle the given exception.",
    "error_handling_error_recovery.message.recovery_handler_that_implemen": "Recovery handler that implements retry logic.",
    "error_handling_error_recovery.message.check_if_retry_is_appropriate": "Check if retry is appropriate for this exception.",
    "error_handling_error_recovery.message.attempt_recovery_through_retry": "Attempt recovery through retry.",
    "error_handling_error_recovery.message.no_original_function_provided": "No original function provided",
    "error_handling_error_recovery.message.for": " for ",
    "error_handling_error_recovery.message.recovery_handler_that_provides": "Recovery handler that provides fallback values or functions.",
    "error_handling_error_recovery.message.fallback_can_handle_any_except": "Fallback can handle any exception.",
    "error_handling_error_recovery.message.attempt_recovery_through_fallb": "Attempt recovery through fallback.",
    "error_handling_error_recovery.message.using_fallback_function_for": "Using fallback function for ",
    "error_handling_error_recovery.message.using_fallback_value_for": "Using fallback value for ",
    "error_handling_error_recovery.message.recovery_handler_that_falls_ba": "Recovery handler that falls back to cached values.",
    "error_handling_error_recovery.message.check_if_we_have_cached_data_a": "Check if we have cached data available.",
    "error_handling_error_recovery.message.store_value_in_cache": "Store value in cache.",
    "error_handling_error_recovery.message.attempt_recovery_through_cache": "Attempt recovery through cached value.",
    "error_handling_error_recovery.message.no_cache_key_provided": "No cache key provided",
    "error_handling_error_recovery.message.using_cached_value_for": "Using cached value for ",
    "error_handling_error_recovery.message.recovery_handler_that_provides_1": "Recovery handler that provides graceful degradation.",
    "error_handling_error_recovery.message.check_if_graceful_degradation": "Check if graceful degradation is available.",
    "error_handling_error_recovery.message.attempt_recovery_through_degra": "Attempt recovery through degraded functionality.",
    "error_handling_error_recovery.message.using_degraded_functionality_f": "Using degraded functionality for ",
    "error_handling_error_recovery.message.recovery_handler_that_switches": "Recovery handler that switches to alternative services.",
    "error_handling_error_recovery.message.check_if_alternative_services": "Check if alternative services are available.",
    "error_handling_error_recovery.message.attempt_recovery_through_alter": "Attempt recovery through alternative service.",
    "error_handling_error_recovery.message.setup_default_recovery_handler": "Setup default recovery handlers.",
    "error_handling_error_recovery.message.register_a_recovery_handler": "Register a recovery handler.",
    "error_handling_error_recovery.message.unregister_a_recovery_handler": "Unregister a recovery handler.",
    "error_handling_error_recovery.message.attempting_recovery_with_handl": "Attempting recovery with handler: ",
    "error_handling_error_recovery.message.raised_unexpected_exception": " raised unexpected exception: ",
    "error_handling_error_recovery.message.increment_a_statistic_for_a_ha": "Increment a statistic for a handler.",
    "error_handling_error_recovery.message.get_names_of_all_registered_ha": "Get names of all registered handlers.",
    "error_handling_error_recovery.message.decorator_to_add_fallback_beha": "Decorator to add fallback behavior to a function.",
    "error_handling_circuit_breaker.message.circuit_breaker_implementation": "Circuit breaker implementation for fault tolerance.",
    "error_handling_circuit_breaker.message.get_current_circuit_state": "Get current circuit state.",
    "error_handling_circuit_breaker.message.check_if_circuit_is_closed_no": "Check if circuit is closed (normal operation).",
    "error_handling_circuit_breaker.message.check_if_circuit_is_open_bloc": "Check if circuit is open (blocking calls).",
    "error_handling_circuit_breaker.message.check_if_circuit_is_half_open": "Check if circuit is half-open (testing recovery).",
    "error_handling_circuit_breaker.message.transition_circuit_to_open_sta": "Transition circuit to open state.",
    "error_handling_circuit_breaker.message.opened_due_to": "' opened due to ",
    "error_handling_circuit_breaker.message.transition_circuit_to_half_ope": "Transition circuit to half-open state.",
    "error_handling_circuit_breaker.message.transitioned_to_half_open_fo": "' transitioned to half-open for testing",
    "error_handling_circuit_breaker.message.transition_circuit_to_closed_s": "Transition circuit to closed state.",
    "error_handling_circuit_breaker.message.execute_a_function_with_circui": "Execute a function with circuit breaker protection.",
    "error_handling_circuit_breaker.message.s": "s: ",
    "error_handling_circuit_breaker.message.decorator_interface_for_circui": "Decorator interface for circuit breaker.",
    "error_handling_circuit_breaker.message.get_circuit_breaker_statistics": "Get circuit breaker statistics.",
    "error_handling_circuit_breaker.message.reset_circuit_breaker_to_close": "Reset circuit breaker to closed state.",
    "error_handling_circuit_breaker.message.manually_reset": "' manually reset",
    "error_handling_circuit_breaker.message.force_circuit_breaker_to_open": "Force circuit breaker to open state.",
    "error_handling_circuit_breaker.message.manually_opened": "' manually opened",
    "error_handling_circuit_breaker.message.manager_for_multiple_circuit_b": "Manager for multiple circuit breakers.",
    "error_handling_circuit_breaker.message.get_or_create_a_circuit_breake": "Get or create a circuit breaker.",
    "error_handling_circuit_breaker.message.get_statistics_for_all_circuit": "Get statistics for all circuit breakers.",
    "error_handling_circuit_breaker.message.reset_all_circuit_breakers": "Reset all circuit breakers.",
    "error_handling_circuit_breaker.message.reset_all_circuit_breakers_1": "Reset all circuit breakers",
    "error_handling_circuit_breaker.message.get_names_of_all_registered_ci": "Get names of all registered circuit breakers.",
    "error_handling_circuit_breaker.message.decorator_to_add_circuit_break": "Decorator to add circuit breaker protection to a function.",
    "error_handling_examples.message.user_123": "user_123",
    "error_handling_examples.message.req_456": "req_456",
    "error_handling_examples.message.payment_service_unavailable_c": "Payment service unavailable (call #",
    "error_handling_examples.message.example_of_using_circuit_break": "Example of using circuit breaker pattern for external services.",
    "error_handling_examples.message.circuit_breaker_example": "\n=== Circuit Breaker Example ===",
    "error_handling_examples.message.succeeded": " succeeded: ",
    "error_handling_examples.message.blocked_by_circuit_breaker": " blocked by circuit breaker: ",
    "error_handling_examples.message.circuit_breaker_stats": "\nCircuit Breaker Stats:",
    "error_handling_examples.message.database_connection_timeout_q": "Database connection timeout (query #",
    "error_handling_examples.message.example_com": "@example.com",
    "error_handling_examples.message.example_of_different_retry_str": "Example of different retry strategies.",
    "error_handling_examples.message.retry_mechanisms_example": "\n=== Retry Mechanisms Example ===",
    "error_handling_examples.message.attempting_to_query_user": "  Attempting to query user ",
    "error_handling_examples.message.attempting_to_query_user_1": "  Attempting to query user ",
    "error_handling_examples.message.testing_exponential_backoff": "\nTesting exponential backoff:",
    "error_handling_examples.message.testing_linear_backoff": "\nTesting linear backoff:",
    "error_handling_examples.message.database_query_timeout": "Database query timeout #",
    "error_handling_examples.message.current_metrics": "\nCurrent metrics:",
    "error_handling_examples.message.alerts_triggered": "\nAlerts triggered: ",
    "error_handling_examples.message.": "  - ",
    "error_handling_examples.message.user_friendly_messages_ex": "\n=== User-Friendly Messages Example ===",
    "error_handling_examples.message.your_payment_was_declined_by_y": "Your payment was declined by your bank.",
    "error_handling_examples.message.check_that_your_card_has_suffi": "Check that your card has sufficient funds",
    "error_handling_examples.message.verify_your_card_details_are_c": "Verify your card details are correct",
    "error_handling_examples.message.try_a_different_payment_method": "Try a different payment method",
    "error_handling_examples.message.contact_your_bank_if_the_probl": "Contact your bank if the problem persists",
    "error_handling_examples.message.if_you_need_help_contact_our": "If you need help, contact our support team with reference code: PAYMENT_DECLINED",
    "error_handling_examples.message.su_pago_fue_rechazado_por_su_b": "Su pago fue rechazado por su banco.",
    "error_handling_examples.message.verifique_que_su_tarjeta_tenga": "Verifique que su tarjeta tenga fondos suficientes",
    "error_handling_examples.message.verifique_que_los_detalles_de": "Verifique que los detalles de su tarjeta sean correctos",
    "error_handling_examples.message.intente_con_un_m_todo_de_pago": "Intente con un método de pago diferente",
    "error_handling_examples.message.contacte_a_su_banco_si_el_prob": "Contacte a su banco si el problema persiste",
    "error_handling_examples.message.si_necesita_ayuda_contacte_a": "Si necesita ayuda, contacte a nuestro equipo de soporte con el código de referencia: PAYMENT_DECLINED",
    "error_handling_examples.message.testing": "\nTesting: ",
    "error_handling_examples.message.actions": "    Actions: ",
    "error_handling_examples.message.acciones": "    Acciones: ",
    "error_handling_examples.message.profile_service_temporarily_un": "Profile service temporarily unavailable",
    "error_handling_examples.message.https_example_com_avatars": "https://example.com/avatars/",
    "error_handling_examples.message.get_cached_profile_data": "Get cached profile data.",
    "error_handling_examples.message.attempting_to_get_profile_fo": "  Attempting to get profile for user ",
    "error_handling_examples.message.user_profile_123": "user_profile_123",
    "error_handling_examples.message.attempting_to_get_profile_fo_1": "  Attempting to get profile for user ",
    "error_handling_examples.message.using_basic_profile_fallback": "  Using basic profile fallback for user ",
    "error_handling_examples.message.attempting_to_get_profile_fo_2": "  Attempting to get profile for user ",
    "error_handling_examples.message.testing_fallback_to_default_v": "\nTesting fallback to default values:",
    "error_handling_examples.message.testing_fallback_to_alternati": "\nTesting fallback to alternative function:",
    "error_handling_examples.message.second_call_with_cache_fallbac": "Second call with cache fallback: ",
    "error_handling_examples.message.async_api_call": "  Async API call #",
    "error_handling_examples.message.to": " to ",
    "error_handling_examples.message.flask_integration_example": "\n=== Flask Integration Example ===",
    "error_handling_examples.message.get_api_health": "  GET /api/health",
    "error_handling_examples.message.flask_not_available_skipping": "Flask not available - skipping Flask integration example",
    "error_handling_examples.message.example_of_configuration_manag": "Example of configuration management.",
    "error_handling_examples.message.configuration_management": "\n=== Configuration Management Example ===",
    "error_handling_examples.message.current_configuration": "\nCurrent configuration:",
    "error_handling_examples.message.configuration_exported_json": "\nConfiguration exported (JSON): ",
    "error_handling_examples.message.characters": " characters",
    "error_handling_examples.message.run_all_examples_in_sequence": "Run all examples in sequence.",
    "error_handling_examples.message.running_async_example": "\nRunning async example...",
    "error_handling_examples.message.key_takeaways": "\nKey takeaways:",
    "error_handling_examples.message.1_use_decorators_for_common_p": "1. Use decorators for common patterns (circuit breaker, retry, fallback)",
    "error_handling_examples.message.2_configure_monitoring_and_al": "2. Configure monitoring and alerting for production systems",
    "error_handling_exceptions.message.raised_when_circuit_breaker_is": "Raised when circuit breaker is open.",
    "error_handling_exceptions.message.circuit_breaker_is_open_for_se": "Circuit breaker is open for service: ",
    "error_handling_exceptions.message.raised_when_all_retry_attempts": "Raised when all retry attempts are exhausted.",
    "error_handling_exceptions.message.retry_exhausted_for_operation": "Retry exhausted for operation '",
    "error_handling_exceptions.message.after": "' after ",
    "error_handling_exceptions.message.attempts": " attempts",
    "error_handling_exceptions.message.alert": " alert",
    "error_handling_exceptions.message.to": " to ",
    "error_handling_error_monitor.message.configuration_for_an_alert_rul": "Configuration for an alert rule.",
    "error_handling_error_monitor.message.manages_alert_rules_and_delive": "Manages alert rules and delivery.",
    "error_handling_error_monitor.message.setup_default_alert_handlers": "Setup default alert handlers.",
    "error_handling_error_monitor.message.": "]: ",
    "error_handling_error_monitor.message.register_a_custom_alert_handle": "Register a custom alert handler for a channel.",
    "error_handling_error_monitor.message.registered_alert_handler_for_c": "Registered alert handler for channel: ",
    "error_handling_error_monitor.message.add_an_alert_rule": "Add an alert rule.",
    "error_handling_error_monitor.message.remove_an_alert_rule": "Remove an alert rule.",
    "error_handling_error_monitor.message.enable_an_alert_rule": "Enable an alert rule.",
    "error_handling_error_monitor.message.disable_an_alert_rule": "Disable an alert rule.",
    "error_handling_error_monitor.message.check_all_alert_rules_against": "Check all alert rules against current metrics.",
    "error_handling_error_monitor.message._1": "': ",
    "error_handling_error_monitor.message.send_an_alert_through_configur": "Send an alert through configured channels.",
    "error_handling_error_monitor.message.no_handler_registered_for_aler": "No handler registered for alert channel: ",
    "error_handling_error_monitor.message.get_alert_history_for_the_spec": "Get alert history for the specified time period.",
    "error_handling_error_monitor.message.setup_default_alert_rules_for": "Setup default alert rules for common scenarios.",
    "error_handling_error_monitor.message.add_a_custom_alert_rule": "Add a custom alert rule.",
    "error_handling_error_monitor.message.remove_an_alert_rule_1": "Remove an alert rule.",
    "error_handling_error_monitor.message.register_a_custom_alert_handle_1": "Register a custom alert handler.",
    "error_handling_error_monitor.message.check_if_monitoring_is_enabled": "Check if monitoring is enabled.",
    "error_handling_middleware.message.initialize_the_middleware_with": "Initialize the middleware with a Flask app.",
    "error_handling_middleware.message.handle_all_uncaught_exceptions": "Handle all uncaught exceptions.",
    "error_handling_middleware.message.execute_before_each_request": "Execute before each request.",
    "error_handling_middleware.message.execute_after_each_request": "Execute after each request.",
    "error_handling_middleware.message.determine_http_status_code_for": "Determine HTTP status code for an exception.",
    "error_handling_middleware.message.generate_a_unique_request_id": "Generate a unique request ID.",
    "error_handling_middleware.message.get_client_ip_address": "Get client IP address.",
    "error_handling_middleware.message.redacted": "[REDACTED]",
    "error_handling_middleware.message.redacted_1": "[REDACTED]",
    "config_endpoint_mapping.message.endpoint_mapping_configuration": "Endpoint mapping configuration for gradual migration to refactored services.",
    "config_endpoint_mapping.message.configure_authentication": "\n    Configure authentication endpoints based on refactoring stage.\n    \n    Args:\n        app: Flask application instance\n        use_refactored: Whether to use refactored endpoints\n    ",
    "config_endpoint_mapping.message.using_refactored_authenticatio": "Using refactored authentication endpoints at /api/v2/auth",
    "config_endpoint_mapping.message.using_original_authentication": "Using original authentication endpoints at /api/auth",
    "config_endpoint_mapping.message.get_feature_flag_value": "Get feature flag value.",
    "config_endpoint_mapping.message.set_feature_flag_value": "Set feature flag value.",
    "security_rate_limiting.message.advanced_rate_limiting_and_dd": "\nAdvanced rate limiting and DDoS protection.\n",
    "security_rate_limiting.message.advanced_rate_limiting_service": "Advanced rate limiting service with DDoS protection.",
    "security_rate_limiting.message.initialize_rate_limiting_servi": "Initialize rate limiting service.",
    "security_rate_limiting.message.initialize_rate_limiting_for_f": "Initialize rate limiting for Flask app.",
    "security_rate_limiting.message.get_real_client_ip_address_con": "Get real client IP address considering proxies.",
    "security_rate_limiting.message.127_0_0_1": "127.0.0.1",
    "security_rate_limiting.message.generate_rate_limit_key_based": "Generate rate limit key based on configuration.",
    "security_rate_limiting.message.rate_limit": "rate_limit:",
    "security_rate_limiting.message.get_current_user_id": "Get current user ID.",
    "security_rate_limiting.message.check_if_request_is_allowed_ba": "Check if request is allowed based on rate limit.",
    "security_rate_limiting.message.check_rate_limit_using_redis": "Check rate limit using Redis.",
    "security_rate_limiting.message.burst": ":burst",
    "security_rate_limiting.message.check_rate_limit_using_memory": "Check rate limit using memory store.",
    "security_rate_limiting.message.middleware_to_check_rate_limit": "Middleware to check rate limits for requests.",
    "security_rate_limiting.message.ip_temporarily_blocked_due_to": "IP temporarily blocked due to suspicious activity",
    "security_rate_limiting.message.rate_limit_exceeded_for": "Rate limit exceeded for ",
    "security_rate_limiting.message.on": " on ",
    "security_rate_limiting.message.requests": " requests",
    "security_rate_limiting.message.get_rate_limits_configured_for": "Get rate limits configured for specific endpoint.",
    "security_rate_limiting.message.100_hour": "100/hour",
    "security_rate_limiting.message.auth_reset_password": "auth.reset_password",
    "security_rate_limiting.message.api_upload_file": "api.upload_file",
    "security_rate_limiting.message.api_send_email": "api.send_email",
    "security_rate_limiting.message.api": "api.",
    "security_rate_limiting.message.1000_hour": "1000/hour",
    "security_rate_limiting.message.parse_rate_limit_string_like": "Parse rate limit string like '100/hour' into RateLimit object.",
    "security_rate_limiting.message.track_and_respond_to_suspiciou": "Track and respond to suspicious activity patterns.",
    "security_rate_limiting.message.due_to_repeated_violations": " due to repeated violations",
    "security_rate_limiting.message.blocked_ip": "blocked_ip:",
    "security_rate_limiting.message.track_request_patterns_for_ano": "Track request patterns for anomaly detection.",
    "security_rate_limiting.message.pattern": "pattern:",
    "security_rate_limiting.message.requests_minute": " requests/minute",
    "security_rate_limiting.message.schedule_cleanup_of_old_data": "Schedule cleanup of old data.",
    "security_rate_limiting.message.manually_unblock_an_ip_address": "Manually unblock an IP address.",
    "security_rate_limiting.message.blocked_ip_1": "blocked_ip:",
    "security_rate_limiting.message.get_current_rate_limit_status": "Get current rate limit status for IP.",
    "security_rate_limiting.message.decorator_for_applying_rate_li": "Decorator for applying rate limits to specific routes.",
    "security_password_policy.message.": "!@#$%^&*()_+-=[]{}|;:,.<>?",
    "security_password_policy.message.abc123": "abc123",
    "security_password_policy.message.password123": "password123",
    "security_password_policy.message.aa123456": "aa123456",
    "security_password_policy.message.password1": "password1",
    "security_password_policy.message.common_passwords_txt": "common_passwords.txt",
    "security_password_policy.message.characters_long": " characters long",
    "security_password_policy.message.characters_long_1": " characters long",
    "security_password_policy.message.a_z": "[A-Z]",
    "security_password_policy.message.a_z_1": "[a-z]",
    "security_password_policy.message.unique_characters": " unique characters",
    "security_password_policy.message.consecutive_identical_charact": " consecutive identical characters",
    "security_password_policy.message.consecutive_sequential_charac": " consecutive sequential characters",
    "security_password_policy.message.password_is_too_common_and_eas": "Password is too common and easily guessable",
    "security_password_policy.message.password_complexity_score": "Password complexity score (",
    "security_password_policy.message.check_for_excessive_character": "Check for excessive character repetition.",
    "security_password_policy.message.check_for_sequential_character": "Check for sequential characters (abc, 123, etc.).",
    "security_password_policy.message.check_if_password_is_in_common": "Check if password is in common passwords list.",
    "security_password_policy.message.check_for_common_english_dicti": "Check for common English dictionary words.",
    "security_password_policy.message.check_for_keyboard_patterns": "Check for keyboard patterns.",
    "security_password_policy.message.calculate_password_complexity": "Calculate password complexity score (0-100).",
    "security_password_policy.message.a_z_2": "[a-z]",
    "security_password_policy.message.a_z_3": "[A-Z]",
    "security_password_policy.message._1": "[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]",
    "security_password_policy.message.a_z_4": "[a-z]",
    "security_password_policy.message.a_z_5": "[A-Z]",
    "security_password_policy.message._2": "[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]",
    "security_password_policy.message.check_if_password_has_been_pwn": "Check if password has been pwned using HaveIBeenPwned API.",
    "security_password_policy.message.pwned_password_check_timed_out": "Pwned password check timed out",
    "security_password_policy.message.query_the_haveibeenpwned_api": "Query the HaveIBeenPwned API.",
    "security_password_policy.message.https_api_pwnedpasswords_com": "https://api.pwnedpasswords.com/range/",
    "security_password_policy.message.generate_a_secure_password_tha": "Generate a secure password that meets policy requirements.",
    "security_password_policy.message.check_if_password_has_expired": "Check if password has expired.",
    "security_password_policy.message.check_if_password_can_be_chang": "Check if password can be changed (minimum age check).",
    "security_password_policy.message.check_if_password_was_used_rec": "Check if password was used recently.",
    "security_password_policy.message.get_detailed_feedback_on_passw": "Get detailed feedback on password strength.",
    "security_password_policy.message.a_z_6": "[A-Z]",
    "security_password_policy.message.a_z_7": "[a-z]",
    "security_password_policy.message.get_suggestions_for_improving": "Get suggestions for improving password.",
    "security_password_policy.message.increase_length_to_at_least": "Increase length to at least ",
    "security_password_policy.message.characters": " characters",
    "security_password_policy.message.a_z_8": "[A-Z]",
    "security_password_policy.message.a_z_9": "[a-z]",
    "security_password_policy.message.use_more_unique_characters": "Use more unique characters",
    "security_encryption_service.message.encryption_and_cryptographic": "\nEncryption and cryptographic services for data protection.\n",
    "security_encryption_service.message.comprehensive_encryption_servi": "Comprehensive encryption service for data protection.",
    "security_encryption_service.message.initialize_encryption_service": "Initialize encryption service with master key.",
    "security_encryption_service.message.generate_a_new_encryption_key": "Generate a new encryption key.",
    "security_encryption_service.message.encrypt_data_using_fernet_symm": "Encrypt data using Fernet symmetric encryption.",
    "security_encryption_service.message.decrypt_data_using_fernet_symm": "Decrypt data using Fernet symmetric encryption.",
    "security_encryption_service.message.hash_password_using_argon2": "Hash password using Argon2.",
    "security_encryption_service.message.verify_password_against_argon2": "Verify password against Argon2 hash.",
    "security_encryption_service.message.hash_password_using_bcrypt_al": "Hash password using bcrypt (alternative/legacy method).",
    "security_encryption_service.message.verify_password_against_bcrypt": "Verify password against bcrypt hash.",
    "security_encryption_service.message.generate_cryptographically_sec": "Generate cryptographically secure random token.",
    "security_encryption_service.message.generate_cryptographically_sec_1": "Generate cryptographically secure salt.",
    "security_encryption_service.message.sha256": "sha256",
    "security_encryption_service.message.hash_data_using_specified_algo": "Hash data using specified algorithm.",
    "security_encryption_service.message.sha256_1": "sha256",
    "security_encryption_service.message.sha512": "sha512",
    "security_encryption_service.message.blake2b": "blake2b",
    "security_encryption_service.message.encrypt_sensitive_database_fie": "Encrypt sensitive database field with additional context.",
    "security_encryption_service.message.decrypt_sensitive_database_fie": "Decrypt sensitive database field with additional context.",
    "security_encryption_service.message.generate_rsa_key_pair_for_asym": "Generate RSA key pair for asymmetric encryption.",
    "security_encryption_service.message.encrypt_data_with_rsa_public_k": "Encrypt data with RSA public key.",
    "security_encryption_service.message.decrypt_data_with_rsa_private": "Decrypt data with RSA private key.",
    "security_encryption_service.message.constant_time_string_compariso": "Constant-time string comparison to prevent timing attacks.",
    "security_encryption_service.message.rotate_encryption_key_for_exis": "Rotate encryption key for existing encrypted data.",
    "security_security_headers.message.security_headers_middleware_f": "\nSecurity headers middleware for comprehensive HTTP security.\n",
    "security_security_headers.message.security_headers_middleware_fo": "Security headers middleware for Flask applications.",
    "security_security_headers.message.initialize_security_headers_mi": "Initialize security headers middleware.",
    "security_security_headers.message.initialize_security_headers_fo": "Initialize security headers for Flask app.",
    "security_security_headers.message.add_comprehensive_security_hea": "Add comprehensive security headers to response.",
    "security_security_headers.message.no_cache": "no-cache",
    "security_security_headers.message.max_age_31536000_includesubdo": "max-age=31536000; includeSubDomains; preload",
    "security_security_headers.message.multipart_form_data": "multipart/form-data",
    "security_security_headers.message.bytes": " bytes",
    "security_security_headers.message.suspicious_or_missing_user_age": "Suspicious or missing User-Agent",
    "security_security_headers.message.": "\\.\\./",
    "security_security_headers.message.2e_2e_2f": "%2e%2e%2f",
    "security_security_headers.message.script": "<script",
    "security_security_headers.message.javascript": "javascript:",
    "security_security_headers.message.vbscript": "vbscript:",
    "security_security_headers.message.data": "data:",
    "security_security_headers.message.x": "\\\\x",
    "security_security_headers.message.00": "%00",
    "security_security_headers.message.generate_content_security_poli": "Generate Content Security Policy header with nonce support.",
    "security_security_headers.message.default_src_self": "default-src 'self'",
    "security_security_headers.message.script_src_self_unsafe_inli": "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net",
    "security_security_headers.message.style_src_self_unsafe_inlin": "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com",
    "security_security_headers.message.font_src_self_https_fonts": "font-src 'self' https://fonts.gstatic.com",
    "security_security_headers.message.img_src_self_data_https": "img-src 'self' data: https:",
    "security_security_headers.message.connect_src_self_wss_https": "connect-src 'self' wss: https:",
    "security_security_headers.message.object_src_none": "object-src 'none'",
    "security_security_headers.message.base_uri_self": "base-uri 'self'",
    "security_security_headers.message.form_action_self": "form-action 'self'",
    "security_security_headers.message.frame_ancestors_none": "frame-ancestors 'none'",
    "security_security_headers.message.upgrade_insecure_requests": "upgrade-insecure-requests",
    "security_security_headers.message.script_src_self_nonce": "script-src 'self' 'nonce-",
    "security_security_headers.message.https_cdn_jsdelivr_net": "' https://cdn.jsdelivr.net",
    "security_security_headers.message.https": "https://",
    "security_security_headers.message.http": "http://",
    "security_security_headers.message.https_1": "https://",
    "security_security_headers.message.http_1": "http://",
    "security_security_headers.message.get_x_frame_options_header_val": "Get X-Frame-Options header value.",
    "security_security_headers.message.get_permissions_policy_header": "Get Permissions-Policy header for modern browsers.",
    "security_security_headers.message.geolocation": "geolocation=()",
    "security_security_headers.message.microphone": "microphone=()",
    "security_security_headers.message.camera": "camera=()",
    "security_security_headers.message.payment": "payment=()",
    "security_security_headers.message.usb": "usb=()",
    "security_security_headers.message.magnetometer": "magnetometer=()",
    "security_security_headers.message.gyroscope": "gyroscope=()",
    "security_security_headers.message.accelerometer": "accelerometer=()",
    "security_security_headers.message.ambient_light_sensor": "ambient-light-sensor=()",
    "security_security_headers.message.autoplay": "autoplay=()",
    "security_security_headers.message.encrypted_media": "encrypted-media=()",
    "security_security_headers.message.fullscreen_self": "fullscreen=(self)",
    "security_security_headers.message.picture_in_picture": "picture-in-picture=()",
    "security_security_headers.message.add_http_strict_transport_secu": "Add HTTP Strict Transport Security header.",
    "security_security_headers.message.max_age": "max-age=",
    "security_security_headers.message.includesubdomains": "; includeSubDomains",
    "security_security_headers.message.preload": "; preload",
    "security_security_headers.message.add_report_uri_to_csp_header_f": "Add report-uri to CSP header for violation reporting.",
    "security_security_headers.message.report_uri": "; report-uri ",
    "security_security_headers.message.check_if_request_is_in_a_secur": "Check if request is in a secure context (HTTPS).",
    "security_csrf_protection.message.csrf_cross_site_request_forg": "\nCSRF (Cross-Site Request Forgery) protection implementation.\n",
    "security_csrf_protection.message.csrf_protection_service_for_fl": "CSRF protection service for Flask applications.",
    "security_csrf_protection.message.initialize_csrf_protection_for": "Initialize CSRF protection for Flask app.",
    "security_csrf_protection.message.generate_csrf_token_for_the_cu": "Generate CSRF token for the current session.",
    "security_csrf_protection.message.secret_key_not_configured": "Secret key not configured",
    "security_csrf_protection.message.check_if_request_is_an_api_req": "Check if request is an API request.",
    "security_csrf_protection.message.generate_csrf_token_for_specif": "Generate CSRF token for specific user.",
    "security_csrf_protection.message.refresh_csrf_token_in_current": "Refresh CSRF token in current session.",
    "security_csrf_protection.message.generate_token_for_double_subm": "Generate token for double-submit cookie pattern.",
    "security_csrf_protection.message.generate_signed_token_with_cus": "Generate signed token with custom data.",
    "security_csrf_protection.message.decorator_for_explicit_csrf_pr": "Decorator for explicit CSRF protection on specific routes.",
    "security___init__.message.security_module_for_bdc_appli": "\nSecurity module for BDC application.\nProvides comprehensive security hardening utilities and middleware.\n",
    "security_audit_logger.message.comprehensive_audit_logging_a": "\nComprehensive audit logging and security event monitoring.\n",
    "security_audit_logger.message.types_of_security_events_to_lo": "Types of security events to log.",
    "security_audit_logger.message.security_event_data_structure": "Security event data structure.",
    "security_audit_logger.message.comprehensive_audit_logging_se": "Comprehensive audit logging service.",
    "security_audit_logger.message.initialize_audit_logging_for_f": "Initialize audit logging for Flask app.",
    "security_audit_logger.message.setup_specialized_loggers_for": "Setup specialized loggers for different types of events.",
    "security_audit_logger.message.create_log_handlers_for_differ": "Create log handlers for different log types.",
    "security_audit_logger.message.asctime_s_name_s_lev": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    "security_audit_logger.message.logs_audit_log": "logs/audit.log",
    "security_audit_logger.message.logs_security_log": "logs/security.log",
    "security_audit_logger.message.logs_compliance_log": "logs/compliance.log",
    "security_audit_logger.message.log_request_start_and_set_up_t": "Log request start and set up tracking.",
    "security_audit_logger.message.log_any_request_exceptions": "Log any request exceptions.",
    "security_audit_logger.message.generate_unique_request_id": "Generate unique request ID.",
    "security_audit_logger.message.log_a_security_event": "Log a security event.",
    "security_audit_logger.message.for_user": " for user ",
    "security_audit_logger.message.log_data_access_events_for_com": "Log data access events for compliance.",
    "security_audit_logger.message.on": " on ",
    "security_audit_logger.message.on_1": " on ",
    "security_audit_logger.message.log_suspicious_activity_for_se": "Log suspicious activity for security monitoring.",
    "security_audit_logger.message.log_request_start_for_audit_tr": "Log request start for audit trail.",
    "security_audit_logger.message.serialize_security_event_to_js": "Serialize security event to JSON.",
    "security_audit_logger.message.get_client_ip_address": "Get client IP address.",
    "security_audit_logger.message.127_0_0_1": "127.0.0.1",
    "security_audit_logger.message.context_manager_for_auditing_o": "Context manager for auditing operations.",
    "security_audit_logger.message.on_2": " on ",
    "security_audit_logger.message.on_3": " on ",
    "security_audit_logger.message.on_4": " on ",
    "security_audit_logger.message.retrieve_security_events_for_a": "Retrieve security events for analysis.",
    "security_audit_logger.message.generate_security_report_for_t": "Generate security report for the specified period.",
    "security_audit_logger.message.to": " to ",
    "security_security_config.message.enhanced_security_configurati": "\nEnhanced security configuration for production deployment.\n",
    "security_security_config.message.enhanced_security_configuratio": "Enhanced security configuration for production.",
    "security_security_config.message.": "!@#$%^&*()_+-=[]{}|;:,.<>?",
    "security_security_config.message.bdc_application": "bdc-application",
    "security_security_config.message.bdc_users": "bdc-users",
    "security_security_config.message.100_hour": "100/hour",
    "security_security_config.message.5_minute": "5/minute",
    "security_security_config.message.1000_hour": "1000/hour",
    "security_security_config.message.10_minute": "10/minute",
    "security_security_config.message.3_hour": "3/hour",
    "security_security_config.message.max_age_31536000_includesubdo": "max-age=31536000; includeSubDomains; preload",
    "security_security_config.message.1_mode_block": "1; mode=block",
    "security_security_config.message.strict_origin_when_cross_origi": "strict-origin-when-cross-origin",
    "security_security_config.message.geolocation_microphone": "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()",
    "security_security_config.message.default_src_self_script_src": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'",
    "security_security_config.message.dev_secret_key_change_in_produ": "dev-secret-key-change-in-production",
    "security_security_config.message.secret_key_is_still_set_to_def": "SECRET_KEY is still set to default development value",
    "security_security_config.message.jwt_secret_key_change_in_produ": "jwt-secret-key-change-in-production",
    "security_security_config.message.jwt_secret_key_is_still_set_to": "JWT_SECRET_KEY is still set to default development value",
    "security_input_validator.message.script_script": "<script.*?>.*?</script>",
    "security_input_validator.message.javascript": "javascript:",
    "security_input_validator.message.vbscript": "vbscript:",
    "security_input_validator.message.onload_s": "onload\\s*=",
    "security_input_validator.message.onclick_s": "onclick\\s*=",
    "security_input_validator.message.onmouseover_s": "onmouseover\\s*=",
    "security_input_validator.message.iframe_iframe": "<iframe.*?>.*?</iframe>",
    "security_input_validator.message.object_object": "<object.*?>.*?</object>",
    "security_input_validator.message.embed_embed": "<embed.*?>.*?</embed>",
    "security_input_validator.message.link": "<link.*?>",
    "security_input_validator.message.meta": "<meta.*?>",
    "security_input_validator.message.style_style": "<style.*?>.*?</style>",
    "security_input_validator.message.expression_s": "expression\\s*\\(",
    "security_input_validator.message.url_s": "url\\s*\\(",
    "security_input_validator.message.import": "@import",
    "security_input_validator.message.b_or_and_b": "(\\b(OR|AND)\\b.*[\\'\"].*[\\'\"])",
    "security_input_validator.message.": "(--|\\/\\*|\\*\\/)",
    "security_input_validator.message.bxp_w": "(\\bxp_\\w+)",
    "security_input_validator.message.bsp_w": "(\\bsp_\\w+)",
    "security_input_validator.message.b_char_nchar_varchar_nvarcha": "(\\b(CHAR|NCHAR|VARCHAR|NVARCHAR)\\s*\\(\\s*\\d+\\s*\\))",
    "security_input_validator.message._1": "[;&|`$()]",
    "security_input_validator.message.b_cat_ls_pwd_whoami_id_uname": "\\b(cat|ls|pwd|whoami|id|uname|ps|kill|rm|mv|cp|chmod|chown)\\b",
    "security_input_validator.message.bin_etc_usr_var_tmp_ho": "(\\\\|\\/)(bin|etc|usr|var|tmp|home)",
    "security_input_validator.message._2": "(\\.\\.|\\.\\/|~\\/)",
    "security_input_validator.message.sanitize_string_input_to_preve": "Sanitize string input to prevent XSS and other attacks.",
    "security_input_validator.message.potentially_malicious_content": "Potentially malicious content detected: ",
    "security_input_validator.message.a_za_z0_9_a_za_z0_9": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
    "security_input_validator.message.password_is_too_long": "Password is too long",
    "security_input_validator.message.a_z": "[A-Z]",
    "security_input_validator.message.a_z_1": "[a-z]",
    "security_input_validator.message._3": "[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]",
    "security_input_validator.message.1_2": "(.)\\1{2,}",
    "security_input_validator.message.012_123_234_345_456_567_678_7": "(012|123|234|345|456|567|678|789|890)",
    "security_input_validator.message.abc_bcd_cde_def_efg_fgh_ghi_h": "(abc|bcd|cde|def|efg|fgh|ghi|hij|ijk|jkl|klm|lmn|mno|nop|opq|pqr|qrs|rst|stu|tuv|uvw|vwx|wxy|xyz)",
    "security_input_validator.message.check_for_sql_injection_patter": "Check for SQL injection patterns.",
    "security_input_validator.message.potentially_malicious_sql_cont": "Potentially malicious SQL content detected",
    "security_input_validator.message.check_for_command_injection_pa": "Check for command injection patterns.",
    "security_input_validator.message.potentially_malicious_command": "Potentially malicious command content detected",
    "security_input_validator.message.file_type_not_allowed": "File type not allowed: ",
    "security_input_validator.message.executable_files_are_not_allow": "Executable files are not allowed",
    "security_input_validator.message.json_payload_too_deeply_nested": "JSON payload too deeply nested",
    "security_input_validator.message.sanitize_form_data_dictionary": "Sanitize form data dictionary.",
    "refactored_appointment_resources.message.refactored_appointment_api_end": "Refactored appointment API endpoints with dependency injection.",
    "refactored_appointment_resources.message.resource_for_listing_and_creat": "Resource for listing and creating appointments.",
    "refactored_appointment_resources.message.fetching_appointments_for_user": "Fetching appointments for user ",
    "refactored_appointment_resources.message.with_filters_page": " with filters: page=",
    "refactored_appointment_resources.message.per_page": ", per_page=",
    "refactored_appointment_resources.message.start_date": ", start_date=",
    "refactored_appointment_resources.message.end_date": ", end_date=",
    "refactored_appointment_resources.message.status": ", status=",
    "refactored_appointment_resources.message.create_a_new_appointment": "Create a new appointment.",
    "refactored_appointment_resources.message.no_json_data_provided": "No JSON data provided",
    "refactored_appointment_resources.message.creating_appointment_for_user": "Creating appointment for user ",
    "refactored_appointment_resources.message.resource_for_individual_appoin": "Resource for individual appointment operations.",
    "refactored_appointment_resources.message.get_a_specific_appointment": "Get a specific appointment.",
    "refactored_appointment_resources.message.for_user": " for user ",
    "refactored_appointment_resources.message.no_json_data_provided_1": "No JSON data provided",
    "refactored_appointment_resources.message.for_user_1": " for user ",
    "refactored_appointment_resources.message.for_user_2": " for user ",
    "refactored_appointment_resources.message.resource_for_syncing_appointme": "Resource for syncing appointments with calendar.",
    "refactored_appointment_resources.message.sync_appointment_to_calendar": "Sync appointment to calendar.",
    "refactored_appointment_resources.message.to_calendar_for_user": " to calendar for user ",
    "refactored_appointment_resources.message.register_appointment_resources": "Register appointment resources with the API.",
    "utils_content_processing.message.content_processing_utilities_f": "Content processing utilities for AI question generation.",
    "utils_content_processing.message.mp3": "mp3",
    "utils_content_processing.message.m4a": "m4a",
    "utils_content_processing.message.mp4": "mp4",
    "utils_content_processing.message.http": "http://",
    "utils_content_processing.message.https": "https://",
    "utils_content_processing.message.pdf_processing_not_available": "PDF processing not available. Install PyPDF2.",
    "utils_content_processing.message.page": "\n--- Page ",
    "utils_content_processing.message.": " ---\n",
    "utils_content_processing.message.no_text_content_found_in_pdf": "No text content found in PDF",
    "utils_content_processing.message.docx_processing_not_available": "DOCX processing not available. Install python-docx.",
    "utils_content_processing.message._1": " | ",
    "utils_content_processing.message.tables": "\n\n--- Tables ---\n",
    "utils_content_processing.message.no_text_content_found_in_docum": "No text content found in document",
    "utils_content_processing.message.latin_1": "latin-1",
    "utils_content_processing.message.cp1252": "cp1252",
    "utils_content_processing.message.could_not_decode_text_file_wit": "Could not decode text file with any supported encoding",
    "utils_content_processing.message.audio_processing_not_available": "Audio processing not available. Install openai-whisper.",
    "utils_content_processing.message.no_speech_detected_in_audio_fi": "No speech detected in audio file",
    "utils_content_processing.message.whisper_base": "whisper-base",
    "utils_content_processing.message.web_content_processing_not_ava": "Web content processing not available. Install requests and beautifulsoup4.",
    "utils_content_processing.message.mozilla_5_0_windows_nt_10_0": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    "utils_content_processing.message.content_main_article": "content|main|article",
    "utils_content_processing.message.no_text_content_found_on_webpa": "No text content found on webpage",
    "utils_content_processing.message.content_type": "content-type",
    "utils_content_processing.message.analyze_text_content_for_vario": "Analyze text content for various metrics.",
    "utils_content_processing.message.spacy_english_model_not_found": "SpaCy English model not found. Some features will be limited.",
    "utils_content_processing.message.perform_comprehensive_text_ana": "Perform comprehensive text analysis.",
    "utils_content_processing.message._2": "[.!?]+",
    "utils_content_processing.message._3": "[;:(){}[\\]\"]",
    "utils_content_processing.message.b_a_z_2_b_w_d_w_b": "\\b[A-Z]{2,}|\\b\\w*\\d\\w*\\b",
    "utils_content_processing.message.simple_keyword_extraction_usin": "Simple keyword extraction using basic NLP.",
    "utils_content_processing.message.w_s": "[^\\w\\s]",
    "utils_content_processing.message.b_was_were_been_being_s_w_e": "\\b(was|were|been|being)\\s+\\w+ed\\b",
    "utils_content_processing.message._4": "[\"\\'].*?[\"\\']",
    "utils_content_processing.message._5": "[.!?]+",
    "utils_content_processing.message.s_s": "^\\s*[-*•]\\s+",
    "utils_content_processing.message.s_d_s": "^\\s*\\d+\\.\\s+",
    "utils_content_processing.message.calculate_overall_difficulty_s": "Calculate overall difficulty score (1-10).",
    "utils_content_processing.message.convert_flesch_reading_ease_sc": "Convert Flesch reading ease score to reading level.",
    "utils_content_processing.message.very_easy_5th_grade": "Very Easy (5th grade)",
    "utils_content_processing.message.fairly_easy_7th_grade": "Fairly Easy (7th grade)",
    "utils_content_processing.message.fairly_difficult_10th_12th_gr": "Fairly Difficult (10th-12th grade)",
    "utils_content_processing.message.very_difficult_graduate_level": "Very Difficult (Graduate level)",
    "utils_content_processing.message.count_syllables_in_a_word_sim": "Count syllables in a word (simple approximation).",
    "utils_content_processing.message.content_too_short": "Content too short (",
    "utils_content_processing.message.words_minimum": " words). Minimum: ",
    "utils_content_processing.message.content_very_long": "Content very long (",
    "utils_content_processing.message.words_may_affect_processing": " words). May affect processing time.",
    "utils_content_processing.message._6": "[.!?]+",
    "utils_content_processing.message.too_few_sentences": "Too few sentences (",
    "utils_content_processing.message.minimum": "). Minimum: ",
    "utils_content_processing.message.check_content_quality_and_add": "Check content quality and add warnings/suggestions.",
    "utils_content_processing.message._7": "[.!?]+",
    "utils_content_processing.message.content_has_significant_repeti": "Content has significant repetition",
    "utils_content_processing.message.unusual_word_length_distributi": "Unusual word length distribution detected",
    "utils_content_processing.message.consider_adding_examples_or_ca": "Consider adding examples or case studies to improve question generation potential",
    "utils_content_processing.message.factual_content_detected_goo": "Factual content detected - good for knowledge-based questions",
    "utils_content_processing.message.procedural_content_detected": "Procedural content detected - good for sequence and process questions",
    "utils_content_processing.message.calculate_content_suitability": "Calculate content suitability score for question generation (0-1).",
    "utils_content_processing.message._8": "[.!?]+",
    "utils_content_processing.message.clean_and_normalize_text": "Clean and normalize text.",
    "utils_content_processing.message.s": "\\s+",
    "utils_content_processing.message.x00_x08_x0b_x0c_x0e_x1f_x7": "[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f-\\x84\\x86-\\x9f]",
    "utils_content_processing.message._9": "[\"\"`]",
    "utils_content_processing.message._10": "[–—]",
    "utils_content_processing.message.2": "([.!?]){2,}",
    "utils_content_processing.message.estimate_processing_time_in_se": "Estimate processing time in seconds.",
    "utils_rate_limiting.message.enhanced_rate_limiting_configu": "Enhanced rate limiting configuration.",
    "utils_rate_limiting.message.get_unique_identifier_for_rate": "Get unique identifier for rate limiting.",
    "utils_rate_limiting.message.user": "user:",
    "utils_rate_limiting.message.200_per_hour": "200 per hour",
    "utils_rate_limiting.message.50_per_minute": "50 per minute",
    "utils_rate_limiting.message.redis_localhost_6379": "redis://localhost:6379",
    "utils_rate_limiting.message.fixed_window_elastic_expiry": "fixed-window-elastic-expiry",
    "utils_rate_limiting.message.common_rate_limit_configuratio": "Common rate limit configurations.",
    "utils_rate_limiting.message.5_per_minute": "5 per minute",
    "utils_rate_limiting.message.3_per_hour": "3 per hour",
    "utils_rate_limiting.message.3_per_hour_1": "3 per hour",
    "utils_rate_limiting.message.10_per_hour": "10 per hour",
    "utils_rate_limiting.message.100_per_hour": "100 per hour",
    "utils_rate_limiting.message.20_per_hour": "20 per hour",
    "utils_rate_limiting.message.30_per_minute": "30 per minute",
    "utils_rate_limiting.message.10_per_hour_1": "10 per hour",
    "utils_rate_limiting.message.30_per_minute_1": "30 per minute",
    "utils_rate_limiting.message.60_per_minute": "60 per minute",
    "utils_rate_limiting.message.configure_rate_limiting_for_th": "Configure rate limiting for the application.",
    "utils_rate_limiting.message.apply_rate_limits_to_specific": "Apply rate limits to specific endpoints.",
    "utils_rate_limiting.message.get_dynamic_rate_limit_based_o": "Get dynamic rate limit based on user role.",
    "utils_rate_limiting.message.1000_per_hour": "1000 per hour",
    "utils_rate_limiting.message.500_per_hour": "500 per hour",
    "utils_rate_limiting.message.300_per_hour": "300 per hour",
    "utils_rate_limiting.message.100_per_hour_1": "100 per hour",
    "utils_rate_limiting.message.50_per_hour": "50 per hour",
    "utils_rate_limiting.message.get_current_rate_limit_status": "Get current rate limit status for the requester.",
    "utils_rate_limiting.message.check_if_ip_is_blacklisted_al": "Check if IP is blacklisted (always rate limited).",
    "utils_rate_limiting.message.temporarily_increase_rate_limi": "Temporarily increase rate limit for a user.",
    "utils_file_upload_security.message.enhanced_file_upload_security": "Enhanced file upload security utilities.",
    "utils_file_upload_security.message.image_jpeg": "image/jpeg",
    "utils_file_upload_security.message.image_png": "image/png",
    "utils_file_upload_security.message.image_gif": "image/gif",
    "utils_file_upload_security.message.image_bmp": "image/bmp",
    "utils_file_upload_security.message.not_allowed": "' not allowed",
    "utils_file_upload_security.message.file_too_large_maximum_size": "File too large. Maximum size: ",
    "utils_file_upload_security.message.file_contains_potentially_mali": "File contains potentially malicious content",
    "utils_file_upload_security.message.get_file_extension_safely": "Get file extension safely.",
    "utils_file_upload_security.message.get_maximum_file_size_for_exte": "Get maximum file size for extension.",
    "utils_file_upload_security.message.check_for_common_malicious_pat": "Check for common malicious patterns.",
    "utils_file_upload_security.message.scan_file_for_viruses": "\n        Scan file for viruses (placeholder for actual implementation).\n        \n        In production, integrate with ClamAV or similar.\n        ",
    "utils_file_upload_security.message.generate_sha_256_hash_of_file": "Generate SHA-256 hash of file content.",
    "utils_file_upload_security.message.clean_up_files_older_than_spec": "Clean up files older than specified days.",
    "utils_file_upload_security.message.check_if_file_extension_is_all": "Check if file extension is allowed.",
    "utils_pdf_generator.message.pdf_generator_utility_using_re": "PDF Generator utility using ReportLab.",
    "utils_pdf_generator.message.class_for_generating_pdf_docum": "Class for generating PDF documents.",
    "utils_pdf_generator.message.initialize_the_pdf_generator": "Initialize the PDF generator.",
    "utils_pdf_generator.message.set_up_custom_paragraph_styles": "Set up custom paragraph styles.",
    "utils_pdf_generator.message.add_title_to_the_document": "Add title to the document.",
    "utils_pdf_generator.message.add_subtitle_to_the_document": "Add subtitle to the document.",
    "utils_pdf_generator.message.add_heading_to_the_document": "Add heading to the document.",
    "utils_pdf_generator.message.add_paragraph_to_the_document": "Add paragraph to the document.",
    "utils_pdf_generator.message.add_bold_text_to_the_document": "Add bold text to the document.",
    "utils_pdf_generator.message.add_italic_text_to_the_documen": "Add italic text to the document.",
    "utils_pdf_generator.message.add_spacer_to_the_document": "Add spacer to the document.",
    "utils_pdf_generator.message.add_table_to_the_document": "Add table to the document.",
    "utils_pdf_generator.message.add_image_to_the_document": "Add image to the document.",
    "utils_pdf_generator.message.add_page_break_to_the_document": "Add page break to the document.",
    "utils_pdf_generator.message.add_a_standard_footer_to_the_d": "Add a standard footer to the document.",
    "utils_pdf_generator.message.generated_by_bdc": "Generated by BDC - ",
    "utils_pdf_generator.message.y_m_d_h_m": "%Y-%m-%d %H:%M",
    "utils_pdf_generator.message.build_the_pdf_document": "Build the PDF document.",
    "utils_pdf_generator.message.generate_a_report_pdf_for_an_e": "Generate a report PDF for an evaluation.",
    "utils_pdf_generator.message.b_name_b": "<b>Name:</b> ",
    "utils_pdf_generator.message.b_email_b": "<b>Email:</b> ",
    "utils_pdf_generator.message.b_status_b": "<b>Status:</b> ",
    "utils_pdf_generator.message.b_title_b": "<b>Title:</b> ",
    "utils_pdf_generator.message.b_date_b": "<b>Date:</b> ",
    "utils_pdf_generator.message.y_m_d": "%Y-%m-%d",
    "utils_pdf_generator.message.b_status_b_1": "<b>Status:</b> ",
    "utils_pdf_generator.message.b_score_b": "<b>Score:</b> ",
    "utils_pdf_generator.message.b_answer_b": "<b>Answer:</b> ",
    "utils_pdf_generator.message.b_score_b_1": "<b>Score:</b> ",
    "utils_pdf_generator.message.y_m_d_1": "%Y-%m-%d",
    "utils_pdf_generator.message.generate_a_comprehensive_repor": "Generate a comprehensive report for a beneficiary.",
    "utils_pdf_generator.message.b_name_b_1": "<b>Name:</b> ",
    "utils_pdf_generator.message.b_email_b_1": "<b>Email:</b> ",
    "utils_pdf_generator.message.b_status_b_2": "<b>Status:</b> ",
    "utils_pdf_generator.message.b_name_b_2": "<b>Name:</b> ",
    "utils_pdf_generator.message.b_email_b_2": "<b>Email:</b> ",
    "utils_pdf_generator.message.y_m_d_2": "%Y-%m-%d",
    "utils_pdf_generator.message.b_overall_progress_b": "<b>Overall Progress:</b> ",
    "utils_pdf_generator.message.b_average_score_b": "<b>Average Score:</b> ",
    "utils_pdf_generator.message.y_m_d_3": "%Y-%m-%d",
    "utils_pdf_generator.message.b_generated_at_b": "<b>Generated At:</b> ",
    "utils_pdf_generator.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "utils_pdf_generator.message.b_generated_by_b": "<b>Generated By:</b> ",
    "utils_pdf_generator.message.b_report_type_b": "<b>Report Type:</b> ",
    "utils_pdf_generator.message.no_data_available_for_this_rep": "No data available for this report.",
    "utils_pdf_generator.message.i_total_records": "<i>Total Records: ",
    "utils_pdf_generator.message.i": "</i>",
    "utils_ai.message.ai_utilities_using_openai_api": "AI utilities using OpenAI API.",
    "utils_ai.message.configure_openai_api_with_cred": "Configure OpenAI API with credentials.",
    "utils_ai.message.analyze_evaluation_respon": "\n    Analyze evaluation responses using OpenAI and generate insights.\n    \n    Args:\n        evaluation: Dictionary containing evaluation data including questions and answers\n        \n    Returns:\n        Dictionary with analysis results including strengths, areas_to_improve, and recommendations\n    ",
    "utils_ai.message.openai_api_key_not_configured": "OpenAI API key not configured",
    "utils_ai.message.ai_integration_not_configured": "AI integration not configured",
    "utils_ai.message.answer": "\nAnswer: ",
    "utils_ai.message.score": "\nScore: ",
    "utils_ai.message.answer_1": "\nAnswer: ",
    "utils_ai.message.as_an_ai_assistant_analy": "\n    As an AI assistant, analyze the following evaluation responses and provide insights. \n    Identify strengths, areas for improvement, and recommendations.\n    \n    Evaluation: ",
    "utils_ai.message.responses": "\n    \n    Responses:\n    ",
    "utils_ai.message.gpt_4": "gpt-4",
    "utils_ai.message.you_are_an_educational_assessm": "You are an educational assessment expert analyzing evaluation responses.",
    "utils_ai.message.json_n_n": "```json\\n(.*?)\\n```",
    "utils_ai.message.": "^[^{]*",
    "utils_ai.message._1": "[^}]*$",
    "utils_ai.message.analysis_summary_not_available": "Analysis summary not available.",
    "utils_ai.message.openai_api_key_not_configured_1": "OpenAI API key not configured",
    "utils_ai.message.ai_integration_not_configured_1": "AI integration not configured",
    "utils_ai.message.status": "\n    Status: ",
    "utils_ai.message.evaluation_results": "\n    \n    Evaluation Results:\n    ",
    "utils_ai.message.gpt_4_1": "gpt-4",
    "utils_ai.message.you_are_an_educational_assessm_1": "You are an educational assessment expert creating reports.",
    "utils_ai.message.json_n_n_1": "```json\\n(.*?)\\n```",
    "utils_ai.message._2": "^[^{]*",
    "utils_ai.message._3": "[^}]*$",
    "utils_ai.message.executive_summary_not_availabl": "Executive summary not available.",
    "utils_data_encryption.message.sensitive_data_encryption_util": "Sensitive data encryption utilities.",
    "utils_data_encryption.message.handles_encryption_and_decrypt": "Handles encryption and decryption of sensitive data.",
    "utils_data_encryption.message.initialize_encryption_with_key": "Initialize encryption with key.",
    "utils_data_encryption.message.no_encryption_key_or_secret_ke": "No encryption key or secret key configured",
    "utils_data_encryption.message.encrypt_data_and_retu": "\n        Encrypt data and return base64 encoded string.\n        \n        Args:\n            data: Data to encrypt (string, dict, or list)\n            \n        Returns:\n            Base64 encoded encrypted string\n        ",
    "utils_data_encryption.message.decrypt_base64_encode": "\n        Decrypt base64 encoded data.\n        \n        Args:\n            encrypted_data: Base64 encoded encrypted string\n            return_type: Expected return type (str, dict, or list)\n            \n        Returns:\n            Decrypted data in specified type\n        ",
    "utils_data_encryption.message.generate_a_new_encryption_key": "Generate a new encryption key.",
    "utils_data_encryption.message.encrypt_a_single_field_value": "Encrypt a single field value.",
    "utils_data_encryption.message.decrypt_a_single_field_value": "Decrypt a single field value.",
    "utils_data_encryption.message.mixin_for_models_with_sensitiv": "Mixin for models with sensitive data fields.",
    "utils_data_encryption.message.initialize_with_encryption_sup": "Initialize with encryption support.",
    "utils_data_encryption.message.encrypt_all_sensitive_fields_b": "Encrypt all sensitive fields before saving.",
    "utils_data_encryption.message.decrypt_all_sensitive_fields_a": "Decrypt all sensitive fields after loading.",
    "utils_data_encryption.message.check_if_value_appears_to_be_e": "Check if value appears to be encrypted.",
    "utils_data_encryption.message.get_decrypted_value_of_a_field": "Get decrypted value of a field.",
    "utils_data_encryption.message.set_and_encrypt_a_field_value": "Set and encrypt a field value.",
    "utils_data_encryption.message.create_encrypted_password_rese": "Create encrypted password reset token.",
    "utils_data_encryption.message.encrypt_api_key_for_storage": "Encrypt API key for storage.",
    "utils_data_encryption.message.decrypt_stored_api_key": "Decrypt stored API key.",
    "utils_cache.message.generate_a_unique_cache_k": "\n    Generate a unique cache key based on the provided arguments.\n    \n    Args:\n        prefix (str): Prefix for the cache key\n        *args: Positional arguments to include in the key\n        **kwargs: Keyword arguments to include in the key\n        \n    Returns:\n        str: A unique cache key\n    ",
    "utils_cache.message.decorator_to_cache_api_re": "\n    Decorator to cache API responses.\n    \n    Args:\n        timeout (int): Cache timeout in seconds\n        key_prefix (str): Prefix for the cache key\n        \n    Returns:\n        function: Decorated function\n    ",
    "utils_cache.message.cache_hit_for_key": "Cache hit for key: ",
    "utils_cache.message.cached_response_with_key": "Cached response with key: ",
    "utils_cache.message.timeout": ", timeout: ",
    "utils_cache.message.cache_entries_with_pattern": " cache entries with pattern: ",
    "utils_cache.message.user_id": "*:user_id:",
    "utils_logger.message.no_request_id": "no-request-id",
    "utils_logger.message.configure_application_log": "\n    Configure application logger with structured logging.\n    \n    Args:\n        app (Flask): Flask application\n    ",
    "utils_logger.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "utils_logger.message.no_request_id_1": "no-request-id",
    "utils_logger.message.asctime_s_levelname_s_in": "[%(asctime)s] %(levelname)s in %(module)s: %(message)s [%(request_id)s] [%(user_id)s]",
    "utils_logger.message.get_a_logger_instance": "\n    Get a logger instance.\n    \n    Args:\n        name (str): Logger name\n        \n    Returns:\n        Logger: Logger instance\n    ",
    "utils_backup_manager.message.backup_and_recovery_management": "Backup and recovery management for production deployment.",
    "utils_backup_manager.message.comprehensive_backup_and_recov": "Comprehensive backup and recovery system.",
    "utils_backup_manager.message.initialize_backup_manager_with": "Initialize backup manager with Flask app.",
    "utils_backup_manager.message.us_east_1": "us-east-1",
    "utils_backup_manager.message.generated_backup_encryption_ke": "Generated backup encryption key: ",
    "utils_backup_manager.message.store_this_securely": " - Store this securely!",
    "utils_backup_manager.message.create_a_database_backup": "Create a database backup.",
    "utils_backup_manager.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "utils_backup_manager.message.postgresql": "postgresql://",
    "utils_backup_manager.message.sqlite": "sqlite://",
    "utils_backup_manager.message.database_backups": "database_backups/",
    "utils_backup_manager.message.s3": "s3://",
    "utils_backup_manager.message.create_a_backup_of_uploaded_fi": "Create a backup of uploaded files.",
    "utils_backup_manager.message.y_m_d_h_m_s_1": "%Y%m%d_%H%M%S",
    "utils_backup_manager.message.no_files_to_backup": "No files to backup",
    "utils_backup_manager.message.czf": "-czf",
    "utils_backup_manager.message.files_backups": "files_backups/",
    "utils_backup_manager.message.s3_1": "s3://",
    "utils_backup_manager.message.create_a_full_system_backup": "Create a full system backup.",
    "utils_backup_manager.message.1_0_0": "1.0.0",
    "utils_backup_manager.message.postgresql_1": "postgresql://",
    "utils_backup_manager.message.sqlite_1": "sqlite://",
    "utils_backup_manager.message.s3_2": "s3://",
    "utils_backup_manager.message.clean_up_backups_older_than_re": "Clean up backups older than retention period.",
    "utils_backup_manager.message.old_backups": " old backups",
    "utils_backup_manager.message.create_postgresql_backup_using": "Create PostgreSQL backup using pg_dump.",
    "utils_backup_manager.message.postgresql_2": "postgresql://",
    "utils_backup_manager.message.no_password": "--no-password",
    "utils_backup_manager.message.sqlite_2": "sqlite:///",
    "utils_backup_manager.message.restore_postgresql_backup_usin": "Restore PostgreSQL backup using psql.",
    "utils_backup_manager.message.postgresql_3": "postgresql://",
    "utils_backup_manager.message.no_password_1": "--no-password",
    "utils_backup_manager.message.sqlite_3": "sqlite:///",
    "utils_backup_manager.message.upload_file_to_s3": "Upload file to S3.",
    "utils_backup_manager.message.prepare_backup_file_for_restor": "Prepare backup file for restoration.",
    "utils_backup_manager.message.s3_3": "s3://",
    "utils_backup_manager.message.s3_4": "s3://",
    "utils_backup_manager.message.y_m_d_h_m_s_2": "%Y%m%d_%H%M%S",
    "utils_backup_manager.message.manifests": "manifests/",
    "utils_backup_manager.message.tb": " TB",
    "utils_backup_manager.message.setup_automated_backup_schedul": "Setup automated backup scheduling.",
    "utils_backup_manager.message.0_2": "0 2 * * *",
    "utils_backup_manager.message.02_00": "02:00",
    "utils_datetime_utils.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "utils_datetime_utils.message.y_m_dt_h_m_s": "%Y-%m-%dT%H:%M:%S",
    "utils_datetime_utils.message.y_m_dt_h_m_sz": "%Y-%m-%dT%H:%M:%SZ",
    "utils_datetime_utils.message.y_m_dt_h_m_s_f": "%Y-%m-%dT%H:%M:%S.%f",
    "utils_datetime_utils.message.y_m_dt_h_m_s_fz": "%Y-%m-%dT%H:%M:%S.%fZ",
    "utils_datetime_utils.message.y_m_d": "%Y-%m-%d",
    "utils_datetime_utils.message.00_00": "+00:00",
    "utils_datetime_utils.message.y_m_d_h_m": "%Y-%m-%d %H:%M",
    "utils_datetime_utils.message.y_m_d_1": "%Y-%m-%d",
    "utils_health_checker.message.health_check_utilities_for_pro": "Health check utilities for production monitoring.",
    "utils_health_checker.message.comprehensive_health_checking": "Comprehensive health checking for production deployment.",
    "utils_health_checker.message.get_overall_health_status": "Get overall health status.",
    "utils_health_checker.message.1_0_0": "1.0.0",
    "utils_health_checker.message.check_database_connectivity_an": "Check database connectivity and performance.",
    "utils_health_checker.message.check_redis_connectivity_and_p": "Check Redis connectivity and performance.",
    "utils_health_checker.message.check_available_disk_space": "Check available disk space.",
    "utils_health_checker.message.disk_space_remaining": "% disk space remaining",
    "utils_health_checker.message.disk_space_remaining_1": "% disk space remaining",
    "utils_health_checker.message.available": "% available",
    "utils_health_checker.message.check_system_memory_usage": "Check system memory usage.",
    "utils_health_checker.message.memory_usage": "% memory usage",
    "utils_health_checker.message.memory_usage_1": "% memory usage",
    "utils_health_checker.message.cpu_usage": "% CPU usage",
    "utils_health_checker.message.cpu_usage_1": "% CPU usage",
    "utils_health_checker.message.check_critical_external_depend": "Check critical external dependencies.",
    "utils_health_checker.message.upload_directory_not_writable": "Upload directory not writable: ",
    "utils_health_checker.message.some_dependencies_have_issues": "Some dependencies have issues",
    "utils_health_checker.message.all_dependencies_are_available": "All dependencies are available",
    "utils_health_checker.message.create_health_check_endpoints": "Create health check endpoints.",
    "utils_health_checker.message.detailed_health_check_endpoint": "Detailed health check endpoint.",
    "utils_health_checker.message.kubernetes_readiness_probe_end": "Kubernetes readiness probe endpoint.",
    "utils_health_checker.message.is_not_healthy": " is not healthy",
    "utils_health_checker.message.application_is_ready_to_serve": "Application is ready to serve traffic",
    "utils_health_checker.message.kubernetes_liveness_probe_endp": "Kubernetes liveness probe endpoint.",
    "utils_notifications.message.notification_utilities_for_bd": "\nNotification utilities for BDC application\n",
    "utils_notifications.message.noreply_bdc_com": "noreply@bdc.com",
    "utils_notifications.message.send_message_to_slack_webhook": "Send message to Slack webhook",
    "utils_notifications.message.send_sms_notification_using_tw": "Send SMS notification using Twilio",
    "utils_notifications.message.twilio_credentials_not_configu": "Twilio credentials not configured",
    "utils_notifications.message.twilio_library_not_installed": "Twilio library not installed",
    "utils_notifications.message.send_push_notification_to_user": "Send push notification to user device",
    "utils_notifications.message.fcm_server_key_not_configured": "FCM server key not configured",
    "utils_notifications.message.no_device_tokens_found_for_use": "No device tokens found for user ",
    "utils_notifications.message.key": "key=",
    "utils_notifications.message.https_fcm_googleapis_com_fcm": "https://fcm.googleapis.com/fcm/send",
    "utils_notifications.message.push_notification_sent_to_user": "Push notification sent to user ",
    "utils_notifications.message.send_notification_through_mult": "Send notification through multiple channels",
    "utils_notifications.message.send_notification_to_multiple": "Send notification to multiple users",
    "utils_notifications.message.schedule_a_notification_for_fu": "Schedule a notification for future delivery",
    "utils_notifications.message.notification_scheduled_for_use": "Notification scheduled for user ",
    "utils_notifications.message.at": " at ",
    "utils_error_handler.message.database_integrity_constraint": "Database integrity constraint violated",
    "utils_error_handler.message.the_requested_resource_was_not": "The requested resource was not found",
    "utils_error_handler.message.unique_constraint": "unique constraint",
    "utils_error_handler.message.foreign_key_constraint": "foreign key constraint",
    "utils_multi_tenancy.message.multi_tenancy_utilities_for_ro": "Multi-tenancy utilities for row-level security.",
    "utils_multi_tenancy.message.manages_tenant_context_for_the": "Manages tenant context for the current request.",
    "utils_multi_tenancy.message.explicitly_set_tenant_id_for_t": "Explicitly set tenant ID for the request.",
    "utils_multi_tenancy.message.mixin_for_models_that_need_ten": "Mixin for models that need tenant filtering.",
    "utils_multi_tenancy.message.get_query_filtered_by_tenant": "Get query filtered by tenant.",
    "utils_multi_tenancy.message.get_record_by_id_with_tenant_c": "Get record by ID with tenant check.",
    "utils_multi_tenancy.message.check_if_record_belongs_to_ten": "Check if record belongs to tenant.",
    "utils_multi_tenancy.message.decorator_to_ensure_tenant_con": "Decorator to ensure tenant context is set.",
    "utils_multi_tenancy.message.decorator_to_automatically_app": "Decorator to automatically apply tenant filtering to queries.",
    "utils_multi_tenancy.message.custom_query_class_that_automa": "Custom query class that automatically applies tenant filtering.",
    "utils_multi_tenancy.message.apply_tenant_filter_if_not_alr": "Apply tenant filter if not already applied.",
    "utils_multi_tenancy.message.proxy_all_methods_to_underlyin": "Proxy all methods to underlying query with tenant filter.",
    "utils_multi_tenancy.message.add_tenant_id_to_instance_befo": "Add tenant ID to instance before saving.",
    "utils_multi_tenancy.message.automatically_apply_tenant_fil": "Automatically apply tenant filter to all queries.",
    "utils_multi_tenancy.message.base_model_class_with_multi_te": "Base model class with multi-tenancy support.",
    "utils_multi_tenancy.message.create_new_instance_with_autom": "Create new instance with automatic tenant assignment.",
    "utils_sentry.message.initialize_sentry_for_the_flas": "Initialize Sentry for the Flask application.",
    "utils_sentry.message.sentry_dsn_not_configured_ski": "Sentry DSN not configured, skipping initialization",
    "utils_sentry.message.1_0_0": "1.0.0",
    "utils_sentry.message.filter_events_before_sending_t": "Filter events before sending to Sentry.",
    "utils_sentry.message.wp_admin": "wp-admin",
    "utils_sentry.message.wp_login": "wp-login",
    "utils_sentry.message.set_user_context_for_sentry": "Set user context for Sentry.",
    "utils_sentry.message.capture_a_message_in_sentry": "Capture a message in Sentry.",
    "utils_sentry.message.capture_an_exception_in_sentry": "Capture an exception in Sentry.",
    "utils_sentry.message.start_a_performance_transactio": "Start a performance transaction.",
    "utils_sentry.message.configure_sentry_scope_for_eac": "Configure Sentry scope for each request.",
    "utils_adaptive_test_setup.message.setup_utilities_for_adaptive_t": "Setup utilities for Adaptive Test System.",
    "utils_adaptive_test_setup.message.create_a_sample_adaptive_test": "Create a sample adaptive test pool with questions.",
    "utils_adaptive_test_setup.message.mathematics_adaptive_test_pool": "Mathematics Adaptive Test Pool",
    "utils_adaptive_test_setup.message.adaptive_test_pool_for_mathema": "Adaptive test pool for mathematics assessment covering algebra, geometry, and calculus",
    "utils_adaptive_test_setup.message.what_is_2_2": "What is 2 + 2?",
    "utils_adaptive_test_setup.message.2_2_4": "2 + 2 = 4",
    "utils_adaptive_test_setup.message.what_is_5_3": "What is 5 × 3?",
    "utils_adaptive_test_setup.message.5_3_15": "5 × 3 = 15",
    "utils_adaptive_test_setup.message.solve_for_x_2x_5_13": "Solve for x: 2x + 5 = 13",
    "utils_adaptive_test_setup.message.2x_5_13_2x_8_x_4": "2x + 5 = 13; 2x = 8; x = 4",
    "utils_adaptive_test_setup.message.what_is_the_area_of_a_rectangl": "What is the area of a rectangle with length 8 and width 5?",
    "utils_adaptive_test_setup.message.area_length_width_8_5": "Area = length × width = 8 × 5 = 40",
    "utils_adaptive_test_setup.message.if_f_x_x_3x_2_what_is": "If f(x) = x² + 3x - 2, what is f(2)?",
    "utils_adaptive_test_setup.message.f_2_2_3_2_2_4_6": "f(2) = 2² + 3(2) - 2 = 4 + 6 - 2 = 8",
    "utils_adaptive_test_setup.message.find_the_derivative_of_f_x": "Find the derivative of f(x) = 3x² - 2x + 5",
    "utils_adaptive_test_setup.message.6x_2": "6x - 2",
    "utils_adaptive_test_setup.message.6x_2_1": "6x + 2",
    "utils_adaptive_test_setup.message.3x_2": "3x - 2",
    "utils_adaptive_test_setup.message.6x_2_2": "6x² - 2",
    "utils_adaptive_test_setup.message.f_x_6x_2": "f'(x) = 6x - 2",
    "utils_adaptive_test_setup.message.what_is_the_limit_of_x_4": "What is the limit of (x² - 4)/(x - 2) as x approaches 2?",
    "utils_adaptive_test_setup.message.factor_x_4_x_2_x": "Factor: (x² - 4)/(x - 2) = (x + 2)(x - 2)/(x - 2) = x + 2, so limit is 4",
    "utils_adaptive_test_setup.message.the_sum_of_angles_in_a_triangl": "The sum of angles in a triangle is always 180 degrees.",
    "utils_adaptive_test_setup.message.this_is_a_fundamental_property": "This is a fundamental property of Euclidean geometry.",
    "utils_adaptive_test_setup.message.all_prime_numbers_are_odd": "All prime numbers are odd.",
    "utils_adaptive_test_setup.message.2_is_a_prime_number_and_it_is": "2 is a prime number and it is even.",
    "utils_adaptive_test_setup.message.create_an_advanced_mathematics": "Create an advanced mathematics adaptive pool.",
    "utils_adaptive_test_setup.message.advanced_mathematics_adaptive": "Advanced Mathematics Adaptive Assessment",
    "utils_adaptive_test_setup.message.comprehensive_adaptive_assessm": "Comprehensive adaptive assessment for advanced mathematics topics",
    "utils_adaptive_test_setup.message.evaluate_the_integral_x_sin": "Evaluate the integral: ∫(x²sin(x))dx",
    "utils_adaptive_test_setup.message.x_cos_x_2xsin_x_2cos_x": "-x²cos(x) + 2xsin(x) + 2cos(x) + C",
    "utils_adaptive_test_setup.message.x_cos_x_2xsin_x_2cos_x_1": "x²cos(x) - 2xsin(x) - 2cos(x) + C",
    "utils_adaptive_test_setup.message.x_cos_x_2xsin_x_2cos_x_2": "-x²cos(x) + 2xsin(x) - 2cos(x) + C",
    "utils_adaptive_test_setup.message.x_sin_x_2xcos_x_2sin_x": "x²sin(x) + 2xcos(x) + 2sin(x) + C",
    "utils_adaptive_test_setup.message.using_integration_by_parts_twi": "Using integration by parts twice",
    "utils_adaptive_test_setup.message.find_the_eigenvalues_of_the_ma": "Find the eigenvalues of the matrix [[3, 1], [2, 4]]",
    "utils_adaptive_test_setup.message.2_and_5": "2 and 5",
    "utils_adaptive_test_setup.message.1_and_6": "1 and 6",
    "utils_adaptive_test_setup.message.2_and_4": "2 and 4",
    "utils_adaptive_test_setup.message.3_and_4": "3 and 4",
    "utils_adaptive_test_setup.message.solve_det_a_i_0": "Solve det(A - λI) = 0",
    "utils_adaptive_test_setup.message.demonstrate_an_adaptive_test_s": "Demonstrate an adaptive test session.",
    "utils_adaptive_test_setup.message.question": "\nQuestion ",
    "utils_adaptive_test_setup.message.se": " (SE: ",
    "utils_adaptive_test_setup.message.stopping": "\nStopping: ",
    "utils_adaptive_test_setup.message.performance_level": "\nPerformance Level: ",
    "utils_decorators.message.utility_decorators_for_the_app": "Utility decorators for the application.",
    "utils_decorators.message.no_input_data_provided": "No input data provided",
    "utils_decorators.message.user_not_found_or_inactive": "User not found or inactive",
    "utils_decorators.message.check_if_role_has_permission": "Check if role has permission.",
    "utils_decorators.message.reports_view_own": "reports.view_own",
    "utils_decorators.message.decorator_to_require_admin_rol": "Decorator to require admin role.",
    "database_indexing_strategy.message.database_indexing_strategy_ana": "Database indexing strategy analyzer and optimizer",
    "database_indexing_strategy.message.analyze_query_patterns_to_reco": "Analyze query patterns to recommend indexes",
    "database_indexing_strategy.message.get_recommendations_for_missin": "Get recommendations for missing indexes",
    "database_indexing_strategy.message.find_foreign_key_columns_witho": "Find foreign key columns without indexes",
    "database_indexing_strategy.message.without_index": " without index",
    "database_indexing_strategy.message.high_improves_join_performan": "High - improves JOIN performance",
    "database_indexing_strategy.message.calls": " calls)",
    "database_indexing_strategy.message.ms_per_query": "ms per query",
    "database_indexing_strategy.message.analyze_join_patterns_for_inde": "Analyze JOIN patterns for index recommendations",
    "database_indexing_strategy.message.high_cardinality_column_with_p": "High cardinality column with poor correlation",
    "database_indexing_strategy.message.could_improve_join_performance": "Could improve JOIN performance",
    "database_indexing_strategy.message.analyze_order_by_patterns_for": "Analyze ORDER BY patterns for index recommendations",
    "database_indexing_strategy.message.used_in_order_by_with": "Used in ORDER BY with ",
    "database_indexing_strategy.message.rows": " rows",
    "database_indexing_strategy.message.could_eliminate_sorting_step": "Could eliminate sorting step",
    "database_indexing_strategy.message.calculate_index_priority_based": "Calculate index priority based on query pattern",
    "database_indexing_strategy.message.find_indexes_that_are_not_bein": "Find indexes that are not being used",
    "database_indexing_strategy.message.consider_removing_this_unused": "Consider removing this unused index",
    "database_indexing_strategy.message.find_duplicate_or_redundant_in": "Find duplicate or redundant indexes",
    "database_indexing_strategy.message.index1": "index1",
    "database_indexing_strategy.message.columns1": "columns1",
    "database_indexing_strategy.message.index2": "index2",
    "database_indexing_strategy.message.columns2": "columns2",
    "database_indexing_strategy.message.consider_removing_redundant_in": "Consider removing redundant index",
    "database_indexing_strategy.message.generate_comprehensive_indexin": "Generate comprehensive indexing report",
    "database_indexing_strategy.message.get_current_indexes_by_table": "Get current indexes by table",
    "database_indexing_strategy.message.generate_summary_of_recommenda": "Generate summary of recommendations",
    "database_indexing_strategy.message.": "')\n                    ",
    "database_indexing_strategy.message.index2_1": "index2",
    "database_indexing_strategy.message._1": "')\n                    ",
    "database_indexing_strategy.message.gb": " GB",
    "database_indexing_strategy.message.mb": " MB",
    "database_indexing_strategy.message.kb": " KB",
    "database_indexing_strategy.message.postgresql_user_pass_localho": "postgresql://user:pass@localhost/bdc",
    "database_indexing_strategy.message._2": "  - ",
    "database_indexing_strategy.message.unused_indexes": "\nUnused Indexes:",
    "database_indexing_strategy.message._3": "  - ",
    "database_indexing_strategy.message.summary": "\nSummary: ",
    "database_backup.message.database_backup_and_recovery_m": "Database backup and recovery management",
    "database_backup.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "database_backup.message.no_password": "--no-password",
    "database_backup.message.verbose": "--verbose",
    "database_backup.message.no_owner": "--no-owner",
    "database_backup.message.no_privileges": "--no-privileges",
    "database_backup.message.host": "--host=",
    "database_backup.message.port": "--port=",
    "database_backup.message.user": "--user=",
    "database_backup.message.password": "--password=",
    "database_backup.message.single_transaction": "--single-transaction",
    "database_backup.message.routines": "--routines",
    "database_backup.message.triggers": "--triggers",
    "database_backup.message.sqlite": "sqlite:///",
    "database_backup.message.no_password_1": "--no-password",
    "database_backup.message.host_1": "--host=",
    "database_backup.message.port_1": "--port=",
    "database_backup.message.user_1": "--user=",
    "database_backup.message.password_1": "--password=",
    "database_backup.message.sqlite_1": "sqlite:///",
    "database_backup.message.create_metadata_file_for_backu": "Create metadata file for backup",
    "database_backup.message.": "****",
    "database_backup.message.list_all_available_backups": "List all available backups",
    "database_backup.message.remove_backups_older_than_rete": "Remove backups older than retention period",
    "database_backup.message.old_backups": " old backups",
    "database_backup.message.0_2": "0 2 * * *",
    "database_backup.message.create_cron_job_for_scheduled": "Create cron job for scheduled backups",
    "database_backup.message.cd": "cd ",
    "database_backup.message.python_m_backup_create": " && python -m backup create",
    "database_backup.message.usage_python_backup_py_creat": "Usage: python backup.py [create|restore|list|cleanup|verify] [options]",
    "database_backup.message.postgresql_user_pass_localho": "postgresql://user:pass@localhost/bdc",
    "database_backup.message._1": " - ",
    "database_backup.message._2": " - ",
    "database_backup.message.bytes": " bytes",
    "database_backup.message.old_backups_1": " old backups",
    "database_optimization.message.analyze_and_log_slow_queries": "Analyze and log slow queries",
    "database_optimization.message.create_index_if_not_exists_idx": "CREATE INDEX IF NOT EXISTS idx_users_email ON users(email)",
    "database_optimization.message.create_index_if_not_exists_idx_1": "CREATE INDEX IF NOT EXISTS idx_users_role ON users(role)",
    "database_optimization.message.create_index_if_not_exists_idx_2": "CREATE INDEX IF NOT EXISTS idx_users_tenant_id ON users(tenant_id)",
    "database_optimization.message.create_index_if_not_exists_idx_3": "CREATE INDEX IF NOT EXISTS idx_beneficiaries_user_id ON beneficiaries(user_id)",
    "database_optimization.message.create_index_if_not_exists_idx_4": "CREATE INDEX IF NOT EXISTS idx_beneficiaries_trainer_id ON beneficiaries(trainer_id)",
    "database_optimization.message.create_index_if_not_exists_idx_5": "CREATE INDEX IF NOT EXISTS idx_beneficiaries_status ON beneficiaries(status)",
    "database_optimization.message.create_index_if_not_exists_idx_6": "CREATE INDEX IF NOT EXISTS idx_beneficiaries_enrollment_date ON beneficiaries(enrollment_date)",
    "database_optimization.message.create_index_if_not_exists_idx_7": "CREATE INDEX IF NOT EXISTS idx_evaluations_beneficiary_id ON evaluations(beneficiary_id)",
    "database_optimization.message.create_index_if_not_exists_idx_8": "CREATE INDEX IF NOT EXISTS idx_evaluations_test_id ON evaluations(test_id)",
    "database_optimization.message.create_index_if_not_exists_idx_9": "CREATE INDEX IF NOT EXISTS idx_evaluations_status ON evaluations(status)",
    "database_optimization.message.create_index_if_not_exists_idx_10": "CREATE INDEX IF NOT EXISTS idx_appointments_beneficiary_id ON appointments(beneficiary_id)",
    "database_optimization.message.create_index_if_not_exists_idx_11": "CREATE INDEX IF NOT EXISTS idx_appointments_trainer_id ON appointments(trainer_id)",
    "database_optimization.message.create_index_if_not_exists_idx_12": "CREATE INDEX IF NOT EXISTS idx_appointments_start_time ON appointments(start_time)",
    "database_optimization.message.create_index_if_not_exists_idx_13": "CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status)",
    "database_optimization.message.create_index_if_not_exists_idx_14": "CREATE INDEX IF NOT EXISTS idx_documents_owner_id ON documents(owner_id)",
    "database_optimization.message.create_index_if_not_exists_idx_15": "CREATE INDEX IF NOT EXISTS idx_documents_category ON documents(category)",
    "database_optimization.message.create_index_if_not_exists_idx_16": "CREATE INDEX IF NOT EXISTS idx_beneficiaries_trainer_status ON beneficiaries(trainer_id, status)",
    "database_optimization.message.create_index_if_not_exists_idx_17": "CREATE INDEX IF NOT EXISTS idx_evaluations_beneficiary_status ON evaluations(beneficiary_id, status)",
    "database_optimization.message.create_index_if_not_exists_idx_18": "CREATE INDEX IF NOT EXISTS idx_appointments_trainer_date ON appointments(trainer_id, start_time)",
    "database_optimization.message.setup_partitioning_for_large_t": "Setup partitioning for large tables",
    "database_optimization.message.configure_database_connection": "Configure database connection pooling",
    "database_optimization.message.generate_execution_plans_for_c": "Generate execution plans for common queries",
    "database_optimization.message.2024_01_01": "2024-01-01",
    "database_optimization.message.2024_12_31": "2024-12-31",
    "database_optimization.message.create_materialized_views_for": "Create materialized views for complex queries",
    "database_optimization.message.256m": "256M",
    "database_optimization.message.": " = '",
    "database_optimization.message._1": " = ",
    "database_optimization.message.postgresql_user_pass_localho": "postgresql://user:pass@localhost/bdc",
    "database_optimization.message.ms": "ms)",
    "database___init__.message.database_utilities_module_pro": "\nDatabase utilities module providing backup, migration, \noptimization, indexing, and other database management functionalities.\n",
    "database_migrations.message.create_a_new_migration": "Create a new migration",
    "database_migrations.message.migration_s": " migration(s)",
    "database_migrations.message.get_current_database_revision": "Get current database revision",
    "database_migrations.message.create_database_backup_before": "Create database backup before migration",
    "database_migrations.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "database_migrations.message.pg_dump": "pg_dump ",
    "database_migrations.message.": " > ",
    "database_migrations.message.mysqldump": "mysqldump ",
    "database_migrations.message._1": " > ",
    "database_migrations.message.backup_not_supported_for_this": "Backup not supported for this database type",
    "database_migrations.message.check_for_potential_migration": "Check for potential migration conflicts",
    "database_migrations.message.generate_migration_status_repo": "Generate migration status report",
    "database_migrations.message.base_class_for_custom_migratio": "Base class for custom migration scripts",
    "database_migrations.message.migration_to_add_performance_i": "Migration to add performance indexes",
    "database_migrations.message.postgresql_user_pass_localho": "postgresql://user:pass@localhost/bdc",
    "monitoring_performance_metrics.message.performance_metrics_collectio": "\nPerformance metrics collection for BDC application\n",
    "monitoring_performance_metrics.message.collect_and_analyze_performanc": "Collect and analyze performance metrics",
    "monitoring_performance_metrics.message.initialize_with_flask_app": "Initialize with Flask app",
    "monitoring_performance_metrics.message.track_request_start_time": "Track request start time",
    "monitoring_performance_metrics.message.store_metrics_in_redis": "Store metrics in Redis",
    "monitoring_performance_metrics.message.metrics_requests": "metrics:requests:",
    "monitoring_performance_metrics.message.y_m_d": "%Y%m%d",
    "monitoring_performance_metrics.message.y_m_d_h": "%Y%m%d%H",
    "monitoring_performance_metrics.message.metrics_counts": "metrics:counts:",
    "monitoring_performance_metrics.message.metrics_response_times": "metrics:response_times:",
    "monitoring_performance_metrics.message.metrics": "metrics:",
    "monitoring_performance_metrics.message.handle_slow_request_detection": "Handle slow request detection",
    "monitoring_performance_metrics.message.took": " took ",
    "monitoring_performance_metrics.message.metrics_slow_requests": "metrics:slow_requests",
    "monitoring_performance_metrics.message.metrics_slow_requests_1": "metrics:slow_requests",
    "monitoring_performance_metrics.message.context_manager_for_measuring": "Context manager for measuring operation performance",
    "monitoring_performance_metrics.message.metrics_operations": "metrics:operations:",
    "monitoring_performance_metrics.message.metrics_operations_1": "metrics:operations:",
    "monitoring_performance_metrics.message.store_system_metrics_in_redis": "Store system metrics in Redis",
    "monitoring_performance_metrics.message.metrics_system": "metrics:system:",
    "monitoring_performance_metrics.message.y_m_d_h_1": "%Y%m%d%H",
    "monitoring_performance_metrics.message.store_process_metrics_in_redis": "Store process metrics in Redis",
    "monitoring_performance_metrics.message.metrics_process": "metrics:process:",
    "monitoring_performance_metrics.message.y_m_d_h_2": "%Y%m%d%H",
    "monitoring_performance_metrics.message.check_if_system_metrics_exceed": "Check if system metrics exceed thresholds",
    "monitoring_performance_metrics.message.": " - ",
    "monitoring_performance_metrics.message.alerts_performance": "alerts:performance",
    "monitoring_performance_metrics.message.alerts_performance_1": "alerts:performance",
    "monitoring_performance_metrics.message.get_performance_summary_for_ti": "Get performance summary for time period",
    "monitoring_performance_metrics.message.get_detailed_performance_metri": "Get detailed performance metrics for specific endpoint",
    "monitoring_performance_metrics.message.p50": "p50",
    "monitoring_performance_metrics.message.p75": "p75",
    "monitoring_performance_metrics.message.p90": "p90",
    "monitoring_performance_metrics.message.p95": "p95",
    "monitoring_performance_metrics.message.p99": "p99",
    "monitoring_performance_metrics.message.start_background_monitoring_th": "Start background monitoring thread",
    "monitoring_performance_metrics.message.show_current_system_metrics": "Show current system metrics",
    "monitoring_error_tracking.message.clean_up_after_request": "Clean up after request",
    "monitoring_error_tracking.message.": " - ",
    "monitoring_error_tracking.message.count": "\nCount: ",
    "monitoring_error_tracking.message.seconds_threshold": " seconds\nThreshold: ",
    "monitoring_error_tracking.message.alert": "alert:",
    "monitoring_error_tracking.message.get_current_request_context": "Get current request context",
    "monitoring_error_tracking.message.get_current_user_id_if_availab": "Get current user ID if available",
    "monitoring_error_tracking.message.generate_unique_request_id": "Generate unique request ID",
    "monitoring_error_tracking.message.get_total_request_count_for_ti": "Get total request count for time period",
    "monitoring_error_tracking.message.type": "# TYPE ",
    "monitoring_error_tracking.message.gauge": " gauge",
    "monitoring_alarm_system.message.alarm_system_for_bdc_applicat": "\nAlarm system for BDC application monitoring\n",
    "monitoring_alarm_system.message.central_alarm_system_for_monit": "Central alarm system for monitoring",
    "monitoring_alarm_system.message.initialize_with_flask_app": "Initialize with Flask app",
    "monitoring_alarm_system.message.high_average_response_time": "High average response time",
    "monitoring_alarm_system.message.register_metric_evaluation_fun": "Register metric evaluation functions",
    "monitoring_alarm_system.message.remove_an_alarm_rule": "Remove an alarm rule",
    "monitoring_alarm_system.message.evaluate_all_metrics_against_a": "Evaluate all metrics against alarm rules",
    "monitoring_alarm_system.message.no_evaluator_for_metric_type": "No evaluator for metric type: ",
    "monitoring_alarm_system.message.check_if_value_crosses_thresho": "Check if value crosses threshold",
    "monitoring_alarm_system.message.handle_alarm_state_transitions": "Handle alarm state transitions",
    "monitoring_alarm_system.message.alarm": "alarm:",
    "monitoring_alarm_system.message.notification": " notification: ",
    "monitoring_alarm_system.message.check_if_alarm_is_in_cooldown": "Check if alarm is in cooldown period",
    "monitoring_alarm_system.message.alarm_cooldown": "alarm:cooldown:",
    "monitoring_alarm_system.message.set_cooldown_for_alarm": "Set cooldown for alarm",
    "monitoring_alarm_system.message.alarm_cooldown_1": "alarm:cooldown:",
    "monitoring_alarm_system.message.record_alarm_event_in_history": "Record alarm event in history",
    "monitoring_alarm_system.message.alarm_history": "alarm:history:",
    "monitoring_alarm_system.message.y_m_d": "%Y%m%d",
    "monitoring_alarm_system.message.evaluate_average_response_time": "Evaluate average response time",
    "monitoring_alarm_system.message.evaluate_cpu_usage_percentage": "Evaluate CPU usage percentage",
    "monitoring_alarm_system.message.evaluate_memory_usage_percenta": "Evaluate memory usage percentage",
    "monitoring_alarm_system.message.evaluate_free_disk_space_perce": "Evaluate free disk space percentage",
    "monitoring_alarm_system.message.no_email_recipients_configured": "No email recipients configured for alarms",
    "monitoring_alarm_system.message.alert_details": "\n            Alert Details:\n            \n            Type: ",
    "monitoring_alarm_system.message.severity": "\n            Severity: ",
    "monitoring_alarm_system.message.description": "\n            Description: ",
    "monitoring_alarm_system.message.metric_value": "\n            Metric Value: ",
    "monitoring_alarm_system.message.threshold": "\n            Threshold: ",
    "monitoring_alarm_system.message.time": "\n            Time: ",
    "monitoring_alarm_system.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "monitoring_alarm_system.message.pre": "<pre>",
    "monitoring_alarm_system.message.pre_1": "</pre>",
    "monitoring_alarm_system.message.email_notifications_sent_to": "Email notifications sent to ",
    "monitoring_alarm_system.message.recipients": " recipients",
    "monitoring_alarm_system.message.no_slack_webhook_url_configure": "No Slack webhook URL configured",
    "monitoring_alarm_system.message.no_webhook_url_configured_for": "No webhook URL configured for alarms",
    "monitoring_alarm_system.message.webhook_notification_sent_to": "Webhook notification sent to ",
    "monitoring_alarm_system.message.twilio_credentials_not_configu": "Twilio credentials not configured for SMS notifications",
    "monitoring_alarm_system.message.no_sms_recipients_configured_f": "No SMS recipients configured for alarms",
    "monitoring_alarm_system.message.severity_1": "\nSeverity: ",
    "monitoring_alarm_system.message.value": "\nValue: ",
    "monitoring_alarm_system.message.threshold_1": "\nThreshold: ",
    "monitoring_alarm_system.message.sms_notification_sent_to": "SMS notification sent to ",
    "monitoring_alarm_system.message.twilio_library_not_installed_f": "Twilio library not installed for SMS notifications",
    "monitoring_alarm_system.message.acknowledge_an_active_alarm": "Acknowledge an active alarm",
    "monitoring_alarm_system.message.alarm_1": "alarm:",
    "monitoring_alarm_system.message.silence_an_alarm_for_specified": "Silence an alarm for specified duration",
    "monitoring_alarm_system.message.alarm_silence": "alarm:silence:",
    "monitoring_alarm_system.message.alarm_2": "alarm:",
    "monitoring_alarm_system.message.get_list_of_active_alarms": "Get list of active alarms",
    "monitoring_alarm_system.message.get_alarm_history_for_specifie": "Get alarm history for specified period",
    "monitoring_alarm_system.message.get_active_alarms_endpoint": "Get active alarms endpoint",
    "monitoring_alarm_system.message.get_alarm_history_endpoint": "Get alarm history endpoint",
    "monitoring_app_monitoring.message.number_of_active_users": "Number of active users",
    "monitoring_app_monitoring.message.number_of_database_connections": "Number of database connections",
    "monitoring_app_monitoring.message.application_monitoring_and_met": "Application monitoring and metrics collection",
    "monitoring_app_monitoring.message.initialize_monitoring_for_flas": "Initialize monitoring for Flask app",
    "monitoring_app_monitoring.message.log_request_completion_and_met": "Log request completion and metrics",
    "monitoring_app_monitoring.message.": "] [",
    "monitoring_app_monitoring.message.s": "s] [",
    "monitoring_app_monitoring.message.generate_unique_request_id": "Generate unique request ID",
    "monitoring_app_monitoring.message.get_application_uptime_in_seco": "Get application uptime in seconds",
    "monitoring_app_monitoring.message.get_application_health_status": "Get application health status",
    "monitoring_app_monitoring.message.decorator_to_monitor_function": "Decorator to monitor function performance",
    "monitoring_app_monitoring.message.s_1": "s: ",
    "monitoring_app_monitoring.message.get_profile_data_for_function": "Get profile data for function",
    "monitoring_app_monitoring.message.save_profiles_to_file": "Save profiles to file",
    "monitoring_app_monitoring.message.collect_and_aggregate_metrics": "Collect and aggregate metrics",
    "monitoring_app_monitoring.message.metrics": "metrics:",
    "monitoring_app_monitoring.message.record_a_metric_value": "Record a metric value",
    "monitoring_app_monitoring.message.timeline": ":timeline",
    "monitoring_app_monitoring.message.get_metrics_within_time_range": "Get metrics within time range",
    "monitoring_app_monitoring.message.timeline_1": ":timeline",
    "monitoring_app_monitoring.message.aggregate_metrics_within_time": "Aggregate metrics within time range",
    "monitoring_app_monitoring.message.create_health_check_endpoint": "Create health check endpoint",
    "repositories_document_repository.message.find_documents_by_uploader_id": "Find documents by uploader ID.",
    "repositories_document_repository.message.find_documents_by_beneficiary": "Find documents by beneficiary ID.",
    "repositories_document_repository.message.find_documents_by_evaluation_i": "Find documents by evaluation ID.",
    "repositories_document_repository.message.find_documents_by_type": "Find documents by type.",
    "repositories_document_repository.message.find_all_active_documents": "Find all active documents.",
    "repositories_document_repository.message.search_documents_by_title_and": "Search documents by title and description.",
    "repositories_document_repository.message.create_a_new_document": "Create a new document.",
    "repositories_document_repository.message.find_all_documents_with_option": "Find all documents with optional pagination.",
    "repositories_base_repository.message.initialize_repository": "Initialize repository.\n        \n        Args:\n            model_class: The SQLAlchemy model class\n            db_session: Database session (optional, defaults to db.session)\n        ",
    "repositories_base_repository.message.find_entity_by_id": "Find entity by ID.",
    "repositories_base_repository.message.find_all_entities_with_optiona": "Find all entities with optional filtering and pagination.",
    "repositories_base_repository.message.create_a_new_entity": "Create a new entity.",
    "repositories_base_repository.message.count_entities_with_optional_f": "Count entities with optional filtering.",
    "repositories_base_repository.message.apply_filters_to_query": "Apply filters to query.",
    "repositories_base_repository.message.apply_sorting_to_query": "Apply sorting to query.",
    "repositories_program_repository.message.find_programs_by_tenant_id": "Find programs by tenant ID.",
    "repositories_program_repository.message.find_programs_by_trainer_id": "Find programs by trainer ID.",
    "repositories_program_repository.message.find_programs_by_status": "Find programs by status.",
    "repositories_program_repository.message.find_all_active_programs": "Find all active programs.",
    "repositories_program_repository.message.find_programs_by_category": "Find programs by category.",
    "repositories_program_repository.message.find_program_with_enrollments": "Find program with enrollments.",
    "repositories_program_repository.message.enroll_beneficiary_in_program": "Enroll beneficiary in program.",
    "repositories_program_repository.message.create_a_new_program": "Create a new program.",
    "repositories_program_repository.message.find_all_programs_with_optiona": "Find all programs with optional pagination.",
    "repositories_improved_user_repository.message.improved_user_repository_imple": "Improved user repository implementation.",
    "repositories_improved_user_repository.message.improved_user_repository_imple_1": "Improved user repository implementation.",
    "repositories_improved_user_repository.message.find_user_by_email": "Find user by email.",
    "repositories_improved_user_repository.message.find_user_by_username": "Find user by username.",
    "repositories_improved_user_repository.message.find_all_users_with_optional_p": "Find all users with optional pagination.",
    "repositories_improved_user_repository.message.find_users_by_role": "Find users by role.",
    "repositories_improved_user_repository.message.find_users_by_tenant": "Find users by tenant.",
    "repositories_improved_user_repository.message.find_all_active_users": "Find all active users.",
    "repositories_improved_user_repository.message.create_a_new_user": "Create a new user.",
    "repositories_improved_user_repository.message.check_if_user_exists_by_email": "Check if user exists by email.",
    "repositories_improved_user_repository.message.check_if_user_exists_by_userna": "Check if user exists by username.",
    "repositories_beneficiary_repository.message.repository_implementation_for": "Repository implementation for Beneficiary entity.",
    "repositories_beneficiary_repository.message.repository_implementation_for_1": "Repository implementation for Beneficiary entity.",
    "repositories_beneficiary_repository.message.initialize_the_repository_with": "Initialize the repository with a database session.",
    "repositories_beneficiary_repository.message.create_a_new_beneficiary": "Create a new beneficiary.",
    "repositories_beneficiary_repository.message.get_a_beneficiary_by_id": "Get a beneficiary by ID.",
    "repositories_beneficiary_repository.message.get_a_beneficiary_by_user_id": "Get a beneficiary by user ID.",
    "repositories_beneficiary_repository.message.get_beneficiaries_by_trainer_i": "Get beneficiaries by trainer ID with pagination.",
    "repositories_beneficiary_repository.message.get_all_beneficiaries_with_opt": "Get all beneficiaries with optional filters and pagination.",
    "repositories_beneficiary_repository.message.count_beneficiaries_for_a_user": "Count beneficiaries for a user.",
    "repositories_beneficiary_repository.message.get_a_beneficiary_by_phone_num": "Get a beneficiary by phone number.",
    "repositories_beneficiary_repository.message.get_beneficiaries_by_caregiver": "Get beneficiaries by caregiver ID.",
    "repositories_evaluation_repository.message.find_evaluations_by_beneficiar": "Find evaluations by beneficiary ID.",
    "repositories_evaluation_repository.message.find_evaluations_by_trainer_id": "Find evaluations by trainer ID.",
    "repositories_evaluation_repository.message.find_evaluations_by_status": "Find evaluations by status.",
    "repositories_evaluation_repository.message.find_evaluations_by_test_id": "Find evaluations by test ID.",
    "repositories_evaluation_repository.message.find_evaluations_by_tenant_id": "Find evaluations by tenant ID.",
    "repositories_evaluation_repository.message.add_feedback_to_evaluation": "Add feedback to evaluation.",
    "repositories_evaluation_repository.message.create_a_new_evaluation": "Create a new evaluation.",
    "repositories_evaluation_repository.message.find_all_evaluations_with_opti": "Find all evaluations with optional pagination.",
    "repositories_notification_repository.message.get_user_notifications_with_fi": "Get user notifications with filtering options.",
    "repositories_notification_repository.message.find_notifications_by_user_id": "Find notifications by user ID.",
    "repositories_notification_repository.message.find_unread_notifications_by_u": "Find unread notifications by user ID.",
    "repositories_notification_repository.message.find_notifications_by_type_for": "Find notifications by type for a user.",
    "repositories_notification_repository.message.find_notifications_by_priority": "Find notifications by priority for a user.",
    "repositories_notification_repository.message.mark_notification_as_read": "Mark notification as read.",
    "repositories_notification_repository.message.mark_multiple_notifications_as": "Mark multiple notifications as read.",
    "repositories_notification_repository.message.mark_all_user_notifications_as": "Mark all user notifications as read.",
    "repositories_notification_repository.message.get_count_of_unread_notificati": "Get count of unread notifications.",
    "repositories_notification_repository.message.count_notifications_for_a_user": "Count notifications for a user.",
    "repositories_notification_repository.message.create_a_new_notification": "Create a new notification.",
    "repositories_notification_repository.message.find_all_notifications_with_op": "Find all notifications with optional pagination.",
    "repositories_user_repository.message.repository_for_user_data_acces": "Repository for user data access.",
    "repositories_user_repository.message.initialize_user_repos": "\n        Initialize user repository.\n        \n        Args:\n            db_session: SQLAlchemy database session\n        ",
    "repositories_user_repository.message.find_user_by_id": "Find user by ID.",
    "repositories_user_repository.message.find_user_by_email": "Find user by email.",
    "repositories_user_repository.message.find_user_by_username": "Find user by username.",
    "repositories_user_repository.message.find_all_users_with_optional_p": "Find all users with optional pagination.",
    "repositories_user_repository.message.find_users_by_role": "Find users by role.",
    "repositories_user_repository.message.create_a_new_user": "Create a new user.",
    "repositories_user_repository.message.check_if_user_exists_by_email": "Check if user exists by email.",
    "repositories_user_repository.message.check_if_user_exists_by_userna": "Check if user exists by username.",
    "repositories_calendar_repository.message.find_appointments_by_user_id": "Find appointments by user ID.",
    "repositories_calendar_repository.message.find_appointments_by_beneficia": "Find appointments by beneficiary ID.",
    "repositories_calendar_repository.message.find_appointments_by_date_rang": "Find appointments by date range.",
    "repositories_calendar_repository.message.find_appointments_by_status": "Find appointments by status.",
    "repositories_calendar_repository.message.create_a_new_appointment": "Create a new appointment.",
    "repositories_calendar_repository.message.find_all_appointments_with_opt": "Find all appointments with optional pagination.",
    "repositories_appointment_repository.message.initialize_with_database_sessi": "Initialize with database session.",
    "repositories_appointment_repository.message.find_appointment_by_id": "Find appointment by ID.",
    "repositories_appointment_repository.message.find_all_appointments_matching": "Find all appointments matching filters with pagination.",
    "repositories_appointment_repository.message.create_a_new_appointment": "Create a new appointment.",
    "repositories_appointment_repository.message.find_appointments_for_a_benefi": "Find appointments for a beneficiary.",
    "repositories_appointment_repository.message.find_appointments_for_a_traine": "Find appointments for a trainer.",
    "repositories_sms_repository.message.sms_repository_for_database_op": "SMS repository for database operations.",
    "repositories_sms_repository.message.create_a_new_sms_message_recor": "Create a new SMS message record.",
    "repositories_sms_repository.message.get_an_sms_message_by_id": "Get an SMS message by ID.",
    "repositories_sms_repository.message.get_sms_messages_by_status": "Get SMS messages by status.",
    "repositories_sms_repository.message.get_scheduled_messages_that_ne": "Get scheduled messages that need to be sent.",
    "repositories_sms_repository.message.get_sms_messages_for_a_specifi": "Get SMS messages for a specific user.",
    "repositories_sms_repository.message.get_sms_messages_by_phone_numb": "Get SMS messages by phone number.",
    "repositories_sms_repository.message.get_sms_messages_for_a_specifi_1": "Get SMS messages for a specific campaign.",
    "repositories_sms_repository.message.count_sms_messages_by_status": "Count SMS messages by status.",
    "repositories_sms_repository.message.get_cost_summary_for_sms_messa": "Get cost summary for SMS messages.",
    "repositories_sms_repository.message.repository_for_sms_template_op": "Repository for SMS template operations.",
    "repositories_sms_repository.message.create_a_new_sms_template": "Create a new SMS template.",
    "repositories_sms_repository.message.get_an_sms_template_by_id": "Get an SMS template by ID.",
    "repositories_sms_repository.message.get_an_sms_template_by_templat": "Get an SMS template by template ID.",
    "repositories_sms_repository.message.get_active_sms_templates": "Get active SMS templates.",
    "repositories_sms_repository.message.repository_for_sms_campaign_op": "Repository for SMS campaign operations.",
    "repositories_sms_repository.message.create_a_new_sms_campaign": "Create a new SMS campaign.",
    "repositories_sms_repository.message.get_an_sms_campaign_by_id": "Get an SMS campaign by ID.",
    "repositories_sms_repository.message.get_scheduled_campaigns_that_n": "Get scheduled campaigns that need to be executed.",
    "repositories_sms_repository.message.get_campaigns_for_a_specific_t": "Get campaigns for a specific tenant.",
    "v2_base_repository.message.base_repository_with_common_cr": "Base repository with common CRUD implementations.",
    "v2_base_repository.message.initialize_repository_with_dat": "Initialize repository with database session and model class.",
    "v2_base_repository.message.find_entity_by_id": "Find entity by ID.",
    "v2_base_repository.message.find_all_entities_with_paginat": "Find all entities with pagination.",
    "v2_base_repository.message.find_entities_by_given_criteri": "Find entities by given criteria.",
    "v2_base_repository.message.find_single_entity_by_given_cr": "Find single entity by given criteria.",
    "v2_base_repository.message.count_entities_matching_criter": "Count entities matching criteria.",
    "v2_base_repository.message.check_if_entity_exists_matchin": "Check if entity exists matching criteria.",
    "v2_program_repository.message.concrete_implementation_of_pro": "Concrete implementation of program repository.",
    "v2_program_repository.message.program_repository_with_concre": "Program repository with concrete implementations.",
    "v2_program_repository.message.find_program_by_name": "Find program by name.",
    "v2_program_repository.message.find_all_active_programs": "Find all active programs.",
    "v2_program_repository.message.find_programs_by_category": "Find programs by category.",
    "v2_program_repository.message.search_programs_with_filters": "Search programs with filters.",
    "v2_program_repository.message.get_statistics_for_a_program": "Get statistics for a program.",
    "v2_program_repository.message.enroll_a_beneficiary_in_a_prog": "Enroll a beneficiary in a program.",
    "v2_program_repository.message.get_all_enrollments_for_a_prog": "Get all enrollments for a program.",
    "v2_program_repository.message.get_all_program_enrollments_fo": "Get all program enrollments for a beneficiary.",
    "v2_program_repository.message.get_programs_starting_in_the_n": "Get programs starting in the next N days.",
    "v2_beneficiary_repository.message.concrete_implementation_of_ben": "Concrete implementation of beneficiary repository.",
    "v2_beneficiary_repository.message.beneficiary_repository_with_co": "Beneficiary repository with concrete implementations.",
    "v2_beneficiary_repository.message.find_beneficiary_by_email_addr": "Find beneficiary by email address.",
    "v2_beneficiary_repository.message.find_beneficiary_by_phone_numb": "Find beneficiary by phone number.",
    "v2_beneficiary_repository.message.find_beneficiary_by_national_i": "Find beneficiary by national ID.",
    "v2_beneficiary_repository.message.search_beneficiaries_with_quer": "Search beneficiaries with query and filters.",
    "v2_beneficiary_repository.message.get_all_active_beneficiaries": "Get all active beneficiaries.",
    "v2_beneficiary_repository.message.get_all_inactive_beneficiaries": "Get all inactive beneficiaries.",
    "v2_beneficiary_repository.message.get_beneficiaries_enrolled_in": "Get beneficiaries enrolled in a specific program.",
    "v2_beneficiary_repository.message.count_beneficiaries_by_status": "Count beneficiaries by status.",
    "v2_beneficiary_repository.message.count_beneficiaries_by_city": "Count beneficiaries by city.",
    "v2_beneficiary_repository.message.add_a_note_to_a_beneficiary": "Add a note to a beneficiary.",
    "v2_beneficiary_repository.message.get_notes_for_a_beneficiary": "Get notes for a beneficiary.",
    "v2_beneficiary_repository.message.add_a_document_to_a_beneficiar": "Add a document to a beneficiary.",
    "v2_beneficiary_repository.message.get_documents_for_a_beneficiar": "Get documents for a beneficiary.",
    "v2_beneficiary_repository.message.schedule_an_appointment_for_a": "Schedule an appointment for a beneficiary.",
    "v2_beneficiary_repository.message.get_appointments_for_a_benefic": "Get appointments for a beneficiary.",
    "v2_beneficiary_repository.message.cancellation_reason": "\nCancellation reason: ",
    "v2_user_repository.message.user_repository_with_concrete": "User repository with concrete implementations.",
    "v2_user_repository.message.find_user_by_email_address": "Find user by email address.",
    "v2_user_repository.message.find_all_users_for_a_specific": "Find all users for a specific tenant.",
    "v2_user_repository.message.find_users_by_role_optionally": "Find users by role, optionally filtered by tenant.",
    "v2_user_repository.message.find_all_active_users": "Find all active users.",
    "v2_user_repository.message.find_user_by_password_reset_to": "Find user by password reset token.",
    "v2_user_repository.message.search_users_by_name_or_email": "Search users by name or email.",
    "interfaces_base_repository_interface.message.base_repository_interface_for": "Base repository interface for all repositories.",
    "interfaces_base_repository_interface.message.base_repository_interface_with": "Base repository interface with common CRUD operations.",
    "interfaces_base_repository_interface.message.initialize_repository_with_dat": "Initialize repository with database session.",
    "interfaces_base_repository_interface.message.find_entity_by_id": "Find entity by ID.",
    "interfaces_base_repository_interface.message.find_all_entities_with_paginat": "Find all entities with pagination.",
    "interfaces_base_repository_interface.message.find_entities_by_given_criteri": "Find entities by given criteria.",
    "interfaces_base_repository_interface.message.find_single_entity_by_given_cr": "Find single entity by given criteria.",
    "interfaces_base_repository_interface.message.count_entities_matching_criter": "Count entities matching criteria.",
    "interfaces_base_repository_interface.message.check_if_entity_exists_matchin": "Check if entity exists matching criteria.",
    "interfaces_document_repository_interface.message.document_repository_interface": "Document repository interface with document-specific operations.",
    "interfaces_document_repository_interface.message.find_all_documents_for_a_benef": "Find all documents for a beneficiary.",
    "interfaces_document_repository_interface.message.find_all_documents_in_a_folder": "Find all documents in a folder.",
    "interfaces_document_repository_interface.message.find_all_documents_uploaded_by": "Find all documents uploaded by a user.",
    "interfaces_document_repository_interface.message.find_all_documents_of_a_specif": "Find all documents of a specific type.",
    "interfaces_document_repository_interface.message.search_documents_with_filters": "Search documents with filters.",
    "interfaces_document_repository_interface.message.create_a_new_folder": "Create a new folder.",
    "interfaces_document_repository_interface.message.get_folders_optionally_filter": "Get folders, optionally filtered by parent.",
    "interfaces_document_repository_interface.message.move_document_to_a_folder": "Move document to a folder.",
    "interfaces_document_repository_interface.message.share_document_with_a_user": "Share document with a user.",
    "interfaces_document_repository_interface.message.get_documents_shared_with_a_us": "Get documents shared with a user.",
    "interfaces_document_repository_interface.message.get_all_shares_for_a_document": "Get all shares for a document.",
    "interfaces_document_repository_interface.message.get_documents_expiring_in_the": "Get documents expiring in the next N days.",
    "interfaces_beneficiary_repository_interface.message.beneficiary_repository_interfa": "Beneficiary repository interface with beneficiary-specific operations.",
    "interfaces_beneficiary_repository_interface.message.find_beneficiary_by_user_id": "Find beneficiary by user ID.",
    "interfaces_beneficiary_repository_interface.message.find_all_beneficiaries_for_a_t": "Find all beneficiaries for a tenant.",
    "interfaces_beneficiary_repository_interface.message.find_all_beneficiaries_assigne": "Find all beneficiaries assigned to a trainer.",
    "interfaces_beneficiary_repository_interface.message.search_beneficiaries_with_filt": "Search beneficiaries with filters. Returns (results, total_count).",
    "interfaces_beneficiary_repository_interface.message.find_beneficiaries_by_status": "Find beneficiaries by status.",
    "interfaces_beneficiary_repository_interface.message.add_note_to_beneficiary": "Add note to beneficiary.",
    "interfaces_beneficiary_repository_interface.message.add_document_to_beneficiary": "Add document to beneficiary.",
    "interfaces_beneficiary_repository_interface.message.schedule_appointment_for_benef": "Schedule appointment for beneficiary.",
    "interfaces_beneficiary_repository_interface.message.get_beneficiary_statistics_for": "Get beneficiary statistics for tenant.",
    "interfaces_evaluation_repository_interface.message.evaluation_repository_interfac": "Evaluation repository interface with evaluation-specific operations.",
    "interfaces_evaluation_repository_interface.message.find_all_evaluations_for_a_ben": "Find all evaluations for a beneficiary.",
    "interfaces_evaluation_repository_interface.message.find_all_evaluations_by_an_eva": "Find all evaluations by an evaluator.",
    "interfaces_evaluation_repository_interface.message.find_all_evaluations_for_a_pro": "Find all evaluations for a program.",
    "interfaces_evaluation_repository_interface.message.find_pending_evaluations_opti": "Find pending evaluations, optionally filtered by beneficiary.",
    "interfaces_evaluation_repository_interface.message.get_results_for_an_evaluation": "Get results for an evaluation.",
    "interfaces_evaluation_repository_interface.message.calculate_total_score_for_an_e": "Calculate total score for an evaluation.",
    "interfaces_program_repository_interface.message.program_repository_interface_w": "Program repository interface with program-specific operations.",
    "interfaces_program_repository_interface.message.find_program_by_name": "Find program by name.",
    "interfaces_program_repository_interface.message.find_all_active_programs": "Find all active programs.",
    "interfaces_program_repository_interface.message.find_programs_by_category": "Find programs by category.",
    "interfaces_program_repository_interface.message.search_programs_with_filters": "Search programs with filters.",
    "interfaces_program_repository_interface.message.get_statistics_for_a_program": "Get statistics for a program.",
    "interfaces_program_repository_interface.message.enroll_a_beneficiary_in_a_prog": "Enroll a beneficiary in a program.",
    "interfaces_program_repository_interface.message.get_all_enrollments_for_a_prog": "Get all enrollments for a program.",
    "interfaces_program_repository_interface.message.get_all_program_enrollments_fo": "Get all program enrollments for a beneficiary.",
    "interfaces_program_repository_interface.message.get_programs_starting_in_the_n": "Get programs starting in the next N days.",
    "interfaces_user_repository_interface.message.user_repository_interface_with": "User repository interface with user-specific operations.",
    "interfaces_user_repository_interface.message.find_user_by_email_address": "Find user by email address.",
    "interfaces_user_repository_interface.message.find_all_users_for_a_specific": "Find all users for a specific tenant.",
    "interfaces_user_repository_interface.message.find_users_by_role_optionally": "Find users by role, optionally filtered by tenant.",
    "interfaces_user_repository_interface.message.find_all_active_users": "Find all active users.",
    "interfaces_user_repository_interface.message.find_user_by_password_reset_to": "Find user by password reset token.",
    "interfaces_user_repository_interface.message.search_users_by_name_or_email": "Search users by name or email.",
    "interfaces_notification_repository_interface.message.interface_for_notification_rep": "Interface for notification repository operations.",
    "interfaces_notification_repository_interface.message.interface_for_notification_rep_1": "Interface for notification repository.",
    "interfaces_notification_repository_interface.message.create_a_new_notification": "Create a new notification.",
    "interfaces_notification_repository_interface.message.find_notification_by_id": "Find notification by ID.",
    "interfaces_notification_repository_interface.message.get_user_notifications_with_fi": "Get user notifications with filtering options.",
    "interfaces_notification_repository_interface.message.mark_notification_as_read": "Mark notification as read.",
    "interfaces_notification_repository_interface.message.mark_all_user_notifications_as": "Mark all user notifications as read.",
    "interfaces_notification_repository_interface.message.get_count_of_unread_notificati": "Get count of unread notifications.",
    "interfaces_base_repository_interface.message.find_entity_by_id_1": "Find entity by ID.",
    "interfaces_base_repository_interface.message.find_all_entities_with_optiona": "Find all entities with optional filtering and pagination.",
    "interfaces_base_repository_interface.message.create_a_new_entity": "Create a new entity.",
    "interfaces_base_repository_interface.message.count_entities_with_optional_f": "Count entities with optional filtering.",
    "interfaces_document_repository_interface.message.interface_for_document_reposit": "Interface for document repository operations.",
    "interfaces_document_repository_interface.message.find_documents_by_uploader_id": "Find documents by uploader ID.\n        \n        Args:\n            uploader_id: Uploader ID\n            \n        Returns:\n            List of document instances\n        ",
    "interfaces_document_repository_interface.message.find_documents_by_beneficiary": "Find documents by beneficiary ID.\n        \n        Args:\n            beneficiary_id: Beneficiary ID\n            \n        Returns:\n            List of document instances\n        ",
    "interfaces_document_repository_interface.message.find_documents_by_evaluation_i": "Find documents by evaluation ID.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            \n        Returns:\n            List of document instances\n        ",
    "interfaces_document_repository_interface.message.find_documents_by_type": "Find documents by type.\n        \n        Args:\n            document_type: Document type\n            \n        Returns:\n            List of document instances\n        ",
    "interfaces_document_repository_interface.message.find_all_active_documents": "Find all active documents.\n        \n        Returns:\n            List of active document instances\n        ",
    "interfaces_document_repository_interface.message.search_documents_by_title_and": "Search documents by title and description.\n        \n        Args:\n            query: Search query\n            document_type: Optional document type filter\n            uploader_id: Optional uploader ID filter\n            \n        Returns:\n            List of matching document instances\n        ",
    "interfaces_document_repository_interface.message.get_document_statistics": "Get document statistics.\n        \n        Args:\n            uploader_id: Optional uploader ID filter\n            \n        Returns:\n            Dictionary with document statistics\n        ",
    "interfaces_evaluation_repository_interface.message.interface_for_evaluation_repos": "Interface for evaluation repository operations.",
    "interfaces_evaluation_repository_interface.message.find_evaluations_by_beneficiar": "Find evaluations by beneficiary ID.\n        \n        Args:\n            beneficiary_id: Beneficiary ID\n            \n        Returns:\n            List of evaluation instances\n        ",
    "interfaces_evaluation_repository_interface.message.find_evaluations_by_trainer_id": "Find evaluations by trainer ID.\n        \n        Args:\n            trainer_id: Trainer ID\n            \n        Returns:\n            List of evaluation instances\n        ",
    "interfaces_evaluation_repository_interface.message.find_evaluations_by_status": "Find evaluations by status.\n        \n        Args:\n            status: Evaluation status\n            \n        Returns:\n            List of evaluation instances\n        ",
    "interfaces_evaluation_repository_interface.message.find_evaluations_by_test_id": "Find evaluations by test ID.\n        \n        Args:\n            test_id: Test ID\n            \n        Returns:\n            List of evaluation instances\n        ",
    "interfaces_evaluation_repository_interface.message.find_evaluations_by_tenant_id": "Find evaluations by tenant ID.\n        \n        Args:\n            tenant_id: Tenant ID\n            \n        Returns:\n            List of evaluation instances\n        ",
    "interfaces_calendar_repository_interface.message.interface_for_calendar_appoint": "Interface for calendar/appointment repository operations.",
    "interfaces_calendar_repository_interface.message.find_appointments_by_user_id": "Find appointments by user ID.\n        \n        Args:\n            user_id: User ID\n            \n        Returns:\n            List of appointment instances\n        ",
    "interfaces_calendar_repository_interface.message.find_appointments_by_beneficia": "Find appointments by beneficiary ID.\n        \n        Args:\n            beneficiary_id: Beneficiary ID\n            \n        Returns:\n            List of appointment instances\n        ",
    "interfaces_calendar_repository_interface.message.find_appointments_by_date_rang": "Find appointments by date range.\n        \n        Args:\n            start_date: Start date\n            end_date: End date\n            user_id: Optional user ID filter\n            \n        Returns:\n            List of appointment instances\n        ",
    "interfaces_calendar_repository_interface.message.find_appointments_by_status": "Find appointments by status.\n        \n        Args:\n            status: Appointment status\n            \n        Returns:\n            List of appointment instances\n        ",
    "interfaces_calendar_repository_interface.message.find_upcoming_appointments": "Find upcoming appointments.\n        \n        Args:\n            user_id: Optional user ID filter\n            limit: Maximum number of results\n            \n        Returns:\n            List of upcoming appointment instances\n        ",
    "interfaces_calendar_repository_interface.message.find_conflicting_appointments": "Find conflicting appointments.\n        \n        Args:\n            start_time: Start time\n            end_time: End time\n            user_id: User ID\n            exclude_id: Appointment ID to exclude\n            \n        Returns:\n            List of conflicting appointment instances\n        ",
    "interfaces_sms_repository_interface.message.interface_for_sms_repository_o": "Interface for SMS repository operations.",
    "interfaces_sms_repository_interface.message.create_a_new_sms_message_recor": "Create a new SMS message record.",
    "interfaces_sms_repository_interface.message.get_an_sms_message_by_id": "Get an SMS message by ID.",
    "interfaces_sms_repository_interface.message.get_sms_messages_by_status": "Get SMS messages by status.",
    "interfaces_sms_repository_interface.message.get_scheduled_messages_that_ne": "Get scheduled messages that need to be sent.",
    "interfaces_sms_repository_interface.message.get_sms_messages_for_a_specifi": "Get SMS messages for a specific user.",
    "interfaces_sms_repository_interface.message.get_sms_messages_by_phone_numb": "Get SMS messages by phone number.",
    "interfaces_sms_repository_interface.message.get_sms_messages_for_a_specifi_1": "Get SMS messages for a specific campaign.",
    "interfaces_sms_repository_interface.message.count_sms_messages_by_status": "Count SMS messages by status.",
    "interfaces_sms_repository_interface.message.get_cost_summary_for_sms_messa": "Get cost summary for SMS messages.",
    "interfaces_program_repository_interface.message.interface_for_program_reposito": "Interface for program repository operations.",
    "interfaces_program_repository_interface.message.find_programs_by_tenant_id": "Find programs by tenant ID.\n        \n        Args:\n            tenant_id: Tenant ID\n            \n        Returns:\n            List of program instances\n        ",
    "interfaces_program_repository_interface.message.find_programs_by_trainer_id": "Find programs by trainer ID.\n        \n        Args:\n            trainer_id: Trainer ID\n            \n        Returns:\n            List of program instances\n        ",
    "interfaces_program_repository_interface.message.find_programs_by_status": "Find programs by status.\n        \n        Args:\n            status: Program status\n            \n        Returns:\n            List of program instances\n        ",
    "interfaces_program_repository_interface.message.find_all_active_programs_1": "Find all active programs.\n        \n        Returns:\n            List of active program instances\n        ",
    "interfaces_program_repository_interface.message.find_programs_by_category_1": "Find programs by category.\n        \n        Args:\n            category: Program category\n            \n        Returns:\n            List of program instances\n        ",
    "interfaces_program_repository_interface.message.find_program_with_enrollments": "Find program with enrollments.\n        \n        Args:\n            program_id: Program ID\n            \n        Returns:\n            Program instance with enrollments or None\n        ",
    "interfaces_program_repository_interface.message.get_program_statistics": "Get program statistics.\n        \n        Args:\n            program_id: Program ID\n            \n        Returns:\n            Dictionary with program statistics\n        ",
    "interfaces_appointment_repository_interface.message.appointment_repository_interfa": "Appointment repository interface module.",
    "interfaces_appointment_repository_interface.message.find_an_appointment_b": "\n        Find an appointment by ID.\n        \n        Args:\n            appointment_id: The appointment ID\n            \n        Returns:\n            Appointment object or None\n        ",
    "interfaces_appointment_repository_interface.message.find_all_appointments": "\n        Find all appointments matching filters.\n        \n        Args:\n            filters: Dict with filter criteria\n            pagination: Dict with page and per_page\n            \n        Returns:\n            Paginated result with appointments\n        ",
    "interfaces_appointment_repository_interface.message.find_appointments_for": "\n        Find appointments for a beneficiary.\n        \n        Args:\n            beneficiary_id: The beneficiary ID\n            pagination: Dict with page and per_page\n            \n        Returns:\n            Paginated result with appointments\n        ",
    "interfaces_appointment_repository_interface.message.find_appointments_for_1": "\n        Find appointments for a trainer.\n        \n        Args:\n            trainer_id: The trainer ID\n            pagination: Dict with page and per_page\n            \n        Returns:\n            Paginated result with appointments\n        ",
    "models_assessment.message.assessmenttemplate": "<AssessmentTemplate ",
    "models_assessment.message.convert_model_to_dictionary": "Convert model to dictionary.",
    "models_assessment.message.assessment_templates_id": "assessment_templates.id",
    "models_assessment.message.assessmentsection": "<AssessmentSection ",
    "models_assessment.message.convert_model_to_dictionary_1": "Convert model to dictionary.",
    "models_assessment.message.assessment_sections_id": "assessment_sections.id",
    "models_assessment.message.assessmentquestion": "<AssessmentQuestion ",
    "models_assessment.message.convert_model_to_dictionary_2": "Convert model to dictionary.",
    "models_assessment.message.assessment_templates_id_1": "assessment_templates.id",
    "models_assessment.message.assessment": "<Assessment ",
    "models_assessment.message.": " - ",
    "models_assessment.message.convert_model_to_dictionary_3": "Convert model to dictionary.",
    "models_assessment.message.assessment_questions_id": "assessment_questions.id",
    "models_assessment.message.assessmentresponse": "<AssessmentResponse ",
    "models_assessment.message.convert_model_to_dictionary_4": "Convert model to dictionary.",
    "models_document_version.message.document_version_model_for_tra": "Document version model for tracking document history.",
    "models_document_version.message.document_version_model_for_ver": "Document version model for version control.",
    "models_document_version.message.return_a_dict_representation_o": "Return a dict representation of the document version.",
    "models_document_version.message.string_representation_of_the_d": "String representation of the document version.",
    "models_document_version.message.documentversion": "<DocumentVersion ",
    "models_document_version.message.document": ": Document ",
    "models_document_version.message.model_for_storing_document_com": "Model for storing document comparison results.",
    "models_document_version.message.document_versions_id": "document_versions.id",
    "models_document_version.message.document_versions_id_1": "document_versions.id",
    "models_document_version.message.return_a_dict_representation_o_1": "Return a dict representation of the comparison.",
    "models_document_version.message.version1": "version1",
    "models_document_version.message.version2": "version2",
    "models_user.message.return_the_full_name_of_the_us": "Return the full name of the user.",
    "models_user.message.password_getter_not_allowed": "Password getter (not allowed).",
    "models_user.message.password_is_not_a_readable_att": "password is not a readable attribute",
    "models_user.message.verify_password_against_hash": "Verify password against hash.",
    "models_user.message.return_a_dict_representation_o": "Return a dict representation of the user.",
    "models_user.message.string_representation_of_the_u": "String representation of the user.",
    "models_user.message.user": "<User ",
    "models_user.message.token_blocklist_for_jwt_tokens": "Token blocklist for JWT tokens.",
    "models_user.message.return_a_dict_representation_o_1": "Return a dict representation of the token blocklist entry.",
    "models_video_conference.message.video_conference_models_module": "Video Conference models module.",
    "models_video_conference.message.video_conference_provider_enum": "Video conference provider enum.",
    "models_video_conference.message.video_conference_status_enum": "Video conference status enum.",
    "models_video_conference.message.return_a_dict_representation_o": "Return a dict representation of the video conference.",
    "models_video_conference.message.string_representation_of_the_v": "String representation of the video conference.",
    "models_video_conference.message.videoconference": "<VideoConference ",
    "models_video_conference.message.video_conference_participant_m": "Video Conference Participant model.",
    "models_video_conference.message.video_conferences_id": "video_conferences.id",
    "models_video_conference.message.return_a_dict_representation_o_1": "Return a dict representation of the participant.",
    "models_video_conference.message.string_representation_of_the_p": "String representation of the participant.",
    "models_video_conference.message.videoconferenceparticipant": "<VideoConferenceParticipant ",
    "models_video_conference.message.video_conference_recording_mod": "Video Conference Recording model.",
    "models_video_conference.message.video_conferences_id_1": "video_conferences.id",
    "models_video_conference.message.return_a_dict_representation_o_2": "Return a dict representation of the recording.",
    "models_video_conference.message.string_representation_of_the_r": "String representation of the recording.",
    "models_video_conference.message.videoconferencerecording": "<VideoConferenceRecording ",
    "models_video_conference.message.video_conference_invitation_mo": "Video Conference Invitation model.",
    "models_video_conference.message.video_conferences_id_2": "video_conferences.id",
    "models_video_conference.message.return_a_dict_representation_o_3": "Return a dict representation of the invitation.",
    "models_video_conference.message.string_representation_of_the_i": "String representation of the invitation.",
    "models_video_conference.message.videoconferenceinvitation": "<VideoConferenceInvitation ",
    "models_video_conference.message.video_conference_analytics_mod": "Video Conference Analytics model.",
    "models_video_conference.message.video_conferences_id_3": "video_conferences.id",
    "models_video_conference.message.return_a_dict_representation_o_4": "Return a dict representation of the analytics.",
    "models_video_conference.message.string_representation_of_the_a": "String representation of the analytics.",
    "models_video_conference.message.videoconferenceanalytics": "<VideoConferenceAnalytics ",
    "models_video_conference.message.conference": " Conference:",
    "models_tenant.message.tenant_model_for_multi_tenancy": "Tenant model for multi-tenancy support.",
    "models_tenant.message.convert_tenant_to_dictionary": "Convert tenant to dictionary.",
    "models_beneficiary.message.get_total_evaluation_count": "Get total evaluation count.",
    "models_beneficiary.message.get_total_session_count": "Get total session count.",
    "models_beneficiary.message.return_a_dict_representation_o": "Return a dict representation of the beneficiary.",
    "models_beneficiary.message.string_representation_of_the_b": "String representation of the beneficiary.",
    "models_beneficiary.message.beneficiary": "<Beneficiary ",
    "models_beneficiary.message.note_model_for_beneficiary_not": "Note model for beneficiary notes.",
    "models_beneficiary.message.return_a_dict_representation_o_1": "Return a dict representation of the note.",
    "models_beneficiary.message.appointment_model_for_scheduli": "Appointment model for scheduling with beneficiaries.",
    "models_beneficiary.message.return_a_dict_representation_o_2": "Return a dict representation of the appointment.",
    "models_beneficiary.message.document_model_for_beneficiary": "Document model for beneficiary documents.",
    "models_beneficiary.message.return_a_dict_representation_o_3": "Return a dict representation of the document.",
    "models_permission.message.permission_and_role_models": "Permission and Role models.",
    "models_permission.message.permission": "<Permission ",
    "models_permission.message.role": "<Role ",
    "models_permission.message.check_if_role_has_a_specific_p": "Check if role has a specific permission.",
    "models_permission.message.add_a_permission_to_this_role": "Add a permission to this role.",
    "models_folder.message.model_for_organizing_documents": "Model for organizing documents into folders.",
    "models_monitoring.message.model_for_alarm_rules": "Model for alarm rules",
    "models_monitoring.message.convert_alarm_rule_to_dictiona": "Convert alarm rule to dictionary",
    "models_monitoring.message.model_for_alarm_history": "Model for alarm history",
    "models_monitoring.message.convert_alarm_history_to_dicti": "Convert alarm history to dictionary",
    "models_monitoring.message.model_for_ai_analysis_results": "Model for AI analysis results",
    "models_monitoring.message.convert_ai_analysis_to_diction": "Convert AI analysis to dictionary",
    "models_monitoring.message.model_for_human_verification_o": "Model for human verification of AI-generated content",
    "models_monitoring.message.convert_verification_to_dictio": "Convert verification to dictionary",
    "models_notification.message.notification_model_for_user_no": "Notification model for user notifications.",
    "models_notification.message.return_a_dict_representation_o": "Return a dict representation of the notification.",
    "models_notification.message.mark_the_notification_as_read": "Mark the notification as read.",
    "models_notification.message.string_representation_of_the_n": "String representation of the notification.",
    "models_notification.message.notification": "<Notification ",
    "models_notification.message.message_thread_model_for_conve": "Message thread model for conversations.",
    "models_notification.message.return_a_dict_representation_o_1": "Return a dict representation of the message thread.",
    "models_notification.message.string_representation_of_the_m": "String representation of the message thread.",
    "models_notification.message.messagethread": "<MessageThread ",
    "models_notification.message.thread_participant_model_for_m": "Thread participant model for message threads.",
    "models_notification.message.message_threads_id": "message_threads.id",
    "models_notification.message.return_a_dict_representation_o_2": "Return a dict representation of the thread participant.",
    "models_notification.message.message_model_for_user_to_user": "Message model for user-to-user messages.",
    "models_notification.message.message_threads_id_1": "message_threads.id",
    "models_notification.message.return_a_dict_representation_o_3": "Return a dict representation of the message.",
    "models_notification.message.string_representation_of_the_m_1": "String representation of the message.",
    "models_notification.message.message": "<Message ",
    "models_notification.message.read_receipt_model_for_trackin": "Read receipt model for tracking message reads.",
    "models_notification.message.return_a_dict_representation_o_4": "Return a dict representation of the read receipt.",
    "models_evaluation.message.evaluation_model_for_the_bdc_s": "Evaluation model for the BDC system.",
    "models_evaluation.message.adaptive_test_sessions_id": "adaptive_test_sessions.id",
    "models_evaluation.message.convert_evaluation_to_dictiona": "Convert evaluation to dictionary.",
    "models_evaluation.message.calculate_evaluation_score_bas": "Calculate evaluation score based on responses.",
    "models_evaluation.message.mark_evaluation_as_reviewed": "Mark evaluation as reviewed.",
    "models_profile.message.user_profile_model_module": "User profile model module.",
    "models_profile.message.return_a_dict_representation_o": "Return a dict representation of the user profile.",
    "models_profile.message.string_representation_of_the_u": "String representation of the user profile.",
    "models_profile.message.userprofile_user_id": "<UserProfile user_id=",
    "models_sms_message.message.sms_message_model_for_tracking": "SMS message model for tracking SMS history and delivery status.",
    "models_sms_message.message.sms_delivery_status_enumeratio": "SMS delivery status enumeration.",
    "models_sms_message.message.sms_message_type_enumeration": "SMS message type enumeration.",
    "models_sms_message.message.sms_message_model_for_tracking_1": "SMS message model for tracking SMS history.",
    "models_sms_message.message.initialize_sms_message_with_de": "Initialize SMS message with defaults.",
    "models_sms_message.message.return_a_dict_representation_o": "Return a dict representation of the SMS message.",
    "models_sms_message.message.mark_the_sms_as_sent": "Mark the SMS as sent.",
    "models_sms_message.message.mark_the_sms_as_delivered": "Mark the SMS as delivered.",
    "models_sms_message.message.string_representation_of_the_s": "String representation of the SMS message.",
    "models_sms_message.message.smsmessage": "<SMSMessage ",
    "models_sms_message.message.": " - ",
    "models_sms_message.message.sms_template_model_for_managin": "SMS template model for managing message templates.",
    "models_sms_message.message.get_template_content_in_specif": "Get template content in specified language.",
    "models_sms_message.message.render_template_with_variables": "Render template with variables.",
    "models_sms_message.message.return_a_dict_representation_o_1": "Return a dict representation of the SMS template.",
    "models_sms_message.message.string_representation_of_the_s_1": "String representation of the SMS template.",
    "models_sms_message.message.smstemplate": "<SMSTemplate ",
    "models_sms_message.message.sms_campaign_model_for_bulk_sm": "SMS campaign model for bulk SMS operations.",
    "models_sms_message.message.return_a_dict_representation_o_2": "Return a dict representation of the SMS campaign.",
    "models_sms_message.message.string_representation_of_the_s_2": "String representation of the SMS campaign.",
    "models_sms_message.message.smscampaign": "<SMSCampaign ",
    "models_activity.message.activity_model_for_tracking_us": "Activity model for tracking user actions.",
    "models___init__.message.models_package_with_improved_i": "Models package with improved import patterns.",
    "models___init__.message.import_all_models_using_a_cont": "Import all models using a controlled approach to avoid circular dependencies.",
    "models___init__.message.get_all_models_using_lazy_load": "Get all models using lazy loading.",
    "models___init__.message.get_a_specific_model_by_name": "Get a specific model by name.",
    "models___init__.message.dynamic_import_for_backward_co": "Dynamic import for backward compatibility.",
    "models___init__.message.module": "module '",
    "models___init__.message.has_no_attribute": "' has no attribute '",
    "models_test.message.test_engine_models_module": "Test engine models module.",
    "models_test.message.test_model_for_bdc_system": "Test model for BDC system.",
    "models_test.message.test_set_model_for_evaluations": "Test set model for evaluations.",
    "models_test.message.return_a_dict_representation_o": "Return a dict representation of the evaluation.",
    "models_test.message.question_model_for_evaluation": "Question model for evaluation questions.",
    "models_test.message.test_sets_id": "test_sets.id",
    "models_test.message.return_a_dict_representation_o_1": "Return a dict representation of the question.",
    "models_test.message.check_if_the_given_answer_is_c": "Check if the given answer is correct.",
    "models_test.message.test_session_model_for_trackin": "Test session model for tracking beneficiary evaluation attempts.",
    "models_test.message.test_sets_id_1": "test_sets.id",
    "models_test.message.return_a_dict_representation_o_2": "Return a dict representation of the test session.",
    "models_test.message.response_model_for_tracking_be": "Response model for tracking beneficiary responses to questions.",
    "models_test.message.test_sessions_id": "test_sessions.id",
    "models_test.message.return_a_dict_representation_o_3": "Return a dict representation of the response.",
    "models_test.message.test_sessions_id_1": "test_sessions.id",
    "models_test.message.return_a_dict_representation_o_4": "Return a dict representation of the AI feedback.",
    "models_integration.message.user_integration_model_for_ext": "User integration model for external services.",
    "models_integration.message.return_a_dict_representation_o": "Return a dict representation of the integration.",
    "models_integration.message.string_representation_of_the_i": "String representation of the integration.",
    "models_integration.message.userintegration_user_id": "<UserIntegration user_id=",
    "models_integration.message.provider": " provider=",
    "models_recurring_appointment.message.recurring_pattern_for_appointm": "Recurring pattern for appointments.",
    "models_recurring_appointment.message.generate_occurrence_dates_base": "Generate occurrence dates based on the pattern.",
    "models_recurring_appointment.message.y_m_d": "%Y-%m-%d",
    "models_recurring_appointment.message.add_an_exception_date": "Add an exception date.",
    "models_recurring_appointment.message.y_m_d_1": "%Y-%m-%d",
    "models_recurring_appointment.message.remove_an_exception_date": "Remove an exception date.",
    "models_recurring_appointment.message.y_m_d_2": "%Y-%m-%d",
    "models_recurring_appointment.message.return_a_dict_representation": "Return a dict representation.",
    "models_recurring_appointment.message.series_of_recurring_appointmen": "Series of recurring appointments.",
    "models_recurring_appointment.message.recurring_patterns_id": "recurring_patterns.id",
    "models_recurring_appointment.message.generate_individual_appointmen": "Generate individual appointment instances.",
    "models_recurring_appointment.message.cancel_all_future_appointments": "Cancel all future appointments in the series.",
    "models_recurring_appointment.message.return_a_dict_representation_1": "Return a dict representation.",
    "models_two_factor_auth.message.two_factor_authentication_sett": "Two-Factor Authentication settings for users.",
    "models_two_factor_auth.message.generate_a_new_totp_secret": "Generate a new TOTP secret.",
    "models_two_factor_auth.message.get_the_totp_uri_for_qr_code_g": "Get the TOTP URI for QR code generation.",
    "models_two_factor_auth.message.user_not_associated_with_2fa_s": "User not associated with 2FA settings",
    "models_two_factor_auth.message.generate_qr_code_for_totp_setu": "Generate QR code for TOTP setup.",
    "models_two_factor_auth.message.verify_a_totp_token": "Verify a TOTP token.",
    "models_two_factor_auth.message.verify_and_consume_a_backup_co": "Verify and consume a backup code.",
    "models_two_factor_auth.message.disable_2fa_for_the_user": "Disable 2FA for the user.",
    "models_two_factor_auth.message.return_a_dict_representation": "Return a dict representation.",
    "models_two_factor_auth.message.track_2fa_verification_session": "Track 2FA verification sessions.",
    "models_two_factor_auth.message.create_a_new_2fa_session": "Create a new 2FA session.",
    "models_two_factor_auth.message.check_if_the_session_has_expir": "Check if the session has expired.",
    "models_two_factor_auth.message.mark_the_session_as_verified": "Mark the session as verified.",
    "models_ai_question_generation.message.ai_question_generation_models": "AI Question Generation models module.",
    "models_ai_question_generation.message.content_types_for_question_gen": "Content types for question generation.",
    "models_ai_question_generation.message.question_types_for_ai_generati": "Question types for AI generation.",
    "models_ai_question_generation.message.bloom_s_taxonomy_levels_for_qu": "Bloom's taxonomy levels for question categorization.",
    "models_ai_question_generation.message.learning_objectives_for_questi": "Learning objectives for question alignment.",
    "models_ai_question_generation.message.blooms_taxonomy_id": "blooms_taxonomy.id",
    "models_ai_question_generation.message.request_for_ai_question_genera": "Request for AI question generation.",
    "models_ai_question_generation.message.source_content_id": "source_content.id",
    "models_ai_question_generation.message.gpt_4": "gpt-4",
    "models_ai_question_generation.message.question_generation_requests_i": "question_generation_requests.id",
    "models_ai_question_generation.message.question_types_id": "question_types.id",
    "models_ai_question_generation.message.blooms_taxonomy_id_1": "blooms_taxonomy.id",
    "models_ai_question_generation.message.learning_objectives_id": "learning_objectives.id",
    "models_ai_question_generation.message.track_potential_duplicate_ques": "Track potential duplicate questions.",
    "models_ai_question_generation.message.generated_questions_id": "generated_questions.id",
    "models_ai_question_generation.message.generated_questions_id_1": "generated_questions.id",
    "models_ai_question_generation.message.question1_id": "question1_id",
    "models_ai_question_generation.message.question2_id": "question2_id",
    "models_ai_question_generation.message.question1_id_1": "question1_id",
    "models_ai_question_generation.message.question2_id_1": "question2_id",
    "models_ai_question_generation.message.question_banks_for_organizing": "Question banks for organizing generated questions.",
    "models_ai_question_generation.message.association_between_question_b": "Association between question banks and questions.",
    "models_ai_question_generation.message.question_banks_id": "question_banks.id",
    "models_ai_question_generation.message.generated_questions_id_2": "generated_questions.id",
    "models_ai_question_generation.message.analytics_for_question_generat": "Analytics for question generation performance.",
    "models_document.message.return_a_dict_representation_o": "Return a dict representation of the document.",
    "models_document.message.string_representation_of_the_d": "String representation of the document.",
    "models_document.message.document": "<Document ",
    "models_performance_prediction.message.model_for_storing_trained_ml_m": "Model for storing trained ML models metadata.",
    "models_performance_prediction.message.convert_model_to_dictionary": "Convert model to dictionary.",
    "models_performance_prediction.message.f1_score": "f1_score",
    "models_performance_prediction.message.model_for_storing_individual_p": "Model for storing individual predictions.",
    "models_performance_prediction.message.prediction_models_id": "prediction_models.id",
    "models_performance_prediction.message.convert_prediction_to_dictiona": "Convert prediction to dictionary.",
    "models_performance_prediction.message.model_for_storing_recommendati": "Model for storing recommendations based on predictions.",
    "models_performance_prediction.message.performance_predictions_id": "performance_predictions.id",
    "models_performance_prediction.message.convert_recommendation_to_dict": "Convert recommendation to dictionary.",
    "models_performance_prediction.message.model_for_tracking_model_train": "Model for tracking model training history.",
    "models_performance_prediction.message.prediction_models_id_1": "prediction_models.id",
    "models_performance_prediction.message.convert_training_history_to_di": "Convert training history to dictionary.",
    "models_settings.message.general_settings_model_for_ten": "General settings model for tenant configuration.",
    "models_settings.message.3b82f6": "#3B82F6",
    "models_settings.message.1e40af": "#1E40AF",
    "models_settings.message.12h": "12h",
    "models_settings.message.09_00": "09:00",
    "models_settings.message.17_00": "17:00",
    "models_settings.message.generalsettings": "<GeneralSettings ",
    "models_settings.message.convert_model_to_dictionary": "Convert model to dictionary.",
    "models_settings.message.appearance_settings_for_ui_cus": "Appearance settings for UI customization.",
    "models_settings.message.appearancesettings": "<AppearanceSettings ",
    "models_settings.message.convert_model_to_dictionary_1": "Convert model to dictionary.",
    "models_settings.message.notification_settings_for_user": "Notification settings for user preferences.",
    "models_settings.message.22_00": "22:00",
    "models_settings.message.08_00": "08:00",
    "models_settings.message.notificationsettings": "<NotificationSettings ",
    "models_settings.message.convert_model_to_dictionary_2": "Convert model to dictionary.",
    "models_program.message.model_for_training_programs": "Model for training programs.",
    "models_program.message.convert_program_to_dictionary": "Convert program to dictionary.",
    "models_program.message.model_for_program_modules": "Model for program modules.",
    "models_program.message.convert_module_to_dictionary": "Convert module to dictionary.",
    "models_program.message.model_for_program_enrollments": "Model for program enrollments.",
    "models_program.message.convert_enrollment_to_dictiona": "Convert enrollment to dictionary.",
    "models_program.message.model_for_training_sessions": "Model for training sessions.",
    "models_program.message.program_modules_id": "program_modules.id",
    "models_program.message.convert_session_to_dictionary": "Convert session to dictionary.",
    "models_program.message.model_for_session_attendance": "Model for session attendance.",
    "models_program.message.training_sessions_id": "training_sessions.id",
    "models_program.message.convert_attendance_to_dictiona": "Convert attendance to dictionary.",
    "models_adaptive_test.message.adaptive_test_models_for_imple": "Adaptive Test models for implementing Computerized Adaptive Testing (CAT) system.",
    "models_adaptive_test.message.question_pool_for_adaptive_tes": "Question pool for adaptive testing with IRT parameters.",
    "models_adaptive_test.message.questions_with_item_response_t": "Questions with Item Response Theory (IRT) parameters for adaptive testing.",
    "models_adaptive_test.message.adaptive_test_pools_id": "adaptive_test_pools.id",
    "models_adaptive_test.message.calculate_probability_of_corre": "Calculate probability of correct response given ability level.",
    "models_adaptive_test.message.adaptive_test_session_tracking": "Adaptive test session tracking.",
    "models_adaptive_test.message.adaptive_test_pools_id_1": "adaptive_test_pools.id",
    "models_adaptive_test.message.test_sets_id": "test_sets.id",
    "models_adaptive_test.message.minimum_questions_not_met": "Minimum questions not met",
    "models_adaptive_test.message.responses_in_adaptive_test_ses": "Responses in adaptive test sessions.",
    "models_adaptive_test.message.adaptive_test_sessions_id": "adaptive_test_sessions.id",
    "models_adaptive_test.message.adaptive_questions_id": "adaptive_questions.id",
    "models_adaptive_test.message.detailed_reports_for_adaptive": "Detailed reports for adaptive test sessions.",
    "models_adaptive_test.message.adaptive_test_sessions_id_1": "adaptive_test_sessions.id",
    "models_i18n.message.model_for_storing_multilingual": "Model for storing multilingual content versions.",
    "models_i18n.message.multilingual_content_id": "multilingual_content.id",
    "models_i18n.message.model_for_managing_translation": "Model for managing translation projects and workflows.",
    "models_i18n.message.model_for_tracking_translation": "Model for tracking translation workflow states.",
    "models_i18n.message.multilingual_content_id_1": "multilingual_content.id",
    "models_i18n.message.translation_projects_id": "translation_projects.id",
    "models_i18n.message.model_for_storing_user_languag": "Model for storing user language preferences.",
    "models_user_activity.message.user_activity_tracking_model": "User activity tracking model.",
    "models_user_activity.message.model_for_tracking_user_activi": "Model for tracking user activities.",
    "models_user_activity.message.useractivity": "<UserActivity ",
    "models_user_activity.message.by_user": " by user ",
    "models_appointment.message.appointment_series_id": "appointment_series.id",
    "models_appointment.message.return_a_dict_representation_o": "Return a dict representation of the appointment.",
    "models_appointment.message.string_representation_of_the_a": "String representation of the appointment.",
    "models_appointment.message.appointment": "<Appointment ",
    "models_availability.message.availability_schedule_model_fo": "Availability schedule model for trainers.",
    "models_availability.message.return_a_dict_representation_o": "Return a dict representation of the availability schedule.",
    "models_availability.message.string_representation_of_the_a": "String representation of the availability schedule.",
    "models_availability.message.availabilityschedule": "<AvailabilitySchedule ",
    "models_availability.message.availability_slot_model_for_sp": "Availability slot model for specific time slots.",
    "models_availability.message.availability_schedules_id": "availability_schedules.id",
    "models_availability.message.return_a_dict_representation_o_1": "Return a dict representation of the availability slot.",
    "models_availability.message.string_representation_of_the_a_1": "String representation of the availability slot.",
    "models_availability.message.availabilityslot": "<AvailabilitySlot ",
    "models_availability.message.availability_exception_model_f": "Availability exception model for overriding regular schedules.",
    "models_availability.message.return_a_dict_representation_o_2": "Return a dict representation of the availability exception.",
    "models_availability.message.string_representation_of_the_a_2": "String representation of the availability exception.",
    "models_availability.message.y_m_d": "%Y-%m-%d",
    "models_availability.message.availabilityexception": "<AvailabilityException ",
    "models_availability.message.availabilityexception_1": "<AvailabilityException ",
    "models_availability.message.all_day": " All Day>",
    "models_report.message.model_for_system_reports": "Model for system reports.",
    "models_report.message.convert_report_to_dictionary": "Convert report to dictionary.",
    "models_report.message.model_for_scheduled_reports": "Model for scheduled reports.",
    "models_report.message.convert_schedule_to_dictionary": "Convert schedule to dictionary.",
    "models_document_permission.message.document_permission_model_modu": "Document permission model module.",
    "models_document_permission.message.document_permission_model_for": "Document permission model for access control.",
    "models_document_permission.message.return_a_dict_representation_o": "Return a dict representation of the document permission.",
    "models_document_permission.message.check_if_the_permission_has_ex": "Check if the permission has expired.",
    "models_document_permission.message.string_representation_of_the_d": "String representation of the document permission.",
    "models_document_permission.message.documentpermission_document": "<DocumentPermission document=",
    "models_document_permission.message.user": " user=",
    "models_document_permission.message.documentpermission_document_1": "<DocumentPermission document=",
    "models_document_permission.message.role": " role=",
    "models_gamification.message.comprehensive_gamification_sys": "Comprehensive Gamification system models for the BDC application.",
    "models_gamification.message.gamification_teams_id": "gamification_teams.id",
    "models_gamification.message.badge_model_for_achievements": "Badge model for achievements.",
    "models_gamification.message.gamification_badges_id": "gamification_badges.id",
    "models_gamification.message.user_experience_points_and_lev": "User experience points and levels.",
    "models_gamification.message.calculate_progress_within_curr": "Calculate progress within current level.",
    "models_gamification.message.add_xp_and_handle_level_ups": "Add XP and handle level ups.",
    "models_gamification.message.trigger_achievements_for_reach": "Trigger achievements for reaching a level.",
    "models_gamification.message.trigger_achievements_for_strea": "Trigger achievements for streaks.",
    "models_gamification.message.gamification_user_xp_id": "gamification_user_xp.id",
    "models_gamification.message.gamification_leaderboards_id": "gamification_leaderboards.id",
    "models_gamification.message.gamification_challenges_id": "gamification_challenges.id",
    "models_gamification.message.gamification_teams_id_1": "gamification_teams.id",
    "models_gamification.message.teams_for_collaborative_challe": "Teams for collaborative challenges.",
    "models_gamification.message.gamification_rewards_id": "gamification_rewards.id",
    "models_gamification.message.user_personal_goals_and_milest": "User personal goals and milestones.",
    "models_gamification.message.track_gamification_events_for": "Track gamification events for analytics.",
    "models_gamification.message.track_user_progress_across_dif": "Track user progress across different areas.",
    "models_gamification.message.add_a_reached_milestone": "Add a reached milestone.",
    "models_chat_conversation.message.chat_conversation_models_for_a": "Chat conversation models for AI chatbot.",
    "models_chat_conversation.message.chat_conversation_model_for_st": "Chat conversation model for storing chat sessions.",
    "models_chat_conversation.message.gpt_4": "gpt-4",
    "models_chat_conversation.message.convert_conversation_to_dictio": "Convert conversation to dictionary.",
    "models_chat_conversation.message.chatconversation": "<ChatConversation ",
    "models_chat_conversation.message.individual_chat_message_model": "Individual chat message model.",
    "models_chat_conversation.message.chat_conversations_id": "chat_conversations.id",
    "models_chat_conversation.message.convert_message_to_dictionary": "Convert message to dictionary.",
    "models_chat_conversation.message.chatmessage": "<ChatMessage ",
    "models_chat_conversation.message.rate_limiting_for_chat_convers": "Rate limiting for chat conversations per user.",
    "models_chat_conversation.message.convert_rate_limit_to_dictiona": "Convert rate limit to dictionary.",
    "models_chat_conversation.message.chatratelimit": "<ChatRateLimit ",
    "models_chat_conversation.message.user": ": User ",
    "models_chat_conversation.message.pre_defined_conversation_templ": "Pre-defined conversation templates for common scenarios.",
    "models_chat_conversation.message.convert_template_to_dictionary": "Convert template to dictionary.",
    "models_chat_conversation.message.conversationtemplate": "<ConversationTemplate ",
    "cli_i18n_commands.message.cli_commands_for_international": "CLI commands for internationalization management.",
    "cli_i18n_commands.message.initialize_supported_languages": "Initialize supported languages in the database.",
    "cli_i18n_commands.message.initializing_supported_langu": "🌐 Initializing supported languages...",
    "cli_i18n_commands.message.en_us": "en-US",
    "cli_i18n_commands.message.tr_tr": "tr-TR",
    "cli_i18n_commands.message.": "العربية",
    "cli_i18n_commands.message.ar_sa": "ar-SA",
    "cli_i18n_commands.message.es_es": "es-ES",
    "cli_i18n_commands.message.fr_fr": "fr-FR",
    "cli_i18n_commands.message.de_de": "de-DE",
    "cli_i18n_commands.message.ru_ru": "ru-RU",
    "cli_i18n_commands.message.languages": " languages",
    "cli_i18n_commands.message.languages_1": " languages",
    "cli_i18n_commands.message.check_translation_coverage_for": "Check translation coverage for languages.",
    "cli_i18n_commands.message.checking_translation_coverag": "🔍 Checking translation coverage...",
    "cli_i18n_commands.message.no_languages_found_run_ini": "❌ No languages found. Run 'init-languages' first.",
    "cli_i18n_commands.message.translation_coverage_report": "\n📊 Translation Coverage Report",
    "cli_i18n_commands.message.reference_language": "   Reference language: ",
    "cli_i18n_commands.message.total_translation_keys": "   Total translation keys: ",
    "cli_i18n_commands.message.coverage": "   Coverage: ",
    "cli_i18n_commands.message.missing_keys": "   Missing keys: ",
    "cli_i18n_commands.message.sample_missing": "   Sample missing: ",
    "cli_i18n_commands.message.language": "--language",
    "cli_i18n_commands.message.language_code_to_check_e_g": "Language code to check (e.g., \"tr\", \"ar\")",
    "cli_i18n_commands.message.updating_translation_for": "🔄 Updating translation for ",
    "cli_i18n_commands.message._1": " = ",
    "cli_i18n_commands.message.source": "--source",
    "cli_i18n_commands.message.target": "--target",
    "cli_i18n_commands.message.key": "--key",
    "cli_i18n_commands.message.value": "--value",
    "cli_i18n_commands.message.export_language_data_to_json_f": "Export language data to JSON file.",
    "cli_i18n_commands.message.exporting_language_data_for": "📤 Exporting language data for ",
    "cli_i18n_commands.message.language_data_exported_to": "✅ Language data exported to: ",
    "cli_i18n_commands.message.ui_translations": "   UI translations: ",
    "cli_i18n_commands.message.keys": " keys",
    "cli_i18n_commands.message.content_items": "   Content items: ",
    "cli_i18n_commands.message.items": " items",
    "cli_i18n_commands.message.language_1": "--language",
    "cli_i18n_commands.message.language_code_to_export": "Language code to export",
    "cli_i18n_commands.message.output": "--output",
    "cli_i18n_commands.message.importing_language_data_for": "📥 Importing language data for ",
    "cli_i18n_commands.message.imported": "✅ Imported ",
    "cli_i18n_commands.message.ui_translation_keys": " UI translation keys",
    "cli_i18n_commands.message.file_not_found": "❌ File not found: ",
    "cli_i18n_commands.message.file": "--file",
    "cli_i18n_commands.message.json_file_to_import": "JSON file to import",
    "cli_i18n_commands.message.language_2": "--language",
    "cli_i18n_commands.message.show_i18n_analytics_and_statis": "Show i18n analytics and statistics.",
    "cli_i18n_commands.message.internationalization_analyti": "📊 Internationalization Analytics",
    "cli_i18n_commands.message.overview": "📈 Overview:",
    "cli_i18n_commands.message.active_languages": "   Active languages: ",
    "cli_i18n_commands.message.content_items_1": "   Content items: ",
    "cli_i18n_commands.message.user_preferences": "   User preferences: ",
    "cli_i18n_commands.message.last_30_days": "\n📅 Last 30 Days:",
    "cli_i18n_commands.message.recent_translations": "   Recent translations: ",
    "cli_i18n_commands.message.language_usage": "\n🌐 Language Usage:",
    "cli_i18n_commands.message.translation_methods": "\n🔧 Translation Methods:",
    "cli_i18n_commands.message.average_quality_score": "\n⭐ Average Quality Score: ",
    "cli_i18n_commands.message.language_coverage": "\n🎯 Language Coverage:",
    "cli_i18n_commands.message.total_entities": "   Total entities: ",
    "cli_i18n_commands.message.overall_coverage": "   Overall coverage: ",
    "cli_i18n_commands.message.clean_up_old_translation_versi": "Clean up old translation versions and unused data.",
    "cli_i18n_commands.message.cleaning_up_translations_old": "🧹 Cleaning up translations older than ",
    "cli_i18n_commands.message.days": " days...",
    "cli_i18n_commands.message.removed_versions": "   Removed versions: ",
    "cli_i18n_commands.message.removed_tm_entries": "   Removed TM entries: ",
    "cli_i18n_commands.message.cleanup_date": "   Cleanup date: ",
    "cli_i18n_commands.message.days_1": "--days",
    "cli_i18n_commands.message.clean_translations_older_than": "Clean translations older than N days",
    "cli_i18n_commands.message.are_you_sure_you_want_to_clean": "Are you sure you want to clean up old translations?",
    "cli_i18n_commands.message.translate_all_content_for_a_sp": "Translate all content for a specific entity.",
    "cli_i18n_commands.message.translating": "🔄 Translating ",
    "cli_i18n_commands.message.to": " to ",
    "cli_i18n_commands.message.translations": " translations",
    "cli_i18n_commands.message.entity_type": "--entity-type",
    "cli_i18n_commands.message.entity_type_e_g_program": "Entity type (e.g., \"program\", \"document\")",
    "cli_i18n_commands.message.entity_id": "--entity-id",
    "cli_i18n_commands.message.source_lang": "--source-lang",
    "cli_i18n_commands.message.target_langs": "--target-langs",
    "cli_i18n_commands.message.database_tables_missing_or_cor": "Database tables missing or corrupted: ",
    "cli_i18n_commands.message.empty_translation_file_for": "Empty translation file for ",
    "cli_i18n_commands.message.languages_in_service_but_not_i": "Languages in service but not in DB: ",
    "cli_i18n_commands.message.languages_in_db_but_not_in_ser": "Languages in DB but not in service: ",
    "cli_i18n_commands.message._2": "   • ",
    "cli_i18n_commands.message._3": "   • ",
    "cli_i18n_commands.message.warnings": "   Warnings: ",
    "cli_i18n_commands.message.register_i18n_cli_commands_wit": "Register i18n CLI commands with Flask app.",
    "schemas_auth.message.schema_for_login_requests": "Schema for login requests.",
    "schemas_auth.message.schema_for_registration_reques": "Schema for registration requests.",
    "schemas_auth.message.passwords_do_not_match": "Passwords do not match",
    "schemas_auth.message.schema_for_authentication_toke": "Schema for authentication tokens.",
    "schemas_auth.message.schema_for_refresh_token_reque": "Schema for refresh token requests.",
    "schemas_auth.message.schema_for_password_reset_requ": "Schema for password reset requests.",
    "schemas_auth.message.schema_for_password_reset": "Schema for password reset.",
    "schemas_auth.message.passwords_do_not_match_1": "Passwords do not match",
    "schemas_auth.message.schema_for_password_change": "Schema for password change.",
    "schemas_auth.message.passwords_do_not_match_2": "Passwords do not match",
    "schemas_assessment.message.schema_for_assessment_question": "Schema for assessment question.",
    "schemas_assessment.message.schema_for_assessment_section": "Schema for assessment section.",
    "schemas_assessment.message.schema_for_assessment_template": "Schema for assessment template.",
    "schemas_assessment.message.schema_for_creating_assessment": "Schema for creating assessment template.",
    "schemas_assessment.message.schema_for_updating_assessment": "Schema for updating assessment template.",
    "schemas_assessment.message.schema_for_assessment_response": "Schema for assessment response.",
    "schemas_assessment.message.schema_for_assessment_instance": "Schema for assessment instance.",
    "schemas_assessment.message.schema_for_creating_assessment_1": "Schema for creating assessment.",
    "schemas_assessment.message.schema_for_updating_assessment_1": "Schema for updating assessment.",
    "schemas_assessment.message.schema_for_grading_assessment": "Schema for grading assessment.",
    "schemas_user.message.base_schema_for_user_model": "Base schema for User model.",
    "schemas_user.message.schema_for_user_model": "Schema for User model.",
    "schemas_user.message.schema_for_creating_a_user": "Schema for creating a user.",
    "schemas_user.message.passwords_do_not_match": "Passwords do not match",
    "schemas_user.message.schema_for_updating_a_user": "Schema for updating a user.",
    "schemas_user.message.schema_for_user_profile": "Schema for user profile.",
    "schemas_user.message.schema_for_tenant_model": "Schema for Tenant model.",
    "schemas_user.message.schema_for_creating_a_tenant": "Schema for creating a tenant.",
    "schemas_user.message.a_z0_9": "^[a-z0-9-]+$",
    "schemas_user.message.subdomain_can_only_contain_low": "Subdomain can only contain lowercase letters, numbers, and hyphens",
    "schemas_user.message.subdomain_already_in_use": "Subdomain already in use",
    "schemas_user.message.schema_for_updating_a_tenant": "Schema for updating a tenant.",
    "schemas_user.message.schema_for_password_reset": "Schema for password reset.",
    "schemas_user.message.passwords_do_not_match_1": "Passwords do not match",
    "schemas_user.message.schema_for_user_search_paramet": "Schema for user search parameters.",
    "schemas_video_conference.message.schema_for_video_conference_se": "Schema for video conference settings.",
    "schemas_video_conference.message.schema_for_creating_a_video_co": "Schema for creating a video conference.",
    "schemas_video_conference.message.schema_for_updating_a_video_co": "Schema for updating a video conference.",
    "schemas_video_conference.message.schema_for_adding_a_participan": "Schema for adding a participant to a conference.",
    "schemas_video_conference.message.schema_for_sending_conference": "Schema for sending conference invitations.",
    "schemas_video_conference.message.d_s": "^\\+?[\\d\\s\\-\\(\\)]+$",
    "schemas_video_conference.message.schema_for_video_conference_pa": "Schema for video conference participant response.",
    "schemas_video_conference.message.schema_for_video_conference_re": "Schema for video conference recording response.",
    "schemas_video_conference.message.schema_for_video_conference_an": "Schema for video conference analytics response.",
    "schemas_video_conference.message.schema_for_video_conference_re_1": "Schema for video conference response.",
    "schemas_video_conference.message.schema_for_paginated_video_con": "Schema for paginated video conference list.",
    "schemas_video_conference.message.schema_for_available_providers": "Schema for available providers response.",
    "schemas_video_conference.message.schema_for_video_conference_da": "Schema for video conference dashboard response.",
    "schemas_video_conference.message.schema_for_webrtc_configuratio": "Schema for WebRTC configuration response.",
    "schemas_video_conference.message.schema_for_webrtc_room_join_re": "Schema for WebRTC room join response.",
    "schemas_video_conference.message.schema_for_webrtc_active_sessi": "Schema for WebRTC active sessions response.",
    "schemas_video_conference.message.schema_for_creating_a_webrtc_r": "Schema for creating a WebRTC room.",
    "schemas_video_conference.message.schema_for_webrtc_room_creatio": "Schema for WebRTC room creation response.",
    "schemas_video_conference.message.schema_for_webrtc_room_statist": "Schema for WebRTC room statistics.",
    "schemas_beneficiary.message.base_schema_for_beneficiary_mo": "Base schema for Beneficiary model.",
    "schemas_beneficiary.message.schema_for_beneficiary_model": "Schema for Beneficiary model.",
    "schemas_beneficiary.message.passwords_do_not_match": "Passwords do not match",
    "schemas_beneficiary.message.this_email_is_already_associat": "This email is already associated with a beneficiary account",
    "schemas_beneficiary.message.schema_for_updating_a_benefici": "Schema for updating a beneficiary.",
    "schemas_beneficiary.message.this_email_is_already_in_use": "This email is already in use",
    "schemas_beneficiary.message.schema_for_note_model": "Schema for Note model.",
    "schemas_beneficiary.message.schema_for_creating_a_note": "Schema for creating a note.",
    "schemas_beneficiary.message.schema_for_updating_a_note": "Schema for updating a note.",
    "schemas_beneficiary.message.schema_for_appointment_model": "Schema for Appointment model.",
    "schemas_beneficiary.message.schema_for_creating_an_appoint": "Schema for creating an appointment.",
    "schemas_beneficiary.message.schema_for_updating_an_appoint": "Schema for updating an appointment.",
    "schemas_beneficiary.message.schema_for_document_model": "Schema for Document model.",
    "schemas_beneficiary.message.schema_for_creating_a_document": "Schema for creating a document.",
    "schemas_beneficiary.message.schema_for_updating_a_document": "Schema for updating a document.",
    "schemas_evaluation.message.evaluation_and_test_schemas": "Evaluation and test schemas.",
    "schemas_evaluation.message.schema_for_question_model": "Schema for Question model.",
    "schemas_evaluation.message.schema_for_creating_a_question": "Schema for creating a question.",
    "schemas_evaluation.message.schema_for_updating_a_question": "Schema for updating a question.",
    "schemas_evaluation.message.schema_for_evaluation_model": "Schema for Evaluation model.",
    "schemas_evaluation.message.schema_for_creating_an_evaluat": "Schema for creating an evaluation.",
    "schemas_evaluation.message.schema_for_updating_an_evaluat": "Schema for updating an evaluation.",
    "schemas_evaluation.message.schema_for_testsession_model": "Schema for TestSession model.",
    "schemas_evaluation.message.schema_for_creating_a_test_ses": "Schema for creating a test session.",
    "schemas_evaluation.message.schema_for_response_model": "Schema for Response model.",
    "schemas_evaluation.message.schema_for_creating_a_response": "Schema for creating a response.",
    "schemas_evaluation.message.schema_for_aifeedback_model": "Schema for AIFeedback model.",
    "schemas_evaluation.message.schema_for_updating_an_ai_feed": "Schema for updating an AI feedback.",
    "schemas_profile.message.schema_for_userprofile_model": "Schema for UserProfile model.",
    "schemas_profile.message.schema_for_updating_a_user_pro": "Schema for updating a user profile.",
    "schemas_document.message.schema_for_document_model": "Schema for Document model.",
    "schemas_document.message.schema_for_creating_a_document": "Schema for creating a document.",
    "schemas_document.message.schema_for_updating_a_document": "Schema for updating a document.",
    "schemas_document.message.schema_for_filtering_documents": "Schema for filtering documents.",
    "schemas_settings.message.schema_for_general_settings": "Schema for general settings.",
    "schemas_settings.message.0_9a_fa_f_6": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.0_9a_fa_f_6_1": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.12h": "12h",
    "schemas_settings.message.24h": "24h",
    "schemas_settings.message.0_1_0_9_2_0_3_0_5_0": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_settings.message.0_1_0_9_2_0_3_0_5_0_1": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_settings.message.schema_for_updating_general_se": "Schema for updating general settings.",
    "schemas_settings.message.0_9a_fa_f_6_2": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.0_9a_fa_f_6_3": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.12h_1": "12h",
    "schemas_settings.message.24h_1": "24h",
    "schemas_settings.message.0_1_0_9_2_0_3_0_5_0_2": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_settings.message.0_1_0_9_2_0_3_0_5_0_3": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_settings.message.schema_for_appearance_settings": "Schema for appearance settings.",
    "schemas_settings.message.0_9a_fa_f_6_4": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.0_9a_fa_f_6_5": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.0_9a_fa_f_6_6": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.schema_for_updating_appearance": "Schema for updating appearance settings.",
    "schemas_settings.message.0_9a_fa_f_6_7": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.0_9a_fa_f_6_8": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.0_9a_fa_f_6_9": "^#[0-9A-Fa-f]{6}$",
    "schemas_settings.message.schema_for_notification_settin": "Schema for notification settings.",
    "schemas_settings.message.0_1_0_9_2_0_3_0_5_0_4": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_settings.message.0_1_0_9_2_0_3_0_5_0_5": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_settings.message.schema_for_updating_notificati": "Schema for updating notification settings.",
    "schemas_settings.message.0_1_0_9_2_0_3_0_5_0_6": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_settings.message.0_1_0_9_2_0_3_0_5_0_7": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_adaptive_test.message.schemas_for_adaptive_test_syst": "Schemas for Adaptive Test System.",
    "schemas_adaptive_test.message.schema_for_adaptive_test_pool": "Schema for adaptive test pool.",
    "schemas_adaptive_test.message.schema_for_irt_parameters": "Schema for IRT parameters.",
    "schemas_adaptive_test.message.difficulty_parameter_b_in_ir": "Difficulty parameter (b) in IRT model",
    "schemas_adaptive_test.message.discrimination_parameter_a_i": "Discrimination parameter (a) in IRT model",
    "schemas_adaptive_test.message.guessing_parameter_c_in_irt": "Guessing parameter (c) in IRT model",
    "schemas_adaptive_test.message.guessing_parameter_too_high_fo": "Guessing parameter too high for reliable assessment",
    "schemas_adaptive_test.message.schema_for_adaptive_question": "Schema for adaptive question.",
    "schemas_adaptive_test.message.difficulty_level_on_1_10_scale": "Difficulty level on 1-10 scale",
    "schemas_adaptive_test.message.flatten_irt_parameters_for_bac": "Flatten IRT parameters for backward compatibility.",
    "schemas_adaptive_test.message.schema_for_adaptive_session_co": "Schema for adaptive session configuration.",
    "schemas_adaptive_test.message.maximum_number_of_questions": "Maximum number of questions",
    "schemas_adaptive_test.message.maximum_time_in_minutes": "Maximum time in minutes",
    "schemas_adaptive_test.message.se_threshold_for_stopping": "SE threshold for stopping",
    "schemas_adaptive_test.message.enable_topic_coverage_balancin": "Enable topic coverage balancing",
    "schemas_adaptive_test.message.enable_question_exposure_contr": "Enable question exposure control",
    "schemas_adaptive_test.message.link_to_regular_test_evaluatio": "Link to regular test/evaluation",
    "schemas_adaptive_test.message.schema_for_adaptive_test_sessi": "Schema for adaptive test session.",
    "schemas_adaptive_test.message.95": "95%",
    "schemas_adaptive_test.message.schema_for_submitting_response": "Schema for submitting response.",
    "schemas_adaptive_test.message.response_time_in_seconds": "Response time in seconds",
    "schemas_adaptive_test.message.schema_for_adaptive_response": "Schema for adaptive response.",
    "schemas_adaptive_test.message.schema_for_topic_performance_s": "Schema for topic performance score.",
    "schemas_adaptive_test.message.determine_performance_level_fo": "Determine performance level for topic.",
    "schemas_adaptive_test.message.schema_for_adaptive_test_repor": "Schema for adaptive test report.",
    "schemas_adaptive_test.message.level_with": " level with ",
    "schemas_adaptive_test.message.th_percentile": "th percentile",
    "schemas_adaptive_test.message.accuracy_across": "% accuracy across ",
    "schemas_adaptive_test.message.questions": " questions",
    "schemas_adaptive_test.message.schema_for_question_statistics": "Schema for question statistics.",
    "schemas_adaptive_test.message.analyze_performance_across_abi": "Analyze performance across ability levels.",
    "schemas_adaptive_test.message.schema_for_irt_calibration_res": "Schema for IRT calibration results.",
    "schemas_availability.message.0_1_0_9_2_0_3_0_5_0": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]-([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_availability.message.schema_for_creating_availabili": "Schema for creating availability.",
    "schemas_availability.message.0_1_0_9_2_0_3_0_5_0_1": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]-([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_availability.message.schema_for_updating_availabili": "Schema for updating availability.",
    "schemas_availability.message.0_1_0_9_2_0_3_0_5_0_2": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]-([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_availability.message.schema_for_creating_multiple_a": "Schema for creating multiple availability slots.",
    "schemas_availability.message.schema_for_checking_availabili": "Schema for checking availability.",
    "schemas_availability.message.0_1_0_9_2_0_3_0_5_0_3": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]-([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
    "schemas_gamification.message.schema_for_badge_model": "Schema for Badge model.",
    "schemas_gamification.message.schema_for_userbadge_model": "Schema for UserBadge model.",
    "schemas_gamification.message.schema_for_userxp_model": "Schema for UserXP model.",
    "schemas_gamification.message.schema_for_pointtransaction_mo": "Schema for PointTransaction model.",
    "schemas_gamification.message.schema_for_leaderboard_model": "Schema for Leaderboard model.",
    "schemas_gamification.message.schema_for_leaderboardentry_mo": "Schema for LeaderboardEntry model.",
    "schemas_gamification.message.schema_for_challenge_model": "Schema for Challenge model.",
    "schemas_gamification.message.schema_for_challengeparticipan": "Schema for ChallengeParticipant model.",
    "schemas_gamification.message.schema_for_gamificationteam_mo": "Schema for GamificationTeam model.",
    "schemas_gamification.message.schema_for_reward_model": "Schema for Reward model.",
    "schemas_gamification.message.schema_for_rewardredemption_mo": "Schema for RewardRedemption model.",
    "schemas_gamification.message.schema_for_usergoal_model": "Schema for UserGoal model.",
    "schemas_gamification.message.schema_for_gamificationevent_m": "Schema for GamificationEvent model.",
    "schemas_gamification.message.schema_for_userprogress_model": "Schema for UserProgress model.",
    "schemas_gamification.message.schema_for_creating_a_new_badg": "Schema for creating a new badge.",
    "schemas_gamification.message.schema_for_creating_a_new_chal": "Schema for creating a new challenge.",
    "schemas_gamification.message.schema_for_creating_a_new_rewa": "Schema for creating a new reward.",
    "schemas_gamification.message.schema_for_creating_a_new_team": "Schema for creating a new team.",
    "schemas_gamification.message.schema_for_creating_a_new_goal": "Schema for creating a new goal.",
    "schemas_gamification.message.schema_for_creating_a_new_lead": "Schema for creating a new leaderboard.",
    "schemas_gamification.message.schema_for_logging_gamificatio": "Schema for logging gamification events.",
    "schemas_gamification.message.schema_for_joining_a_challenge": "Schema for joining a challenge.",
    "schemas_gamification.message.schema_for_manually_awarding_a": "Schema for manually awarding a badge.",
    "schemas_gamification.message.schema_for_evaluation_completi": "Schema for evaluation completion notification.",
    "schemas_gamification.message.schema_for_program_completion": "Schema for program completion notification.",
    "schemas_gamification.message.schema_for_updating_goal_progr": "Schema for updating goal progress.",
    "schemas_gamification.message.schema_for_progress_summary_re": "Schema for progress summary response.",
    "schemas_gamification.message.schema_for_engagement_metrics": "Schema for engagement metrics response.",
    "schemas_gamification.message.schema_for_leaderboard_respons": "Schema for leaderboard response.",
    "schemas_gamification.message.schema_for_paginated_responses": "Schema for paginated responses.",
    "realtime___init__.message.real_time_communication_module": "Real-time communication module using Socket.IO.",
    "realtime___init__.message.configure_socketio_with_the_fl": "Configure SocketIO with the Flask app.",
    "realtime___init__.message.redis": "redis://",
    "realtime___init__.message.register_socket_io_event_handl": "Register Socket.IO event handlers.",
    "realtime___init__.message.connected": " connected",
    "realtime___init__.message.disconnected": " disconnected",
    "realtime___init__.message.handle_client_joining_a_room": "Handle client joining a room.",
    "realtime___init__.message.joined_room": " joined room ",
    "realtime___init__.message.handle_client_leaving_a_room": "Handle client leaving a room.",
    "realtime___init__.message.left_room": " left room ",
    "realtime___init__.message.check_if_a_user_is_currently_o": "Check if a user is currently online.",
    "realtime___init__.message.emit_an_event_to_a_specific_us": "Emit an event to a specific user.",
    "realtime___init__.message.emit_an_event_to_all_users_wit": "Emit an event to all users with a specific role.",
    "realtime___init__.message.emit_an_event_to_all_users_in": "Emit an event to all users in a specific tenant.",
    "realtime___init__.message.emit_an_event_to_all_users_in_1": "Emit an event to all users in a specific room.",
    "realtime___init__.message.broadcast_an_event_to_all_conn": "Broadcast an event to all connected users.",
    "integrations_config.message.configuration_management_for": "\nConfiguration management for integrations.\n",
    "integrations_config.message.manages_integration_configurat": "Manages integration configurations and lifecycle.",
    "integrations_config.message.aws_s3": "aws_s3",
    "integrations_config.message.aws_s3_1": "aws_s3",
    "integrations_config.message.us_east_1": "us-east-1",
    "integrations_config.message.added_config_for_integration": "Added config for integration: ",
    "integrations_config.message.get_configuration_for_a_specif": "Get configuration for a specific integration.",
    "integrations_config.message.list_all_available_integration": "List all available integration configurations.",
    "integrations_config.message.list_enabled_integration_confi": "List enabled integration configurations.",
    "integrations_config.message.save_configurations_to_file": "Save configurations to file.",
    "integrations_config.message.configs_to": " configs to ",
    "integrations_config.message.register_an_active_integration": "Register an active integration instance.",
    "integrations_config.message.get_an_active_integration_inst": "Get an active integration instance.",
    "integrations_config.message.list_active_integration_instan": "List active integration instances.",
    "integrations_config.message.get_status_of_all_integrations": "Get status of all integrations.",
    "integrations_registry.message.integration_registry_for_mana": "\nIntegration registry for managing and discovering integrations.\n",
    "integrations_registry.message.registry_for_managing_integrat": "Registry for managing integration classes and instances.",
    "integrations_registry.message.register_an_integration_class": "Register an integration class.",
    "integrations_registry.message.get_an_integration_class_by_na": "Get an integration class by name.",
    "integrations_registry.message.list_all_registered_integratio": "List all registered integration classes.",
    "integrations_registry.message.create_an_integration_instance": "Create an integration instance.",
    "integrations_registry.message.no_integration_class_registere": "No integration class registered for: ",
    "integrations_registry.message.get_an_integration_instance_by": "Get an integration instance by name.",
    "integrations_registry.message.remove_an_integration_instance": "Remove an integration instance.",
    "integrations_registry.message.get_all_integration_instances": "Get all integration instances of a specific type.",
    "integrations_registry.message.decorator_to_register_an_integ": "Decorator to register an integration class.",
    "integrations___init__.message.third_party_integrations_pack": "\nThird-party integrations package for BDC project.\n\nThis package provides a comprehensive system for integrating with various\nthird-party services including calendars, payments, video conferencing,\nemail services, storage providers, and authentication providers.\n",
    "integrations_examples.message.examples_and_usage_patterns_f": "\nExamples and usage patterns for BDC integrations.\n",
    "integrations_examples.message.example_usage_patterns_for_int": "Example usage patterns for integrations.",
    "integrations_examples.message.example_of_using_calendar_inte": "Example of using calendar integration.",
    "integrations_examples.message.calendar_integration_examp": "=== Calendar Integration Example ===",
    "integrations_examples.message.google_calendar_not_configured": "Google Calendar not configured",
    "integrations_examples.message.calendars": " calendars",
    "integrations_examples.message.weekly_team_sync_meeting": "Weekly team sync meeting",
    "integrations_examples.message.team_bdc_com": "team@bdc.com",
    "integrations_examples.message.manager_bdc_com": "manager@bdc.com",
    "integrations_examples.message.id": " (ID: ",
    "integrations_examples.message.available_slots_next_week": " available slots next week",
    "integrations_examples.message.example_of_using_payment_integ": "Example of using payment integration.",
    "integrations_examples.message.payment_integration_exampl": "=== Payment Integration Example ===",
    "integrations_examples.message.customer_example_com": "customer@example.com",
    "integrations_examples.message.id_1": " (ID: ",
    "integrations_examples.message.29_99": "29.99",
    "integrations_examples.message.for": " for $",
    "integrations_examples.message.payment_methods": " payment methods",
    "integrations_examples.message.transactions_for_customer": " transactions for customer",
    "integrations_examples.message.example_of_using_video_confere": "Example of using video conferencing integration.",
    "integrations_examples.message.video_integration_example": "=== Video Integration Example ===",
    "integrations_examples.message.client_example_com": "client@example.com",
    "integrations_examples.message.consultant_bdc_com": "consultant@bdc.com",
    "integrations_examples.message.id_2": " (ID: ",
    "integrations_examples.message.team_bdc_com_1": "team@bdc.com",
    "integrations_examples.message.upcoming_meetings": " upcoming meetings",
    "integrations_examples.message.team_bdc_com_2": "team@bdc.com",
    "integrations_examples.message.example_of_using_email_integra": "Example of using email integration.",
    "integrations_examples.message.email_integration_example": "=== Email Integration Example ===",
    "integrations_examples.message.newuser_example_com": "newuser@example.com",
    "integrations_examples.message.https_bdc_com_login": "https://bdc.com/login",
    "integrations_examples.message.sent_welcome_email_id": "Sent welcome email (ID: ",
    "integrations_examples.message.admin_bdc_com": "admin@bdc.com",
    "integrations_examples.message.manager_bdc_com_1": "manager@bdc.com",
    "integrations_examples.message.a_new_user_has_registered_jan": "A new user has registered: Jane Smith (newuser@example.com)",
    "integrations_examples.message.sent_notification_email_id": "Sent notification email (ID: ",
    "integrations_examples.message.appointment_reminder_appoi": "Appointment Reminder - {{appointment_date}}",
    "integrations_examples.message.h2_appointme": "\n                <h2>Appointment Reminder</h2>\n                <p>Hello {{client_name}},</p>\n                <p>This is a reminder about your upcoming appointment:</p>\n                <ul>\n                    <li>Date: {{appointment_date}}</li>\n                    <li>Time: {{appointment_time}}</li>\n                    <li>Service: {{service_name}}</li>\n                </ul>\n                <p>Please confirm your attendance.</p>\n                ",
    "integrations_examples.message.appointment_r": "\n                Appointment Reminder\n                \n                Hello {{client_name}},\n                \n                This is a reminder about your upcoming appointment:\n                - Date: {{appointment_date}}\n                - Time: {{appointment_time}}\n                - Service: {{service_name}}\n                \n                Please confirm your attendance.\n                ",
    "integrations_examples.message.client_example_com_1": "client@example.com",
    "integrations_examples.message.2024_01_15": "2024-01-15",
    "integrations_examples.message.2_00_pm": "2:00 PM",
    "integrations_examples.message.sent_template_email_id": "Sent template email (ID: ",
    "integrations_examples.message.email_stats_sent": "Email stats - Sent: ",
    "integrations_examples.message.delivered": ", Delivered: ",
    "integrations_examples.message.opened": ", Opened: ",
    "integrations_examples.message.example_of_using_integration_r": "Example of using integration registry.",
    "integrations_examples.message.integration_registry_examp": "=== Integration Registry Example ===",
    "integrations_examples.message.integration_instance": " integration instance",
    "integrations_examples.message.integration_instances": " integration instances",
    "integrations_examples.message.example_of_handling_webhooks": "Example of handling webhooks.",
    "integrations_examples.message.webhook_handling_example": "=== Webhook Handling Example ===",
    "integrations_examples.message.payment_intent_succeeded": "payment_intent.succeeded",
    "integrations_examples.message.test_example_com": "test@example.com",
    "integrations_examples.message.msg_test_123": "msg_test_123",
    "integrations_examples.message.events": " events",
    "integrations_examples.message.run_all_integration_examples": "Run all integration examples.",
    "integrations_examples.message.running_bdc_integrations_examp": "Running BDC Integrations Examples",
    "integrations_examples.message.main_function_to_run_examples": "Main function to run examples.",
    "integrations_testing.message.testing_utilities_for_bdc_int": "\nTesting utilities for BDC integrations.\n",
    "integrations_testing.message.test_suite_execution_result": "Test suite execution result.",
    "integrations_testing.message.test_runner_for_integrations": "Test runner for integrations.",
    "integrations_testing.message.setup_predefined_test_suites": "Setup predefined test suites.",
    "integrations_testing.message.test_integration_instance_crea": "Test integration instance creation",
    "integrations_testing.message.test_integration_registry_oper": "Test integration registry operations",
    "integrations_testing.message.test_calendar_service_connecti": "Test calendar service connection",
    "integrations_testing.message.test_calendar_event_crud_opera": "Test calendar event CRUD operations",
    "integrations_testing.message.test_payment_service_connectio": "Test payment service connection",
    "integrations_testing.message.test_customer_crud_operations": "Test customer CRUD operations",
    "integrations_testing.message.test_payment_intent_creation": "Test payment intent creation",
    "integrations_testing.message.test_payment_method_management": "Test payment method management",
    "integrations_testing.message.test_video_service_connection": "Test video service connection",
    "integrations_testing.message.test_meeting_crud_operations": "Test meeting CRUD operations",
    "integrations_testing.message.test_instant_meeting_creation": "Test instant meeting creation",
    "integrations_testing.message.test_meeting_participant_manag": "Test meeting participant management",
    "integrations_testing.message.test_email_service_connection": "Test email service connection",
    "integrations_testing.message.test_email_template_crud_opera": "Test email template CRUD operations",
    "integrations_testing.message.test_suppression_list_manageme": "Test suppression list management",
    "integrations_testing.message.run_a_specific_test_suite": "Run a specific test suite.",
    "integrations_testing.message.not_found": "' not found",
    "integrations_testing.message.run_all_test_suites": "Run all test suites.",
    "integrations_testing.message.run_an_individual_test_case": "Run an individual test case.",
    "integrations_testing.message.not_found_1": "' not found",
    "integrations_testing.message.test_timed_out_after": "Test timed out after ",
    "integrations_testing.message.seconds": " seconds",
    "integrations_testing.message.test_integration_instance_crea_1": "Test integration instance creation.",
    "integrations_testing.message.more_enabled_configs_than_tota": "More enabled configs than total configs",
    "integrations_testing.message.is_none": " is None",
    "integrations_testing.message.": " != ",
    "integrations_testing.message.test_integration_registry_oper_1": "Test integration registry operations.",
    "integrations_testing.message.no_integration_classes_registe": "No integration classes registered",
    "integrations_testing.message.test_calendar_service_connecti_1": "Test calendar service connections.",
    "integrations_testing.message.no_calendar_integrations_could": "No calendar integrations could connect",
    "integrations_testing.message.test_calendar_event_crud_opera_1": "Test calendar event CRUD operations.",
    "integrations_testing.message.test_event_for_integration_tes": "Test event for integration testing",
    "integrations_testing.message.test_payment_service_connectio_1": "Test payment service connections.",
    "integrations_testing.message.no_payment_integrations_could": "No payment integrations could connect",
    "integrations_testing.message.generate_a_test_report": "Generate a test report.",
    "integrations_testing.message.bdc_integrations_test_report": "BDC Integrations Test Report",
    "integrations_testing.message.total_tests": "  Total Tests: ",
    "integrations_testing.message.passed": "  Passed: ",
    "integrations_testing.message.skipped": "  Skipped: ",
    "integrations_testing.message.tests": "  Tests: ",
    "integrations_testing.message.passed_1": "  Passed: ",
    "integrations_testing.message.skipped_1": "  Skipped: ",
    "integrations_testing.message.duration": "  Duration: ",
    "integrations_testing.message.run_all_integration_tests": "Run all integration tests.",
    "integrations_base.message.base_integration_classes_and": "\nBase integration classes and utilities.\n",
    "integrations_base.message.raised_when_rate_limits_are_ex": "Raised when rate limits are exceeded.",
    "integrations_base.message.raised_when_the_external_servi": "Raised when the external service is unavailable.",
    "integrations_base.message.configuration_for_an_integrati": "Configuration for an integration.",
    "integrations_base.message.base_class_for_all_third_party": "Base class for all third-party integrations.",
    "integrations_base.message.return_the_type_of_integration": "Return the type of integration (e.g., 'calendar', 'payment').",
    "integrations_base.message.return_the_name_of_the_service": "Return the name of the service provider (e.g., 'google', 'stripe').",
    "integrations_base.message.establish_connection_to_the_se": "Establish connection to the service.",
    "integrations_base.message.test_if_the_connection_is_work": "Test if the connection is working.",
    "integrations_base.message.authenticate_with_the_service": "Authenticate with the service.",
    "integrations_base.message.check_if_the_integration_is_co": "Check if the integration is connected.",
    "integrations_base.message.base_class_for_oauth2_based_in": "Base class for OAuth2-based integrations.",
    "integrations_base.message.get_the_oauth2_authorization_u": "Get the OAuth2 authorization URL.",
    "integrations_base.message.exchange_authorization_code_fo": "Exchange authorization code for access tokens.",
    "integrations_base.message.refresh_the_access_token_using": "Refresh the access token using refresh token.",
    "integrations_base.message.base_class_for_api_key_based_i": "Base class for API key-based integrations.",
    "video_base_video.message.base_video_conferencing_integ": "\nBase video conferencing integration functionality.\n",
    "video_base_video.message.represents_a_meeting_participa": "Represents a meeting participant.",
    "video_base_video.message.input_data_for_creating_updati": "Input data for creating/updating video meetings.",
    "video_base_video.message.represents_a_video_meeting": "Represents a video meeting.",
    "video_base_video.message.base_class_for_video_conferenc": "Base class for video conferencing integrations.",
    "video_base_video.message.create_a_new_video_meeting": "Create a new video meeting.",
    "video_base_video.message.get_meeting_details_by_id": "Get meeting details by ID.",
    "video_base_video.message.list_meetings_with_optional_fi": "List meetings with optional filters.",
    "video_base_video.message.get_current_participants_in_a": "Get current participants in a meeting.",
    "video_base_video.message.add_a_participant_to_a_meeting": "Add a participant to a meeting.",
    "video_base_video.message.start_recording_a_meeting": "Start recording a meeting.",
    "video_base_video.message.stop_recording_a_meeting": "Stop recording a meeting.",
    "video_base_video.message.get_recordings_for_a_meeting": "Get recordings for a meeting.",
    "video_base_video.message.generate_a_join_url_for_a_part": "Generate a join URL for a participant.",
    "video_base_video.message.not_found_or_has_no_join_url": " not found or has no join URL",
    "video_base_video.message.uname": "uname=",
    "video_base_video.message.pwd": "pwd=",
    "video_base_video.message.create_an_instant_meeting_that": "Create an instant meeting that starts immediately.",
    "video_base_video.message.schedule_a_recurring_meeting": "Schedule a recurring meeting.",
    "video_base_video.message.get_analytics_for_a_meeting": "Get analytics for a meeting.",
    "video_base_video.message.send_meeting_invitation_to_par": "Send meeting invitation to participants.",
    "video_base_video.message.sending_invitation_for_meeting": "Sending invitation for meeting ",
    "video_base_video.message.to": " to ",
    "video_base_video.message.recipients": " recipients",
    "video_meet_integration.message.google_meet_video_conferencin": "\nGoogle Meet video conferencing integration.\n",
    "video_meet_integration.message.google_meet_video_conferencing": "Google Meet video conferencing integration.",
    "video_meet_integration.message.https_www_googleapis_com_aut": "https://www.googleapis.com/auth/calendar",
    "video_meet_integration.message.https_www_googleapis_com_aut_1": "https://www.googleapis.com/auth/calendar.events",
    "video_meet_integration.message.google_meet_dependencies_not_a": "Google Meet dependencies not available. Install google-api-python-client google-auth-oauthlib",
    "video_meet_integration.message.get_oauth2_authorization_url_f": "Get OAuth2 authorization URL for Google.",
    "video_meet_integration.message.https_accounts_google_com_o": "https://accounts.google.com/o/oauth2/auth",
    "video_meet_integration.message.https_oauth2_googleapis_com": "https://oauth2.googleapis.com/token",
    "video_meet_integration.message.exchange_authorization_code_fo": "Exchange authorization code for tokens.",
    "video_meet_integration.message.https_accounts_google_com_o_1": "https://accounts.google.com/o/oauth2/auth",
    "video_meet_integration.message.https_oauth2_googleapis_com_1": "https://oauth2.googleapis.com/token",
    "video_meet_integration.message.refresh_access_token_using_ref": "Refresh access token using refresh token.",
    "video_meet_integration.message.https_oauth2_googleapis_com_2": "https://oauth2.googleapis.com/token",
    "video_meet_integration.message.connect_to_google_calendar_api": "Connect to Google Calendar API (Meet uses Calendar API).",
    "video_meet_integration.message.https_oauth2_googleapis_com_3": "https://oauth2.googleapis.com/token",
    "video_meet_integration.message.test_google_meet_connection": "Test Google Meet connection.",
    "video_meet_integration.message.create_a_new_google_meet_meeti": "Create a new Google Meet meeting (via Calendar event).",
    "video_meet_integration.message.not_connected_to_google_meet": "Not connected to Google Meet",
    "video_meet_integration.message.get_google_meet_meeting_by_cal": "Get Google Meet meeting by calendar event ID.",
    "video_meet_integration.message.not_connected_to_google_meet_1": "Not connected to Google Meet",
    "video_meet_integration.message.not_connected_to_google_meet_2": "Not connected to Google Meet",
    "video_meet_integration.message.not_connected_to_google_meet_3": "Not connected to Google Meet",
    "video_meet_integration.message.list_google_meet_meetings_cal": "List Google Meet meetings (calendar events with conferenceData).",
    "video_meet_integration.message.not_connected_to_google_meet_4": "Not connected to Google Meet",
    "video_meet_integration.message.calendarid": "calendarId",
    "video_meet_integration.message.maxresults": "maxResults",
    "video_meet_integration.message.singleevents": "singleEvents",
    "video_meet_integration.message.orderby": "orderBy",
    "video_meet_integration.message.starttime": "startTime",
    "video_meet_integration.message.timemin": "timeMin",
    "video_meet_integration.message.timemax": "timeMax",
    "video_meet_integration.message.conferencedata": "conferenceData",
    "video_meet_integration.message.conferenceid": "conferenceId",
    "video_meet_integration.message.start_google_meet_meeting_goo": "Start Google Meet meeting (Google Meet starts automatically).",
    "video_meet_integration.message.end_google_meet_meeting_googl": "End Google Meet meeting (Google Meet ends automatically).",
    "video_meet_integration.message.get_google_meet_meeting_partic": "Get Google Meet meeting participants.",
    "video_meet_integration.message.add_participant_to_google_meet": "Add participant to Google Meet meeting.",
    "video_meet_integration.message.not_connected_to_google_meet_5": "Not connected to Google Meet",
    "video_meet_integration.message.displayname": "displayName",
    "video_meet_integration.message.not_connected_to_google_meet_6": "Not connected to Google Meet",
    "video_meet_integration.message.mute_participant_in_google_mee": "Mute participant in Google Meet meeting.",
    "video_meet_integration.message.unmute_participant_in_google_m": "Unmute participant in Google Meet meeting.",
    "video_meet_integration.message.start_recording_google_meet_me": "Start recording Google Meet meeting.",
    "video_meet_integration.message.stop_recording_google_meet_mee": "Stop recording Google Meet meeting.",
    "video_meet_integration.message.get_recordings_for_google_meet": "Get recordings for Google Meet meeting.",
    "video_meet_integration.message.convert_videomeetinginput_to_g": "Convert VideoMeetingInput to Google Calendar event with Meet.",
    "video_meet_integration.message.conferencedata_1": "conferenceData",
    "video_meet_integration.message.createrequest": "createRequest",
    "video_meet_integration.message.requestid": "requestId",
    "video_meet_integration.message.conferencesolutionkey": "conferenceSolutionKey",
    "video_meet_integration.message.meet": "meet-",
    "video_meet_integration.message.hangoutsmeet": "hangoutsMeet",
    "video_meet_integration.message.datetime": "dateTime",
    "video_meet_integration.message.timezone": "timeZone",
    "video_meet_integration.message.datetime_1": "dateTime",
    "video_meet_integration.message.timezone_1": "timeZone",
    "video_meet_integration.message.datetime_2": "dateTime",
    "video_meet_integration.message.datetime_3": "dateTime",
    "video_meet_integration.message.convert_google_calendar_event": "Convert Google Calendar event to VideoMeeting.",
    "video_meet_integration.message.datetime_4": "dateTime",
    "video_meet_integration.message.datetime_5": "dateTime",
    "video_meet_integration.message.00_00": "+00:00",
    "video_meet_integration.message.datetime_6": "dateTime",
    "video_meet_integration.message.datetime_7": "dateTime",
    "video_meet_integration.message.00_00_1": "+00:00",
    "video_meet_integration.message.conferencedata_2": "conferenceData",
    "video_meet_integration.message.conferenceid_1": "conferenceId",
    "video_meet_integration.message.entrypoints": "entryPoints",
    "video_meet_integration.message.entrypointtype": "entryPointType",
    "video_meet_integration.message.displayname_1": "displayName",
    "video_meet_integration.message.00_00_2": "+00:00",
    "video_meet_integration.message.00_00_3": "+00:00",
    "video_meet_integration.message.timezone_2": "timeZone",
    "video_teams_integration.message.microsoft_teams_video_confere": "\nMicrosoft Teams video conferencing integration.\n",
    "video_teams_integration.message.microsoft_teams_video_conferen": "Microsoft Teams video conferencing integration.",
    "video_teams_integration.message.https_graph_microsoft_com_v1": "https://graph.microsoft.com/v1.0",
    "video_teams_integration.message.https_login_microsoftonline": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
    "video_teams_integration.message.https_login_microsoftonline_1": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
    "video_teams_integration.message.https_graph_microsoft_com_on": "https://graph.microsoft.com/OnlineMeetings.ReadWrite",
    "video_teams_integration.message.https_graph_microsoft_com_us": "https://graph.microsoft.com/User.Read",
    "video_teams_integration.message.https_graph_microsoft_com_ca": "https://graph.microsoft.com/Calendars.ReadWrite",
    "video_teams_integration.message.get_oauth2_authorization_url_f": "Get OAuth2 authorization URL for Teams.",
    "video_teams_integration.message.exchange_authorization_code_fo": "Exchange authorization code for tokens.",
    "video_teams_integration.message.refresh_access_token_using_ref": "Refresh access token using refresh token.",
    "video_teams_integration.message.connect_to_microsoft_graph_api": "Connect to Microsoft Graph API.",
    "video_teams_integration.message.create_a_new_teams_meeting": "Create a new Teams meeting.",
    "video_teams_integration.message.not_connected_to_teams": "Not connected to Teams",
    "video_teams_integration.message.get_teams_meeting_by_id": "Get Teams meeting by ID.",
    "video_teams_integration.message.not_connected_to_teams_1": "Not connected to Teams",
    "video_teams_integration.message.not_connected_to_teams_2": "Not connected to Teams",
    "video_teams_integration.message.not_connected_to_teams_3": "Not connected to Teams",
    "video_teams_integration.message.not_connected_to_teams_4": "Not connected to Teams",
    "video_teams_integration.message.top": "$top",
    "video_teams_integration.message.start_teams_meeting_teams_doe": "Start Teams meeting (Teams doesn't have explicit start API).",
    "video_teams_integration.message.end_teams_meeting_teams_doesn": "End Teams meeting (Teams doesn't have explicit end API).",
    "video_teams_integration.message.get_teams_meeting_participants": "Get Teams meeting participants.",
    "video_teams_integration.message.add_participant_to_teams_meeti": "Add participant to Teams meeting.",
    "video_teams_integration.message.mute_participant_in_teams_meet": "Mute participant in Teams meeting.",
    "video_teams_integration.message.unmute_participant_in_teams_me": "Unmute participant in Teams meeting.",
    "video_teams_integration.message.start_recording_teams_meeting": "Start recording Teams meeting.",
    "video_teams_integration.message.stop_recording_teams_meeting": "Stop recording Teams meeting.",
    "video_teams_integration.message.get_recordings_for_teams_meeti": "Get recordings for Teams meeting.",
    "video_teams_integration.message.startdatetime": "startDateTime",
    "video_teams_integration.message.enddatetime": "endDateTime",
    "video_teams_integration.message.participantaccesspolicy": "participantAccessPolicy",
    "video_teams_integration.message.enabledforguestsandanonymous": "enabledForGuestsAndAnonymous",
    "video_teams_integration.message.enabledforexternalusers": "enabledForExternalUsers",
    "video_teams_integration.message.audioconferencing": "audioConferencing",
    "video_teams_integration.message.tollfreenumber": "tollFreeNumber",
    "video_teams_integration.message.tollnumber": "tollNumber",
    "video_teams_integration.message.conferenceid": "conferenceId",
    "video_teams_integration.message.convert_teams_meeting_to_video": "Convert Teams meeting to VideoMeeting.",
    "video_teams_integration.message.startdatetime_1": "startDateTime",
    "video_teams_integration.message.startdatetime_2": "startDateTime",
    "video_teams_integration.message.00_00": "+00:00",
    "video_teams_integration.message.enddatetime_1": "endDateTime",
    "video_teams_integration.message.enddatetime_2": "endDateTime",
    "video_teams_integration.message.00_00_1": "+00:00",
    "video_teams_integration.message.creationdatetime": "creationDateTime",
    "video_teams_integration.message.creationdatetime_1": "creationDateTime",
    "video_teams_integration.message.00_00_2": "+00:00",
    "video_teams_integration.message.joinweburl": "joinWebUrl",
    "video_teams_integration.message.joinweburl_1": "joinWebUrl",
    "video_teams_integration.message.https_teams_microsoft_com": "https://teams.microsoft.com/",
    "video_teams_integration.message.https_teams_microsoft_com_1": "https://teams.microsoft.com/",
    "video___init__.message.video_conferencing_integratio": "\nVideo conferencing integrations for BDC project.\n\nSupports Zoom, Microsoft Teams, and Google Meet integrations.\n",
    "video_zoom_integration.message.zoom_video_conferencing_integ": "\nZoom video conferencing integration.\n",
    "video_zoom_integration.message.zoom_video_conferencing_integr": "Zoom video conferencing integration.",
    "video_zoom_integration.message.https_api_zoom_us_v2": "https://api.zoom.us/v2",
    "video_zoom_integration.message.https_zoom_us_oauth_authoriz": "https://zoom.us/oauth/authorize",
    "video_zoom_integration.message.https_zoom_us_oauth_token": "https://zoom.us/oauth/token",
    "video_zoom_integration.message.meeting_write": "meeting:write",
    "video_zoom_integration.message.meeting_read": "meeting:read",
    "video_zoom_integration.message.webinar_write": "webinar:write",
    "video_zoom_integration.message.webinar_read": "webinar:read",
    "video_zoom_integration.message.recording_write": "recording:write",
    "video_zoom_integration.message.recording_read": "recording:read",
    "video_zoom_integration.message.user_read": "user:read",
    "video_zoom_integration.message.zoom_dependencies_not_availabl": "Zoom dependencies not available. Install aiohttp PyJWT",
    "video_zoom_integration.message.get_oauth2_authorization_url_f": "Get OAuth2 authorization URL for Zoom.",
    "video_zoom_integration.message.exchange_authorization_code_fo": "Exchange authorization code for tokens.",
    "video_zoom_integration.message.refresh_access_token_using_ref": "Refresh access token using refresh token.",
    "video_zoom_integration.message.connect_to_zoom_api": "Connect to Zoom API.",
    "video_zoom_integration.message.create_a_new_zoom_meeting": "Create a new Zoom meeting.",
    "video_zoom_integration.message.not_connected_to_zoom": "Not connected to Zoom",
    "video_zoom_integration.message.get_zoom_meeting_by_id": "Get Zoom meeting by ID.",
    "video_zoom_integration.message.not_connected_to_zoom_1": "Not connected to Zoom",
    "video_zoom_integration.message.not_connected_to_zoom_2": "Not connected to Zoom",
    "video_zoom_integration.message.not_connected_to_zoom_3": "Not connected to Zoom",
    "video_zoom_integration.message.not_connected_to_zoom_4": "Not connected to Zoom",
    "video_zoom_integration.message.start_zoom_meeting_zoom_doesn": "Start Zoom meeting (Zoom doesn't have explicit start API).",
    "video_zoom_integration.message.not_connected_to_zoom_5": "Not connected to Zoom",
    "video_zoom_integration.message.get_zoom_meeting_participants": "Get Zoom meeting participants.",
    "video_zoom_integration.message.not_connected_to_zoom_6": "Not connected to Zoom",
    "video_zoom_integration.message.add_participant_to_zoom_meetin": "Add participant to Zoom meeting.",
    "video_zoom_integration.message.not_connected_to_zoom_7": "Not connected to Zoom",
    "video_zoom_integration.message.meeting_participant_left": "meeting.participant_left",
    "video_zoom_integration.message.mute_participant_in_zoom_meeti": "Mute participant in Zoom meeting.",
    "video_zoom_integration.message.not_connected_to_zoom_8": "Not connected to Zoom",
    "video_zoom_integration.message.meeting_participant_audio_mute": "meeting.participant_audio_muted",
    "video_zoom_integration.message.unmute_participant_in_zoom_mee": "Unmute participant in Zoom meeting.",
    "video_zoom_integration.message.not_connected_to_zoom_9": "Not connected to Zoom",
    "video_zoom_integration.message.meeting_participant_audio_unmu": "meeting.participant_audio_unmuted",
    "video_zoom_integration.message.start_recording_zoom_meeting": "Start recording Zoom meeting.",
    "video_zoom_integration.message.not_connected_to_zoom_10": "Not connected to Zoom",
    "video_zoom_integration.message.stop_recording_zoom_meeting": "Stop recording Zoom meeting.",
    "video_zoom_integration.message.not_connected_to_zoom_11": "Not connected to Zoom",
    "video_zoom_integration.message.get_recordings_for_zoom_meetin": "Get recordings for Zoom meeting.",
    "video_zoom_integration.message.not_connected_to_zoom_12": "Not connected to Zoom",
    "video_zoom_integration.message.not_connected_to_zoom_13": "Not connected to Zoom",
    "video_zoom_integration.message.y_m_dt_h_m_s": "%Y-%m-%dT%H:%M:%S",
    "video_zoom_integration.message.convert_zoom_meeting_to_videom": "Convert Zoom meeting to VideoMeeting.",
    "video_zoom_integration.message.00_00": "+00:00",
    "video_zoom_integration.message.00_00_1": "+00:00",
    "video_zoom_integration.message.convert_zoom_participant_to_pa": "Convert Zoom participant to Participant.",
    "video_zoom_integration.message.00_00_2": "+00:00",
    "video_zoom_integration.message.00_00_3": "+00:00",
    "video_zoom_integration.message.convert_zoom_recording_to_reco": "Convert Zoom recording to RecordingInfo.",
    "video_zoom_integration.message.00_00_4": "+00:00",
    "video_zoom_integration.message.00_00_5": "+00:00",
    "video_zoom_integration.message.convert_meetingtype_to_zoom_ty": "Convert MeetingType to Zoom type.",
    "video_zoom_integration.message.convert_zoom_type_to_meetingty": "Convert Zoom type to MeetingType.",
    "payments_stripe_integration.message.stripe_payment_integration": "\nStripe payment integration.\n",
    "payments_stripe_integration.message.stripe_library_not_available": "Stripe library not available. Install stripe",
    "payments_stripe_integration.message.clear_stripe_api_key": "Clear Stripe API key.",
    "payments_stripe_integration.message.create_a_stripe_customer": "Create a Stripe customer.",
    "payments_stripe_integration.message.get_stripe_customer_by_id": "Get Stripe customer by ID.",
    "payments_stripe_integration.message.create_stripe_payment_method": "Create Stripe payment method.",
    "payments_stripe_integration.message.get_stripe_payment_method_by_i": "Get Stripe payment method by ID.",
    "payments_stripe_integration.message.list_stripe_payment_methods_fo": "List Stripe payment methods for customer.",
    "payments_stripe_integration.message.create_stripe_payment_intent": "Create Stripe payment intent.",
    "payments_stripe_integration.message.get_stripe_payment_intent_by_i": "Get Stripe payment intent by ID.",
    "payments_stripe_integration.message.confirm_stripe_payment_intent": "Confirm Stripe payment intent.",
    "payments_stripe_integration.message.cancel_stripe_payment_intent": "Cancel Stripe payment intent.",
    "payments_stripe_integration.message.capture_stripe_payment_intent": "Capture Stripe payment intent.",
    "payments_stripe_integration.message.get_stripe_charge_transaction": "Get Stripe charge (transaction) by ID.",
    "payments_stripe_integration.message.list_stripe_charges_transacti": "List Stripe charges (transactions).",
    "payments_stripe_integration.message.get_stripe_refund_by_id": "Get Stripe refund by ID.",
    "payments_stripe_integration.message.convert_stripe_customer_to_cus": "Convert Stripe customer to Customer object.",
    "payments_stripe_integration.message.convert_stripe_payment_method": "Convert Stripe payment method to PaymentMethod object.",
    "payments_stripe_integration.message.convert_stripe_payment_intent": "Convert Stripe payment intent to PaymentIntent object.",
    "payments_stripe_integration.message.convert_stripe_charge_to_trans": "Convert Stripe charge to Transaction object.",
    "payments_stripe_integration.message.convert_stripe_refund_to_refun": "Convert Stripe refund to Refund object.",
    "payments_stripe_integration.message.convert_paymentmethodtype_to_s": "Convert PaymentMethodType to Stripe type.",
    "payments_stripe_integration.message.convert_stripe_type_to_payment": "Convert Stripe type to PaymentMethodType.",
    "payments_stripe_integration.message.convert_stripe_status_to_payme": "Convert Stripe status to PaymentStatus.",
    "payments_paypal_integration.message.paypal_payment_integration": "\nPayPal payment integration.\n",
    "payments_paypal_integration.message.https_api_sandbox_paypal_com": "https://api.sandbox.paypal.com",
    "payments_paypal_integration.message.https_api_paypal_com": "https://api.paypal.com",
    "payments_paypal_integration.message.paypal_doesn_t_use_traditional": "PayPal doesn't use traditional OAuth for payments.",
    "payments_paypal_integration.message.paypal_uses_client_credentials": "PayPal uses client credentials, not authorization URL",
    "payments_paypal_integration.message.paypal_doesn_t_use_authorizati": "PayPal doesn't use authorization code flow for payments.",
    "payments_paypal_integration.message.paypal_uses_client_credentials_1": "PayPal uses client credentials, not authorization code",
    "payments_paypal_integration.message.refresh_paypal_access_token_us": "Refresh PayPal access token using client credentials.",
    "payments_paypal_integration.message.authenticate_with_paypal_using": "Authenticate with PayPal using client credentials.",
    "payments_paypal_integration.message.get_access_token_using_client": "Get access token using client credentials flow.",
    "payments_paypal_integration.message.grant_type_client_credentials": "grant_type=client_credentials",
    "payments_paypal_integration.message.connect_to_paypal_api": "Connect to PayPal API.",
    "payments_paypal_integration.message.create_paypal_customer_paypal": "Create PayPal customer (PayPal doesn't have dedicated customer objects).",
    "payments_paypal_integration.message.paypal_doesn_t_have_customer_o": "PayPal doesn't have customer objects.",
    "payments_paypal_integration.message.paypal_doesn_t_have_customer_o_1": "PayPal doesn't have customer objects.",
    "payments_paypal_integration.message.paypal_doesn_t_support_custome": "PayPal doesn't support customer objects",
    "payments_paypal_integration.message.paypal_doesn_t_have_customer_o_2": "PayPal doesn't have customer objects.",
    "payments_paypal_integration.message.paypal_doesn_t_have_separate_p": "PayPal doesn't have separate payment method objects.",
    "payments_paypal_integration.message.paypal_doesn_t_have_separate_p_1": "PayPal doesn't have separate payment method objects.",
    "payments_paypal_integration.message.paypal_doesn_t_have_separate_p_2": "PayPal doesn't have separate payment method objects.",
    "payments_paypal_integration.message.paypal_doesn_t_have_separate_p_3": "PayPal doesn't have separate payment method objects.",
    "payments_paypal_integration.message.create_paypal_order_equivalen": "Create PayPal order (equivalent to payment intent).",
    "payments_paypal_integration.message.not_connected_to_paypal": "Not connected to PayPal",
    "payments_paypal_integration.message.get_paypal_order_by_id": "Get PayPal order by ID.",
    "payments_paypal_integration.message.not_connected_to_paypal_1": "Not connected to PayPal",
    "payments_paypal_integration.message.not_connected_to_paypal_2": "Not connected to PayPal",
    "payments_paypal_integration.message.not_connected_to_paypal_3": "Not connected to PayPal",
    "payments_paypal_integration.message.cancel_paypal_order_not_direc": "Cancel PayPal order (not directly supported, just return current state).",
    "payments_paypal_integration.message.same_as_confirm_for_paypal": "Same as confirm for PayPal.",
    "payments_paypal_integration.message.get_paypal_capture_by_id": "Get PayPal capture by ID.",
    "payments_paypal_integration.message.not_connected_to_paypal_4": "Not connected to PayPal",
    "payments_paypal_integration.message.not_connected_to_paypal_5": "Not connected to PayPal",
    "payments_paypal_integration.message.get_paypal_refund_by_id": "Get PayPal refund by ID.",
    "payments_paypal_integration.message.not_connected_to_paypal_6": "Not connected to PayPal",
    "payments_paypal_integration.message.convert_paypal_order_to_paymen": "Convert PayPal order to PaymentIntent.",
    "payments_paypal_integration.message.convert_paypal_capture_result": "Convert PayPal capture result to PaymentIntent.",
    "payments_paypal_integration.message.convert_paypal_capture_to_tran": "Convert PayPal capture to Transaction.",
    "payments_paypal_integration.message.00_00": "+00:00",
    "payments_paypal_integration.message.convert_paypal_refund_to_refun": "Convert PayPal refund to Refund.",
    "payments_paypal_integration.message.00_00_1": "+00:00",
    "payments_paypal_integration.message.convert_paypal_status_to_payme": "Convert PayPal status to PaymentStatus.",
    "payments___init__.message.payment_processor_integration": "\nPayment processor integrations for BDC project.\n\nSupports Stripe and PayPal payment processing.\n",
    "payments_base_payment.message.base_payment_integration_func": "\nBase payment integration functionality.\n",
    "payments_base_payment.message.represents_a_payment_method": "Represents a payment method.",
    "payments_base_payment.message.represents_a_payment_intent": "Represents a payment intent.",
    "payments_base_payment.message.request_for_refunding_a_paymen": "Request for refunding a payment.",
    "payments_base_payment.message.base_class_for_payment_integra": "Base class for payment integrations.",
    "payments_base_payment.message.create_a_new_customer": "Create a new customer.",
    "payments_base_payment.message.get_customer_by_id": "Get customer by ID.",
    "payments_base_payment.message.create_a_payment_method": "Create a payment method.",
    "payments_base_payment.message.get_payment_method_by_id": "Get payment method by ID.",
    "payments_base_payment.message.list_payment_methods_for_a_cus": "List payment methods for a customer.",
    "payments_base_payment.message.create_a_payment_intent": "Create a payment intent.",
    "payments_base_payment.message.get_payment_intent_by_id": "Get payment intent by ID.",
    "payments_base_payment.message.confirm_a_payment_intent": "Confirm a payment intent.",
    "payments_base_payment.message.cancel_a_payment_intent": "Cancel a payment intent.",
    "payments_base_payment.message.capture_a_payment_intent_for": "Capture a payment intent (for manual confirmation).",
    "payments_base_payment.message.get_transaction_by_id": "Get transaction by ID.",
    "payments_base_payment.message.list_transactions_with_optiona": "List transactions with optional filters.",
    "payments_base_payment.message.create_a_refund_for_a_transact": "Create a refund for a transaction.",
    "payments_base_payment.message.get_refund_by_id": "Get refund by ID.",
    "payments_base_payment.message.list_refunds_with_optional_fil": "List refunds with optional filters.",
    "payments_base_payment.message.calculate_processing_fee_for_a": "Calculate processing fee for a payment.",
    "payments_base_payment.message.0_029": "0.029",
    "payments_base_payment.message.0_30": "0.30",
    "calendar_outlook_calendar.message.microsoft_outlook_calendar_in": "\nMicrosoft Outlook Calendar integration.\n",
    "calendar_outlook_calendar.message.microsoft_outlook_calendar_int": "Microsoft Outlook Calendar integration using OAuth2.",
    "calendar_outlook_calendar.message.https_graph_microsoft_com_ca": "https://graph.microsoft.com/Calendars.ReadWrite",
    "calendar_outlook_calendar.message.https_graph_microsoft_com_us": "https://graph.microsoft.com/User.Read",
    "calendar_outlook_calendar.message.https_graph_microsoft_com_v1": "https://graph.microsoft.com/v1.0",
    "calendar_outlook_calendar.message.https_login_microsoftonline": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
    "calendar_outlook_calendar.message.https_login_microsoftonline_1": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
    "calendar_outlook_calendar.message.get_oauth2_authorization_url_f": "Get OAuth2 authorization URL for Microsoft.",
    "calendar_outlook_calendar.message.exchange_authorization_code_fo": "Exchange authorization code for tokens.",
    "calendar_outlook_calendar.message.refresh_access_token_using_ref": "Refresh access token using refresh token.",
    "calendar_outlook_calendar.message.connect_to_microsoft_graph_api": "Connect to Microsoft Graph API.",
    "calendar_outlook_calendar.message.test_outlook_calendar_connecti": "Test Outlook Calendar connection.",
    "calendar_outlook_calendar.message.get_list_of_outlook_calendars": "Get list of Outlook calendars.",
    "calendar_outlook_calendar.message.not_connected_to_outlook_calen": "Not connected to Outlook Calendar",
    "calendar_outlook_calendar.message.isdefaultcalendar": "isDefaultCalendar",
    "calendar_outlook_calendar.message.get_the_primary_outlook_calend": "Get the primary Outlook calendar.",
    "calendar_outlook_calendar.message.create_a_new_event_in_outlook": "Create a new event in Outlook Calendar.",
    "calendar_outlook_calendar.message.not_connected_to_outlook_calen_1": "Not connected to Outlook Calendar",
    "calendar_outlook_calendar.message.not_connected_to_outlook_calen_2": "Not connected to Outlook Calendar",
    "calendar_outlook_calendar.message.not_connected_to_outlook_calen_3": "Not connected to Outlook Calendar",
    "calendar_outlook_calendar.message.not_connected_to_outlook_calen_4": "Not connected to Outlook Calendar",
    "calendar_outlook_calendar.message.not_connected_to_outlook_calen_5": "Not connected to Outlook Calendar",
    "calendar_outlook_calendar.message.top": "$top",
    "calendar_outlook_calendar.message.start_datetime_ge": "start/dateTime ge '",
    "calendar_outlook_calendar.message.end_datetime_le": "end/dateTime le '",
    "calendar_outlook_calendar.message.filter": "$filter",
    "calendar_outlook_calendar.message.and": " and ",
    "calendar_outlook_calendar.message.orderby": "$orderby",
    "calendar_outlook_calendar.message.start_datetime": "start/dateTime",
    "calendar_outlook_calendar.message.search_for_events_in_outlook_c": "Search for events in Outlook Calendar.",
    "calendar_outlook_calendar.message.not_connected_to_outlook_calen_6": "Not connected to Outlook Calendar",
    "calendar_outlook_calendar.message.search": "$search",
    "calendar_outlook_calendar.message.orderby_1": "$orderby",
    "calendar_outlook_calendar.message.start_datetime_1": "start/dateTime",
    "calendar_outlook_calendar.message.contenttype": "contentType",
    "calendar_outlook_calendar.message.displayname": "displayName",
    "calendar_outlook_calendar.message.isallday": "isAllDay",
    "calendar_outlook_calendar.message.datetime": "dateTime",
    "calendar_outlook_calendar.message.timezone": "timeZone",
    "calendar_outlook_calendar.message.datetime_1": "dateTime",
    "calendar_outlook_calendar.message.timezone_1": "timeZone",
    "calendar_outlook_calendar.message.isallday_1": "isAllDay",
    "calendar_outlook_calendar.message.datetime_2": "dateTime",
    "calendar_outlook_calendar.message.timezone_2": "timeZone",
    "calendar_outlook_calendar.message.datetime_3": "dateTime",
    "calendar_outlook_calendar.message.timezone_3": "timeZone",
    "calendar_outlook_calendar.message.emailaddress": "emailAddress",
    "calendar_outlook_calendar.message.convert_outlook_event_to_calen": "Convert Outlook event to CalendarEvent.",
    "calendar_outlook_calendar.message.datetime_4": "dateTime",
    "calendar_outlook_calendar.message.00_00": "+00:00",
    "calendar_outlook_calendar.message.datetime_5": "dateTime",
    "calendar_outlook_calendar.message.00_00_1": "+00:00",
    "calendar_outlook_calendar.message.emailaddress_1": "emailAddress",
    "calendar_outlook_calendar.message.iscancelled": "isCancelled",
    "calendar_outlook_calendar.message.00_00_2": "+00:00",
    "calendar_outlook_calendar.message.lastmodifieddatetime": "lastModifiedDateTime",
    "calendar_outlook_calendar.message.lastmodifieddatetime_1": "lastModifiedDateTime",
    "calendar_outlook_calendar.message.00_00_3": "+00:00",
    "calendar_outlook_calendar.message.displayname_1": "displayName",
    "calendar_outlook_calendar.message.emailaddress_2": "emailAddress",
    "calendar_outlook_calendar.message.timezone_4": "timeZone",
    "calendar_outlook_calendar.message.isallday_2": "isAllDay",
    "calendar_outlook_calendar.message.weblink": "webLink",
    "calendar_outlook_calendar.message.onlinemeeting": "onlineMeeting",
    "calendar_outlook_calendar.message.joinurl": "joinUrl",
    "calendar_ical_calendar.message.ical_webdav_calendar_integr": "\niCal (WebDAV) calendar integration.\n",
    "calendar_ical_calendar.message.ical_webdav_calendar_integrati": "iCal/WebDAV calendar integration.",
    "calendar_ical_calendar.message.ical_dependencies_not_availabl": "iCal dependencies not available. Install icalendar caldav",
    "calendar_ical_calendar.message.authenticate_with_caldav_serve": "Authenticate with CalDAV server.",
    "calendar_ical_calendar.message.connect_to_caldav_server": "Connect to CalDAV server.",
    "calendar_ical_calendar.message.get_list_of_caldav_calendars": "Get list of CalDAV calendars.",
    "calendar_ical_calendar.message.not_connected_to_caldav_server": "Not connected to CalDAV server",
    "calendar_ical_calendar.message.get_the_first_available_calend": "Get the first available calendar as 'primary'.",
    "calendar_ical_calendar.message.create_a_new_event_in_caldav_c": "Create a new event in CalDAV calendar.",
    "calendar_ical_calendar.message.not_connected_to_caldav_server_1": "Not connected to CalDAV server",
    "calendar_ical_calendar.message.not_connected_to_caldav_server_2": "Not connected to CalDAV server",
    "calendar_ical_calendar.message.not_connected_to_caldav_server_3": "Not connected to CalDAV server",
    "calendar_ical_calendar.message.not_connected_to_caldav_server_4": "Not connected to CalDAV server",
    "calendar_ical_calendar.message.not_connected_to_caldav_server_5": "Not connected to CalDAV server",
    "calendar_ical_calendar.message.search_for_events_in_caldav_ca": "Search for events in CalDAV calendar.",
    "calendar_ical_calendar.message.get_caldav_calendar_object_by": "Get CalDAV calendar object by ID (URL).",
    "calendar_ical_calendar.message.convert_calendareventinput_to": "Convert CalendarEventInput to iCal event.",
    "calendar_ical_calendar.message.mailto": "mailto:",
    "calendar_ical_calendar.message.convert_caldav_event_to_calend": "Convert CalDAV event to CalendarEvent.",
    "calendar_ical_calendar.message.no_vevent_component_found": "No VEVENT component found",
    "calendar_ical_calendar.message.mailto_1": "mailto:",
    "calendar_ical_calendar.message.last_modified": "last-modified",
    "calendar___init__.message.calendar_integration_provider": "\nCalendar integration providers for BDC project.\n\nSupports Google Calendar, Outlook, and iCal integrations.\n",
    "calendar_google_calendar.message.google_calendar_integration": "\nGoogle Calendar integration.\n",
    "calendar_google_calendar.message.google_calendar_integration_us": "Google Calendar integration using OAuth2.",
    "calendar_google_calendar.message.https_www_googleapis_com_aut": "https://www.googleapis.com/auth/calendar",
    "calendar_google_calendar.message.https_www_googleapis_com_aut_1": "https://www.googleapis.com/auth/calendar.events",
    "calendar_google_calendar.message.google_calendar_dependencies_n": "Google Calendar dependencies not available. Install google-api-python-client google-auth-oauthlib",
    "calendar_google_calendar.message.get_oauth2_authorization_url_f": "Get OAuth2 authorization URL for Google.",
    "calendar_google_calendar.message.https_accounts_google_com_o": "https://accounts.google.com/o/oauth2/auth",
    "calendar_google_calendar.message.https_oauth2_googleapis_com": "https://oauth2.googleapis.com/token",
    "calendar_google_calendar.message.exchange_authorization_code_fo": "Exchange authorization code for tokens.",
    "calendar_google_calendar.message.https_accounts_google_com_o_1": "https://accounts.google.com/o/oauth2/auth",
    "calendar_google_calendar.message.https_oauth2_googleapis_com_1": "https://oauth2.googleapis.com/token",
    "calendar_google_calendar.message.refresh_access_token_using_ref": "Refresh access token using refresh token.",
    "calendar_google_calendar.message.https_oauth2_googleapis_com_2": "https://oauth2.googleapis.com/token",
    "calendar_google_calendar.message.connect_to_google_calendar_api": "Connect to Google Calendar API.",
    "calendar_google_calendar.message.https_oauth2_googleapis_com_3": "https://oauth2.googleapis.com/token",
    "calendar_google_calendar.message.test_google_calendar_connectio": "Test Google Calendar connection.",
    "calendar_google_calendar.message.get_list_of_google_calendars": "Get list of Google calendars.",
    "calendar_google_calendar.message.not_connected_to_google_calend": "Not connected to Google Calendar",
    "calendar_google_calendar.message.timezone": "timeZone",
    "calendar_google_calendar.message.accessrole": "accessRole",
    "calendar_google_calendar.message.colorid": "colorId",
    "calendar_google_calendar.message.get_the_primary_google_calenda": "Get the primary Google calendar.",
    "calendar_google_calendar.message.create_a_new_event_in_google_c": "Create a new event in Google Calendar.",
    "calendar_google_calendar.message.not_connected_to_google_calend_1": "Not connected to Google Calendar",
    "calendar_google_calendar.message.not_connected_to_google_calend_2": "Not connected to Google Calendar",
    "calendar_google_calendar.message.not_connected_to_google_calend_3": "Not connected to Google Calendar",
    "calendar_google_calendar.message.not_connected_to_google_calend_4": "Not connected to Google Calendar",
    "calendar_google_calendar.message.not_connected_to_google_calend_5": "Not connected to Google Calendar",
    "calendar_google_calendar.message.calendarid": "calendarId",
    "calendar_google_calendar.message.maxresults": "maxResults",
    "calendar_google_calendar.message.singleevents": "singleEvents",
    "calendar_google_calendar.message.orderby": "orderBy",
    "calendar_google_calendar.message.starttime": "startTime",
    "calendar_google_calendar.message.timemin": "timeMin",
    "calendar_google_calendar.message.timemax": "timeMax",
    "calendar_google_calendar.message.search_for_events_in_google_ca": "Search for events in Google Calendar.",
    "calendar_google_calendar.message.not_connected_to_google_calend_6": "Not connected to Google Calendar",
    "calendar_google_calendar.message.starttime_1": "startTime",
    "calendar_google_calendar.message.datetime": "dateTime",
    "calendar_google_calendar.message.timezone_1": "timeZone",
    "calendar_google_calendar.message.datetime_1": "dateTime",
    "calendar_google_calendar.message.timezone_2": "timeZone",
    "calendar_google_calendar.message.datetime_2": "dateTime",
    "calendar_google_calendar.message.datetime_3": "dateTime",
    "calendar_google_calendar.message.usedefault": "useDefault",
    "calendar_google_calendar.message.convert_google_calendar_event": "Convert Google Calendar event to CalendarEvent.",
    "calendar_google_calendar.message.datetime_4": "dateTime",
    "calendar_google_calendar.message.00_00": "+00:00",
    "calendar_google_calendar.message.datetime_5": "dateTime",
    "calendar_google_calendar.message.00_00_1": "+00:00",
    "calendar_google_calendar.message.00_00_2": "+00:00",
    "calendar_google_calendar.message.00_00_3": "+00:00",
    "calendar_google_calendar.message.timezone_3": "timeZone",
    "calendar_google_calendar.message.htmllink": "htmlLink",
    "calendar_google_calendar.message.hangoutlink": "hangoutLink",
    "calendar_base_calendar.message.base_calendar_integration_fun": "\nBase calendar integration functionality.\n",
    "calendar_base_calendar.message.input_data_for_creating_updati": "Input data for creating/updating calendar events.",
    "calendar_base_calendar.message.represents_a_calendar_event": "Represents a calendar event.",
    "calendar_base_calendar.message.base_class_for_calendar_integr": "Base class for calendar integrations.",
    "calendar_base_calendar.message.get_list_of_available_calendar": "Get list of available calendars.",
    "calendar_base_calendar.message.get_the_primary_calendar": "Get the primary calendar.",
    "calendar_base_calendar.message.create_a_new_event_in_the_spec": "Create a new event in the specified calendar.",
    "calendar_base_calendar.message.get_a_specific_event_by_id": "Get a specific event by ID.",
    "calendar_base_calendar.message.list_events_in_a_calendar_with": "List events in a calendar within the specified time range.",
    "calendar_base_calendar.message.search_for_events_by_text_quer": "Search for events by text query.",
    "calendar_base_calendar.message.find_available_time_slots_in_t": "Find available time slots in the calendar.",
    "calendar_base_calendar.message.parse_rrule_string_into_a_dict": "Parse RRULE string into a dictionary.",
    "email_base_email.message.base_email_service_integratio": "\nBase email service integration functionality.\n",
    "email_base_email.message.get_base64_encoded_content": "Get base64 encoded content.",
    "email_base_email.message.email_event_webhook_data": "Email event (webhook data).",
    "email_base_email.message.base_class_for_email_service_i": "Base class for email service integrations.",
    "email_base_email.message.send_an_email_message_and_retu": "Send an email message and return message ID.",
    "email_base_email.message.send_multiple_emails_and_retur": "Send multiple emails and return list of message IDs.",
    "email_base_email.message.get_status_of_a_sent_email": "Get status of a sent email.",
    "email_base_email.message.create_an_email_template_and_r": "Create an email template and return template ID.",
    "email_base_email.message.get_email_template_by_id": "Get email template by ID.",
    "email_base_email.message.list_all_email_templates": "List all email templates.",
    "email_base_email.message.send_email_using_a_template": "Send email using a template.",
    "email_base_email.message.add_email_to_suppression_list": "Add email to suppression list.",
    "email_base_email.message.check_if_email_is_in_suppressi": "Check if email is in suppression list.",
    "email_base_email.message.a_za_z0_9_a_za_z0_9": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
    "email_base_email.message.send_a_simple_email": "Send a simple email.",
    "email_base_email.message.send_a_notification_email_with": "Send a notification email with high priority.",
    "email_base_email.message.send_password_reset_email": "Send password reset email.",
    "email_base_email.message.hello": "\n        Hello",
    "email_base_email.message.you_have_re": ",\n        \n        You have requested to reset your password. Please click the link below to reset your password:\n        \n        ",
    "email_base_email.message.this_link_wi": "\n        \n        This link will expire in 24 hours.\n        \n        If you did not request this password reset, please ignore this email.\n        \n        Best regards,\n        The BDC Team\n        ",
    "email_base_email.message.html_body": "\n        <html>\n        <body>\n            <h2>Password Reset Request</h2>\n            <p>Hello",
    "email_base_email.message.p_p_you_have": ",</p>\n            <p>You have requested to reset your password. Please click the button below to reset your password:</p>\n            <p><a href=\"",
    "email_base_email.message.style_background_color_00": "\" style=\"background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">Reset Password</a></p>\n            <p>This link will expire in 24 hours.</p>\n            <p>If you did not request this password reset, please ignore this email.</p>\n            <p>Best regards,<br>The BDC Team</p>\n        </body>\n        </html>\n        ",
    "email_base_email.message.password_reset": "password-reset",
    "email_base_email.message.send_welcome_email_to_new_user": "Send welcome email to new user.",
    "email_base_email.message.hello_1": "\n        Hello ",
    "email_base_email.message.welcome_to": ",\n        \n        Welcome to BDC! We're excited to have you on board.\n        \n        ",
    "email_base_email.message.you_can_log_in_to_your_account": "You can log in to your account here: ",
    "email_base_email.message.if_you_have": "\n        \n        If you have any questions, please don't hesitate to contact our support team.\n        \n        Best regards,\n        The BDC Team\n        ",
    "email_base_email.message.html_body_1": "\n        <html>\n        <body>\n            <h2>Welcome to BDC!</h2>\n            <p>Hello ",
    "email_base_email.message.p_p_welcome_t": ",</p>\n            <p>Welcome to BDC! We're excited to have you on board.</p>\n            ",
    "email_base_email.message.p_a_href": "<p><a href=\"",
    "email_base_email.message.style_background_color_28": "\" style=\"background-color: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">Login to Your Account</a></p>",
    "email_base_email.message.p_if_you_have_an": "\n            <p>If you have any questions, please don't hesitate to contact our support team.</p>\n            <p>Best regards,<br>The BDC Team</p>\n        </body>\n        </html>\n        ",
    "email_base_email.message.sanitize_email_content_to_prev": "Sanitize email content to prevent issues.",
    "email___init__.message.email_service_integrations_fo": "\nEmail service integrations for BDC project.\n\nSupports SendGrid and Mailgun email services.\n",
    "email_sendgrid_integration.message.sendgrid_email_integration": "\nSendGrid email integration.\n",
    "email_sendgrid_integration.message.sendgrid_email_service_integra": "SendGrid email service integration.",
    "email_sendgrid_integration.message.sendgrid_library_not_available": "SendGrid library not available. Install sendgrid",
    "email_sendgrid_integration.message.send_email_via_sendgrid": "Send email via SendGrid.",
    "email_sendgrid_integration.message.not_connected_to_sendgrid": "Not connected to SendGrid",
    "email_sendgrid_integration.message.send_multiple_emails_via_sendg": "Send multiple emails via SendGrid.",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_1": "Not connected to SendGrid",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_2": "Not connected to SendGrid",
    "email_sendgrid_integration.message.y_m_d": "%Y-%m-%d",
    "email_sendgrid_integration.message.y_m_d_1": "%Y-%m-%d",
    "email_sendgrid_integration.message.create_email_template_in_sendg": "Create email template in SendGrid.",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_3": "Not connected to SendGrid",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_4": "Not connected to SendGrid",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_5": "Not connected to SendGrid",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_6": "Not connected to SendGrid",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_7": "Not connected to SendGrid",
    "email_sendgrid_integration.message.send_email_using_sendgrid_temp": "Send email using SendGrid template.",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_8": "Not connected to SendGrid",
    "email_sendgrid_integration.message.add_email_to_sendgrid_suppress": "Add email to SendGrid suppression list.",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_9": "Not connected to SendGrid",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_10": "Not connected to SendGrid",
    "email_sendgrid_integration.message.check_if_email_is_in_sendgrid": "Check if email is in SendGrid suppression list.",
    "email_sendgrid_integration.message.not_connected_to_sendgrid_11": "Not connected to SendGrid",
    "email_sendgrid_integration.message.convert_emailmessage_to_sendgr": "Convert EmailMessage to SendGrid Mail object.",
    "email_sendgrid_integration.message.convert_sendgrid_template_to_e": "Convert SendGrid template to EmailTemplate.",
    "email_sendgrid_integration.message.00_00": "+00:00",
    "email_sendgrid_integration.message.00_00_1": "+00:00",
    "email_sendgrid_integration.message.parse_sendgrid_statistics_data": "Parse SendGrid statistics data.",
    "email_sendgrid_integration.message.process_sendgrid_webhook_event": "Process SendGrid webhook event.",
    "email_sendgrid_integration.message.parse_individual_sendgrid_even": "Parse individual SendGrid event.",
    "api_auth.message.improved_authentication_api_wi": "Improved authentication API with dependency injection.",
    "api_auth.message.user_login_endpoint_with_impro": "User login endpoint with improved architecture.",
    "api_auth.message.request_body_is_empty": "Request body is empty",
    "api_auth.message.user_registration_endpoint_wit": "User registration endpoint with improved architecture.",
    "api_auth.message.request_body_is_empty_1": "Request body is empty",
    "api_auth.message.token_refresh_endpoint_with_im": "Token refresh endpoint with improved architecture.",
    "api_auth.message.user_logout_endpoint_with_impr": "User logout endpoint with improved architecture.",
    "api_auth.message.change_password_endpoint_with": "Change password endpoint with improved architecture.",
    "api_auth.message.request_body_is_empty_2": "Request body is empty",
    "api_auth.message.reset_password_endpoint_with_i": "Reset password endpoint with improved architecture.",
    "api_auth.message.request_body_is_empty_3": "Request body is empty",
    "api_assessment.message.get_assessment_templates_for_t": "Get assessment templates for the current user's organization.",
    "api_assessment.message.general_assessment_for_basic_s": "General assessment for basic skills",
    "api_assessment.message.how_well_can_the_participant_c": "How well can the participant communicate verbally?",
    "api_assessment.message.2024_01_01t00_00_00z": "2024-01-01T00:00:00Z",
    "api_assessment.message.2024_01_01t00_00_00z_1": "2024-01-01T00:00:00Z",
    "api_assessment.message.assessment_for_technical_and_c": "Assessment for technical and computer skills",
    "api_assessment.message.can_the_participant_use_basic": "Can the participant use basic computer applications?",
    "api_assessment.message.2024_01_01t00_00_00z_2": "2024-01-01T00:00:00Z",
    "api_assessment.message.2024_01_01t00_00_00z_3": "2024-01-01T00:00:00Z",
    "api_assessment.message.create_a_new_assessment_templa": "Create a new assessment template.",
    "api_assessment.message.2024_01_01t00_00_00z_4": "2024-01-01T00:00:00Z",
    "api_assessment.message.2024_01_01t00_00_00z_5": "2024-01-01T00:00:00Z",
    "api_assessment.message.get_a_specific_assessment_temp": "Get a specific assessment template.",
    "api_assessment.message.general_assessment_for_basic_s_1": "General assessment for basic skills",
    "api_assessment.message.how_well_can_the_participant_c_1": "How well can the participant communicate verbally?",
    "api_assessment.message.2024_01_01t00_00_00z_6": "2024-01-01T00:00:00Z",
    "api_assessment.message.2024_01_01t00_00_00z_7": "2024-01-01T00:00:00Z",
    "api_assessment.message.general_assessment_for_basic_s_2": "General assessment for basic skills",
    "api_assessment.message.2024_01_01t00_00_00z_8": "2024-01-01T00:00:00Z",
    "api_assessment.message.2024_01_01t00_00_00z_9": "2024-01-01T00:00:00Z",
    "api_gamification_v2.message.enhanced_gamification_api_rou": "\nEnhanced Gamification API Routes\n\nProvides comprehensive endpoints for all gamification features including\nachievements, badges, XP, levels, progress tracking, leaderboards, and social features.\n",
    "api_gamification_v2.message.gamification_v2": "gamification_v2",
    "api_gamification_v2.message.get_comprehensive_gamification": "Get comprehensive gamification dashboard for a user",
    "api_gamification_v2.message.get_gamification_summary_for_a": "Get gamification summary for a user",
    "api_gamification_v2.message.trigger_a_gamification_event": "Trigger a gamification event",
    "api_gamification_v2.message.award_xp_to_a_user": "Award XP to a user",
    "api_gamification_v2.message.get_xp_transaction_history_for": "Get XP transaction history for a user",
    "api_gamification_v2.message.get_xp_statistics_for_a_user": "Get XP statistics for a user",
    "api_gamification_v2.message.get_level_progress_for_a_user": "Get level progress for a user",
    "api_gamification_v2.message.create_a_new_badge": "Create a new badge",
    "api_gamification_v2.message.award_a_badge_to_a_user": "Award a badge to a user",
    "api_gamification_v2.message.get_badges_earned_by_a_user": "Get badges earned by a user",
    "api_gamification_v2.message.get_badge_showcase_for_a_user": "Get badge showcase for a user",
    "api_gamification_v2.message.get_badges_available_for_a_use": "Get badges available for a user to earn",
    "api_gamification_v2.message.create_a_new_achievement": "Create a new achievement",
    "api_gamification_v2.message.get_achievements_earned_by_a_u": "Get achievements earned by a user",
    "api_gamification_v2.message.get_achievements_available_for": "Get achievements available for a user",
    "api_gamification_v2.message.create_a_new_leaderboard": "Create a new leaderboard",
    "api_gamification_v2.message.get_leaderboard_by_type": "Get leaderboard by type",
    "api_gamification_v2.message.get_user_s_rankings_across_lea": "Get user's rankings across leaderboards",
    "api_gamification_v2.message.create_a_new_team": "Create a new team",
    "api_gamification_v2.message.get_teams_a_user_belongs_to": "Get teams a user belongs to",
    "api_gamification_v2.message.get_social_feed_for_a_user": "Get social feed for a user",
    "api_gamification_v2.message.create_a_new_learning_path": "Create a new learning path",
    "api_gamification_v2.message.get_learning_paths_for_a_user": "Get learning paths for a user",
    "api_gamification_v2.message.get_recommended_learning_paths": "Get recommended learning paths for a user",
    "api_gamification_v2.message.get_progress_for_a_specific_le": "Get progress for a specific learning path",
    "api_gamification_v2.message.get_progress_trackers_for_a_us": "Get progress trackers for a user",
    "api_gamification_v2.message.get_progress_dashboard_for_a_u": "Get progress dashboard for a user",
    "api_gamification_v2.message.get_global_gamification_statis": "Get global gamification statistics",
    "api_gamification_v2.message.gamification_v2_1": "gamification_v2",
    "api_settings_routes.message.get_ai_configuration_settings": "Get AI configuration settings.",
    "api_settings_routes.message.customendpoints": "customEndpoints",
    "api_settings_routes.message.apikey": "apiKey",
    "api_settings_routes.message.baseurl": "baseUrl",
    "api_settings_routes.message.maxtokens": "maxTokens",
    "api_settings_routes.message.supportedmodels": "supportedModels",
    "api_settings_routes.message.gpt_3_5_turbo": "gpt-3.5-turbo",
    "api_settings_routes.message.https_api_openai_com_v1": "https://api.openai.com/v1",
    "api_settings_routes.message.openai_gpt_models_for_general": "OpenAI GPT models for general AI tasks",
    "api_settings_routes.message.gpt_3_5_turbo_1": "gpt-3.5-turbo",
    "api_settings_routes.message.gpt_4": "gpt-4",
    "api_settings_routes.message.gpt_4_turbo": "gpt-4-turbo",
    "api_settings_routes.message.gpt_4o": "gpt-4o",
    "api_settings_routes.message.apikey_1": "apiKey",
    "api_settings_routes.message.baseurl_1": "baseUrl",
    "api_settings_routes.message.maxtokens_1": "maxTokens",
    "api_settings_routes.message.supportedmodels_1": "supportedModels",
    "api_settings_routes.message.claude_3_sonnet_20240229": "claude-3-sonnet-20240229",
    "api_settings_routes.message.https_api_anthropic_com_v1": "https://api.anthropic.com/v1",
    "api_settings_routes.message.anthropic_claude_models_for_ad": "Anthropic Claude models for advanced reasoning",
    "api_settings_routes.message.claude_3_haiku_20240307": "claude-3-haiku-20240307",
    "api_settings_routes.message.claude_3_sonnet_20240229_1": "claude-3-sonnet-20240229",
    "api_settings_routes.message.claude_3_opus_20240229": "claude-3-opus-20240229",
    "api_settings_routes.message.apikey_2": "apiKey",
    "api_settings_routes.message.baseurl_2": "baseUrl",
    "api_settings_routes.message.maxtokens_2": "maxTokens",
    "api_settings_routes.message.supportedmodels_2": "supportedModels",
    "api_settings_routes.message.llama2": "llama2",
    "api_settings_routes.message.http_localhost_11434_v1": "http://localhost:11434/v1",
    "api_settings_routes.message.self_hosted_local_language_mod": "Self-hosted local language models",
    "api_settings_routes.message.llama2_1": "llama2",
    "api_settings_routes.message.generate_educational_content_a": "Generate educational content and materials",
    "api_settings_routes.message.ai_powered_evaluation_analysis": "AI-powered evaluation analysis and insights",
    "api_settings_routes.message.interactive_ai_assistant_for_l": "Interactive AI assistant for learners",
    "api_settings_routes.message.apikey_3": "apiKey",
    "api_settings_routes.message.https_api_example_com_transl": "https://api.example.com/translate",
    "api_settings_routes.message.masked": "***masked***",
    "api_settings_routes.message.custom_translation_endpoint_fo": "Custom translation endpoint for multilingual support",
    "api_settings_routes.message.2025_06": "2025-06",
    "api_settings_routes.message.2025_06_02t16_48_00z": "2025-06-02T16:48:00Z",
    "api_settings_routes.message.test_ai_provider_connection": "Test AI provider connection.",
    "api_settings_routes.message.234ms": "234ms",
    "api_settings_routes.message.2025_06_02t16_48_00z_1": "2025-06-02T16:48:00Z",
    "api_settings_routes.message.connected_but_rate_limits_are": "Connected but rate limits are low",
    "api_settings_routes.message.local_server_not_responding": "Local server not responding",
    "api_settings_routes.message.get_ai_usage_statistics": "Get AI usage statistics.",
    "api_settings_routes.message.2025_06_1": "2025-06",
    "api_settings_routes.message.2025_06_01": "2025-06-01",
    "api_settings_routes.message.2025_06_02": "2025-06-02",
    "api_portal.message.portal_api_for_student_benefic": "Portal API for student/beneficiary dashboard.",
    "api_portal.message.test_endpoint_to_verify_portal": "Test endpoint to verify portal API is working.",
    "api_portal.message.portal_api_is_working": "Portal API is working",
    "api_portal.message.get_student_portal_dashboard_d": "Get student portal dashboard data.",
    "api_portal.message.this_endpoint_is_only_accessib": "This endpoint is only accessible to students",
    "api_portal.message.beneficiary_profile_not_found": "Beneficiary profile not found for this user",
    "api_portal.message.get_student_s_enrolled_courses": "Get student's enrolled courses/programs.",
    "api_portal.message.this_endpoint_is_only_accessib_1": "This endpoint is only accessible to students",
    "api_portal.message.beneficiary_profile_not_found_1": "Beneficiary profile not found",
    "api_portal.message.get_student_s_progress_trackin": "Get student's progress tracking across all programs.",
    "api_portal.message.this_endpoint_is_only_accessib_2": "This endpoint is only accessible to students",
    "api_portal.message.beneficiary_profile_not_found_2": "Beneficiary profile not found",
    "api_portal.message.get_student_s_achievements_and": "Get student's achievements and badges.",
    "api_portal.message.this_endpoint_is_only_accessib_3": "This endpoint is only accessible to students",
    "api_portal.message.beneficiary_profile_not_found_3": "Beneficiary profile not found",
    "api_portal.message.program": " program",
    "api_portal.message.in": "% in ",
    "api_portal.message.100_attendance_in_program": "100% attendance in program",
    "api_portal.message.get_student_s_skill_assessment": "Get student's skill assessments and test results.",
    "api_portal.message.this_endpoint_is_only_accessib_4": "This endpoint is only accessible to students",
    "api_portal.message.beneficiary_profile_not_found_4": "Beneficiary profile not found",
    "api_portal.message.get_student_s_calendar_events": "Get student's calendar events including sessions and appointments.",
    "api_portal.message.this_endpoint_is_only_accessib_5": "This endpoint is only accessible to students",
    "api_portal.message.beneficiary_profile_not_found_5": "Beneficiary profile not found",
    "api_portal.message.00_00": "+00:00",
    "api_portal.message.00_00_1": "+00:00",
    "api_portal.message.get_student_s_resources_and_do": "Get student's resources and documents.",
    "api_portal.message.this_endpoint_is_only_accessib_6": "This endpoint is only accessible to students",
    "api_portal.message.beneficiary_profile_not_found_6": "Beneficiary profile not found",
    "api_portal.message.this_endpoint_is_only_accessib_7": "This endpoint is only accessible to students",
    "api_portal.message.beneficiary_profile_not_found_7": "Beneficiary profile not found",
    "api_settings_appearance.message.appearance_settings_api_endpoi": "Appearance settings API endpoints.",
    "api_settings_appearance.message.get_appearance_settings_for_cu": "Get appearance settings for current user.",
    "api_settings_appearance.message.no_tenant_associated_with_user": "No tenant associated with user",
    "api_settings_appearance.message.tenant_appearance_settings_not": "Tenant appearance settings not found",
    "api_settings_appearance.message.get_list_of_available_themes": "Get list of available themes.",
    "api_settings_appearance.message.3b82f6": "#3B82F6",
    "api_settings_appearance.message.1e40af": "#1E40AF",
    "api_settings_appearance.message.ffffff": "#FFFFFF",
    "api_settings_appearance.message.f9fafb": "#F9FAFB",
    "api_settings_appearance.message.111827": "#111827",
    "api_settings_appearance.message.dark_theme_for_low_light_envir": "Dark theme for low-light environments",
    "api_settings_appearance.message.3b82f6_1": "#3B82F6",
    "api_settings_appearance.message.1e40af_1": "#1E40AF",
    "api_settings_appearance.message.111827_1": "#111827",
    "api_settings_appearance.message.1f2937": "#1F2937",
    "api_settings_appearance.message.f9fafb_1": "#F9FAFB",
    "api_settings_appearance.message.automatically_switch_based_on": "Automatically switch based on system preference",
    "api_settings_appearance.message.get_list_of_available_fonts": "Get list of available fonts.",
    "api_settings_appearance.message.preview_appearance_settings_wi": "Preview appearance settings without saving.",
    "api_settings_appearance.message.reset_appearance_settings_to_d": "Reset appearance settings to defaults.",
    "api_settings_appearance.message.unauthorized_to_reset_tenant_a": "Unauthorized to reset tenant appearance settings",
    "api_settings_appearance.message.no_tenant_associated_with_user_1": "No tenant associated with user",
    "api_settings_appearance.message.tenant_appearance_settings_not_1": "Tenant appearance settings not found",
    "api_settings_appearance.message.appearance_settings_reset_to_d": "Appearance settings reset to defaults",
    "api_settings_appearance.message.export_appearance_settings_as": "Export appearance settings as JSON.",
    "api_question_randomization.message.question_randomization_api_en": "\nQuestion Randomization API endpoints.\n\nProvides endpoints for configuring and managing question randomization.\n",
    "api_question_randomization.message.schema_for_randomization_confi": "Schema for randomization configuration.",
    "api_question_randomization.message.schema_for_question_ordering_r": "Schema for question ordering requests.",
    "api_question_randomization.message.schema_for_exposure_analysis_r": "Schema for exposure analysis requests.",
    "api_question_randomization.message.get_available_randomization_st": "Get available randomization strategies.",
    "api_question_randomization.message.random_shuffle_of_all_question": "Random shuffle of all questions",
    "api_question_randomization.message.balanced_randomization_by_diff": "Balanced randomization by difficulty and/or topic",
    "api_question_randomization.message.reproducible_randomization_usi": "Reproducible randomization using seeds",
    "api_question_randomization.message.personalized_based_on_user_his": "Personalized based on user history and performance",
    "api_question_randomization.message.ensures_variety_in_question_ch": "Ensures variety in question characteristics",
    "api_question_randomization.message.questions_ordered_by_increasin": "Questions ordered by increasing difficulty",
    "api_question_randomization.message.questions_ordered_by_decreasin": "Questions ordered by decreasing difficulty",
    "api_question_randomization.message.evenly_distributed_difficulty": "Evenly distributed difficulty levels",
    "api_question_randomization.message.questions_grouped_by_topic_or": "Questions grouped by topic or category",
    "api_question_randomization.message.alternating_pattern_of_difficu": "Alternating pattern of difficulty levels",
    "api_question_randomization.message.ordered_by_cognitive_complexit": "Ordered by cognitive complexity (Bloom's taxonomy)",
    "api_question_randomization.message.get_randomization_configuratio": "Get randomization configuration for a test set.",
    "api_question_randomization.message.test_set_not_found": "Test set not found",
    "api_question_randomization.message.you_do_not_have_permission_to": "You do not have permission to access this test set",
    "api_question_randomization.message.test_set_not_found_1": "Test set not found",
    "api_question_randomization.message.you_do_not_have_permission_to_1": "You do not have permission to modify this test set",
    "api_question_randomization.message.generate_randomized_question_o": "Generate randomized question order for a test session.",
    "api_question_randomization.message.test_set_not_found_2": "Test set not found",
    "api_question_randomization.message.you_do_not_have_permission_to_2": "You do not have permission to access this test set",
    "api_question_randomization.message.no_questions_found_for_this_te": "No questions found for this test set",
    "api_question_randomization.message.analyze_question_exposure_rate": "Analyze question exposure rates.",
    "api_question_randomization.message.preview_question_randomization": "Preview question randomization without affecting exposure tracking.",
    "api_question_randomization.message.test_set_not_found_3": "Test set not found",
    "api_question_randomization.message.you_do_not_have_permission_to_3": "You do not have permission to access this test set",
    "api_question_randomization.message.no_questions_found_for_this_te_1": "No questions found for this test set",
    "api_question_randomization.message.check_if_current_user_can_acce": "Check if current user can access the test set.",
    "api_question_randomization.message.check_if_current_user_can_modi": "Check if current user can modify the test set.",
    "api_users.message.get_current_authenticated_user": "Get current authenticated user.",
    "api_users.message.get_a_specific_user": "Get a specific user.",
    "api_users.message.create_a_new_user": "Create a new user.",
    "api_users.message.user_with_this_email_already_e": "User with this email already exists",
    "api_health.message.health_check_endpoints_for_mon": "Health check endpoints for monitoring.",
    "api_health.message.bdc_backend": "bdc-backend",
    "api_health.message.1_0_0": "1.0.0",
    "api_health.message.detailed_health_check_with_all": "Detailed health check with all dependencies.",
    "api_health.message.bdc_backend_1": "bdc-backend",
    "api_health.message.1_0_0_1": "1.0.0",
    "api_health.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "api_health.message.disk_space_ok": "Disk space OK (",
    "api_health.message.free": "% free)",
    "api_health.message.disk_space_low": "Disk space low (",
    "api_health.message.free_1": "% free)",
    "api_health.message.disk_space_critical": "Disk space critical (",
    "api_health.message.free_2": "% free)",
    "api_health.message.could_not_check_disk_space": "Could not check disk space: ",
    "api_health.message.memory_usage_ok": "Memory usage OK (",
    "api_health.message.memory_usage_high": "Memory usage high (",
    "api_health.message.memory_usage_critical": "Memory usage critical (",
    "api_health.message.psutil_not_available_for_memor": "psutil not available for memory check",
    "api_health.message.could_not_check_memory": "Could not check memory: ",
    "api_health.message.redis_localhost_6379_0_1": "redis://localhost:6379/0",
    "api_health.message.bdc_users_total": "bdc_users_total ",
    "api_health.message.bdc_programs_total": "bdc_programs_total ",
    "api_health.message.bdc_beneficiaries_total": "bdc_beneficiaries_total ",
    "api_health.message.bdc_memory_usage_percent": "bdc_memory_usage_percent ",
    "api_health.message.bdc_memory_used_bytes": "bdc_memory_used_bytes ",
    "api_health.message.bdc_memory_total_bytes": "bdc_memory_total_bytes ",
    "api_health.message.bdc_cpu_usage_percent": "bdc_cpu_usage_percent ",
    "api_health.message.bdc_disk_usage_percent": "bdc_disk_usage_percent ",
    "api_health.message.bdc_disk_free_bytes": "bdc_disk_free_bytes ",
    "api_health.message.bdc_disk_total_bytes": "bdc_disk_total_bytes ",
    "api_health.message.bdc_app_info_version_1_0_0_s": "bdc_app_info{version=\"1.0.0\",service=\"bdc-backend\"} 1",
    "api_health.message.bdc_app_uptime_seconds": "bdc_app_uptime_seconds ",
    "api_beneficiaries_dashboard.message.beneficiary_profile_not_found": "Beneficiary profile not found",
    "api_webrtc.message.webrtc_api_endpoints_for_direc": "WebRTC API endpoints for direct peer-to-peer video calls.",
    "api_webrtc.message.create_a_new_webrtc_room": "Create a new WebRTC room.",
    "api_webrtc.message.http_localhost_3000": "http://localhost:3000",
    "api_webrtc.message.join_webrtc_room_http_api_ver": "Join WebRTC room (HTTP API version).",
    "api_webrtc.message.stun_stun_l_google_com_19302": "stun:stun.l.google.com:19302",
    "api_webrtc.message.stun_stun1_l_google_com_19302": "stun:stun1.l.google.com:19302",
    "api_webrtc.message.ws_localhost_5000": "ws://localhost:5000",
    "api_webrtc.message.get_webrtc_room_participants": "Get WebRTC room participants.",
    "api_webrtc.message.stun_stun_l_google_com_19302_1": "stun:stun.l.google.com:19302",
    "api_webrtc.message.stun_stun1_l_google_com_19302_1": "stun:stun1.l.google.com:19302",
    "api_webrtc.message.ws_localhost_5000_1": "ws://localhost:5000",
    "api_webrtc.message.get_webrtc_room_statistics": "Get WebRTC room statistics.",
    "api_webrtc.message.get_user_s_active_webrtc_sessi": "Get user's active WebRTC sessions.",
    "api_documents.message.get_documents_accessible_by_th": "Get documents accessible by the current user.",
    "api_documents.message.get_a_specific_document_by_id": "Get a specific document by ID.",
    "api_documents.message.you_do_not_have_permission_to": "You do not have permission to access this document",
    "api_documents.message.you_do_not_have_permission_to_1": "You do not have permission to modify this document",
    "api_documents.message.you_do_not_have_permission_to_2": "You do not have permission to download this document",
    "api_documents.message.document_file_not_found": "Document file not found",
    "api_documents.message.share_a_document_with_other_us": "Share a document with other users.",
    "api_documents.message.you_do_not_have_permission_to_3": "You do not have permission to share this document",
    "api_documents.message.no_users_specified_to_share_wi": "No users specified to share with",
    "api_documents.message.has_shared": " has shared \"",
    "api_documents.message.with_you": "\" with you",
    "api_documents.message.generate_and_download_a_pdf_re": "Generate and download a PDF report for a specific evaluation.",
    "api_documents.message.not_authorized_to_access_this": "Not authorized to access this evaluation",
    "api_documents.message.y_m_d": "%Y%m%d",
    "api_documents.message.generate_and_download_a_compre": "Generate and download a comprehensive PDF report for a beneficiary.",
    "api_documents.message.not_authorized_to_access_this_1": "Not authorized to access this beneficiary",
    "api_documents.message.y_m_d_1": "%Y%m%d",
    "api_documents.message.analyze_an_evaluation_using_ai": "Analyze an evaluation using AI and return the insights.",
    "api_documents.message.not_authorized_to_access_this_2": "Not authorized to access this evaluation",
    "api_documents.message.generate_a_report_for_a_benefi": "Generate a report for a beneficiary using AI and return the content.",
    "api_documents.message.not_authorized_to_access_this_3": "Not authorized to access this beneficiary",
    "api_documents.message.files_are_allowed": " files are allowed",
    "api_documents.message.get_all_permissions_for_a_docu": "Get all permissions for a document.",
    "api_documents.message.not_authorized_to_view_documen": "Not authorized to view document permissions",
    "api_documents.message.grant_permission_to_a_user_or": "Grant permission to a user or role for a document.",
    "api_documents.message.not_authorized_to_share_this_d": "Not authorized to share this document",
    "api_documents.message.not_authorized_to_revoke_docum": "Not authorized to revoke document permissions",
    "api_documents.message.get_all_documents_a_user_has_a": "Get all documents a user has access to.",
    "api_documents.message.check_if_a_user_has_permission": "Check if a user has permission to access a document.",
    "api_documents.message.get_all_versions_of_a_document": "Get all versions of a document.",
    "api_documents.message.you_do_not_have_permission_to_4": "You do not have permission to view this document",
    "api_documents.message.create_a_new_version_of_a_docu": "Create a new version of a document.",
    "api_documents.message.you_do_not_have_permission_to_5": "You do not have permission to modify this document",
    "api_documents.message.get_a_specific_version_of_a_do": "Get a specific version of a document.",
    "api_documents.message.you_do_not_have_permission_to_6": "You do not have permission to view this document",
    "api_documents.message.download_a_specific_version_of": "Download a specific version of a document.",
    "api_documents.message.you_do_not_have_permission_to_7": "You do not have permission to download this document",
    "api_documents.message.version_file_not_found": "Version file not found",
    "api_documents.message.restore_a_previous_version_of": "Restore a previous version of a document.",
    "api_documents.message.you_do_not_have_permission_to_8": "You do not have permission to modify this document",
    "api_documents.message.compare_two_versions_of_a_docu": "Compare two versions of a document.",
    "api_documents.message.you_do_not_have_permission_to_9": "You do not have permission to view this document",
    "api_documents.message.version1_id": "version1_id",
    "api_documents.message.version2_id": "version2_id",
    "api_documents.message.enable_version_control_for_a_d": "Enable version control for a document.",
    "api_documents.message.only_document_owner_or_admin_c": "Only document owner or admin can enable versioning",
    "api_profile.message.user_profile_api_endpoints": "User profile API endpoints.",
    "api_profile.message.get_the_current_user_s_profile": "Get the current user's profile.",
    "api_profile.message.get_a_user_s_profile_by_user_i": "Get a user's profile by user ID (admin only).",
    "api_profile.message.not_authorized_to_view_this_pr": "Not authorized to view this profile",
    "api_profile.message.upload_a_profile_avatar": "Upload a profile avatar.",
    "api_profile.message.no_avatar_file_provided": "No avatar file provided",
    "api_profile.message.only_png_and_jpg_files_are_all": "Only PNG and JPG files are allowed",
    "api_appointments.message.get_appointments_for_current_u": "Get appointments for current user.",
    "api_appointments.message.create_a_new_appointment": "Create a new appointment.",
    "api_appointments.message.sync_appointment_to_google_cal": "Sync appointment to Google Calendar.",
    "api_appointments.message.authorize_google_calendar_inte": "Authorize Google Calendar integration.",
    "api_appointments.message.appointments_oauth2callback": "appointments.oauth2callback",
    "api_appointments.message.handle_google_oauth_callback": "Handle Google OAuth callback.",
    "api_appointments.message.http_localhost_3000": "http://localhost:3000",
    "api_appointments.message.disconnect_google_calendar_int": "Disconnect Google Calendar integration.",
    "api_user_activities.message.get_user_test_sessions": "Get user test sessions.",
    "api_video_conferences.message.video_conference_api_endpoints": "Video Conference API endpoints.",
    "api_video_conferences.message.create_a_video_conference_for": "Create a video conference for an appointment.",
    "api_video_conferences.message.get_video_conference_details": "Get video conference details.",
    "api_video_conferences.message.00_00": "+00:00",
    "api_video_conferences.message.00_00_1": "+00:00",
    "api_video_conferences.message.add_participant_to_video_confe": "Add participant to video conference.",
    "api_video_conferences.message.send_invitation_for_video_conf": "Send invitation for video conference.",
    "api_video_conferences.message.start_recording_video_conferen": "Start recording video conference.",
    "api_video_conferences.message.stop_recording_video_conferenc": "Stop recording video conference.",
    "api_video_conferences.message.get_recordings_for_video_confe": "Get recordings for video conference.",
    "api_video_conferences.message.get_analytics_for_video_confer": "Get analytics for video conference.",
    "api_video_conferences.message.get_video_conferences_for_a_us": "Get video conferences for a user.",
    "api_video_conferences.message.get_available_video_conference": "Get available video conference providers.",
    "api_video_conferences.message.video_conferencing": " video conferencing",
    "api_video_conferences.message.get_video_conference_dashboard": "Get video conference dashboard data.",
    "api_performance_predictions.message.performance_predictions_api_en": "Performance predictions API endpoints.",
    "api_performance_predictions.message.train_a_new_score_prediction_m": "Train a new score prediction model.",
    "api_performance_predictions.message.r2_score": "r2_score",
    "api_performance_predictions.message.r2_score_1": "r2_score",
    "api_performance_predictions.message.f1_score": "f1_score",
    "api_performance_predictions.message.f1_score_1": "f1_score",
    "api_performance_predictions.message.train_a_new_attendance_time_se": "Train a new attendance time series model.",
    "api_performance_predictions.message.generate_performance_predictio": "Generate performance predictions for a beneficiary.",
    "api_performance_predictions.message.get_prediction_history_for_a_b": "Get prediction history for a beneficiary.",
    "api_performance_predictions.message.evaluate_accuracy_of_a_predict": "Evaluate accuracy of a prediction model.",
    "api_performance_predictions.message.get_extracted_features_for_a_b": "Get extracted features for a beneficiary.",
    "api_evaluations.message.get_all_evaluations_with_optio": "Get all evaluations with optional filtering.",
    "api_evaluations.message.email": ", Email: ",
    "api_evaluations.message.user_id": ", User ID: ",
    "api_evaluations.message.get_an_evaluation_by_id": "Get an evaluation by ID.",
    "api_evaluations.message.you_do_not_have_permission_to": "You do not have permission to access this evaluation",
    "api_evaluations.message.you_do_not_have_permission_to_1": "You do not have permission to access this evaluation",
    "api_evaluations.message.you_do_not_have_permission_to_2": "You do not have permission to access this evaluation",
    "api_evaluations.message.create_a_new_evaluation": "Create a new evaluation.",
    "api_evaluations.message.you_do_not_have_permission_to_3": "You do not have permission to create evaluations for this beneficiary",
    "api_evaluations.message.get_questions_for_an_evaluatio": "Get questions for an evaluation.",
    "api_evaluations.message.you_do_not_have_permission_to_4": "You do not have permission to access questions for this evaluation",
    "api_evaluations.message.you_do_not_have_permission_to_5": "You do not have permission to access questions for this evaluation",
    "api_evaluations.message.you_do_not_have_permission_to_6": "You do not have permission to access questions for this evaluation",
    "api_evaluations.message.create_a_new_question_for_an_e": "Create a new question for an evaluation.",
    "api_evaluations.message.you_do_not_have_permission_to_7": "You do not have permission to create questions for this evaluation",
    "api_evaluations.message.you_do_not_have_permission_to_8": "You do not have permission to create questions for this evaluation",
    "api_evaluations.message.get_test_sessions_with_optiona": "Get test sessions with optional filtering.",
    "api_evaluations.message.you_do_not_have_permission_to_9": "You do not have permission to access sessions for this evaluation",
    "api_evaluations.message.you_do_not_have_permission_to_10": "You do not have permission to access sessions for this beneficiary",
    "api_evaluations.message.you_do_not_have_permission_to_11": "You do not have permission to access sessions for this evaluation",
    "api_evaluations.message.you_do_not_have_permission_to_12": "You do not have permission to access sessions for this beneficiary",
    "api_evaluations.message.submit_responses_for_an_evalua": "Submit responses for an evaluation.",
    "api_evaluations.message.you_do_not_have_permission_to_13": "You do not have permission to submit this evaluation",
    "api_evaluations.message.only_students_can_submit_evalu": "Only students can submit evaluations",
    "api_evaluations.message.get_results_for_an_evaluation": "Get results for an evaluation.",
    "api_evaluations.message.you_do_not_have_permission_to_14": "You do not have permission to view these results",
    "api_evaluations.message.you_do_not_have_permission_to_15": "You do not have permission to view these results",
    "api_evaluations.message.analyze_evaluation_results_usi": "Analyze evaluation results using AI.",
    "api_evaluations.message.you_do_not_have_permission_to_16": "You do not have permission to analyze this evaluation",
    "api_evaluations.message.you_do_not_have_permission_to_17": "You do not have permission to analyze this evaluation",
    "api_performance_monitoring.message.performance_monitoring_api_en": "\nPerformance Monitoring API Endpoints\nProvides comprehensive performance monitoring, metrics collection, and alerting.\n",
    "api_performance_monitoring.message.get_comprehensive_performance": "Get comprehensive performance dashboard data",
    "api_performance_monitoring.message.get_system_level_performance_m": "Get system-level performance metrics",
    "api_performance_monitoring.message.get_database_performance_metri": "Get database performance metrics",
    "api_performance_monitoring.message.get_slow_query_analysis": "Get slow query analysis",
    "api_performance_monitoring.message.analyze_a_specific_query_for_p": "Analyze a specific query for performance",
    "api_performance_monitoring.message.get_cache_performance_metrics": "Get cache performance metrics",
    "api_performance_monitoring.message.get_memory_usage_metrics": "Get memory usage metrics",
    "api_performance_monitoring.message.get_api_performance_metrics": "Get API performance metrics",
    "api_performance_monitoring.message.get_celery_task_performance_me": "Get Celery task performance metrics",
    "api_performance_monitoring.message.comprehensive_system_health_ch": "Comprehensive system health check",
    "api_performance_monitoring.message.1min": "1min",
    "api_performance_monitoring.message.5min": "5min",
    "api_performance_monitoring.message.15min": "15min",
    "api_performance_monitoring.message.get_database_performance_metri_1": "Get database performance metrics",
    "api_performance_monitoring.message.get_cache_performance_metrics_1": "Get cache performance metrics",
    "api_performance_monitoring.message.get_memory_usage_metrics_1": "Get memory usage metrics",
    "api_performance_monitoring.message.get_api_performance_metrics_1": "Get API performance metrics",
    "api_performance_monitoring.message.get_celery_performance_metrics": "Get Celery performance metrics",
    "api_performance_monitoring.message.generate_performance_alerts_ba": "Generate performance alerts based on metrics",
    "api_performance_monitoring.message.high_number_of_slow_queries": "High number of slow queries: ",
    "api_performance_monitoring.message.low_cache_hit_rate": "Low cache hit rate: ",
    "api_performance_monitoring.message.high_slow_request_rate": "High slow request rate: ",
    "api_performance_monitoring.message.register_performance_monitorin": "Register performance monitoring blueprint",
    "api_performance_monitoring.message.performance_monitoring_api_reg": "Performance monitoring API registered",
    "api_tests_simple.message.simple_tests_api_for_frontend": "Simple Tests API for frontend compatibility.",
    "api_tests_simple.message.get_all_tests_for_evaluations": "Get all tests for evaluations page.",
    "api_tests_simple.message.get_a_specific_test_by_id": "Get a specific test by ID.",
    "api_calendar.message.get_calendar_events_for_the_cu": "Get calendar events for the current user.",
    "api_calendar.message.y_m_d": "%Y-%m-%d",
    "api_calendar.message.y_m_d_1": "%Y-%m-%d",
    "api_calendar.message.y_m_d_2": "%Y-%m-%d",
    "api_calendar.message.y_m_d_3": "%Y-%m-%d",
    "api_calendar.message.backgroundcolor": "backgroundColor",
    "api_calendar.message.10b981": "#10b981",
    "api_calendar.message.create_a_new_calendar_event": "Create a new calendar event.",
    "api_programs.message.get_a_specific_program": "Get a specific program.",
    "api_programs.message.create_a_new_program": "Create a new program.",
    "api_programs.message.y_m_d": "%Y-%m-%d",
    "api_programs.message.y_m_d_1": "%Y-%m-%d",
    "api_programs.message.y_m_d_2": "%Y-%m-%d",
    "api_programs.message.y_m_d_3": "%Y-%m-%d",
    "api_programs.message.create_a_program_module": "Create a program module.",
    "api_programs.message.enroll_a_beneficiary_in_a_prog": "Enroll a beneficiary in a program.",
    "api_programs.message.program_is_not_active": "Program is not active",
    "api_programs.message.create_a_training_session": "Create a training session.",
    "api_programs.message.y_m_d_h_m": "%Y-%m-%d %H:%M",
    "api_programs.message.get_available_program_categori": "Get available program categories.",
    "api_programs.message.get_available_program_levels": "Get available program levels.",
    "api_programs.message.return_enrolled_students_bene": "Return enrolled students (beneficiaries) for a program.",
    "api_chat.message.create_a_new_chat_conversation": "Create a new chat conversation.",
    "api_chat.message.send_a_message_in_an_existing": "Send a message in an existing conversation.",
    "api_chat.message.get_user_s_conversation_histor": "Get user's conversation history.",
    "api_chat.message.get_a_specific_conversation_wi": "Get a specific conversation with messages.",
    "api_chat.message.conversation_is_not_active": "Conversation is not active",
    "api_chat.message.attachment_filename_conversat": "attachment; filename=conversation_",
    "api_chat.message.get_user_s_chat_rate_limits": "Get user's chat rate limits.",
    "api_chat.message.flag_a_conversation_for_modera": "Flag a conversation for moderation.",
    "api_chat.message.get_available_conversation_tem": "Get available conversation templates.",
    "api_chat.message.create_a_new_conversation_temp": "Create a new conversation template.",
    "api_recurring_appointments.message.recurring_appointments_api_mod": "Recurring appointments API module.",
    "api_recurring_appointments.message.create_a_new_recurring_appoint": "Create a new recurring appointment series.",
    "api_recurring_appointments.message.get_recurring_appointment_seri": "Get recurring appointment series details.",
    "api_recurring_appointments.message.add_an_exception_date_to_the_s": "Add an exception date to the series.",
    "api_recurring_appointments.message.cancel_all_future_appointments": "Cancel all future appointments in a series.",
    "api_recurring_appointments.message.appointments": " appointments",
    "api_recurring_appointments.message.generate_more_occurrences_for": "Generate more occurrences for a series.",
    "api_recurring_appointments.message.new_appointments": " new appointments",
    "api_recurring_appointments.message.check_for_scheduling_conflicts": "Check for scheduling conflicts.",
    "api_two_factor_auth.message.two_factor_authentication_api": "Two-Factor Authentication API endpoints.",
    "api_two_factor_auth.message.set_up_two_factor_authenticati": "Set up two-factor authentication for the current user.",
    "api_two_factor_auth.message.2fa_setup_initiated": "2FA setup initiated",
    "api_two_factor_auth.message.verify_2fa_setup_with_initial": "Verify 2FA setup with initial token.",
    "api_two_factor_auth.message.verify_2fa_token_during_login": "Verify 2FA token during login (after initial auth).",
    "api_two_factor_auth.message.2fa_verified": "2fa_verified",
    "api_two_factor_auth.message.10_per_minute": "10 per minute",
    "api_two_factor_auth.message.get_2fa_status_for_the_current": "Get 2FA status for the current user.",
    "api_two_factor_auth.message.get_qr_code_for_existing_2fa_s": "Get QR code for existing 2FA setup.",
    "api_two_factor_auth.message.2fa_not_set_up": "2FA not set up",
    "api_two_factor_auth.message.2fa_is_already_enabled_disabl": "2FA is already enabled. Disable first to get new QR code.",
    "api_settings_general.message.general_settings_api_endpoints": "General settings API endpoints.",
    "api_settings_general.message.get_general_settings_for_curre": "Get general settings for current user's tenant.",
    "api_settings_general.message.no_tenant_associated_with_user": "No tenant associated with user",
    "api_settings_general.message.3b82f6": "#3B82F6",
    "api_settings_general.message.1e40af": "#1E40AF",
    "api_settings_general.message.12h": "12h",
    "api_settings_general.message.09_00": "09:00",
    "api_settings_general.message.17_00": "17:00",
    "api_settings_general.message.no_tenant_associated_with_user_1": "No tenant associated with user",
    "api_settings_general.message.get_list_of_available_language": "Get list of available languages.",
    "api_settings_general.message.": "العربية",
    "api_settings_general.message._1": "日本語",
    "api_settings_general.message.get_list_of_available_timezone": "Get list of available timezones.",
    "api_settings_general.message.utc_coordinated_universal_tim": "UTC (Coordinated Universal Time)",
    "api_settings_general.message.eastern_time_us_canada": "Eastern Time (US & Canada)",
    "api_settings_general.message.central_time_us_canada": "Central Time (US & Canada)",
    "api_settings_general.message.mountain_time_us_canada": "Mountain Time (US & Canada)",
    "api_settings_general.message.pacific_time_us_canada": "Pacific Time (US & Canada)",
    "api_settings_general.message.03_14_2024": "03/14/2024",
    "api_settings_general.message.14_03_2024": "14/03/2024",
    "api_settings_general.message.2024_03_14": "2024-03-14",
    "api_settings_general.message.14_03_2024_1": "14.03.2024",
    "api_settings_general.message.14_mar_2024": "14 Mar 2024",
    "api_settings_general.message.unauthorized_to_upload_logo": "Unauthorized to upload logo",
    "api_settings_general.message.no_logo_file_provided": "No logo file provided",
    "api_settings_general.message.reset_general_settings_to_defa": "Reset general settings to defaults.",
    "api_settings_general.message.unauthorized_to_reset_settings": "Unauthorized to reset settings",
    "api_settings_general.message.no_tenant_associated_with_user_2": "No tenant associated with user",
    "api_settings_general.message.3b82f6_1": "#3B82F6",
    "api_settings_general.message.1e40af_1": "#1E40AF",
    "api_settings_general.message.12h_1": "12h",
    "api_settings_general.message.09_00_1": "09:00",
    "api_settings_general.message.17_00_1": "17:00",
    "api_settings_general.message.settings_reset_to_defaults": "Settings reset to defaults",
    "api_ai_question_generation.message.ai_question_generation_api_end": "AI Question Generation API endpoints.",
    "api_ai_question_generation.message.mp3": "mp3",
    "api_ai_question_generation.message.m4a": "m4a",
    "api_ai_question_generation.message.mp4": "mp4",
    "api_ai_question_generation.message.check_if_file_extension_is_all": "Check if file extension is allowed.",
    "api_ai_question_generation.message.get_current_user_s_tenant_id": "Get current user's tenant ID.",
    "api_ai_question_generation.message.get_available_content_types": "Get available content types.",
    "api_ai_question_generation.message.create_new_source_content": "Create new source content.",
    "api_ai_question_generation.message.user_tenant_not_found": "User tenant not found",
    "api_ai_question_generation.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "api_ai_question_generation.message.file_too_large_maximum_size_i": "File too large. Maximum size is ",
    "api_ai_question_generation.message.get_source_content_list": "Get source content list.",
    "api_ai_question_generation.message.user_tenant_not_found_1": "User tenant not found",
    "api_ai_question_generation.message.get_source_content_details": "Get source content details.",
    "api_ai_question_generation.message.user_tenant_not_found_2": "User tenant not found",
    "api_ai_question_generation.message.user_tenant_not_found_3": "User tenant not found",
    "api_ai_question_generation.message.get_available_question_types": "Get available question types.",
    "api_ai_question_generation.message.get_bloom_s_taxonomy_levels": "Get Bloom's taxonomy levels.",
    "api_ai_question_generation.message.user_tenant_not_found_4": "User tenant not found",
    "api_ai_question_generation.message.create_new_learning_objective": "Create new learning objective.",
    "api_ai_question_generation.message.user_tenant_not_found_5": "User tenant not found",
    "api_ai_question_generation.message.user_tenant_not_found_6": "User tenant not found",
    "api_ai_question_generation.message.gpt_4": "gpt-4",
    "api_ai_question_generation.message.question_generation_started_g": "Question generation started. Generated ",
    "api_ai_question_generation.message.questions": " questions.",
    "api_ai_question_generation.message.get_generation_request_status": "Get generation request status.",
    "api_ai_question_generation.message.user_tenant_not_found_7": "User tenant not found",
    "api_ai_question_generation.message.user_tenant_not_found_8": "User tenant not found",
    "api_ai_question_generation.message.user_tenant_not_found_9": "User tenant not found",
    "api_ai_question_generation.message.create_new_question_bank": "Create new question bank.",
    "api_ai_question_generation.message.user_tenant_not_found_10": "User tenant not found",
    "api_ai_question_generation.message.add_question_to_bank": "Add question to bank.",
    "api_ai_question_generation.message.get_questions_in_a_bank": "Get questions in a bank.",
    "api_ai_question_generation.message.user_tenant_not_found_11": "User tenant not found",
    "api_ai_question_generation.message.question_bank_not_found": "Question bank not found",
    "api_ai_question_generation.message.get_question_generation_analyt": "Get question generation analytics.",
    "api_ai_question_generation.message.user_tenant_not_found_12": "User tenant not found",
    "api_ai_question_generation.message.user_tenant_not_found_13": "User tenant not found",
    "api_ai_question_generation.message.get_detected_duplicate_questio": "Get detected duplicate questions.",
    "api_ai_question_generation.message.user_tenant_not_found_14": "User tenant not found",
    "api_ai_question_generation.message.resolve_a_duplicate_question_d": "Resolve a duplicate question detection.",
    "api_ai_question_generation.message.user_tenant_not_found_15": "User tenant not found",
    "api_ai_question_generation.message.initialize_system_with_default": "Initialize system with default data.",
    "api_ai_question_generation.message.system_initialized_with_defaul": "System initialized with default data",
    "api_ai_question_generation.message.file_too_large_maximum_size_i_1": "File too large. Maximum size is ",
    "api_ai_reports.message.ai_reports_api_endpoints": "AI Reports API endpoints.",
    "api_ai_reports.message.generate_ai_powered_report_for": "Generate AI-powered report for a beneficiary.",
    "api_ai_reports.message.generate_ai_powered_report_for_1": "Generate AI-powered report for a program.",
    "api_ai_reports.message.generate_comparative_report_fo": "Generate comparative report for multiple beneficiaries.",
    "api_ai_reports.message.maximum_10_beneficiaries_allow": "Maximum 10 beneficiaries allowed for comparison",
    "api_ai_reports.message.get_available_report_templates": "Get available report templates and configurations.",
    "api_ai_reports.message.full_analysis_including_all_av": "Full analysis including all available data",
    "api_ai_reports.message.focus_on_performance_trends_an": "Focus on performance trends and improvements",
    "api_ai_reports.message.detailed_analysis_of_test_and": "Detailed analysis of test and evaluation results",
    "api_ai_reports.message.get_quick_ai_generated_insight": "Get quick AI-generated insights for a beneficiary.",
    "api_ai_reports.message.generate_reports_for_multiple": "Generate reports for multiple beneficiaries in batch.",
    "api_ai_reports.message.maximum_20_beneficiaries_allow": "Maximum 20 beneficiaries allowed for batch processing",
    "api_ai_reports.message.report_ready_for_export_in": "Report ready for export in ",
    "api_messages.message.get_message_threads_for_the_cu": "Get message threads for the current user.",
    "api_messages.message.create_a_new_message_thread": "Create a new message thread.",
    "api_messages.message.get_messages_in_a_thread": "Get messages in a thread.",
    "api_messages.message.send_a_message_to_a_thread": "Send a message to a thread.",
    "api_messages.message.search_messages_with_various_f": "Search messages with various filters.",
    "api_messages.message.search_message_threads_with_va": "Search message threads with various filters.",
    "api_messages.message.quick_search_across_threads_m": "Quick search across threads, messages, and users.",
    "api_messages.message.search_for_messages_with_attac": "Search for messages with attachments.",
    "api_messages.message.get_message_statistics_for_the": "Get message statistics for the current user.",
    "api_messages.message.archive_a_message_thread": "Archive a message thread.",
    "api_messages.message.thread_not_found_or_unauthoriz": "Thread not found or unauthorized",
    "api_messages.message.unarchive_a_message_thread": "Unarchive a message thread.",
    "api_messages.message.thread_not_found_or_unauthoriz_1": "Thread not found or unauthorized",
    "api_messages.message.archive_multiple_threads_at_on": "Archive multiple threads at once.",
    "api_messages.message.no_thread_ids_provided": "No thread IDs provided",
    "api_messages.message.unauthorized_access_to_one_or": "Unauthorized access to one or more threads",
    "api_messages.message.unarchive_multiple_threads_at": "Unarchive multiple threads at once.",
    "api_messages.message.no_thread_ids_provided_1": "No thread IDs provided",
    "api_messages.message.unauthorized_access_to_one_or_1": "Unauthorized access to one or more threads",
    "api_messages.message.mute_notifications_for_a_threa": "Mute notifications for a thread.",
    "api_messages.message.thread_not_found_or_unauthoriz_2": "Thread not found or unauthorized",
    "api_messages.message.unmute_notifications_for_a_thr": "Unmute notifications for a thread.",
    "api_messages.message.thread_not_found_or_unauthoriz_3": "Thread not found or unauthorized",
    "api_reports.message.comprehensive_report_on_benefi": "Comprehensive report on beneficiary progress and development",
    "api_reports.message.detailed_analysis_of_program_p": "Detailed analysis of program performance and enrollment metrics",
    "api_reports.message.summary_of_trainer_activities": "Summary of trainer activities and performance indicators",
    "api_reports.message.overall_system_analytics_and_k": "Overall system analytics and key performance indicators",
    "api_reports.message.detailed_performance_metrics_a": "Detailed performance metrics and test score analysis",
    "api_reports.message.get_recent_reports_for_the_cur": "Get recent reports for the current user.",
    "api_reports.message.get_scheduled_reports_for_the": "Get scheduled reports for the current user.",
    "api_reports.message.create_a_new_report": "Create a new report.",
    "api_reports.message.get_a_specific_report": "Get a specific report.",
    "api_reports.message.run_a_report_and_generate_outp": "Run a report and generate output.",
    "api_reports.message.download_a_generated_report": "Download a generated report.",
    "api_reports.message.report_file_not_found": "Report file not found",
    "api_reports.message.y_m_d": "%Y%m%d",
    "api_reports.message.download_a_report_as_pdf": "Download a report as PDF.",
    "api_reports.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "api_reports.message.y_m_d_h_m_s_1": "%Y%m%d_%H%M%S",
    "api_reports.message.generate_beneficiary_report_da": "Generate beneficiary report data.",
    "api_reports.message.y_m_d_1": "%Y-%m-%d",
    "api_reports.message.generate_trainer_report_data": "Generate trainer report data.",
    "api_reports.message.y_m_d_h_m": "%Y-%m-%d %H:%M",
    "api_reports.message.generate_program_report_data": "Generate program report data.",
    "api_reports.message.y_m_d_2": "%Y-%m-%d",
    "api_reports.message.y_m_d_3": "%Y-%m-%d",
    "api_reports.message.generate_performance_report_da": "Generate performance report data.",
    "api_reports.message.y_m_d_h_m_1": "%Y-%m-%d %H:%M",
    "api_reports.message.generate_general_report_data": "Generate general report data.",
    "api_reports.message.generate_excel_report_file": "Generate Excel report file.",
    "api_reports.message.y_m_d_h_m_s_2": "%Y%m%d_%H%M%S",
    "api_reports.message.generate_csv_report_file": "Generate CSV report file.",
    "api_reports.message.y_m_d_h_m_s_3": "%Y%m%d_%H%M%S",
    "api_reports.message.generate_pdf_report_file": "Generate PDF report file.",
    "api_reports.message.y_m_d_h_m_s_4": "%Y%m%d_%H%M%S",
    "api_reports.message.y_m_d_h_m_s_5": "%Y-%m-%d %H:%M:%S",
    "api_reports.message.create_demo_reports_for_testin": "Create demo reports for testing.",
    "api_reports.message.last_30_days": "last_30_days",
    "api_reports.message.admin_bdc_com": "admin@bdc.com",
    "api_reports.message.bdc_com": "@bdc.com",
    "api_reports.message.y_m_d_4": "%Y%m%d",
    "api_reports.message.get_available_fields_for_a_rep": "Get available fields for a report type.",
    "api_reports.message.trainer_assigned_to_beneficiar": "Trainer assigned to beneficiary",
    "api_reports.message.date_beneficiary_was_added": "Date beneficiary was added",
    "api_reports.message.average_score_across_all_tests": "Average score across all tests",
    "api_reports.message.additional_notes_and_comments": "Additional notes and comments",
    "api_reports.message.name_of_the_training_program": "Name of the training program",
    "api_reports.message.number_of_enrolled_beneficiari": "Number of enrolled beneficiaries",
    "api_reports.message.full_name_of_the_trainer": "Full name of the trainer",
    "api_reports.message.number_of_assigned_beneficiari": "Number of assigned beneficiaries",
    "api_reports.message.whether_trainer_is_active": "Whether trainer is active",
    "api_reports.message.programs_trainer_is_involved_i": "Programs trainer is involved in",
    "api_reports.message.name_of_the_metric": "Name of the metric",
    "api_reports.message.date_of_the_metric": "Date of the metric",
    "api_reports.message.full_name_of_the_beneficiary": "Full name of the beneficiary",
    "api_reports.message.name_of_the_test": "Name of the test",
    "api_reports.message.test_feedback_and_comments": "Test feedback and comments",
    "api_reports.message.get_available_filters_for_a_re": "Get available filters for a report type.",
    "api_reports.message.generate_a_preview_of_the_repo": "Generate a preview of the report.",
    "api_reports.message.82_5": "82.5%",
    "api_reports.message.john_doe_example_com": "john.doe@example.com",
    "api_reports.message.85": "85%",
    "api_reports.message.jane_smith_example_com": "jane.smith@example.com",
    "api_reports.message.92": "92%",
    "api_reports.message.charttype": "chartType",
    "api_reports.message.88": "88%",
    "api_reports.message.94": "94%",
    "api_reports.message.76": "76%",
    "api_reports.message.89": "89%",
    "api_reports.message.y_m_d_5": "%Y%m%d",
    "api_settings.message.get_general_settings_for_the_c": "Get general settings for the current user.",
    "api_settings.message.1_0_0": "1.0.0",
    "api_settings.message.get_appearance_settings_for_th": "Get appearance settings for the current user.",
    "api_settings.message.get_notification_settings_for": "Get notification settings for the current user.",
    "api_settings.message.get_privacy_settings_for_the_c": "Get privacy settings for the current user.",
    "api_notifications.message.fixed_notification_api_endpoin": "Fixed Notification API endpoints with proper dependency injection.",
    "api_notifications.message.get_all_notifications_for_the": "Get all notifications for the current user.",
    "api_notifications.message.get_the_count_of_unread_notifi": "Get the count of unread notifications for the current user.",
    "api_notifications.message.mark_a_notification_as_read": "Mark a notification as read.",
    "api_notifications.message.notification_marked_as_read": "Notification marked as read",
    "api_notifications.message.mark_all_notifications_as_read": "Mark all notifications as read for the current user.",
    "api_notifications.message.notifications_marked_as_read": " notifications marked as read",
    "api_notifications.message.create_a_test_notification_for": "Create a test notification for the current user (development only).",
    "api_notifications.message.this_endpoint_is_only_availabl": "This endpoint is only available in development mode",
    "api_notifications.message.this_is_a_test_notification": "This is a test notification",
    "api_notifications.message.send_a_notification_to_a_user": "Send a notification to a user or current user.",
    "api_notifications.message.broadcast_a_notification_to_al": "Broadcast a notification to all users.",
    "api_notifications.message.not_authorized_to_broadcast_no": "Not authorized to broadcast notifications",
    "api_notifications.message.users": " users",
    "api_notifications.message.create_a_notification_for_a_us": "Create a notification for a user (admin only).",
    "api_notifications.message.not_authorized_to_create_notif": "Not authorized to create notifications for other users",
    "api_notifications.message.create_notifications_for_multi": "Create notifications for multiple users (admin only).",
    "api_notifications.message.not_authorized_to_create_notif_1": "Not authorized to create notifications for other users",
    "api_notifications.message.create_a_notification_for_all": "Create a notification for all users with a specific role (admin only).",
    "api_notifications.message.not_authorized_to_create_notif_2": "Not authorized to create notifications for roles",
    "api_i18n.message.i18n": "i18n",
    "api_i18n.message.schema_for_language_data": "Schema for language data.",
    "api_i18n.message.schema_for_translation_request": "Schema for translation requests.",
    "api_i18n.message.schema_for_multilingual_conten": "Schema for multilingual content.",
    "api_i18n.message.schema_for_user_language_prefe": "Schema for user language preferences.",
    "api_i18n.message.get_all_supported_languages": "Get all supported languages.",
    "api_i18n.message.create_a_new_language": "Create a new language.",
    "api_i18n.message.language_code_already_exists": "Language code already exists",
    "api_i18n.message.translate_text_using_translati": "Translate text using translation service.",
    "api_i18n.message.get_translation_for_a_specific": "Get translation for a specific key.",
    "api_i18n.message.get_translation_dictionary_for": "Get translation dictionary for a language.",
    "api_i18n.message.get_multilingual_content_for_a": "Get multilingual content for an entity.",
    "api_i18n.message.get_user_s_language_preference": "Get user's language preferences.",
    "api_i18n.message.00_00": "+00:00",
    "api_i18n.message.00_00_1": "+00:00",
    "api_i18n.message.bulk_translate_content_items": "Bulk translate content items.",
    "api_i18n.message.export_translations_for_a_lang": "Export translations for a language.",
    "api_i18n.message.import_translations_for_a_lang": "Import translations for a language.",
    "api_analytics.message.get_dashboard_analytics_for_th": "Get dashboard analytics for the current user.",
    "api_analytics.message.7days": "7days",
    "api_analytics.message.7days_1": "7days",
    "api_analytics.message.30days": "30days",
    "api_analytics.message.y_m_d": "%Y-%m-%d",
    "api_analytics.message.y_m_d_1": "%Y-%m-%d",
    "api_analytics.message.y_m_d_2": "%Y-%m-%d",
    "api_adaptive_tests.message.api_endpoints_for_adaptive_tes": "API endpoints for Adaptive Test System.",
    "api_adaptive_tests.message.schema_for_adaptive_test_pool": "Schema for adaptive test pool.",
    "api_adaptive_tests.message.schema_for_adaptive_question": "Schema for adaptive question.",
    "api_adaptive_tests.message.schema_for_adaptive_session_co": "Schema for adaptive session configuration.",
    "api_adaptive_tests.message.schema_for_submitting_response": "Schema for submitting response.",
    "api_adaptive_tests.message.schema_for_adaptive_test_repor": "Schema for adaptive test report.",
    "api_adaptive_tests.message.get_all_adaptive_test_pools": "Get all adaptive test pools.",
    "api_adaptive_tests.message.create_a_new_adaptive_test_poo": "Create a new adaptive test pool.",
    "api_adaptive_tests.message.get_a_specific_adaptive_test_p": "Get a specific adaptive test pool.",
    "api_adaptive_tests.message.get_questions_in_a_pool": "Get questions in a pool.",
    "api_adaptive_tests.message.add_a_question_to_the_pool": "Add a question to the pool.",
    "api_adaptive_tests.message.get_detailed_statistics_for_a": "Get detailed statistics for a question.",
    "api_adaptive_tests.message.calibrate_irt_parameters_for_a": "Calibrate IRT parameters for a question.",
    "api_adaptive_tests.message.start_a_new_adaptive_test_sess": "Start a new adaptive test session.",
    "api_adaptive_tests.message.get_the_next_question_in_an_ad": "Get the next question in an adaptive session.",
    "api_adaptive_tests.message.session_is_not_in_progress": "Session is not in progress",
    "api_adaptive_tests.message.no_more_questions_available": "No more questions available",
    "api_adaptive_tests.message.submit_a_response_to_the_curre": "Submit a response to the current question.",
    "api_adaptive_tests.message.session_is_not_in_progress_1": "Session is not in progress",
    "api_adaptive_tests.message.create_an_evaluation_that_uses": "Create an evaluation that uses adaptive testing.",
    "api_adaptive_tests.message.sync_adaptive_test_results_to": "Sync adaptive test results to regular evaluation.",
    "api_folders.message.create_a_new_folder": "Create a new folder.",
    "api_folders.message.parent_folder_not_found": "Parent folder not found",
    "api_folders.message.get_folder_details_with_path": "Get folder details with path.",
    "api_tests.message.get_all_tests_accessible_by_th": "Get all tests accessible by the current user.",
    "api_tests.message.create_a_new_test": "Create a new test.",
    "api_tests.message.not_authorized_to_create_tests": "Not authorized to create tests",
    "api_tests.message.get_test_sessions_for_current": "Get test sessions for current user.",
    "api_tests.message.get_a_specific_test": "Get a specific test.",
    "api_tests.message.not_authorized_to_view_this_te": "Not authorized to view this test",
    "api_tests.message.not_authorized_to_view_this_te_1": "Not authorized to view this test",
    "api_tests.message.get_available_test_types": "Get available test types.",
    "api_tests.message.get_available_test_categories": "Get available test categories.",
    "api_tenants.message.get_all_tenants_super_admin_o": "Get all tenants (super admin only).",
    "api_tenants.message.get_a_specific_tenant": "Get a specific tenant.",
    "api_tenants.message.create_a_new_tenant_super_adm": "Create a new tenant (super admin only).",
    "api_tenants.message.a_za_z0_9_s": "[^a-zA-Z0-9\\s-]",
    "api_tenants.message.s": "[\\s-]+",
    "api_tenants.message.example_com": "@example.com",
    "api_availability.message.get_the_current_user_s_availab": "Get the current user's availability schedule.",
    "api_availability.message.get_the_current_user_s_availab_1": "Get the current user's availability exceptions.",
    "api_availability.message.y_m_d": "%Y-%m-%d",
    "api_availability.message.y_m_d_1": "%Y-%m-%d",
    "api_availability.message.add_a_new_availability_excepti": "Add a new availability exception.",
    "api_availability.message.get_a_calendar_view_of_the_cur": "Get a calendar view of the current user's availability.",
    "api_availability.message.y_m_d_2": "%Y-%m-%d",
    "api_availability.message.y_m_d_3": "%Y-%m-%d",
    "api_availability.message.get_a_trainer_s_availability_f": "Get a trainer's availability for scheduling appointments.",
    "api_availability.message.y_m_d_4": "%Y-%m-%d",
    "api_availability.message.y_m_d_5": "%Y-%m-%d",
    "api_availability.message.get_available_time_slots_for_s": "Get available time slots for scheduling an appointment.",
    "api_availability.message.y_m_d_6": "%Y-%m-%d",
    "api_availability.message.y_m_d_7": "%Y-%m-%d",
    "api_sms.message.send_an_sms_message": "Send an SMS message.",
    "api_sms.message.send_an_sms_using_a_template": "Send an SMS using a template.",
    "api_sms.message.send_sms_to_multiple_recipient": "Send SMS to multiple recipients.",
    "api_sms.message.schedule_an_sms_for_future_del": "Schedule an SMS for future delivery.",
    "api_sms.message.00_00": "+00:00",
    "api_sms.message.cancel_a_scheduled_sms": "Cancel a scheduled SMS.",
    "api_sms.message.get_the_status_of_an_sms_messa": "Get the status of an SMS message.",
    "api_sms.message.get_sms_history_with_filters": "Get SMS history with filters.",
    "api_sms.message.00_00_1": "+00:00",
    "api_sms.message.00_00_2": "+00:00",
    "api_sms.message.00_00_3": "+00:00",
    "api_sms.message.00_00_4": "+00:00",
    "api_sms.message.create_a_new_sms_template": "Create a new SMS template.",
    "api_sms.message.template_id_already_exists": "Template ID already exists",
    "api_sms.message.create_a_new_sms_campaign": "Create a new SMS campaign.",
    "api_sms.message.00_00_5": "+00:00",
    "api_sms.message.execute_an_sms_campaign": "Execute an SMS campaign.",
    "api_sms.message.get_campaign_status_and_statis": "Get campaign status and statistics.",
    "api_gamification.message.comprehensive_gamification_api": "Comprehensive Gamification API endpoints for BDC application.",
    "api_gamification.message.get_user_s_xp_transaction_hist": "Get user's XP transaction history.",
    "api_gamification.message.get_comprehensive_progress_sum": "Get comprehensive progress summary for current user.",
    "api_gamification.message.get_user_engagement_metrics": "Get user engagement metrics.",
    "api_gamification.message.get_user_s_earned_badges": "Get user's earned badges.",
    "api_gamification.message.get_badges_available_to_earn": "Get badges available to earn.",
    "api_gamification.message.create_a_new_badge_admin_only": "Create a new badge (admin only).",
    "api_gamification.message.manually_award_a_badge_to_a_us": "Manually award a badge to a user (admin only).",
    "api_gamification.message.get_specific_leaderboard_with": "Get specific leaderboard with entries.",
    "api_gamification.message.get_current_user_s_position_in": "Get current user's position in a leaderboard.",
    "api_gamification.message.create_a_new_leaderboard_admi": "Create a new leaderboard (admin only).",
    "api_gamification.message.get_specific_challenge_details": "Get specific challenge details.",
    "api_gamification.message.get_current_user_s_challenge_p": "Get current user's challenge participations.",
    "api_gamification.message.create_a_new_challenge_admin": "Create a new challenge (admin only).",
    "api_gamification.message.create_a_new_team": "Create a new team.",
    "api_gamification.message.get_user_s_reward_redemptions": "Get user's reward redemptions.",
    "api_gamification.message.create_a_new_reward_admin_onl": "Create a new reward (admin only).",
    "api_gamification.message.create_a_personal_goal": "Create a personal goal.",
    "api_gamification.message.log_a_gamification_event": "Log a gamification event.",
    "api_gamification.message.handle_login_gamification_cal": "Handle login gamification (called by auth system).",
    "api_gamification.message.handle_evaluation_completion_g": "Handle evaluation completion gamification.",
    "api_gamification.message.handle_program_completion_gami": "Handle program completion gamification.",
    "api_gamification.message.get_user_s_friends_list_place": "Get user's friends list (placeholder for future implementation).",
    "api_gamification.message.friends_feature_coming_soon": "Friends feature coming soon",
    "api_gamification.message.get_social_activity_feed_plac": "Get social activity feed (placeholder for future implementation).",
    "api_gamification.message.activity_feed_feature_coming_s": "Activity feed feature coming soon",
    "beneficiaries_v2_detail_routes.message.retrieve_single_beneficiary_by": "Retrieve single beneficiary by ID (v2 refactor).",
    "beneficiaries_v2_list_routes.message.get_all_beneficiaries_with_opt": "Get all beneficiaries with optional filtering. (Refactor v2)",
    "beneficiaries_v2_list_routes.message.create_a_new_beneficiary": "Create a new beneficiary.",
    "beneficiaries_v2_evaluations_routes.message.2024_01_15": "2024-01-15",
    "beneficiaries_v2_evaluations_routes.message.2024_02_15": "2024-02-15",
    "beneficiaries_v2_documents_routes.message.return_documents_for_beneficia": "Return documents for beneficiary.",
    "beneficiaries_v2_documents_routes.message.upload_profile_picture_for_ben": "Upload profile picture for beneficiary.",
    "beneficiaries_v2_documents_routes.message.profile_pictures": "profile_pictures/",
    "beneficiaries_v2_documents_routes.message.profile_pictures_1": "profile_pictures/",
    "beneficiaries_v2_trainer_routes.message.return_assigned_trainer_s_for": "Return assigned trainer(s) for a beneficiary.",
    "beneficiaries_v2_trainer_routes.message.assign_a_trainer_to_beneficiar": "Assign a trainer to beneficiary.",
    "beneficiaries_v2_notes_routes.message.permissions_helper_for_notes": "Permissions helper for notes.",
    "v2_auth.message.authentication_api_routes_usin": "Authentication API routes using dependency injection.",
    "v2_auth.message.auth_v2": "auth_v2",
    "v2_auth.message.if_the_email_exists_a_reset_l": "If the email exists, a reset link has been sent",
    "v2_auth.message.password_reset_token_generated": "Password reset token generated",
    "v2_cached_endpoints.message.example_of_cached_api_endpoint": "Example of cached API endpoints using v2 architecture.",
    "v2_cached_endpoints.message.cached_v2": "cached_v2",
    "v2_cached_endpoints.message.list_beneficiaries_with_cachin": "List beneficiaries with caching.",
    "v2_cached_endpoints.message.get_beneficiary_with_caching": "Get beneficiary with caching (10 min TTL).",
    "v2_cached_endpoints.message.list_users_with_per_user_cachi": "List users with per-user caching.",
    "v2_cached_endpoints.message.get_beneficiary_statistics_wit": "Get beneficiary statistics with longer cache.",
    "v2_cached_endpoints.message.get_user_statistics_with_longe": "Get user statistics with longer cache.",
    "v2_cached_endpoints.message.generate_cache_key_that_includ": "Generate cache key that includes user ID.",
    "v2_cached_endpoints.message.api_response_user_specific": "api_response:user_specific:",
    "v2_cached_endpoints.message.get_current_user_profile_with": "Get current user profile with user-specific caching.",
    "v2_cached_endpoints.message.clear_cache_for_specific_resou": "Clear cache for specific resources (admin only).",
    "v2_cached_endpoints.message.cache_cleared_for_beneficiary": "Cache cleared for beneficiary ",
    "v2_cached_endpoints.message.cache_cleared_for_user": "Cache cleared for user ",
    "v2_cached_endpoints.message.api_response": "api_response:*",
    "v2_cached_endpoints.message.all_api_response_cache_cleared": "All API response cache cleared",
    "v2_cached_endpoints.message.create_a_new_beneficiary": "Create a new beneficiary.",
    "v2_cached_endpoints.message.beneficiaries_list": "beneficiaries_list:*",
    "v2_cached_endpoints.message.test_endpoint_with_short_ttl_f": "Test endpoint with short TTL for testing cache expiration.",
    "v2_cached_endpoints.message.this_response_has_a_2_second_t": "This response has a 2-second TTL",
    "v2_beneficiaries.message.beneficiary_api_routes_using_d": "Beneficiary API routes using dependency injection.",
    "v2_beneficiaries.message.beneficiaries_v2": "beneficiaries_v2",
    "v2_beneficiaries.message.list_beneficiaries_with_search": "List beneficiaries with search and pagination.",
    "v2_beneficiaries.message.create_a_new_beneficiary": "Create a new beneficiary.",
    "v2_beneficiaries.message.beneficiaries_list": "beneficiaries_list:*",
    "v2_beneficiaries.message.beneficiaries_list_1": "beneficiaries_list:*",
    "v2_beneficiaries.message.beneficiaries_list_2": "beneficiaries_list:*",
    "v2_beneficiaries.message.add_a_note_to_beneficiary": "Add a note to beneficiary.",
    "v2_beneficiaries.message.upload_a_document_for_benefici": "Upload a document for beneficiary.",
    "v2_beneficiaries.message.export_list_of_beneficiaries": "Export list of beneficiaries.",
    "programs_v2_enrollment_routes.message.program_enrollment_api_endpoin": "Program enrollment API endpoints.",
    "programs_v2_enrollment_routes.message.get_all_enrollments_for_a_prog": "Get all enrollments for a program.",
    "programs_v2_enrollment_routes.message.get_enrolled_students_benefic": "Get enrolled students (beneficiaries) for a program.",
    "programs_v2_enrollment_routes.message.enroll_a_beneficiary_in_a_prog": "Enroll a beneficiary in a program.",
    "programs_v2_enrollment_routes.message.beneficiary_is_already_enrolle": "Beneficiary is already enrolled in this program",
    "programs_v2_enrollment_routes.message.maximum_number_of_participants": "Maximum number of participants reached",
    "programs_v2_detail_routes.message.retrieve_single_program_with_m": "Retrieve single program with modules.",
    "programs_v2_detail_routes.message.return_enrollments_for_a_progr": "Return enrollments for a program (v2 alias).",
    "programs_v2_detail_routes.message.return_enrolled_students_for_a": "Return enrolled students for a program.\n    \n    This endpoint returns a simplified list of students (beneficiaries)\n    enrolled in a program with only id, full_name, and email fields.\n    ",
    "programs_v2_util_routes.message.program_utility_endpoints_for": "Program utility endpoints for categories, levels, etc.",
    "programs_v2_util_routes.message.get_available_program_categori": "Get available program categories.",
    "programs_v2_util_routes.message.get_available_program_levels": "Get available program levels.",
    "programs_v2_progress_routes.message.get_overall_progress_statistic": "Get overall progress statistics for a program.",
    "programs_v2_progress_routes.message.get_detailed_progress_for_a_sp": "Get detailed progress for a specific enrollment.",
    "programs_v2_list_routes.message.list_active_programs_for_tenan": "List active programs for tenant.",
    "programs_v2___init__.message.programs_v2": "programs_v2",
    "programs_v2_module_routes.message.list_all_modules_for_a_program": "List all modules for a program.",
    "programs_v2_module_routes.message.get_a_specific_module": "Get a specific module.",
    "programs_v2_module_routes.message.create_a_new_module_for_a_prog": "Create a new module for a program.",
    "programs_v2_module_routes.message.reorder_modules_for_a_program": "Reorder modules for a program.",
    "programs_v2_session_routes.message.program_sessions_and_session_a": "Program sessions and session attendance API endpoints.",
    "programs_v2_session_routes.message.get_all_sessions_for_a_program": "Get all sessions for a program.",
    "programs_v2_session_routes.message.create_a_new_session_for_a_pro": "Create a new session for a program.",
    "programs_v2_session_routes.message.record_attendance_for_a_sessio": "Record attendance for a session.",
    "routes_alerts.message.alert_api_routes_provides_end": "\nAlert API Routes\nProvides endpoints for managing and monitoring alerts\n",
    "routes_alerts.message.get_alert_statistics_and_metri": "Get alert statistics and metrics",
    "routes_alerts.message.send_a_test_alert_to_verify_al": "Send a test alert to verify alert system functionality",
    "routes_alerts.message.this_is_a_test_alert_sent_by": "This is a test alert sent by ",
    "routes_alerts.message.to_verify_the_alert_system_is": " to verify the alert system is working correctly.",
    "routes_alerts.message.admin_panel": "admin-panel",
    "routes_alerts.message.send_a_manual_alert": "Send a manual alert",
    "routes_alerts.message.get_alert_history_with_paginat": "Get alert history with pagination and filtering",
    "routes_alerts.message.00_00": "+00:00",
    "routes_alerts.message.00_00_1": "+00:00",
    "routes_alerts.message.get_current_alert_system_confi": "Get current alert system configuration",
    "routes_alerts.message.check_alert_system_health_stat": "Check alert system health status",
    "routes_alerts.message.alert_endpoint_not_found": "Alert endpoint not found",
    "routes_analytics.message.log_analytics_api_routes_prov": "\nLog Analytics API Routes\nProvides endpoints for accessing log analysis results and insights\n",
    "routes_analytics.message.get_recent_log_analysis_insigh": "Get recent log analysis insights",
    "routes_analytics.message.analyze_log_patterns_for_a_spe": "Analyze log patterns for a specific time period",
    "routes_analytics.message.search_logs_with_advanced_filt": "Search logs with advanced filtering",
    "routes_analytics.message.00_00": "+00:00",
    "routes_analytics.message.00_00_1": "+00:00",
    "routes_analytics.message.y_m_d_h_00": "%Y-%m-%d %H:00",
    "routes_analytics.message.to": " to ",
    "routes_analytics.message.get_log_trends_and_statistics": "Get log trends and statistics",
    "routes_analytics.message.y_m_d_h_00_1": "%Y-%m-%d %H:00",
    "routes_analytics.message.y_m_d": "%Y-%m-%d",
    "routes_analytics.message.00_00_2": "+00:00",
    "routes_analytics.message.00_00_3": "+00:00",
    "routes_analytics.message.to_1": " to ",
    "routes_analytics.message.get_log_analytics_service_stat": "Get log analytics service status",
    "routes_analytics.message.get_distribution_of_severities": "Get distribution of severities in results",
    "routes_analytics.message.analytics_endpoint_not_found": "Analytics endpoint not found",
    "monitoring_performance_monitor.message.performance_monitoring_system": "\nPerformance Monitoring System\nImplements APM, metrics collection, and performance tracking\n",
    "monitoring_performance_monitor.message.initialize_performance_monitor": "Initialize performance monitoring with Flask app",
    "monitoring_performance_monitor.message.track_request_start_time": "Track request start time",
    "monitoring_performance_monitor.message.track_request_completion_and_m": "Track request completion and metrics",
    "monitoring_performance_monitor.message.clean_up_request_context": "Clean up request context",
    "monitoring_performance_monitor.message.store_metric_with_automatic_cl": "Store metric with automatic cleanup",
    "monitoring_performance_monitor.message.alert_on_slow_requests": "Alert on slow requests",
    "monitoring_performance_monitor.message.took": " took ",
    "monitoring_performance_monitor.message.s_db": "s (DB: ",
    "monitoring_performance_monitor.message.start_background_system_monito": "Start background system monitoring",
    "monitoring_performance_monitor.message.get_summary_of_collected_metri": "Get summary of collected metrics",
    "monitoring_performance_monitor.message.calculate_summary_statistics_f": "Calculate summary statistics for metrics",
    "monitoring_performance_monitor.message.p50_duration": "p50_duration",
    "monitoring_performance_monitor.message.p95_duration": "p95_duration",
    "monitoring_performance_monitor.message.p99_duration": "p99_duration",
    "monitoring_performance_monitor.message.decorator_to_monitor_function": "Decorator to monitor function performance",
    "monitoring_performance_monitor.message.monitor_database_query_perform": "Monitor database query performance",
    "monitoring_performance_monitor.message.record_database_query_executio": "Record database query execution",
    "monitoring_performance_monitor.message.s": "s): ",
    "monitoring_performance_monitor.message.get_health_check_metrics": "Get health check metrics",
    "monitoring_performance_monitor.message.p95_duration_1": "p95_duration",
    "monitoring_performance_monitor.message.response_time_p95": "response_time_p95",
    "monitoring_performance_monitor.message.p95_duration_2": "p95_duration",
    "monitoring_metrics_exporter.message.bdc_custom_metrics_exporter_e": "\nBDC Custom Metrics Exporter\nExposes application-specific metrics for Prometheus scraping\n",
    "monitoring_metrics_exporter.message.number_of_active_users": "Number of active users",
    "monitoring_metrics_exporter.message.total_number_of_users": "Total number of users",
    "monitoring_metrics_exporter.message.total_number_of_beneficiaries": "Total number of beneficiaries",
    "monitoring_metrics_exporter.message.total_number_of_programs": "Total number of programs",
    "monitoring_metrics_exporter.message.total_number_of_evaluations": "Total number of evaluations",
    "monitoring_metrics_exporter.message.total_number_of_documents": "Total number of documents",
    "monitoring_metrics_exporter.message.number_of_active_sessions": "Number of active sessions",
    "monitoring_metrics_exporter.message.cache_hit_rate_percentage": "Cache hit rate percentage",
    "monitoring_metrics_exporter.message.number_of_database_connections": "Number of database connections",
    "monitoring_metrics_exporter.message.number_of_background_tasks": "Number of background tasks",
    "monitoring_metrics_exporter.message.overall_system_health_score": "Overall system health score",
    "monitoring_metrics_exporter.message.setup_database_and_redis_conne": "Setup database and Redis connections",
    "monitoring_metrics_exporter.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "monitoring_metrics_exporter.message.collect_all_application_metric": "Collect all application metrics",
    "monitoring_metrics_exporter.message.session": "session:*",
    "monitoring_metrics_exporter.message.collect_system_performance_met": "Collect system performance metrics",
    "monitoring_metrics_exporter.message.calculate_overall_system_healt": "Calculate overall system health score (0-100)",
    "monitoring_metrics_exporter.message.run_the_metrics_exporter_serve": "Run the metrics exporter server",
    "monitoring_metrics_exporter.message.0_0_0_0": "0.0.0.0",
    "monitoring_metrics_exporter.message.starting_bdc_metrics_exporter": "Starting BDC Metrics Exporter on ",
    "monitoring_metrics_exporter.message.main_function_to_run_the_metri": "Main function to run the metrics exporter",
    "performance___init__.message.performance_optimization_modu": "\nPerformance Optimization Module for BDC Application\n\nThis module provides comprehensive performance optimization tools including:\n- Database query optimization\n- Caching strategies\n- API response optimization\n- Asset optimization\n- Performance monitoring and profiling\n- Load testing and benchmarking\n",
    "database_query_optimizer.message.database_query_optimizer_opt": "\nDatabase Query Optimizer\n\nOptimizes SQL queries for better performance by analyzing query patterns,\nsuggesting improvements, and automatically optimizing common queries.\n",
    "database_query_optimizer.message.analysis_result_for_a_query": "Analysis result for a query",
    "database_query_optimizer.message.advanced_sql_query_optimi": "\n    Advanced SQL query optimizer that analyzes and improves database queries.\n    ",
    "database_query_optimizer.message.optimize_a_sql_query": "\n        Optimize a SQL query using various optimization techniques.\n        ",
    "database_query_optimizer.message.analyze_slow_queries": "\n        Analyze slow queries and provide optimization suggestions.\n        ",
    "database_query_optimizer.message.record_query_executio": "\n        Record query execution for analysis.\n        ",
    "database_query_optimizer.message.get_comprehensive_que": "\n        Get comprehensive query statistics.\n        ",
    "database_query_optimizer.message.consider_converting_exists": "-- Consider converting EXISTS to JOIN: ",
    "database_query_optimizer.message.add_hints_for_missing_indexes": "Add hints for missing indexes",
    "database_query_optimizer.message.consider_adding_indexes_on": "-- Consider adding indexes on: ",
    "database_query_optimizer.message.optimize_order_by_clauses": "Optimize ORDER BY clauses",
    "database_query_optimizer.message.ensure_index_exists_for_ord": "-- Ensure index exists for ORDER BY: ",
    "database_query_optimizer.message.optimize_group_by_clauses": "Optimize GROUP BY clauses",
    "database_query_optimizer.message.consider_composite_index_fo": "-- Consider composite index for GROUP BY columns\n",
    "database_query_optimizer.message.warning_leading_wildcard_l": "-- Warning: Leading wildcard LIKE query detected - consider full-text search\n",
    "database_query_optimizer.message.generate_cache_key_for_query": "Generate cache key for query",
    "database_query_optimizer.message.normalize_query_for_comparison": "Normalize query for comparison",
    "database_query_optimizer.message.s": "\\s+",
    "database_query_optimizer.message.n": "--.*?\\n",
    "database_query_optimizer.message.measure_query_execution_time": "Measure query execution time",
    "database_query_optimizer.message.generate_optimization_recommen": "Generate optimization recommendations for a query",
    "database_query_optimizer.message.consider_adding_limit_clause_t": "Consider adding LIMIT clause to prevent large result sets",
    "database_query_optimizer.message.potential_table_scans_detected": "Potential table scans detected on: ",
    "database_query_optimizer.message.get_recommendation_message_for": "Get recommendation message for a specific pattern",
    "database_query_optimizer.message.n_1_query_detected_consider": "N+1 query detected - consider using JOINs or batch loading",
    "database_query_optimizer.message.consider_adding_limit_clause_f": "Consider adding LIMIT clause for better performance",
    "database_query_optimizer.message.distinct_may_be_unnecessary": "DISTINCT may be unnecessary - verify if GROUP BY is more appropriate",
    "database_query_optimizer.message.potential_cartesian_join_detec": "Potential cartesian join detected - verify JOIN conditions",
    "database_query_optimizer.message.detect_potential_table_scans_i": "Detect potential table scans in query",
    "database_query_optimizer.message.suggest_missing_indexes_for_a": "Suggest missing indexes for a query",
    "database_query_optimizer.message.on_table_name": " ON table_name (",
    "database_query_optimizer.message.on_table_name_1": " ON table_name (",
    "database_index_manager.message.database_index_manager_manag": "\nDatabase Index Manager\n\nManages database indexes for optimal query performance, including\nautomatic index suggestions, index monitoring, and maintenance.\n",
    "database_index_manager.message.index_suggestion_with_analysis": "Index suggestion with analysis",
    "database_index_manager.message.analysis_of_existing_index": "Analysis of existing index",
    "database_index_manager.message.advanced_database_index_m": "\n    Advanced database index manager for performance optimization.\n    ",
    "database_index_manager.message.generate_index_sugges": "\n        Generate index suggestions based on query patterns and table access.\n        ",
    "database_index_manager.message.analyze_existing_inde": "\n        Analyze existing indexes for optimization opportunities.\n        ",
    "database_index_manager.message.record_query_pattern": "\n        Record query pattern for index analysis.\n        ",
    "database_index_manager.message.create_indexes_based": "\n        Create indexes based on suggestions.\n        ",
    "database_index_manager.message.drop_redundant_or_unu": "\n        Drop redundant or unused indexes.\n        ",
    "database_index_manager.message.get_comprehensive_ind": "\n        Get comprehensive index statistics.\n        ",
    "database_index_manager.message.generate_a_comprehens": "\n        Generate a comprehensive index maintenance plan.\n        ",
    "database_index_manager.message.suggested_indexes": " suggested indexes",
    "database_index_manager.message.redundant_indexes": " redundant indexes",
    "database_index_manager.message.reindex_tables_for_optimal_per": "Reindex tables for optimal performance",
    "database_index_manager.message.analyze_patterns_for_a_specifi": "Analyze patterns for a specific table",
    "database_index_manager.message.times": " times)",
    "database_index_manager.message.": " = ?",
    "database_index_manager.message.analyze_opportunities_for_comp": "Analyze opportunities for composite indexes",
    "database_index_manager.message.composite_index_for_frequent_c": "Composite index for frequent column combination (",
    "database_index_manager.message.times_1": " times)",
    "database_index_manager.message.and": " AND ",
    "database_index_manager.message._1": " = ?",
    "database_index_manager.message.analyze_a_specific_index": "Analyze a specific index",
    "database_index_manager.message.check_if_an_index_exists_for_t": "Check if an index exists for the given columns",
    "database_index_manager.message.find_if_there_s_a_redundant_in": "Find if there's a redundant index",
    "database_index_manager.message.generate_create_index_sql_stat": "Generate CREATE INDEX SQL statement",
    "database_index_manager.message.on": " ON ",
    "database_index_manager.message.remove_duplicate_index_suggest": "Remove duplicate index suggestions",
    "core_optimizer.message.core_performance_optimizer_c": "\nCore Performance Optimizer\n\nCentral orchestrator for all performance optimization features.\n",
    "core_optimizer.message.configuration_for_performance": "Configuration for performance optimization",
    "core_optimizer.message.central_performance_optim": "\n    Central performance optimization manager that coordinates all optimization strategies.\n    ",
    "core_optimizer.message.initialize_the_performance_opt": "Initialize the performance optimizer with Flask app",
    "core_optimizer.message.register_performance_middlewar": "Register performance middleware with the Flask app",
    "core_optimizer.message.optimize_a_database_query": "Optimize a database query",
    "core_optimizer.message.set_value_in_cache": "Set value in cache",
    "core_optimizer.message.analyze_slow_queries_and_sugge": "Analyze slow queries and suggest optimizations",
    "core_optimizer.message.suggest_database_indexes_for_o": "Suggest database indexes for optimization",
    "core_optimizer.message.get_comprehensive_performance": "Get comprehensive performance metrics",
    "core_optimizer.message.generate_a_comprehensive_optim": "Generate a comprehensive optimization report",
    "core_optimizer.message.consider_increasing_cache_ttl": "Consider increasing cache TTL or reviewing cache strategy",
    "core_optimizer.message.average_response_time_is_high": "Average response time is high, consider query optimization",
    "core_optimizer.message.slow_queries_requiring_optimi": " slow queries requiring optimization",
    "core_optimizer.message.index_suggestions": " index suggestions",
    "core_optimizer.message.enable_aggressive_optimization": "Enable aggressive optimization mode",
    "core_optimizer.message.aggressive_optimization_mode_e": "Aggressive optimization mode enabled",
    "core_optimizer.message.enable_basic_optimization_mode": "Enable basic optimization mode",
    "core_optimizer.message.warmup_cache_for_specific_endp": "Warmup cache for specific endpoints",
    "core_optimizer.message.warming_up_cache_for_endpoint": "Warming up cache for endpoint: ",
    "config_performance_config.message.performance_configuration_ce": "\nPerformance Configuration\n\nCentral configuration management for all performance optimization settings.\n",
    "config_performance_config.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "config_performance_config.message.central_performance_confi": "\n    Central performance configuration manager.\n    ",
    "config_performance_config.message.apply_optimization_level_to_al": "Apply optimization level to all configurations",
    "config_performance_config.message.apply_basic_optimization_setti": "Apply basic optimization settings",
    "config_performance_config.message.apply_moderate_optimization_se": "Apply moderate optimization settings",
    "config_performance_config.message.apply_aggressive_optimization": "Apply aggressive optimization settings",
    "config_performance_config.message.get_configuration_for_current": "Get configuration for current environment",
    "config_performance_config.message.redis_enabled_but_no_redis_url": "Redis enabled but no Redis URL provided",
    "config_performance_config.message.monitoring_interval_too_low_m": "Monitoring interval too low (minimum 5 seconds)",
    "config_performance_config.message.database_connection_pool_size": "Database connection pool size too high (maximum 100)",
    "config_performance_config.message.cdn_enabled_but_no_cdn_base_ur": "CDN enabled but no CDN base URL provided",
    "config_performance_config.message.performance_budget_response_ti": "Performance budget response time too strict (minimum 100ms)",
    "config_performance_config.message.convert_configuration_to_dicti": "Convert configuration to dictionary",
    "config_performance_config.message.configuration_file_not_found": "Configuration file not found: ",
    "config_performance_config.message.save_configuration_to_file": "Save configuration to file",
    "config_performance_config.message.get_feature_flags_for_performa": "Get feature flags for performance optimizations",
    "testing_load_tester.message.load_tester_comprehensive_lo": "\nLoad Tester\n\nComprehensive load testing framework for API endpoints and full application testing\nwith support for various load patterns, realistic user simulation, and detailed reporting.\n",
    "testing_load_tester.message.user_behavior_test_scenario": "User behavior test scenario",
    "testing_load_tester.message.advanced_load_testing_fra": "\n    Advanced load testing framework with realistic user simulation.\n    ",
    "testing_load_tester.message.load_tester_initialized_for": "Load tester initialized for ",
    "testing_load_tester.message.add_a_user_behavior_scenario": "Add a user behavior scenario",
    "testing_load_tester.message.starting_stress_test_up_to": "Starting stress test up to ",
    "testing_load_tester.message.users": " users",
    "testing_load_tester.message.users_1": " users",
    "testing_load_tester.message.performance_degradation_detect": "Performance degradation detected at ",
    "testing_load_tester.message.users_2": " users",
    "testing_load_tester.message.users_3": " users: ",
    "testing_load_tester.message.steps": " steps",
    "testing_load_tester.message.run_spike_test_with_s": "\n        Run spike test with sudden load increase.\n        ",
    "testing_load_tester.message.": " -> ",
    "testing_load_tester.message.users_4": " users",
    "testing_load_tester.message.execute_load_test_based_on_con": "Execute load test based on configured pattern",
    "testing_load_tester.message.run_constant_load_pattern": "Run constant load pattern",
    "testing_load_tester.message.load_test_timed_out": "Load test timed out",
    "testing_load_tester.message.run_ramp_up_load_pattern": "Run ramp-up load pattern",
    "testing_load_tester.message.run_spike_load_pattern": "Run spike load pattern",
    "testing_load_tester.message.run_step_load_pattern": "Run step load pattern",
    "testing_load_tester.message.run_sine_wave_load_pattern": "Run sine wave load pattern",
    "testing_load_tester.message.simulate_a_single_user_session": "Simulate a single user session",
    "testing_load_tester.message.cancelled": " cancelled",
    "testing_load_tester.message.execute_a_test_scenario": "Execute a test scenario",
    "testing_load_tester.message.execute_a_random_request_to_co": "Execute a random request to configured endpoints",
    "testing_load_tester.message.make_http_request_and_record_r": "Make HTTP request and record results",
    "testing_load_tester.message.record_request_result_for_anal": "Record request result for analysis",
    "testing_load_tester.message.generate_comprehensive_test_re": "Generate comprehensive test results",
    "testing_load_tester.message.div_class_summa": "\n            <div class=\"summary\">\n                <h2>",
    "testing_load_tester.message.h2_div_cla": "</h2>\n                <div class=\"metric\">\n                    <div class=\"metric-value\">",
    "testing_load_tester.message.div_di": "</div>\n                    <div class=\"metric-label\">Total Requests</div>\n                </div>\n                <div class=\"metric\">\n                    <div class=\"metric-value\">",
    "testing_load_tester.message.div_di_1": "</div>\n                    <div class=\"metric-label\">Requests/sec</div>\n                </div>\n                <div class=\"metric\">\n                    <div class=\"metric-value\">",
    "testing_load_tester.message.ms_div": "ms</div>\n                    <div class=\"metric-label\">Avg Response Time</div>\n                </div>\n                <div class=\"metric\">\n                    <div class=\"metric-value\">",
    "testing_load_tester.message.body_html": "</body></html>",
    "testing_benchmark_runner.message.benchmark_runner_comprehensi": "\nBenchmark Runner\n\nComprehensive benchmarking system for measuring and comparing performance\nacross different configurations, versions, and environments.\n",
    "testing_benchmark_runner.message.advanced_benchmarking_sys": "\n    Advanced benchmarking system with comprehensive performance measurement.\n    ",
    "testing_benchmark_runner.message.register_a_custom_benchmark_fu": "Register a custom benchmark function",
    "testing_benchmark_runner.message.run_a_single_benchmar": "\n        Run a single benchmark with specified configuration.\n        ",
    "testing_benchmark_runner.message.seconds": " seconds",
    "testing_benchmark_runner.message.": " - ",
    "testing_benchmark_runner.message.run_multiple_benchmar": "\n        Run multiple benchmarks in sequence.\n        ",
    "testing_benchmark_runner.message.running_benchmark_suite_with": "Running benchmark suite with ",
    "testing_benchmark_runner.message.benchmarks": " benchmarks",
    "testing_benchmark_runner.message.run_api_performance_b": "\n        Run API performance benchmark.\n        ",
    "testing_benchmark_runner.message.run_database_performa": "\n        Run database performance benchmark.\n        ",
    "testing_benchmark_runner.message.p95_query_time": "p95_query_time",
    "testing_benchmark_runner.message.run_memory_usage_benc": "\n        Run memory usage benchmark.\n        ",
    "testing_benchmark_runner.message.compare_benchmark_res": "\n        Compare benchmark results against baseline.\n        ",
    "testing_benchmark_runner.message.not_found": "' not found",
    "testing_benchmark_runner.message.set_a_benchmark_result_as_base": "Set a benchmark result as baseline for future comparisons",
    "testing_benchmark_runner.message.generate_comprehensiv": "\n        Generate comprehensive benchmark report.\n        ",
    "testing_benchmark_runner.message.export_benchmark_results_to_fi": "Export benchmark results to file",
    "testing_benchmark_runner.message.run_a_single_benchmark_iterati": "Run a single benchmark iteration",
    "testing_benchmark_runner.message.no_benchmark_target_specified": "No benchmark target specified",
    "testing_benchmark_runner.message.custom_benchmark_not_found": "Custom benchmark not found: ",
    "testing_benchmark_runner.message.start_system_resource_monitori": "Start system resource monitoring",
    "testing_benchmark_runner.message.stop_system_resource_monitorin": "Stop system resource monitoring",
    "testing_benchmark_runner.message.get_aggregated_system_metrics": "Get aggregated system metrics",
    "testing_benchmark_runner.message.get_current_system_metrics_sna": "Get current system metrics snapshot",
    "testing_benchmark_runner.message.convert_load_test_result_to_be": "Convert load test result to benchmark result",
    "testing_benchmark_runner.message.determine_if_metric_change_is": "Determine if metric change is an improvement",
    "testing_benchmark_runner.message.generate_comparison_summary_te": "Generate comparison summary text",
    "testing_benchmark_runner.message.no_significant_changes_detecte": "No significant changes detected",
    "testing_benchmark_runner.message._1": " (+",
    "testing_benchmark_runner.message._2": " (-",
    "api_pagination_optimizer.message.pagination_optimizer_advance": "\nPagination Optimizer\n\nAdvanced pagination strategies including cursor-based pagination,\nkeyset pagination, and intelligent prefetching for optimal performance.\n",
    "api_pagination_optimizer.message.pagination_result_with_data_an": "Pagination result with data and metadata",
    "api_pagination_optimizer.message.advanced_pagination_optim": "\n    Advanced pagination optimizer with multiple pagination strategies.\n    ",
    "api_pagination_optimizer.message.paginate_query_using": "\n        Paginate query using the specified pagination strategy.\n        ",
    "api_pagination_optimizer.message.paginate_search_resul": "\n        Paginate search results with relevance scoring.\n        ",
    "api_pagination_optimizer.message.create_a_cursor_for_c": "\n        Create a cursor for cursor-based pagination.\n        ",
    "api_pagination_optimizer.message.estimate_total_count": "\n        Estimate total count for large datasets.\n        ",
    "api_pagination_optimizer.message.optimize_query_for_sp": "\n        Optimize query for specific pagination type.\n        ",
    "api_pagination_optimizer.message.get_comprehensive_pag": "\n        Get comprehensive pagination statistics.\n        ",
    "api_pagination_optimizer.message.implement_keyset_pagination_s": "Implement keyset pagination (seek method)",
    "api_pagination_optimizer.message.sort_search_results_by_relevan": "Sort search results by relevance to query",
    "api_pagination_optimizer.message.optimize_query_for_cursor_pagi": "Optimize query for cursor pagination",
    "api_pagination_optimizer.message.optimize_query_for_keyset_pagi": "Optimize query for keyset pagination",
    "api_pagination_optimizer.message.optimize_query_for_offset_pagi": "Optimize query for offset pagination",
    "api_pagination_optimizer.message.generate_navigation_links_for": "Generate navigation links for pagination",
    "api_pagination_optimizer.message.prefetch_next_pages_for_better": "Prefetch next pages for better performance",
    "api_response_optimizer.message.api_response_optimizer_optim": "\nAPI Response Optimizer\n\nOptimizes API responses through compression, caching headers,\nresponse streaming, and payload optimization.\n",
    "api_response_optimizer.message.advanced_api_response_opt": "\n    Advanced API response optimizer for improved performance and bandwidth efficiency.\n    ",
    "api_response_optimizer.message.apply_comprehensive_r": "\n        Apply comprehensive response optimizations.\n        ",
    "api_response_optimizer.message.create_a_streaming_re": "\n        Create a streaming response for large datasets.\n        ",
    "api_response_optimizer.message.no_cache": "no-cache",
    "api_response_optimizer.message.create_optimized_json": "\n        Create optimized JSON response with compression and caching.\n        ",
    "api_response_optimizer.message.create_optimized_pagi": "\n        Create optimized paginated response structure.\n        ",
    "api_response_optimizer.message.page": "?page=",
    "api_response_optimizer.message.per_page": "&per_page=",
    "api_response_optimizer.message.page_1": "?page=",
    "api_response_optimizer.message.per_page_1": "&per_page=",
    "api_response_optimizer.message.page_1_per_page": "?page=1&per_page=",
    "api_response_optimizer.message.page_2": "?page=",
    "api_response_optimizer.message.per_page_2": "&per_page=",
    "api_response_optimizer.message.get_comprehensive_opt": "\n        Get comprehensive optimization statistics.\n        ",
    "api_response_optimizer.message.image": "image/",
    "api_response_optimizer.message.video": "video/",
    "api_response_optimizer.message.audio": "audio/",
    "api_response_optimizer.message.add_appropriate_caching_header": "Add appropriate caching headers",
    "api_response_optimizer.message.public_max_age": "public, max-age=",
    "api_response_optimizer.message.public_max_age_1": "public, max-age=",
    "api_response_optimizer.message.no_cache_1": "no-cache",
    "api_response_optimizer.message.handle_etags_and_conditional_r": "Handle ETags and conditional requests",
    "api_response_optimizer.message.apply_gzip_compression_to_resp": "Apply gzip compression to response",
    "api_response_optimizer.message.check_if_client_supports_gzip": "Check if client supports gzip compression",
    "api_response_optimizer.message.check_if_response_contains_sta": "Check if response contains static content",
    "api_response_optimizer.message.image_1": "image/",
    "api_response_optimizer.message.font": "font/",
    "api_response_optimizer.message.generate_etag_for_content": "Generate ETag for content",
    "api_response_optimizer.message.generate_cache_key_for_paginat": "Generate cache key for paginated responses",
    "api_response_optimizer.message.page_3": ":page=",
    "api_response_optimizer.message.per_page_3": ":per_page=",
    "api_compression_manager.message.lz4": "lz4",
    "api_compression_manager.message.result_of_compression_operatio": "Result of compression operation",
    "api_compression_manager.message.compression_statistics_per_typ": "Compression statistics per type",
    "api_compression_manager.message.compress_data_using_t": "\n        Compress data using the best available compression method.\n        ",
    "api_compression_manager.message.data_too_large_for_compression": "Data too large for compression",
    "api_compression_manager.message.decompress_data_using": "\n        Decompress data using the specified compression type.\n        ",
    "api_compression_manager.message.benchmark_different_c": "\n        Benchmark different compression types with test data.\n        ",
    "api_compression_manager.message.get_comprehensive_com": "\n        Get comprehensive compression statistics.\n        ",
    "api_compression_manager.message.optimize_compression": "\n        Optimize compression preferences for a specific content type.\n        ",
    "api_compression_manager.message.parse_content_type_string_to_e": "Parse content type string to enum",
    "api_compression_manager.message.get_preferred_compression_type": "Get preferred compression types for content type and client support",
    "monitoring_performance_monitor.message.performance_monitor_real_tim": "\nPerformance Monitor\n\nReal-time performance monitoring with metrics collection,\nalerting, and performance analytics.\n",
    "monitoring_performance_monitor.message.comprehensive_performance": "\n    Comprehensive performance monitoring system.\n    ",
    "monitoring_performance_monitor.message.record_a_custom_metric": "Record a custom metric",
    "monitoring_performance_monitor.message.start_monitoring_a_request": "Start monitoring a request",
    "monitoring_performance_monitor.message.add_alert_rule_for_a_metric": "Add alert rule for a metric",
    "monitoring_performance_monitor.message.add_callback_for_alert_notific": "Add callback for alert notifications",
    "monitoring_performance_monitor.message.get_current_performance_metric": "Get current performance metrics",
    "monitoring_performance_monitor.message.p95_response_time_ms": "p95_response_time_ms",
    "monitoring_performance_monitor.message.p99_response_time_ms": "p99_response_time_ms",
    "monitoring_performance_monitor.message.get_detailed_endpoint_statisti": "Get detailed endpoint statistics",
    "monitoring_performance_monitor.message.get_performance_trends_over_ti": "Get performance trends over time",
    "monitoring_performance_monitor.message.get_summary_of_alerts": "Get summary of alerts",
    "monitoring_performance_monitor.message.generate_comprehensive_perform": "Generate comprehensive performance report",
    "monitoring_performance_monitor.message.collect_system_performance_met": "Collect system performance metrics",
    "monitoring_performance_monitor.message.check_if_metric_value_triggers": "Check if metric value triggers any alerts",
    "monitoring_performance_monitor.message.exceeded_threshold": " exceeded threshold: ",
    "monitoring_performance_monitor.message.": " > ",
    "monitoring_performance_monitor.message.calculate_response_time_percen": "Calculate response time percentile",
    "monitoring_performance_monitor.message.calculate_requests_per_minute": "Calculate requests per minute for endpoint",
    "monitoring_performance_monitor.message.calculate_overall_performance": "Calculate overall performance score (0-100)",
    "monitoring_performance_monitor.message.high_cpu_usage_detected_cons": "High CPU usage detected - consider scaling or optimizing CPU-intensive operations",
    "monitoring_performance_monitor.message.high_memory_usage_detected_c": "High memory usage detected - consider increasing memory or optimizing memory usage",
    "monitoring_performance_monitor.message.high_average_response_time_c": "High average response time - consider optimizing slow endpoints or adding caching",
    "monitoring_performance_monitor.message.initialize_default_alert_rules": "Initialize default alert rules",
    "monitoring_profiler.message.application_profiler_advance": "\nApplication Profiler\n\nAdvanced profiling tools for identifying performance bottlenecks,\nmemory leaks, and optimization opportunities.\n",
    "monitoring_profiler.message.comprehensive_application": "\n    Comprehensive application profiler with multiple profiling strategies.\n    ",
    "monitoring_profiler.message.context_manager_for_profiling": "Context manager for profiling code blocks",
    "monitoring_profiler.message.decorator_for_profiling_indivi": "Decorator for profiling individual functions",
    "monitoring_profiler.message.took": " took ",
    "monitoring_profiler.message.memory_usage": " memory usage: ",
    "monitoring_profiler.message.1f": "+.1f",
    "monitoring_profiler.message.start_continuous_profiling_in": "Start continuous profiling in background",
    "monitoring_profiler.message.continuous_profiling_started": "Continuous profiling started (interval: ",
    "monitoring_profiler.message.start_profiling_for_a_specific": "Start profiling for a specific endpoint",
    "monitoring_profiler.message.stop_profiling_for_endpoint_an": "Stop profiling for endpoint and return results",
    "monitoring_profiler.message.analyze_current_memory_usage_a": "Analyze current memory usage and detect leaks",
    "monitoring_profiler.message.memory_tracking_not_enabled": "Memory tracking not enabled",
    "monitoring_profiler.message.identify_performance_hotspots": "Identify performance hotspots in the application",
    "monitoring_profiler.message.generate_comprehensive_profili": "Generate comprehensive profiling report",
    "monitoring_profiler.message.store_profiling_results_for_an": "Store profiling results for analysis",
    "monitoring_profiler.message.get_current_memory_usage_in_mb": "Get current memory usage in MB",
    "monitoring_profiler.message.collect_a_performance_snapshot": "Collect a performance snapshot",
    "monitoring_profiler.message.performance_snapshot_memory": "Performance snapshot - Memory: ",
    "monitoring_profiler.message.s_active_profilers": "s, Active profilers: ",
    "monitoring_profiler.message.calculate_memory_usage_trend": "Calculate memory usage trend",
    "monitoring_profiler.message.memory_change_10_snapshots": "memory_change_10_snapshots",
    "monitoring_profiler.message.get_garbage_collection_statist": "Get garbage collection statistics",
    "monitoring_profiler.message.generate_recommendations_for_p": "Generate recommendations for performance hotspots",
    "monitoring_profiler.message.consider_optimizing_algorithm": "Consider optimizing algorithm or adding caching",
    "monitoring_profiler.message.high_call_frequency_consider": "High call frequency - consider memoization or batch processing",
    "monitoring_profiler.message.database_operation_detected": "Database operation detected - consider query optimization or connection pooling",
    "monitoring_profiler.message.api_call_detected_consider_c": "API call detected - consider caching or async processing",
    "monitoring_profiler.message.generate_overall_performance_r": "Generate overall performance recommendations",
    "monitoring_profiler.message.consuming": " - consuming ",
    "monitoring_profiler.message.s_total_execution_time": "s total execution time",
    "monitoring_profiler.message.memory_leak_detected_investi": "Memory leak detected - investigate memory usage patterns and ensure proper cleanup",
    "monitoring_profiler.message.high_memory_usage": "High memory usage (",
    "monitoring_profiler.message.mb_consider_memory_optimiza": "MB) - consider memory optimization",
    "monitoring_profiler.message.impact_score": " - impact score ",
    "caching_cache_manager.message.l1_memory": "l1_memory",
    "caching_cache_manager.message.l2_redis": "l2_redis",
    "caching_cache_manager.message.l3_database": "l3_database",
    "caching_cache_manager.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "caching_cache_manager.message.cache_entry_with_metadata": "Cache entry with metadata",
    "caching_cache_manager.message.advanced_multi_level_cach": "\n    Advanced multi-level cache manager with intelligent caching strategies.\n    ",
    "caching_cache_manager.message.initialize_cache_manager_with": "Initialize cache manager with Flask app",
    "caching_cache_manager.message.set_value_in_cache_ac": "\n        Set value in cache across multiple levels.\n        ",
    "caching_cache_manager.message.warm_cache_with_pre_c": "\n        Warm cache with pre-computed values.\n        ",
    "caching_cache_manager.message.cache_warmed_for_key": "Cache warmed for key: ",
    "caching_cache_manager.message.clear_entire_cache_le": "\n        Clear entire cache level.\n        ",
    "caching_cache_manager.message.clear_all_cache_level": "\n        Clear all cache levels.\n        ",
    "caching_cache_manager.message.get_comprehensive_cac": "\n        Get comprehensive cache statistics.\n        ",
    "caching_cache_manager.message.register_a_function_f": "\n        Register a function for cache warming.\n        ",
    "caching_cache_manager.message.decorator_for_functio": "\n        Decorator for function result caching.\n        ",
    "caching_cache_manager.message.set_value_in_specific_cache_le": "Set value in specific cache level",
    "caching_cache_manager.message.generate_full_cache_key_with_p": "Generate full cache key with prefix",
    "caching_cache_manager.message.serialize_value_for_storage": "Serialize value for storage",
    "caching_cache_manager.message.generate_hash_for_function_arg": "Generate hash for function arguments",
    "caching_cache_manager.message.promote_frequently_accessed_it": "Promote frequently accessed items to higher cache levels",
    "caching_cache_manager.message.clear_metadata_for_specific_ca": "Clear metadata for specific cache level",
    "caching_cache_manager.message.analyze_cache_access_patterns": "Analyze cache access patterns for optimization",
    "caching_redis_optimizer.message.redis_cache_optimizer_specia": "\nRedis Cache Optimizer\n\nSpecialized optimization for Redis caching including connection pooling,\npipeline optimization, and Redis-specific performance tuning.\n",
    "caching_redis_optimizer.message.advanced_redis_optimizer": "\n    Advanced Redis optimizer for high-performance caching.\n    ",
    "caching_redis_optimizer.message.initialize_redis_connection_wi": "Initialize Redis connection with optimization",
    "caching_redis_optimizer.message.initialize_standalone_redis_co": "Initialize standalone Redis connection",
    "caching_redis_optimizer.message.initialize_redis_sentinel_for": "Initialize Redis Sentinel for high availability",
    "caching_redis_optimizer.message.optimized_set_operati": "\n        Optimized SET operation with compression and pipelining.\n        ",
    "caching_redis_optimizer.message.optimized_get_operati": "\n        Optimized GET operation with decompression.\n        ",
    "caching_redis_optimizer.message.batch_set_operation_u": "\n        Batch SET operation using pipeline for better performance.\n        ",
    "caching_redis_optimizer.message.batch_get_operation_u": "\n        Batch GET operation using MGET for better performance.\n        ",
    "caching_redis_optimizer.message.efficiently_scan_and": "\n        Efficiently scan and process keys matching a pattern.\n        ",
    "caching_redis_optimizer.message.keys_matching_pattern": " keys matching pattern: ",
    "caching_redis_optimizer.message.perform_redis_memory": "\n        Perform Redis memory optimization.\n        ",
    "caching_redis_optimizer.message.get_connection_pool_s": "\n        Get connection pool statistics.\n        ",
    "caching_redis_optimizer.message.get_comprehensive_red": "\n        Get comprehensive Redis performance metrics.\n        ",
    "caching_redis_optimizer.message.benchmark_redis_opera": "\n        Benchmark Redis operations for performance analysis.\n        ",
    "caching_redis_optimizer.message.benchmark": "benchmark_*",
    "caching_redis_optimizer.message.prepare_value_for_storage_with": "Prepare value for storage with optional compression",
    "caching_redis_optimizer.message.process_retrieved_value_with_o": "Process retrieved value with optional decompression",
    "caching_redis_optimizer.message.record_command_execution_time": "Record command execution time",
    "caching_redis_optimizer.message.force_cleanup_of_expired_keys": "Force cleanup of expired keys",
    "caching_redis_optimizer.message.analyze_and_suggest_memory_con": "Analyze and suggest memory configuration optimizations",
    "caching_redis_optimizer.message.memory": "*memory*",
    "caching_redis_optimizer.message.maxmemory_policy": "maxmemory-policy",
    "caching_redis_optimizer.message.consider_setting_maxmemory_pol": "Consider setting maxmemory-policy to allkeys-lru or volatile-lru",
    "caching_redis_optimizer.message.consider_setting_maxmemory_to": "Consider setting maxmemory to prevent out-of-memory conditions",
    "assets_cdn_manager.message.cdn_manager_advanced_cdn_int": "\nCDN Manager\n\nAdvanced CDN integration and management for optimal asset delivery,\nincluding multi-CDN support, geographic optimization, and intelligent routing.\n",
    "assets_cdn_manager.message.asset_delivery_rule_configurat": "Asset delivery rule configuration",
    "assets_cdn_manager.message.advanced_cdn_manager_with": "\n    Advanced CDN manager with multi-provider support and intelligent routing.\n    ",
    "assets_cdn_manager.message.register_a_new_cdn_endpoint": "Register a new CDN endpoint",
    "assets_cdn_manager.message.get_optimized_asset_u": "\n        Get optimized asset URL based on client location and capabilities.\n        ",
    "assets_cdn_manager.message.upload_asset_to_speci": "\n        Upload asset to specified CDN providers.\n        ",
    "assets_cdn_manager.message.cdn_provider_not_configured": "CDN provider not configured: ",
    "assets_cdn_manager.message.to": " to ",
    "assets_cdn_manager.message.get_comprehensive_cdn": "\n        Get comprehensive CDN performance report.\n        ",
    "assets_cdn_manager.message.generate_optimized_as": "\n        Generate optimized asset URLs for different scenarios.\n        ",
    "assets_cdn_manager.message.preload_assets_to_cdn": "\n        Preload assets to CDN edge locations.\n        ",
    "assets_cdn_manager.message.initialize_default_cdn_endpoin": "Initialize default CDN endpoints",
    "assets_cdn_manager.message.https_cdn_example_com": "https://cdn.example.com",
    "assets_cdn_manager.message.https_d123_cloudfront_net": "https://d123.cloudfront.net",
    "assets_cdn_manager.message.us_east_1": "us-east-1",
    "assets_cdn_manager.message.eu_west_1": "eu-west-1",
    "assets_cdn_manager.message.ap_southeast_1": "ap-southeast-1",
    "assets_cdn_manager.message.initialize_asset_delivery_rule": "Initialize asset delivery rules",
    "assets_cdn_manager.message.generate_optimized_url_for_ass": "Generate optimized URL for asset",
    "assets_cdn_manager.message.f_avif": "f=avif",
    "assets_cdn_manager.message.f_webp": "f=webp",
    "assets_cdn_manager.message.q_auto": "q=auto",
    "assets_cdn_manager.message.compress_br": "compress=br",
    "assets_cdn_manager.message.compress_gzip": "compress=gzip",
    "assets_cdn_manager.message.upload_asset_to_cdn_provider": "Upload asset to CDN provider",
    "assets_cdn_manager.message.to_cloudflare": " to Cloudflare",
    "assets_cdn_manager.message.upload_to_aws_cloudfront_via": "Upload to AWS CloudFront (via S3)",
    "assets_cdn_manager.message.to_aws_cloudfront": " to AWS CloudFront",
    "assets_cdn_manager.message.to_1": " to ",
    "assets_cdn_manager.message.preload_asset_to_cdn_edge_loca": "Preload asset to CDN edge locations",
    "assets_cdn_manager.message.to_2": " to ",
    "assets_cdn_manager.message.convert_asset_path_to_webp_ver": "Convert asset path to WebP version",
    "assets_cdn_manager.message.convert_asset_path_to_avif_ver": "Convert asset path to AVIF version",
    "assets_cdn_manager.message.convert_asset_path_to_responsi": "Convert asset path to responsive version",
    "assets_cdn_manager.message.track_cdn_request_statistics": "Track CDN request statistics",
    "assets_cdn_manager.message.check_if_provider_has_poor_per": "Check if provider has poor performance in region",
    "assets_cdn_manager.message.start_background_performance_m": "Start background performance monitoring",
    "assets_cdn_manager.message.starting_cdn_performance_monit": "Starting CDN performance monitoring...",
    "assets_cdn_manager.message.generate_performance_optimizat": "Generate performance optimization recommendations",
    "assets_cdn_manager.message.low_cache_hit_rate_detected": "Low cache hit rate detected - consider longer TTL or cache warming",
    "assets_cdn_manager.message.high_response_time_for": "High response time for ",
    "assets_cdn_manager.message.consider_provider_optimizat": " - consider provider optimization",
    "assets_image_optimizer.message.cache_images": "cache/images",
    "assets_image_optimizer.message.optimize_a_single_ima": "\n        Optimize a single image with comprehensive optimizations.\n        ",
    "assets_image_optimizer.message.": " -> ",
    "assets_image_optimizer.message.bytes": " bytes (",
    "assets_image_optimizer.message.reduction": " reduction)",
    "assets_image_optimizer.message.optimize_all_images_i": "\n        Optimize all images in a directory.\n        ",
    "assets_image_optimizer.message._1": "**/*",
    "assets_image_optimizer.message.images_in": " images in ",
    "assets_image_optimizer.message.generate_responsive_i": "\n        Generate responsive image variants for different screen sizes.\n        ",
    "assets_image_optimizer.message.generate_comprehensiv": "\n        Generate comprehensive image metadata.\n        ",
    "assets_image_optimizer.message.generate_html_picture": "\n        Generate HTML picture element with responsive sources.\n        ",
    "assets_image_optimizer.message.picture": "<picture>\n",
    "assets_image_optimizer.message.source_srcset": "  <source srcset=\"",
    "assets_image_optimizer.message.type_image": "\" type=\"image/",
    "assets_image_optimizer.message._2": "\">\n",
    "assets_image_optimizer.message.source_srcset_1": "  <source srcset=\"",
    "assets_image_optimizer.message.type_image_webp": "\" type=\"image/webp\">\n",
    "assets_image_optimizer.message.loading_lazy": "loading=\"lazy\"",
    "assets_image_optimizer.message.class": "class=\"",
    "assets_image_optimizer.message.img_src": "  <img src=\"",
    "assets_image_optimizer.message.alt": "\" alt=\"",
    "assets_image_optimizer.message.picture_1": "</picture>",
    "assets_image_optimizer.message.get_comprehensive_opt": "\n        Get comprehensive optimization statistics.\n        ",
    "assets_image_optimizer.message.initialize_image_processing_li": "Initialize image processing libraries",
    "assets_image_optimizer.message.heif_support_not_available": "HEIF support not available",
    "assets_image_optimizer.message.avif_support_not_available": "AVIF support not available",
    "assets_image_optimizer.message.apply_various_image_optimizati": "Apply various image optimizations",
    "assets_image_optimizer.message.generate_responsive_image_vari": "Generate responsive image variants",
    "assets_image_optimizer.message.generate_output_filename_with": "Generate output filename with optimization indicators",
    "assets_image_optimizer.message.auto_orient_image_based_on_exi": "Auto-orient image based on EXIF data",
    "assets_image_optimizer.message.resize_image_maintaining_aspec": "Resize image maintaining aspect ratio",
    "assets_image_optimizer.message.apply_aggressive_optimizations": "Apply aggressive optimizations that may reduce quality",
    "assets_image_optimizer.message.analyze_dominant_colors_in_ima": "Analyze dominant colors in image",
    "assets_image_optimizer.message.02x": "02x",
    "assets_image_optimizer.message.02x_1": "02x",
    "assets_image_optimizer.message.02x_2": "02x",
    "assets_image_optimizer.message.generate_optimization_recommen": "Generate optimization recommendations for image",
    "assets_image_optimizer.message.consider_reducing_image_dimens": "Consider reducing image dimensions for web use",
    "assets_image_optimizer.message.consider_converting_to_jpeg_fo": "Consider converting to JPEG for better compression",
    "assets_image_optimizer.message.consider_converting_to_webp_fo": "Consider converting to WebP for better compression",
    "assets_image_optimizer.message.image_has_few_colors_conside": "Image has few colors - consider PNG or reduce quality",
    "assets_image_optimizer.message.calculate_average_compression": "Calculate average compression ratio",
    "assets_image_optimizer.message.calculate_total_cache_size_in": "Calculate total cache size in bytes",
    "i18n_locale_manager.message.get_babel_locale_object_for_a": "Get Babel locale object for a language.",
    "i18n_locale_manager.message.en_us": "en_US",
    "i18n_locale_manager.message.en_us_1": "en_US",
    "i18n_locale_manager.message.parse_localized_number_string": "Parse localized number string.",
    "i18n_locale_manager.message.parse_localized_decimal_string": "Parse localized decimal string.",
    "i18n_locale_manager.message.percentsign": "percentSign",
    "i18n_locale_manager.message.plussign": "plusSign",
    "i18n_locale_manager.message.minussign": "minusSign",
    "i18n_locale_manager.message.0": "#,##0.##",
    "i18n_locale_manager.message.0_1": "#,##0.##",
    "i18n_locale_manager.message.mi": " mi",
    "i18n_locale_manager.message.0_2": "#,##0",
    "i18n_locale_manager.message.ft": " ft",
    "i18n_locale_manager.message.0_3": "#,##0.##",
    "i18n_locale_manager.message.km": " km",
    "i18n_locale_manager.message.0_4": "#,##0",
    "i18n_config.message.i18n_configuration_language_a": "\ni18n Configuration\nLanguage and localization settings\n",
    "i18n_config.message.configuration_for_a_single_lan": "Configuration for a single language.",
    "i18n_config.message.i18n": "i18n",
    "i18n_config.message.en_us": "en-US",
    "i18n_config.message.n_1": "n == 1",
    "i18n_config.message.es_es": "es-ES",
    "i18n_config.message.n_1_1": "n == 1",
    "i18n_config.message.fr_fr": "fr-FR",
    "i18n_config.message.n_0_or_n_1": "n == 0 or n == 1",
    "i18n_config.message.tr_tr": "tr-TR",
    "i18n_config.message.n_1_2": "n == 1",
    "i18n_config.message.": "العربية",
    "i18n_config.message.ar_sa": "ar-SA",
    "i18n_config.message.n_0": "n == 0",
    "i18n_config.message.n_1_3": "n == 1",
    "i18n_config.message.n_2": "n == 2",
    "i18n_config.message.n_100_3_and_n_100_10": "n % 100 >= 3 and n % 100 <= 10",
    "i18n_config.message.n_100_11": "n % 100 >= 11",
    "i18n_config.message._1": "עברית",
    "i18n_config.message.he_il": "he-IL",
    "i18n_config.message.n_1_4": "n == 1",
    "i18n_config.message.n_2_1": "n == 2",
    "i18n_config.message.n_10_and_n_10_0": "n > 10 and n % 10 == 0",
    "i18n_config.message.de_de": "de-DE",
    "i18n_config.message.n_1_5": "n == 1",
    "i18n_config.message.ru_ru": "ru-RU",
    "i18n_config.message.n_10_1_and_n_100_11": "n % 10 == 1 and n % 100 != 11",
    "i18n_config.message.n_10_2_and_n_10_4_an": "n % 10 >= 2 and n % 10 <= 4 and (n % 100 < 10 or n % 100 >= 20)",
    "i18n_config.message.n_10_0_or_n_10_5_an": "n % 10 == 0 or (n % 10 >= 5 and n % 10 <= 9) or (n % 100 >= 11 and n % 100 <= 14)",
    "i18n_config.message.zh_cn": "zh-CN",
    "i18n_config.message._2": "日本語",
    "i18n_config.message.ja_jp": "ja-JP",
    "i18n_config.message.missing": "[MISSING]",
    "i18n_config.message.d_m_y": "%d/%m/%Y",
    "i18n_config.message.d_b_y": "%d %b %Y",
    "i18n_config.message.d_b_y_1": "%d %B %Y",
    "i18n_config.message.a_d_b_y": "%A, %d %B %Y",
    "i18n_config.message.h_m": "%H:%M",
    "i18n_config.message.h_m_s": "%H:%M:%S",
    "i18n_config.message.h_m_s_z": "%H:%M:%S %Z",
    "i18n_config.message.h_m_s_z_1": "%H:%M:%S %z",
    "i18n_config.message.d_m_y_h_m": "%d/%m/%Y %H:%M",
    "i18n_config.message.d_b_y_h_m": "%d %b %Y %H:%M",
    "i18n_config.message.d_b_y_h_m_s": "%d %B %Y %H:%M:%S",
    "i18n_config.message.a_d_b_y_h_m_s_z": "%A, %d %B %Y %H:%M:%S %z",
    "i18n_config.message.a_za_z0_9": "^[a-zA-Z0-9_.]+$",
    "i18n_config.message.get_configuration_for_a_specif": "Get configuration for a specific language.",
    "i18n_config.message.get_list_of_supported_language": "Get list of supported language codes.",
    "i18n_config.message.check_if_a_language_is_rtl": "Check if a language is RTL.",
    "i18n_config.message.get_default_language_configura": "Get default language configuration.",
    "i18n_content_manager.message.content_translation_manager_h": "\nContent Translation Manager\nHandles dynamic content translation for database entities\n",
    "i18n_content_manager.message.manager_for_content_translatio": "Manager for content translations stored in database.",
    "i18n_content_manager.message.initialize_content_translation": "Initialize content translation manager.",
    "i18n_content_manager.message.content": ":content",
    "i18n_content_manager.message.get_translated_content_for_an": "Get translated content for an entity field.",
    "i18n_content_manager.message.get_all_translations_for_an_en": "Get all translations for an entity.",
    "i18n_content_manager.message.save_multiple_translations_in": "Save multiple translations in batch.",
    "i18n_content_manager.message.get_translation_coverage_stati": "Get translation coverage statistics for an entity.",
    "i18n_content_manager.message.generate_cache_key_for_a_trans": "Generate cache key for a translation.",
    "i18n_content_manager.message.clear_cache_for_translations": "Clear cache for translations.",
    "i18n___init__.message.internationalization_i18n_m": "\nInternationalization (i18n) Module\nComprehensive language support for the BDC server\n",
    "i18n___init__.message.get_translator_for_a_specific": "Get translator for a specific language.",
    "i18n___init__.message.translate_a_key_to_the_specifi": "Translate a key to the specified language.",
    "i18n___init__.message.get_list_of_available_language": "Get list of available languages.",
    "i18n_language_detector.message.detects_user_s_preferred_langu": "Detects user's preferred language.",
    "i18n_language_detector.message.parse_accept_language": "\n        Parse Accept-Language header value.\n        \n        Args:\n            accept_language: Accept-Language header value\n            \n        Returns:\n            List of (language, quality) tuples sorted by quality\n        ",
    "i18n_language_detector.message.q_s_s_d_d": "q\\s*=\\s*(\\d*\\.?\\d+)",
    "i18n_language_detector.message.u0600_u06ff": "[\\u0600-\\u06FF]",
    "i18n_language_detector.message.u0590_u05ff": "[\\u0590-\\u05FF]",
    "i18n_language_detector.message.u4e00_u9fff": "[\\u4E00-\\u9FFF]",
    "i18n_language_detector.message.u3040_u309f_u30a0_u30ff": "[\\u3040-\\u309F\\u30A0-\\u30FF]",
    "i18n_language_detector.message.u0400_u04ff": "[\\u0400-\\u04FF]",
    "i18n_language_detector.message.": "[ğĞıİöÖşŞüÜçÇ]",
    "i18n_language_detector.message._1": "[äÄöÖüÜßẞ]",
    "i18n_language_detector.message._2": "[àâæçéèêëîïôùûüÿœ]",
    "i18n_language_detector.message._3": "[áéíóúüñ¿¡]",
    "i18n_language_detector.message.get_list_of_languages_accepted": "Get list of languages accepted by the browser.",
    "i18n_rtl_support.message.rtl_support_provides_right_to": "\nRTL Support\nProvides Right-to-Left language support utilities\n",
    "i18n_rtl_support.message.support_for_right_to_left_lang": "Support for Right-to-Left languages.",
    "i18n_rtl_support.message.check_if_a_language_is_rtl": "Check if a language is RTL.",
    "i18n_rtl_support.message.margin_right": "margin-right",
    "i18n_rtl_support.message.margin_left": "margin-left",
    "i18n_rtl_support.message.margin_left_1": "margin-left",
    "i18n_rtl_support.message.margin_right_1": "margin-right",
    "i18n_rtl_support.message.padding_right": "padding-right",
    "i18n_rtl_support.message.padding_left": "padding-left",
    "i18n_rtl_support.message.padding_left_1": "padding-left",
    "i18n_rtl_support.message.padding_right_1": "padding-right",
    "i18n_rtl_support.message.border_right": "border-right",
    "i18n_rtl_support.message.border_left": "border-left",
    "i18n_rtl_support.message.border_left_1": "border-left",
    "i18n_rtl_support.message.border_right_1": "border-right",
    "i18n_rtl_support.message.detect_the_primary_di": "\n        Detect the primary direction of a text string.\n        \n        Args:\n            text: Text to analyze\n            \n        Returns:\n            'rtl', 'ltr', or 'neutral'\n        ",
    "i18n_rtl_support.message.add_directional_marks": "\n        Add directional marks to text for proper display.\n        \n        Args:\n            text: Text to process\n            direction: 'ltr', 'rtl', or 'auto'\n            \n        Returns:\n            Text with directional marks\n        ",
    "i18n_rtl_support.message.u0590_u08ff_ufb1d_ufeff": "[\\u0590-\\u08FF\\uFB1D-\\uFEFF]+",
    "i18n_rtl_support.message.a_za_z0_9": "[A-Za-z0-9]+",
    "i18n_rtl_support.message.mirror_punctuation_ma": "\n        Mirror punctuation marks for RTL languages.\n        \n        Args:\n            text: Text containing punctuation\n            is_rtl: Whether to mirror for RTL\n            \n        Returns:\n            Text with mirrored punctuation\n        ",
    "i18n_rtl_support.message.convert_css_rules_for": "\n        Convert CSS rules for RTL layout.\n        \n        Args:\n            css_rules: Dictionary of CSS property-value pairs\n            \n        Returns:\n            Converted CSS rules\n        ",
    "i18n_rtl_support.message.margin_left_2": "margin-left",
    "i18n_rtl_support.message.margin_right_2": "margin-right",
    "i18n_rtl_support.message.padding_left_2": "padding-left",
    "i18n_rtl_support.message.padding_right_2": "padding-right",
    "i18n_rtl_support.message.border_left_2": "border-left",
    "i18n_rtl_support.message.border_right_2": "border-right",
    "i18n_rtl_support.message.border_left_width": "border-left-width",
    "i18n_rtl_support.message.border_right_width": "border-right-width",
    "i18n_rtl_support.message.border_left_color": "border-left-color",
    "i18n_rtl_support.message.border_right_color": "border-right-color",
    "i18n_rtl_support.message.border_left_style": "border-left-style",
    "i18n_rtl_support.message.border_right_style": "border-right-style",
    "i18n_rtl_support.message.border_top_left_radius": "border-top-left-radius",
    "i18n_rtl_support.message.border_top_right_radius": "border-top-right-radius",
    "i18n_rtl_support.message.border_bottom_left_radius": "border-bottom-left-radius",
    "i18n_rtl_support.message.border_bottom_right_radius": "border-bottom-right-radius",
    "i18n_rtl_support.message.margin_right_3": "margin-right",
    "i18n_rtl_support.message.margin_left_3": "margin-left",
    "i18n_rtl_support.message.padding_right_3": "padding-right",
    "i18n_rtl_support.message.padding_left_3": "padding-left",
    "i18n_rtl_support.message.border_right_3": "border-right",
    "i18n_rtl_support.message.border_left_3": "border-left",
    "i18n_rtl_support.message.border_right_width_1": "border-right-width",
    "i18n_rtl_support.message.border_left_width_1": "border-left-width",
    "i18n_rtl_support.message.border_right_color_1": "border-right-color",
    "i18n_rtl_support.message.border_left_color_1": "border-left-color",
    "i18n_rtl_support.message.border_right_style_1": "border-right-style",
    "i18n_rtl_support.message.border_left_style_1": "border-left-style",
    "i18n_rtl_support.message.border_top_right_radius_1": "border-top-right-radius",
    "i18n_rtl_support.message.border_top_left_radius_1": "border-top-left-radius",
    "i18n_rtl_support.message.border_bottom_right_radius_1": "border-bottom-right-radius",
    "i18n_rtl_support.message.border_bottom_left_radius_1": "border-bottom-left-radius",
    "i18n_rtl_support.message.text_align": "text-align",
    "i18n_rtl_support.message.background_position": "background-position",
    "i18n_rtl_support.message.translatex": "translateX",
    "i18n_rtl_support.message.translatex_d_a_z": "translateX\\(([-\\d.]+)([a-z%]*)\\)",
    "i18n_rtl_support.message.translatex_1": "translateX(",
    "i18n_rtl_support.message.get_bidirectional_cla": "\n        Get bidirectional class names for CSS.\n        \n        Args:\n            base_class: Base CSS class name\n            is_rtl: Whether RTL is active\n            \n        Returns:\n            List of class names to apply\n        ",
    "i18n_rtl_support.message.rtl": "-rtl",
    "i18n_rtl_support.message.ltr": "-ltr",
    "i18n_translator.message.translator_handles_translatio": "\nTranslator\nHandles translation of keys and text\n",
    "i18n_translator.message.translator_for_a_specific_lang": "Translator for a specific language.",
    "i18n_translator.message.initialize_translator_with_lan": "Initialize translator with language and translations.",
    "i18n_translator.message.translate_a_key_with": "\n        Translate a key with optional interpolation.\n        \n        Args:\n            key: Translation key (e.g., 'common.welcome')\n            **kwargs: Values for interpolation\n            \n        Returns:\n            Translated string\n        ",
    "i18n_translator.message.get_translation_value_for_a_ke": "Get translation value for a key.",
    "i18n_translator.message.interpolate_values_into_transl": "Interpolate values into translation template.",
    "i18n_translator.message.": "\\{\\{([^}]+)\\}\\}",
    "i18n_translator.message._1": "\\{([^}]+)\\}",
    "i18n_translator.message.handle_pluralization_based_on": "Handle pluralization based on count.",
    "i18n_translator.message.get_plural_form_based_on_langu": "Get plural form based on language rules.",
    "i18n_translator.message.safely_evaluate_a_plural_rule": "Safely evaluate a plural rule.",
    "i18n_translator.message.translate_and_join_a_list_of_i": "Translate and join a list of items.",
    "i18n_translator.message.common": "common.",
    "i18n_translator.message.check_if_a_translation_exists": "Check if a translation exists for a key.",
    "i18n_translator.message.get_all_translations_for_a_nam": "Get all translations for a namespace.",
    "i18n_translator.message.get_list_of_missing_translatio": "Get list of missing translation keys.",
    "i18n_translator.message.clear_the_missing_keys_set": "Clear the missing keys set.",
    "i18n_translator.message.add_thousand_separators_to_a_n": "Add thousand separators to a number string.",
    "i18n_manager.message.i18n_manager_central_manager": "\ni18n Manager\nCentral manager for internationalization functionality\n",
    "i18n_manager.message.central_manager_for_i18n_funct": "Central manager for i18n functionality.",
    "i18n_manager.message.load_translations_for_all_supp": "Load translations for all supported languages.",
    "i18n_manager.message.load_translations_for_a_specif": "Load translations for a specific language.",
    "i18n_manager.message.translations": ":translations:",
    "i18n_manager.message.get_or_create_translator_for_a": "Get or create translator for a language.",
    "i18n_manager.message.translate_a_key_to_the_specifi": "Translate a key to the specified language.",
    "i18n_manager.message.set_current_language_in_sessio": "Set current language in session and cookie.",
    "i18n_manager.message.get_list_of_available_language": "Get list of available languages with metadata.",
    "i18n_manager.message.get_translated_content_for_an": "Get translated content for an entity field.",
    "i18n_manager.message.save_translated_content_for_an": "Save translated content for an entity field.",
    "i18n_manager.message.get_list_of_missing_translatio": "Get list of missing translation keys for a language.",
    "i18n_manager.message.translations_1": ":translations:*",
    "i18n_manager.message.export_translations_for_a_lang": "Export translations for a language.",
    "i18n_manager.message.import_translations_for_a_lang": "Import translations for a language.",
    "i18n_manager.message.count_translation_keys_in_nest": "Count translation keys in nested dictionary.",
    "infrastructure_query_optimizer.message.database_query_optimization_i": "\nDatabase Query Optimization\nImplements query optimization strategies and monitoring\n",
    "infrastructure_query_optimizer.message.database_query_optimization_ut": "Database query optimization utilities",
    "infrastructure_query_optimizer.message.initialize_query_optimizer_wit": "Initialize query optimizer with Flask app",
    "infrastructure_query_optimizer.message.log_all_sql_queries_in_debug_m": "Log all SQL queries in debug mode",
    "infrastructure_query_optimizer.message.detect_and_log_slow_queries": "Detect and log slow queries",
    "infrastructure_query_optimizer.message.slow_query_detected": "Slow query detected (",
    "infrastructure_query_optimizer.message.s": "s): ",
    "infrastructure_query_optimizer.message.strategies_for_eager_loading_r": "Strategies for eager loading related data",
    "infrastructure_query_optimizer.message.optimize_beneficiary_queries_w": "Optimize beneficiary queries with eager loading",
    "infrastructure_query_optimizer.message.optimize_program_queries_with": "Optimize program queries with eager loading",
    "infrastructure_query_optimizer.message.optimize_appointment_queries_w": "Optimize appointment queries with eager loading",
    "infrastructure_query_optimizer.message.optimize_evaluation_queries_wi": "Optimize evaluation queries with eager loading",
    "infrastructure_query_optimizer.message.optimize_user_queries_with_eag": "Optimize user queries with eager loading",
    "infrastructure_query_optimizer.message.batch_multiple_queries_for_eff": "Batch multiple queries for efficiency",
    "infrastructure_query_optimizer.message.add_a_query_to_the_batch": "Add a query to the batch",
    "infrastructure_query_optimizer.message.execute_all_batched_queries": "Execute all batched queries",
    "infrastructure_query_optimizer.message.optimize_pagination_with_count": "Optimize pagination with count caching",
    "infrastructure_query_optimizer.message.query_count": "query_count:",
    "infrastructure_query_optimizer.message.profile_database_queries_for_o": "Profile database queries for optimization",
    "infrastructure_query_optimizer.message.decorator_to_profile_query_exe": "Decorator to profile query execution",
    "infrastructure_query_optimizer.message.took": "' took ",
    "infrastructure_query_optimizer.message.get_summary_of_query_profiles": "Get summary of query profiles",
    "infrastructure_query_optimizer.message.optimize_database_connection_p": "Optimize database connection pool settings",
    "infrastructure_query_optimizer.message.c_statement_timeout_30000": "-c statement_timeout=30000",
    "infrastructure_cache_config.message.cache_configuration_and_strat": "\nCache Configuration and Strategy\nImplements multi-level caching for optimal performance\n",
    "infrastructure_cache_config.message.user": "user:",
    "infrastructure_cache_config.message.beneficiary": "beneficiary:",
    "infrastructure_cache_config.message.program": "program:",
    "infrastructure_cache_config.message.appointment": "appointment:",
    "infrastructure_cache_config.message.document": "document:",
    "infrastructure_cache_config.message.evaluation": "evaluation:",
    "infrastructure_cache_config.message.analytics": "analytics:",
    "infrastructure_cache_config.message.list": "list:",
    "infrastructure_cache_config.message.count": "count:",
    "infrastructure_cache_config.message.bdc": "bdc:",
    "infrastructure_cache_config.message.get_simple_cache_configuration": "Get simple cache configuration for development",
    "infrastructure_cache_config.message.advanced_cache_management_with": "Advanced cache management with multiple strategies",
    "infrastructure_cache_config.message.initialize_cache_with_flask_ap": "Initialize cache with Flask app",
    "infrastructure_cache_config.message.generate_a_consistent_cache_ke": "Generate a consistent cache key",
    "infrastructure_cache_config.message.set_value_in_cache_with_ttl": "Set value in cache with TTL",
    "infrastructure_cache_config.message.increment_a_counter_in_cache": "Increment a counter in cache",
    "infrastructure_cache_config.message.set_multiple_values_in_cache": "Set multiple values in cache",
    "infrastructure_cache_config.message.decorator_for_caching_function": "Decorator for caching function results with custom key generation",
    "infrastructure_cache_config.message.warm_cache_with_frequently_acc": "Warm cache with frequently accessed data",
    "infrastructure_cache_config.message.pre_load_user_data_into_cache": "Pre-load user data into cache",
    "infrastructure_cache_config.message.pre_load_beneficiary_data_into": "Pre-load beneficiary data into cache",
    "infrastructure_cache_config.message.pre_load_active_programs_into": "Pre-load active programs into cache",
    "services_appointment_service.message.appointment_service_implementa": "Appointment service implementation module.",
    "services_appointment_service.message.initialize_the_appoin": "\n        Initialize the appointment service.\n        \n        Args:\n            appointment_repository: Instance of IAppointmentRepository\n            user_repository: Instance of IUserRepository\n            beneficiary_repository: Instance of IBeneficiaryRepository\n        ",
    "services_appointment_service.message.not_found": " not found",
    "services_appointment_service.message.y_m_d": "%Y-%m-%d",
    "services_appointment_service.message.y_m_d_1": "%Y-%m-%d",
    "services_appointment_service.message.not_found_1": " not found",
    "services_appointment_service.message.only_trainers_and_admins_can_c": "Only trainers and admins can create appointments",
    "services_appointment_service.message.00_00": "+00:00",
    "services_appointment_service.message.00_00_1": "+00:00",
    "services_appointment_service.message.you_do_not_have_access_to_this": "You do not have access to this beneficiary",
    "services_appointment_service.message.not_found_2": " not found",
    "services_appointment_service.message.not_found_3": " not found",
    "services_appointment_service.message.00_00_2": "+00:00",
    "services_appointment_service.message.00_00_3": "+00:00",
    "services_appointment_service.message.not_found_4": " not found",
    "services_appointment_service.message.not_found_5": " not found",
    "services_appointment_service.message.sync_appointment_to_g": "\n        Sync appointment to Google Calendar.\n        \n        Args:\n            appointment_id: The appointment ID\n            user_id: The requesting user's ID\n            \n        Returns:\n            Dict containing sync status and event ID\n        ",
    "services_appointment_service.message.not_found_6": " not found",
    "services_appointment_service.message.google_calendar_not_connected": "Google Calendar not connected",
    "services_appointment_service.message.not_found_7": " not found",
    "services_appointment_service.message.not_authorized_to_sync_this_ap": "Not authorized to sync this appointment",
    "services_appointment_service.message.you_have_a_scheduled_appointme": "You have a scheduled appointment with ",
    "services_appointment_service.message.on": " on ",
    "services_appointment_service.message.y_m_d_at_h_m": "%Y-%m-%d at %H:%M",
    "services_appointment_service.message.not_found_8": " not found",
    "services_appointment_service.message.not_found_9": " not found",
    "services_appointment_service.message.not_authorized_to_unsync_this": "Not authorized to unsync this appointment",
    "services_appointment_service.message.appointment_is_not_synced_to_g": "Appointment is not synced to Google Calendar",
    "services_auth_service.message.authentication_service_impleme": "Authentication service implementation with dependency injection.",
    "services_auth_service.message.authentication_service_with_de": "Authentication service with dependency injection.",
    "services_auth_service.message.initialize_auth_service_with_d": "Initialize auth service with dependencies.",
    "services_auth_service.message.get_user_repository_instance": "Get user repository instance.",
    "services_auth_service.message.authenticate_user_with_email_a": "Authenticate user with email and password.",
    "services_auth_service.message.register_a_new_user": "Register a new user.",
    "services_auth_service.message.refresh_access_token_using_ref": "Refresh access token using refresh token.",
    "services_auth_service.message.generate_password_reset_token": "Generate password reset token.",
    "services_auth_service.message.confirm_password_reset_with_to": "Confirm password reset with token.",
    "services_auth_service.message.verify_access_token_and_return": "Verify access token and return user.",
    "services_auth_service.message.unlock_a_locked_user_account": "Unlock a locked user account.",
    "services_ai_verification.message.service_for_managing_human_ver": "Service for managing human verification of AI-generated content",
    "services_ai_verification.message.create_a_human_verification_re": "Create a human verification request for AI-generated content",
    "services_ai_verification.message.process_human_verification_dec": "Process human verification decision",
    "services_ai_verification.message.verification_request_not_found": "Verification request not found",
    "services_ai_verification.message.get_pending_verification_reque": "Get pending verification requests",
    "services_ai_verification.message.determine_verification_level_b": "Determine verification level based on confidence score",
    "services_ai_verification.message.auto_approve_high_confidence_a": "Auto-approve high-confidence AI output",
    "services_ai_verification.message.notify_qualified_reviewers_abo": "Notify qualified reviewers about pending verification",
    "services_ai_verification.message.ai_erik_do_rulama_talebi": "AI İçerik Doğrulama Talebi",
    "services_ai_verification.message.i_in_do_rulama_bekliyor": " için doğrulama bekliyor",
    "services_ai_verification.message.notify_content_owner_about_ver": "Notify content owner about verification result",
    "services_ai_verification.message.ai_i_eri_iniz_d_zenlenerek_ona": "AI içeriğiniz düzenlenerek onaylandı",
    "services_ai_verification.message.calculate_average_review_time": "Calculate average review time for verified content",
    "services_ai_verification.message.service_for_moderating_ai_gene": "Service for moderating AI-generated content",
    "services_ai_verification.message.moderate_ai_generated_content": "Moderate AI-generated content for policy violations",
    "services_ai_verification.message.check_for_profanity_in_content": "Check for profanity in content",
    "services_ai_verification.message.b_d_3_d_2_d_4_b": "\\b\\d{3}-\\d{2}-\\d{4}\\b",
    "services_ai_verification.message.b_d_16_b": "\\b\\d{16}\\b",
    "services_ai_verification.message.b_a_za_z0_9_a_za_z0_9": "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b",
    "services_ai_verification.message.b_d_3_d_3_d_4_b": "\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b",
    "services_ai_verification.message.check_for_medical_or_legal_adv": "Check for medical or legal advice",
    "services_ai_verification.message.medical_advice": "medical advice",
    "services_ai_verification.message.consult_doctor": "consult doctor",
    "services_ai_verification.message.legal_advice": "legal advice",
    "services_evaluation_service_factory.message.factory_for_creating_evaluatio": "Factory for creating evaluation service instances.",
    "services_evaluation_service_factory.message.factory_for_creating_evaluatio_1": "Factory for creating evaluation service instances.",
    "services_evaluation_service_factory.message.create_an_evaluation_service_i": "Create an evaluation service instance with all dependencies.",
    "services_notification_service_wrapper.message.wrapper_for_notificationservic": "Wrapper for NotificationService to provide static method compatibility.",
    "services_notification_service_wrapper.message.static_wrapper_for_notificatio": "Static wrapper for notification service to maintain backward compatibility.",
    "services_notification_service_wrapper.message.create_a_new_notification": "Create a new notification.",
    "services_notification_service_wrapper.message.create_notifications_for_multi": "Create notifications for multiple users.",
    "services_notification_service_wrapper.message.create_notification_for_users": "Create notification for users with a specific role.",
    "services_notification_service_wrapper.message.mark_a_notification_as_read": "Mark a notification as read.",
    "services_notification_service_wrapper.message.mark_all_notifications_as_read": "Mark all notifications as read for a user.",
    "services_notification_service_wrapper.message.get_notifications_for_a_user": "Get notifications for a user.",
    "services_notification_service_wrapper.message.get_count_of_unread_notificati": "Get count of unread notifications for a user.",
    "services_sms_service.message.sms_service_implementation_wit": "SMS service implementation with multiple provider support.",
    "services_sms_service.message.sms_service_implementation_wit_1": "SMS service implementation with Twilio as primary provider.",
    "services_sms_service.message.initialize_sms_service_with_pr": "Initialize SMS service with provider clients.",
    "services_sms_service.message.initialize_sms_provider_client": "Initialize SMS provider clients.",
    "services_sms_service.message.us_east_1": "us-east-1",
    "services_sms_service.message.initialize_default_sms_templat": "Initialize default SMS templates if they don't exist.",
    "services_sms_service.message.reminder_you_have_an_appointm": "Reminder: You have an appointment on {{date}} at {{time}} with {{trainer_name}}. Location: {{location}}",
    "services_sms_service.message.hat_rlatma_date_tarihinde": "Hatırlatma: {{date}} tarihinde saat {{time}} de {{trainer_name}} ile randevunuz var. Yer: {{location}}",
    "services_sms_service.message.tamamlaman_z_gereken_yeni_bir": "Tamamlamanız gereken yeni bir değerlendirme var: {{assessment_name}}. Lütfen {{due_date}} tarihine kadar tamamlayın.",
    "services_sms_service.message.your_password_reset_code_is": "Your password reset code is: {{code}}. This code will expire in 15 minutes.",
    "services_sms_service.message.ifre_s_f_rlama_kodunuz_cod": "Şifre sıfırlama kodunuz: {{code}}. Bu kod 15 dakika içinde geçerliliğini yitirecek.",
    "services_sms_service.message.2fa_code": "2fa_code",
    "services_sms_service.message.2fa_verification_code": "2FA Verification Code",
    "services_sms_service.message.your_verification_code_is_c": "Your verification code is: {{code}}. Do not share this code with anyone.",
    "services_sms_service.message.do_rulama_kodunuz_code_b": "Doğrulama kodunuz: {{code}}. Bu kodu kimseyle paylaşmayın.",
    "services_sms_service.message.send_an_sms_message": "Send an SMS message.",
    "services_sms_service.message.send_sms_with_specific_provide": "Send SMS with specific provider.",
    "services_sms_service.message.send_an_sms_using_a_template": "Send an SMS using a template.",
    "services_sms_service.message.send_sms_to_multiple_recipient": "Send SMS to multiple recipients.",
    "services_sms_service.message.schedule_an_sms_for_future_del": "Schedule an SMS for future delivery.",
    "services_sms_service.message.cancel_a_scheduled_sms": "Cancel a scheduled SMS.",
    "services_sms_service.message.get_the_status_of_an_sms_messa": "Get the status of an SMS message.",
    "services_sms_service.message.get_sms_history_with_filters": "Get SMS history with filters.",
    "services_sms_service.message.s": "[\\s\\-\\(\\)]",
    "services_sms_service.message.send_appointment_reminder_sms": "Send appointment reminder SMS.",
    "services_sms_service.message.b_d_y": "%B %d, %Y",
    "services_sms_service.message.i_m_p": "%I:%M %p",
    "services_sms_service.message.your_trainer": "your trainer",
    "services_sms_service.message.send_assessment_notification_s": "Send assessment notification SMS.",
    "services_sms_service.message.b_d_y_1": "%B %d, %Y",
    "services_sms_service.message.send_password_reset_code_via_s": "Send password reset code via SMS.",
    "services_sms_service.message.password_reset": "password_reset:",
    "services_sms_service.message.send_2fa_verification_code_via": "Send 2FA verification code via SMS.",
    "services_sms_service.message.2fa_code_1": "2fa_code:",
    "services_sms_service.message.2fa_code_2": "2fa_code",
    "services_sms_service.message.create_an_sms_campaign": "Create an SMS campaign.",
    "services_sms_service.message.execute_an_sms_campaign": "Execute an SMS campaign.",
    "services_sms_service.message.get_campaign_status_and_statis": "Get campaign status and statistics.",
    "services_document_service.message.document_service_for_document": "Document service for document operations.",
    "services_document_service.message.check_if_a_user_can_access_vi": "Check if a user can access (view) a document.",
    "services_document_service.message.check_if_a_user_can_share_a_do": "Check if a user can share a document.",
    "services_document_service.message.not_found": " not found",
    "services_document_service.message.document_shared_with_you": "Document Shared With You",
    "services_document_service.message.you_have_been_granted_access_t": "You have been granted access to \"",
    "services_document_service.message.get_all_permissions_f": "\n        Get all permissions for a document.\n        \n        Args:\n            document_id (int): Document ID\n            \n        Returns:\n            list: List of permissions\n        ",
    "services_document_service.message.get_all_documents_a_u": "\n        Get all documents a user has access to.\n        \n        Args:\n            user_id (int): User ID\n            \n        Returns:\n            list: List of documents with permissions\n        ",
    "services_ai_chat_service.message.ai_chat_service_for_intelligen": "AI Chat Service for intelligent conversational assistance.",
    "services_ai_chat_service.message.service_for_managing_ai_powere": "Service for managing AI-powered chat conversations.",
    "services_ai_chat_service.message.gpt_4": "gpt-4",
    "services_ai_chat_service.message.gpt_4_turbo": "gpt-4-turbo",
    "services_ai_chat_service.message.gpt_3_5_turbo": "gpt-3.5-turbo",
    "services_ai_chat_service.message.you_are_an_educational_support": "You are an educational support assistant helping beneficiaries with their learning journey. \n                       Provide clear, encouraging, and helpful responses about educational topics, study strategies, \n                       and program-related questions.",
    "services_ai_chat_service.message.you_are_a_progress_tracking_as": "You are a progress tracking assistant. Help beneficiaries understand their progress, \n                      achievements, and areas for improvement. Be encouraging and constructive in your feedback.",
    "services_ai_chat_service.message.you_are_an_assessment_support": "You are an assessment support assistant. Help users understand assessment requirements, \n                        preparation strategies, and provide guidance on improving their performance.",
    "services_ai_chat_service.message.you_are_a_helpful_assistant_fo": "You are a helpful assistant for the Beneficiary Development Center. Provide accurate, \n                     friendly, and supportive responses to help beneficiaries with their queries.",
    "services_ai_chat_service.message.initialize_the_ai_chat_service": "Initialize the AI Chat Service.",
    "services_ai_chat_service.message.you_have_exceeded_your_chat_li": "You have exceeded your chat limits. Please try again later.",
    "services_ai_chat_service.message.gpt_4_1": "gpt-4",
    "services_ai_chat_service.message.conversation": " Conversation",
    "services_ai_chat_service.message.send_a_message_in_an": "\n        Send a message in an existing conversation.\n        \n        Args:\n            conversation_id: ID of the conversation\n            user_id: ID of the user sending the message\n            message: Message content\n            \n        Returns:\n            Dictionary with assistant response\n        ",
    "services_ai_chat_service.message.conversation_is_not_active": "Conversation is not active",
    "services_ai_chat_service.message.you_have_exceeded_your_chat_li_1": "You have exceeded your chat limits. Please try again later.",
    "services_ai_chat_service.message.generate_ai_response_for_user": "Generate AI response for user message.",
    "services_ai_chat_service.message.gpt_4_2": "gpt-4",
    "services_ai_chat_service.message.build_context_for_the_conversa": "Build context for the conversation.",
    "services_ai_chat_service.message.important_respond_in_turkis": "\n\nIMPORTANT: Respond in Turkish language.",
    "services_ai_chat_service.message.context": "\n\nContext: ",
    "services_ai_chat_service.message.beneficiary_info": "\n\nBeneficiary Info: ",
    "services_ai_chat_service.message.enhance_user_message_with_addi": "Enhance user message with additional context.",
    "services_ai_chat_service.message.current_time": "\n\n[Current time: ",
    "services_ai_chat_service.message.progress_context": "\n\n[Progress Context: ",
    "services_ai_chat_service.message.get_available_functions_based": "Get available functions based on context type.",
    "services_ai_chat_service.message.check_available_appointment_sl": "Check available appointment slots",
    "services_ai_chat_service.message.date_to_check_yyyy_mm_dd": "Date to check (YYYY-MM-DD)",
    "services_ai_chat_service.message.get_beneficiary_s_progress_rep": "Get beneficiary's progress report",
    "services_ai_chat_service.message.period_week_month_all": "Period (week, month, all)",
    "services_ai_chat_service.message.check_if_user_has_exceeded_rat": "Check if user has exceeded rate limits.",
    "services_ai_chat_service.message.get_conversation_history_for_a": "Get conversation history for a user.",
    "services_ai_chat_service.message.flag_a_conversation_for_modera": "Flag a conversation for moderation.",
    "services_ai_chat_service.message.your_conversation_has_been_fla": "Your conversation has been flagged for review: ",
    "services_ai_chat_service.message.get_conversation_template_base": "Get conversation template based on context and language.",
    "services_ai_chat_service.message.get_default_welcome_message": "Get default welcome message.",
    "services_ai_chat_service.message.merhaba_size_nas_l_yard_mc_o": "Merhaba! Size nasıl yardımcı olabilirim?",
    "services_ai_chat_service.message.hello_how_can_i_help_you_toda": "Hello! How can I help you today?",
    "services_ai_chat_service.message.get_default_question_suggestio": "Get default question suggestions.",
    "services_ai_chat_service.message.what_programs_are_available": "What programs are available?",
    "services_ai_chat_service.message.how_can_i_improve_my_study_hab": "How can I improve my study habits?",
    "services_ai_chat_service.message.what_resources_are_available_f": "What resources are available for learning?",
    "services_ai_chat_service.message.al_ma_al_kanl_klar_m_nas_l": "Çalışma alışkanlıklarımı nasıl geliştirebilirim?",
    "services_ai_chat_service.message.renme_i_in_hangi_kaynaklar_m": "Öğrenme için hangi kaynaklar mevcut?",
    "services_ai_chat_service.message.when_is_my_next_appointment": "When is my next appointment?",
    "services_ai_chat_service.message.can_i_schedule_a_new_appointme": "Can I schedule a new appointment?",
    "services_ai_chat_service.message.how_do_i_reschedule_my_appoint": "How do I reschedule my appointment?",
    "services_ai_chat_service.message.bir_sonraki_randevum_ne_zaman": "Bir sonraki randevum ne zaman?",
    "services_ai_chat_service.message.yeni_bir_randevu_alabilir_miyi": "Yeni bir randevu alabilir miyim?",
    "services_ai_chat_service.message.randevumu_nas_l_yeniden_planla": "Randevumu nasıl yeniden planlayabilirim?",
    "services_ai_chat_service.message.how_am_i_doing_in_my_programs": "How am I doing in my programs?",
    "services_ai_chat_service.message.can_i_see_my_recent_achievemen": "Can I see my recent achievements?",
    "services_ai_chat_service.message.son_ba_ar_lar_m_g_rebilir_miy": "Son başarılarımı görebilir miyim?",
    "services_ai_chat_service.message.tell_me_about_the_center": "Tell me about the center",
    "services_ai_chat_service.message.what_services_are_available": "What services are available?",
    "services_ai_chat_service.message.how_can_i_get_help": "How can I get help?",
    "services_ai_chat_service.message.merkez_hakk_nda_bilgi_verin": "Merkez hakkında bilgi verin",
    "services_ai_chat_service.message.zg_n_m_bir_hata_olu_tu_l_tf": "Üzgünüm, bir hata oluştu. Lütfen daha sonra tekrar deneyin.",
    "services_ai_chat_service.message.thank_you": "thank you",
    "services_ai_chat_service.message.that_s_all": "that's all",
    "services_ai_chat_service.message.g_le_g_le": "güle güle",
    "services_ai_chat_service.message.ho_a_kal": "hoşça kal",
    "services_ai_chat_service.message.te_ekk_r_ederim": "teşekkür ederim",
    "services_ai_chat_service.message.sa_ol": "sağ ol",
    "services_ai_chat_service.message.gpt_3_5_turbo_1": "gpt-3.5-turbo",
    "services_ai_chat_service.message.summarize_this_conversation_in": "Summarize this conversation in 2-3 sentences. Also identify key topics discussed.",
    "services_ai_chat_service.message.topics": "topics:",
    "services_ai_chat_service.message.topics_1": "topics:",
    "services_ai_chat_service.message.10_00": "10:00",
    "services_ai_chat_service.message.14_00": "14:00",
    "services_ai_chat_service.message.16_00": "16:00",
    "services_ai_chat_service.message.get_beneficiary_progress_repor": "Get beneficiary progress report.",
    "services_ai_chat_service.message.3_months": "3 months",
    "services_ai_chat_service.message.6_months": "6 months",
    "services_ai_chat_service.message.with": " with ",
    "services_ai_chat_service.message.": " - ",
    "services_ai_chat_service.message.status": ", Status: ",
    "services_ai_chat_service.message.get_beneficiary_progress_summa": "Get beneficiary progress summary.",
    "services_ai_chat_service.message.tarihinde_u_saatler_m_sait": " tarihinde şu saatler müsait: ",
    "services_ai_chat_service.message.randevunuz_ba_ar_yla_olu_turul": "Randevunuz başarıyla oluşturuldu. Randevu numarası: ",
    "services_ai_chat_service.message.randevu_olu_turulamad_l_tfen": "Randevu oluşturulamadı. Lütfen daha sonra tekrar deneyin.",
    "services_ai_chat_service.message.could_not_book_the_appointment": "Could not book the appointment. Please try again later.",
    "services_ai_chat_service.message.d_neminde_ilerlemeniz": " döneminde ilerlemeniz: %",
    "services_ai_chat_service.message.yakla_an_oturumlar": ", Yaklaşan oturumlar: ",
    "services_ai_chat_service.message.upcoming_sessions": ", Upcoming sessions: ",
    "services_ai_chat_service.message.u_anda_uygun_program_bulunmam": "Şu anda uygun program bulunmamaktadır.",
    "services_ai_chat_service.message.no_programs_are_currently_avai": "No programs are currently available.",
    "services_ai_chat_service.message.s_re": " (Süre: ",
    "services_ai_chat_service.message.duration": " (Duration: ",
    "services_calendar_service.message.google_calendar_service_module": "Google Calendar service module.",
    "services_calendar_service.message.https_www_googleapis_com_aut": "https://www.googleapis.com/auth/calendar",
    "services_calendar_service.message.client_secret_json": "client_secret.json",
    "services_calendar_service.message.get_a_url_for_authori": "\n        Get a URL for authorizing the app to access Google Calendar.\n        \n        Args:\n            user_id (int): The user's ID\n            redirect_uri (str): The URI to redirect to after authorization\n            \n        Returns:\n            str: The authorization URL\n        ",
    "services_calendar_service.message.client_secrets_file_not_found": "Client secrets file not found at ",
    "services_calendar_service.message.appointments_oauth2callback": "appointments.oauth2callback",
    "services_calendar_service.message.no_integration_found_for_user": "No integration found for user ",
    "services_calendar_service.message.state_mismatch_for_user": "State mismatch for user ",
    "services_calendar_service.message.appointments_oauth2callback_1": "appointments.oauth2callback",
    "services_calendar_service.message.get_the_credentials_f": "\n        Get the credentials for a user.\n        \n        Args:\n            user_id (int): The user's ID\n            \n        Returns:\n            Credentials: The credentials or None if not found\n        ",
    "services_calendar_service.message.datetime": "dateTime",
    "services_calendar_service.message.timezone": "timeZone",
    "services_calendar_service.message.datetime_1": "dateTime",
    "services_calendar_service.message.timezone_1": "timeZone",
    "services_calendar_service.message.usedefault": "useDefault",
    "services_calendar_service.message.datetime_2": "dateTime",
    "services_calendar_service.message.datetime_3": "dateTime",
    "services_calendar_service.message.calendarid": "calendarId",
    "services_calendar_service.message.maxresults": "maxResults",
    "services_calendar_service.message.singleevents": "singleEvents",
    "services_calendar_service.message.orderby": "orderBy",
    "services_calendar_service.message.starttime": "startTime",
    "services_calendar_service.message.timemin": "timeMin",
    "services_calendar_service.message.timemax": "timeMax",
    "services_question_randomization_service.message.question_randomization_servic": "\nQuestion Randomization Service\n\nThis service provides comprehensive randomization strategies for evaluations\nand assessments to prevent cheating while maintaining test fairness.\n",
    "services_question_randomization_service.message.pre_defined_question_order_tem": "Pre-defined question order templates.",
    "services_question_randomization_service.message.service_for_randomizing_questi": "Service for randomizing questions with multiple strategies.",
    "services_question_randomization_service.message.simple_random_shuffle_of_quest": "Simple random shuffle of questions.",
    "services_question_randomization_service.message.stratified_randomizat": "\n        Stratified randomization by difficulty and topic.\n        Ensures balanced distribution across strata.\n        ",
    "services_question_randomization_service.message.deterministic_pseudo": "\n        Deterministic pseudo-random ordering for reproducibility.\n        Uses a seed based on various factors.\n        ",
    "services_question_randomization_service.message.y_m_d": "%Y-%m-%d",
    "services_question_randomization_service.message.y_w": "%Y-%W",
    "services_question_randomization_service.message.y_m": "%Y-%m",
    "services_question_randomization_service.message.adaptive_randomizatio": "\n        Adaptive randomization based on user history and performance.\n        Prioritizes questions the user hasn't seen or struggled with.\n        ",
    "services_question_randomization_service.message.adaptive_randomization_require": "Adaptive randomization requires beneficiary_id. Falling back to simple random.",
    "services_question_randomization_service.message.apply_pre_defined_ordering_tem": "Apply pre-defined ordering templates.",
    "services_question_randomization_service.message.ensure_balanced_distr": "\n        Ensure balanced distribution of question characteristics.\n        Considers difficulty, topics, and question types.\n        ",
    "services_question_randomization_service.message.randomize_multiple_ch": "\n        Randomize multiple choice answer options.\n        \n        Args:\n            question: The question with options to randomize\n            preserve_position: List of option indices to keep in place\n            avoid_patterns: Whether to avoid common patterns (e.g., all A's)\n            \n        Returns:\n            Dictionary with randomized options and mapping\n        ",
    "services_question_randomization_service.message.filter_questions_to_p": "\n        Filter questions to prevent repetition across recent sessions.\n        \n        Args:\n            questions: Available questions\n            beneficiary_id: Beneficiary ID\n            lookback_sessions: Number of recent sessions to check\n            min_gap_between_exposure: Minimum number of other questions between repeats\n            \n        Returns:\n            Filtered list of questions\n        ",
    "services_question_randomization_service.message.generate_time_based_r": "\n        Generate time-based randomization seed.\n        \n        Args:\n            window: Time window ('daily', 'weekly', 'monthly')\n            offset_hours: Hours to offset (for timezone adjustment)\n            \n        Returns:\n            Time-based seed string\n        ",
    "services_question_randomization_service.message.y_m_d_1": "%Y-%m-%d",
    "services_question_randomization_service.message.y_w_w": "%Y-W%W",
    "services_question_randomization_service.message.y_m_1": "%Y-%m",
    "services_question_randomization_service.message.y_m_d_h": "%Y-%m-%d-%H",
    "services_question_randomization_service.message.y_m_d_2": "%Y-%m-%d",
    "services_question_randomization_service.message.track_that_a_question_was_show": "Track that a question was shown to a user.",
    "services_question_randomization_service.message.get_exposure_rates_for_questio": "Get exposure rates for questions.",
    "services_question_randomization_service.message.apply_question_blocki": "\n        Apply question blocking rules (keep together/apart).\n        \n        Args:\n            questions: List of questions\n            blocking_rules: List of blocking rules\n                - type: 'together' or 'apart'\n                - question_ids: List of question IDs\n                - min_distance: Minimum distance for 'apart' rules\n                \n        Returns:\n            Reordered questions following blocking rules\n        ",
    "services_question_randomization_service.message.calculate_adaptive_score_for_a": "Calculate adaptive score for a question based on user history.",
    "services_question_randomization_service.message.create_score_brackets_for_rand": "Create score brackets for randomization within tiers.",
    "services_question_randomization_service.message.order_questions_by_difficulty": "Order questions by difficulty.",
    "services_question_randomization_service.message.create_a_mixed_difficulty_orde": "Create a mixed difficulty order with good distribution.",
    "services_question_randomization_service.message.group_questions_by_topic_rand": "Group questions by topic, randomize within groups.",
    "services_question_randomization_service.message.alternate_between_difficulty_l": "Alternate between difficulty levels.",
    "services_question_randomization_service.message.order_by_cognitive_level_progr": "Order by cognitive level progression (Bloom's taxonomy).",
    "services_question_randomization_service.message.check_if_answer_arrangement_ha": "Check if answer arrangement has obvious patterns.",
    "services_question_randomization_service.message.track_question_exposure_rates": "Track question exposure rates.",
    "services_question_randomization_service.message.record_that_a_question_was_sho": "Record that a question was shown.",
    "services_question_randomization_service.message.get_exposure_rates_for_questio_1": "Get exposure rates for questions.",
    "services_question_randomization_service.message.total_sessions": ":total_sessions",
    "services_question_randomization_service.message.track_user_question_history": "Track user question history.",
    "services_question_randomization_service.message.record_that_a_question_was_sho_1": "Record that a question was shown to a user.",
    "services_question_randomization_service.message.get_user_s_question_history": "Get user's question history.",
    "services_question_randomization_service.message.get_recently_shown_questions_f": "Get recently shown questions for a user.",
    "services_log_analytics_service.message.automated_log_analytics_servi": "\nAutomated Log Analytics Service for BDC Application\nProvides intelligent log analysis, pattern detection, and trend reporting\n",
    "services_log_analytics_service.message.type_of_log_analysis": "Type of log analysis",
    "services_log_analytics_service.message.standardized_log_entry_structu": "Standardized log entry structure",
    "services_log_analytics_service.message.result_of_log_analysis": "Result of log analysis",
    "services_log_analytics_service.message.advanced_log_analytics_se": "\n    Advanced log analytics service with machine learning capabilities\n    ",
    "services_log_analytics_service.message.initialize_the_log_analytics_s": "Initialize the log analytics service",
    "services_log_analytics_service.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "services_log_analytics_service.message.load_security_threat_indicator": "Load security threat indicators",
    "services_log_analytics_service.message.brute_force": "brute force",
    "services_log_analytics_service.message.password_attack": "password attack",
    "services_log_analytics_service.message.unauthorized_access": "unauthorized access",
    "services_log_analytics_service.message.privilege_escalation": "privilege escalation",
    "services_log_analytics_service.message.sql_injection": "sql injection",
    "services_log_analytics_service.message.xss_attack": "xss attack",
    "services_log_analytics_service.message.command_injection": "command injection",
    "services_log_analytics_service.message.script_injection": "script injection",
    "services_log_analytics_service.message.code_injection": "code injection",
    "services_log_analytics_service.message.suspicious_activity": "suspicious activity",
    "services_log_analytics_service.message.anomalous_behavior": "anomalous behavior",
    "services_log_analytics_service.message.port_scan": "port scan",
    "services_log_analytics_service.message.network_intrusion": "network intrusion",
    "services_log_analytics_service.message.suspicious_ip": "suspicious ip",
    "services_log_analytics_service.message.blocked_connection": "blocked connection",
    "services_log_analytics_service.message.data_breach": "data breach",
    "services_log_analytics_service.message.data_leak": "data leak",
    "services_log_analytics_service.message.unauthorized_export": "unauthorized export",
    "services_log_analytics_service.message.sensitive_data_access": "sensitive data access",
    "services_log_analytics_service.message.data_exfiltration": "data exfiltration",
    "services_log_analytics_service.message.start_background_analysis_thre": "Start background analysis thread",
    "services_log_analytics_service.message.timestamp": "@timestamp",
    "services_log_analytics_service.message.bdc": "bdc-*",
    "services_log_analytics_service.message.timestamp_1": "@timestamp",
    "services_log_analytics_service.message.timestamp_2": "@timestamp",
    "services_log_analytics_service.message.flask_app": "flask-app",
    "services_log_analytics_service.message.analyze_usage_patterns_24_hou": "Analyze usage patterns (24 hour window)",
    "services_log_analytics_service.message.detect_anomalies_in_log_patter": "Detect anomalies in log patterns",
    "services_log_analytics_service.message.analyze_response_time_trends": "Analyze response time trends",
    "services_log_analytics_service.message.d_d_s_ms_milliseconds": "(\\d+\\.?\\d*)\\s*(ms|milliseconds|s|seconds)",
    "services_log_analytics_service.message.high_response_time_detected": "High Response Time Detected",
    "services_log_analytics_service.message.ms_p95": "ms, P95: ",
    "services_log_analytics_service.message.p50_response_time": "p50_response_time",
    "services_log_analytics_service.message.p95_response_time": "p95_response_time",
    "services_log_analytics_service.message.p99_response_time": "p99_response_time",
    "services_log_analytics_service.message.check_database_query_performan": "Check database query performance",
    "services_log_analytics_service.message.review_application_code_for_bo": "Review application code for bottlenecks",
    "services_log_analytics_service.message.enable_caching_for_slow_operat": "Enable caching for slow operations",
    "services_log_analytics_service.message.review_slow_query_logs": "Review slow query logs",
    "services_log_analytics_service.message.monitor_database_resource_usag": "Monitor database resource usage",
    "services_log_analytics_service.message.consider_connection_pooling_op": "Consider connection pooling optimization",
    "services_log_analytics_service.message.high_cache_miss_rate": "High Cache Miss Rate",
    "services_log_analytics_service.message.review_cache_key_strategies": "Review cache key strategies",
    "services_log_analytics_service.message.check_cache_expiration_policie": "Check cache expiration policies",
    "services_log_analytics_service.message.consider_increasing_cache_size": "Consider increasing cache size",
    "services_log_analytics_service.message.analyze_cache_hit_patterns": "Analyze cache hit patterns",
    "services_log_analytics_service.message.check_if_a_log_entry_is_securi": "Check if a log entry is security-related",
    "services_log_analytics_service.message.b_d_1_3_3_d_1_3_b": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b",
    "services_log_analytics_service.message.block_suspicious_ip_addresses": "Block suspicious IP addresses",
    "services_log_analytics_service.message.implement_account_lockout_poli": "Implement account lockout policies",
    "services_log_analytics_service.message.monitor_for_credential_stuffin": "Monitor for credential stuffing attacks",
    "services_log_analytics_service.message.analyze_suspicious_activity_pa": "Analyze suspicious activity patterns",
    "services_log_analytics_service.message.suspicious_activities": " suspicious activities",
    "services_log_analytics_service.message.consider_blocking_malicious_ip": "Consider blocking malicious IPs",
    "services_log_analytics_service.message.analyze_user_activity_patterns": "Analyze user activity patterns",
    "services_log_analytics_service.message.unusual_user_activity_pattern": "Unusual User Activity Pattern",
    "services_log_analytics_service.message.peak_activity_at_hour": "Peak activity at hour ",
    "services_log_analytics_service.message.with": " with ",
    "services_log_analytics_service.message.events": " events",
    "services_log_analytics_service.message.monitor_capacity_during_peak_h": "Monitor capacity during peak hours",
    "services_log_analytics_service.message.review_user_behavior_patterns": "Review user behavior patterns",
    "services_log_analytics_service.message.analyze_api_usage_patterns": "Analyze API usage patterns",
    "services_log_analytics_service.message.api_usage_pattern_analysis": "API Usage Pattern Analysis",
    "services_log_analytics_service.message.api_requests_across": " API requests across ",
    "services_log_analytics_service.message.endpoints": " endpoints",
    "services_log_analytics_service.message.consider_api_rate_limiting": "Consider API rate limiting",
    "services_log_analytics_service.message.review_api_usage_policies": "Review API usage policies",
    "services_log_analytics_service.message.detect_anomalies_in_log_volume": "Detect anomalies in log volume",
    "services_log_analytics_service.message.log_volume_anomaly_detected": "Log Volume Anomaly Detected",
    "services_log_analytics_service.message.time_intervals_with_anomalous": " time intervals with anomalous log volumes",
    "services_log_analytics_service.message.investigate_cause_of_log_volum": "Investigate cause of log volume spikes",
    "services_log_analytics_service.message.check_for_system_issues": "Check for system issues",
    "services_log_analytics_service.message.consider_log_rate_limiting": "Consider log rate limiting",
    "services_log_analytics_service.message.detect_anomalies_in_log_patter_1": "Detect anomalies in log patterns using topic modeling",
    "services_log_analytics_service.message.log_pattern_anomaly_detected": "Log Pattern Anomaly Detected",
    "services_log_analytics_service.message.unusual_concentration_of_logs": "Unusual concentration of logs in topic: ",
    "services_log_analytics_service.message.investigate_unusual_log_patter": "Investigate unusual log patterns",
    "services_log_analytics_service.message.check_for_system_malfunctions": "Check for system malfunctions",
    "services_log_analytics_service.message.review_recent_code_changes": "Review recent code changes",
    "services_log_analytics_service.message.monitor_for_recurring_issues": "Monitor for recurring issues",
    "services_log_analytics_service.message.check_database_connectivity_an": "Check database connectivity and performance",
    "services_log_analytics_service.message.review_database_query_optimiza": "Review database query optimization",
    "services_log_analytics_service.message.monitor_database_resource_usag_1": "Monitor database resource usage",
    "services_log_analytics_service.message.review_connection_pool_setting": "Review connection pool settings",
    "services_log_analytics_service.message.monitor_external_service_avail": "Monitor external service availability",
    "services_log_analytics_service.message.check_for_blocking_operations": "Check for blocking operations",
    "services_log_analytics_service.message.check_for_memory_leaks": "Check for memory leaks",
    "services_log_analytics_service.message.consider_increasing_memory_all": "Consider increasing memory allocation",
    "services_log_analytics_service.message.review_application_logs_for_mo": "Review application logs for more context",
    "services_log_analytics_service.message.check_system_resources_and_per": "Check system resources and performance",
    "services_log_analytics_service.message.consider_implementing_retry_lo": "Consider implementing retry logic",
    "services_log_analytics_service.message.run_periodic_log_analysis": "Run periodic log analysis",
    "services_log_analytics_service.message.starting_periodic_log_analysis": "Starting periodic log analysis",
    "services_log_analytics_service.message.insights": " insights",
    "services_log_analytics_service.message.send_alert_for_analysis_result": "Send alert for analysis result",
    "services_log_analytics_service.message.log_analytics": "log-analytics",
    "services_log_analytics_service.message.cache_analysis_results_in_redi": "Cache analysis results in Redis",
    "services_log_analytics_service.message.log_analysis": "log_analysis:",
    "services_log_analytics_service.message.log_analysis_1": "log_analysis:*",
    "services_log_analytics_service.message.get_cached_analysis_results": "Get cached analysis results",
    "services_log_analytics_service.message.log_analysis_2": "log_analysis:*",
    "services_notification_service.message.notification_service_module_wi": "Notification service module with dependency injection support.",
    "services_notification_service.message.notification_service_for_manag": "Notification service for managing user notifications with dependency injection.",
    "services_notification_service.message.initialize_notification_servic": "Initialize notification service with repository dependency.",
    "services_notification_service.message.get_notifications_for": "\n        Get notifications for a user.\n        \n        Args:\n            user_id (int): The user ID\n            limit (int): Maximum number of notifications to return\n            offset (int): Offset for pagination\n            unread_only (bool): Whether to return only unread notifications\n            type (str): Notification type to filter by\n            \n        Returns:\n            list: List of notifications\n        ",
    "services_notification_service.message.get_count_of_unread_n": "\n        Get count of unread notifications for a user.\n        \n        Args:\n            user_id (int): The user ID\n            type (str): Notification type to filter by\n            \n        Returns:\n            int: Number of unread notifications\n        ",
    "services_video_conference_service_updated.message.video_conference_service_for_m": "Video Conference service for managing video conferences.",
    "services_video_conference_service_updated.message.initialize_video_conference_se": "Initialize video conference service.",
    "services_video_conference_service_updated.message.not_found": " not found",
    "services_video_conference_service_updated.message.not_found_1": " not found",
    "services_video_conference_service_updated.message.conference_already_exists_for": "Conference already exists for this appointment",
    "services_video_conference_service_updated.message.video_conference_for_appointme": "Video conference for appointment: ",
    "services_video_conference_service_updated.message.not_found_2": " not found",
    "services_video_conference_service_updated.message.not_found_3": " not found",
    "services_video_conference_service_updated.message.you_don_t_have_permission_to_c": "You don't have permission to cancel this conference",
    "services_video_conference_service_updated.message.not_found_4": " not found",
    "services_video_conference_service_updated.message.you_are_not_a_participant_in_t": "You are not a participant in this conference",
    "services_video_conference_service_updated.message.not_found_5": " not found",
    "services_video_conference_service_updated.message.you_don_t_have_permission_to_e": "You don't have permission to end this conference",
    "services_video_conference_service_updated.message.not_found_6": " not found",
    "services_video_conference_service_updated.message.participant_already_exists_in": "Participant already exists in this conference",
    "services_video_conference_service_updated.message.not_found_7": " not found",
    "services_video_conference_service_updated.message.not_found_8": " not found",
    "services_video_conference_service_updated.message.you_don_t_have_permission_to_s": "You don't have permission to start recording",
    "services_video_conference_service_updated.message.recording_is_not_allowed_for_t": "Recording is not allowed for this conference",
    "services_video_conference_service_updated.message.not_found_9": " not found",
    "services_video_conference_service_updated.message.you_don_t_have_permission_to_s_1": "You don't have permission to stop recording",
    "services_video_conference_service_updated.message.get_analytics_for_a_v": "\n        Get analytics for a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            \n        Returns:\n            Dict: Analytics data\n        ",
    "services_video_conference_service_updated.message.not_found_10": " not found",
    "services_video_conference_service_updated.message.send_notifications_for_confere": "Send notifications for conference events.",
    "services_video_conference_service_updated.message.your_video_conference": "Your video conference '",
    "services_video_conference_service_updated.message.has_been": "' has been ",
    "services_video_conference_service_updated.message.join_at": " Join at: ",
    "services_video_conference_service_updated.message.generate_invitation_message_fo": "Generate invitation message for a conference.",
    "services_video_conference_service_updated.message.you_are_invited_to_join_the_v": "\nYou are invited to join the video conference: ",
    "services_video_conference_service_updated.message.date_time": "\n\nDate & Time: ",
    "services_video_conference_service_updated.message.y_m_d_at_h_m_utc": "%Y-%m-%d at %H:%M UTC",
    "services_video_conference_service_updated.message.duration": "\nDuration: ",
    "services_video_conference_service_updated.message.minutes_join_url": " minutes\n\nJoin URL: ",
    "services_video_conference_service_updated.message.host": "\n\nHost: ",
    "services_video_conference_service_updated.message.please_join_a_few_minutes_be": "\n\nPlease join a few minutes before the scheduled time.\n        ",
    "services_video_conference_service_updated.message.m_d_h_m": "%m/%d %H:%M",
    "services_program_service.message.service_layer_for_program_crud": "Service layer for Program CRUD operations.",
    "services_ai_question_generator_service.message.ai_powered_question_generation": "AI-Powered Question Generation Service.",
    "services_ai_question_generator_service.message.process_various_content_types": "Process various content types for question generation.",
    "services_ai_question_generator_service.message.mp3": "mp3",
    "services_ai_question_generator_service.message.mp4": "mp4",
    "services_ai_question_generator_service.message.process_source_content_and_ext": "Process source content and extract text and metadata.",
    "services_ai_question_generator_service.message.no_content_source_provided": "No content source provided",
    "services_ai_question_generator_service.message.process_audio_files_using_whis": "Process audio files using Whisper.",
    "services_ai_question_generator_service.message.process_video_files_extract_a": "Process video files (extract audio and transcribe).",
    "services_ai_question_generator_service.message.mozilla_5_0_windows_nt_10_0": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
    "services_ai_question_generator_service.message.process_raw_text_content": "Process raw text content.",
    "services_ai_question_generator_service.message.s": "\\s+",
    "services_ai_question_generator_service.message.enhance_text_analysis_with_nlp": "Enhance text analysis with NLP techniques.",
    "services_ai_question_generator_service.message.estimate_content_difficulty_on": "Estimate content difficulty on a 1-10 scale.",
    "services_ai_question_generator_service.message.b_w_10_b": "\\b\\w{10,}\\b",
    "services_ai_question_generator_service.message.": "[;:]",
    "services_ai_question_generator_service.message.b_however_moreover_furtherm": "\\b(?:however|moreover|furthermore|nevertheless)\\b",
    "services_ai_question_generator_service.message.generate_questions_using_ai_mo": "Generate questions using AI models.",
    "services_ai_question_generator_service.message.generate_questions_based_on_th": "Generate questions based on the request parameters.",
    "services_ai_question_generator_service.message.openai_api_key_not_configured": "OpenAI API key not configured",
    "services_ai_question_generator_service.message.source_content_not_processed": "Source content not processed",
    "services_ai_question_generator_service.message.generate_questions_for_a_speci": "Generate questions for a specific type.",
    "services_ai_question_generator_service.message.no_prompt_template_for_questio": "No prompt template for question type: ",
    "services_ai_question_generator_service.message.questions": " questions: ",
    "services_ai_question_generator_service.message.make_api_call_to_openai": "Make API call to OpenAI.",
    "services_ai_question_generator_service.message.you_are_an_expert_educational": "You are an expert educational content creator specialized in generating high-quality assessment questions.",
    "services_ai_question_generator_service.message.parse_ai_response_into_structu": "Parse AI response into structured questions.",
    "services_ai_question_generator_service.message.json_n_n": "```json\\n(.*?)\\n```",
    "services_ai_question_generator_service.message._1": "^[^{\\[]*",
    "services_ai_question_generator_service.message._2": "[^}\\]]*$",
    "services_ai_question_generator_service.message.fallback_text_parsing_for_non": "Fallback text parsing for non-JSON responses.",
    "services_ai_question_generator_service.message.d_s": "\\d+\\.\\s*",
    "services_ai_question_generator_service.message.n_n": "\\n\\n",
    "services_ai_question_generator_service.message.d_s_1": "^\\d+\\.\\s*",
    "services_ai_question_generator_service.message.question_d_s": "^Question \\d+:\\s*",
    "services_ai_question_generator_service.message.q_d_s": "^Q\\d+:\\s*",
    "services_ai_question_generator_service.message.calculate_estimated_cost_based": "Calculate estimated cost based on tokens used.",
    "services_ai_question_generator_service.message.generate_prompt_for_multiple_c": "Generate prompt for multiple choice questions.",
    "services_ai_question_generator_service.message.any_relevant_topics": "any relevant topics",
    "services_ai_question_generator_service.message.generate": "\nGenerate ",
    "services_ai_question_generator_service.message.high_quality_multiple_choice": " high-quality multiple choice questions based on the following content:\n\nCONTENT:\n",
    "services_ai_question_generator_service.message.requirements_difficulty_l": "\n\nREQUIREMENTS:\n- Difficulty level: ",
    "services_ai_question_generator_service.message.focus_on_topics": "\n- Focus on topics: ",
    "services_ai_question_generator_service.message.language": "\n- Language: ",
    "services_ai_question_generator_service.message.generate_prompt_for_true_false": "Generate prompt for true/false questions.",
    "services_ai_question_generator_service.message.generate_1": "\nGenerate ",
    "services_ai_question_generator_service.message.true_false_questions_based_on": " true/false questions based on the following content:\n\nCONTENT:\n",
    "services_ai_question_generator_service.message.requirements_difficulty_l_1": "\n\nREQUIREMENTS:\n- Difficulty level: ",
    "services_ai_question_generator_service.message.generate_prompt_for_fill_in_th": "Generate prompt for fill-in-the-blank questions.",
    "services_ai_question_generator_service.message.generate_2": "\nGenerate ",
    "services_ai_question_generator_service.message.fill_in_the_blank_questions_b": " fill-in-the-blank questions based on the following content:\n\nCONTENT:\n",
    "services_ai_question_generator_service.message.generate_prompt_for_short_answ": "Generate prompt for short answer questions.",
    "services_ai_question_generator_service.message.generate_3": "\nGenerate ",
    "services_ai_question_generator_service.message.short_answer_questions_based": " short answer questions based on the following content:\n\nCONTENT:\n",
    "services_ai_question_generator_service.message.generate_prompt_for_essay_ques": "Generate prompt for essay questions.",
    "services_ai_question_generator_service.message.generate_4": "\nGenerate ",
    "services_ai_question_generator_service.message.essay_questions_based_on_the": " essay questions based on the following content:\n\nCONTENT:\n",
    "services_ai_question_generator_service.message.generate_prompt_for_matching_q": "Generate prompt for matching questions.",
    "services_ai_question_generator_service.message.generate_5": "\nGenerate ",
    "services_ai_question_generator_service.message.matching_questions_based_on_t": " matching questions based on the following content:\n\nCONTENT:\n",
    "services_ai_question_generator_service.message.generate_prompt_for_ordering_s": "Generate prompt for ordering/sequencing questions.",
    "services_ai_question_generator_service.message.generate_6": "\nGenerate ",
    "services_ai_question_generator_service.message.ordering_sequencing_questions": " ordering/sequencing questions based on the following content:\n\nCONTENT:\n",
    "services_ai_question_generator_service.message.convert_difficulty_range_to_de": "Convert difficulty range to descriptive text.",
    "services_ai_question_generator_service.message.easy_basic_recall_and_recogni": "Easy (basic recall and recognition)",
    "services_ai_question_generator_service.message.easy_to_medium_understanding": "Easy to Medium (understanding and simple application)",
    "services_ai_question_generator_service.message.medium_application_and_analys": "Medium (application and analysis)",
    "services_ai_question_generator_service.message.hard_synthesis_and_evaluation": "Hard (synthesis and evaluation)",
    "services_ai_question_generator_service.message.very_hard_expert_level_analys": "Very Hard (expert-level analysis and creation)",
    "services_ai_question_generator_service.message.detect_duplicate_questions_usi": "Detect duplicate questions using various methods.",
    "services_ai_question_generator_service.message.detect_potential_duplicate_que": "Detect potential duplicate questions.",
    "services_ai_question_generator_service.message.detect_duplicates_based_on_tex": "Detect duplicates based on text similarity.",
    "services_ai_question_generator_service.message.detect_duplicates_based_on_sem": "Detect duplicates based on semantic similarity.",
    "services_ai_question_generator_service.message.detect_duplicates_based_on_key": "Detect duplicates based on keyword overlap.",
    "services_ai_question_generator_service.message.calculate_text_similarity_usin": "Calculate text similarity using character-based approach.",
    "services_ai_question_generator_service.message.w": "\\W+",
    "services_ai_question_generator_service.message.w_1": "\\W+",
    "services_ai_question_generator_service.message.calculate_similarity_using_lon": "Calculate similarity using longest common subsequence.",
    "services_ai_question_generator_service.message.assess_and_score_question_qual": "Assess and score question quality.",
    "services_ai_question_generator_service.message.assess_the_quality_of_a_genera": "Assess the quality of a generated question.",
    "services_ai_question_generator_service.message.b_a_an_an_a_b": "\\b(a an|an a)\\b",
    "services_ai_question_generator_service.message.assess_question_relevance_to_s": "Assess question relevance to source content.",
    "services_ai_question_generator_service.message.assess_if_difficulty_level_is": "Assess if difficulty level is appropriate.",
    "services_ai_question_generator_service.message.assess_educational_value_of_th": "Assess educational value of the question.",
    "services_ai_question_generator_service.message._3": "[{}[\\]|\\\\]",
    "services_ai_question_generator_service.message.calculate_text_complexity_0_1": "Calculate text complexity (0-1 scale).",
    "services_ai_question_generator_service.message.main_service_for_ai_powered_qu": "Main service for AI-powered question generation.",
    "services_ai_question_generator_service.message.create_and_process_source_cont": "Create and process source content.",
    "services_ai_question_generator_service.message.process_source_content_to_extr": "Process source content to extract text and metadata.",
    "services_ai_question_generator_service.message.source_content_not_found": "Source content not found",
    "services_ai_question_generator_service.message.gpt_4": "gpt-4",
    "services_ai_question_generator_service.message.source_content_not_found_or_no": "Source content not found or not processed",
    "services_ai_question_generator_service.message.get_the_status_of_a_question_g": "Get the status of a question generation request.",
    "services_ai_question_generator_service.message.get_generated_questions_with_f": "Get generated questions with filtering options.",
    "services_ai_question_generator_service.message.approve_a_generated_question": "Approve a generated question.",
    "services_ai_question_generator_service.message.reject_a_generated_question": "Reject a generated question.",
    "services_ai_question_generator_service.message.create_a_new_question_bank": "Create a new question bank.",
    "services_ai_question_generator_service.message.add_a_question_to_a_question_b": "Add a question to a question bank.",
    "services_ai_question_generator_service.message.question_already_in_bank": "Question already in bank",
    "services_ai_question_generator_service.message.get_question_generation_analyt": "Get question generation analytics.",
    "services_ai_question_generator_service.message.initialize_default_question_ty": "Initialize default question types and Bloom's taxonomy levels.",
    "services_ai_question_generator_service.message.questions_with_multiple_option": "Questions with multiple options and one correct answer",
    "services_ai_question_generator_service.message.questions_requiring_true_or_fa": "Questions requiring true or false responses",
    "services_ai_question_generator_service.message.fill_in_the_blank": "Fill in the Blank",
    "services_ai_question_generator_service.message.questions_with_missing_words_t": "Questions with missing words to be filled",
    "services_ai_question_generator_service.message.questions_requiring_brief_writ": "Questions requiring brief written responses",
    "services_ai_question_generator_service.message.questions_requiring_detailed_w": "Questions requiring detailed written responses",
    "services_ai_question_generator_service.message.questions_requiring_matching_o": "Questions requiring matching of related items",
    "services_ai_question_generator_service.message.questions_requiring_items_to_b": "Questions requiring items to be put in order",
    "services_ai_question_generator_service.message.recall_facts_and_basic_concept": "Recall facts and basic concepts",
    "services_ai_question_generator_service.message.explain_ideas_or_concepts": "Explain ideas or concepts",
    "services_ai_question_generator_service.message.draw_connections_among_ideas": "Draw connections among ideas",
    "services_ai_question_generator_service.message.justify_a_stand_or_decision": "Justify a stand or decision",
    "services_ai_question_generator_service.message.produce_new_or_original_work": "Produce new or original work",
    "services_ai_question_generator_service.message.mp3_1": "mp3",
    "services_ai_question_generator_service.message.m4a": "m4a",
    "services_ai_question_generator_service.message.mp4_1": "mp4",
    "services_gamification_integration.message.gamification_integration_servi": "Gamification Integration Service - Hooks into existing BDC systems.",
    "services_gamification_integration.message.service_for_integrating_gamifi": "Service for integrating gamification with existing BDC systems.",
    "services_gamification_integration.message.handle_gamification_for_user_l": "Handle gamification for user login.",
    "services_gamification_integration.message.handle_gamification_for_user_l_1": "Handle gamification for user logout.",
    "services_gamification_integration.message.handle_gamification_when_user": "Handle gamification when user starts an evaluation.",
    "services_gamification_integration.message.handle_gamification_when_train": "Handle gamification when trainer reviews an evaluation.",
    "services_gamification_integration.message.handle_gamification_when_user_1": "Handle gamification when user enrolls in a program.",
    "services_gamification_integration.message.handle_gamification_when_user_2": "Handle gamification when user schedules an appointment.",
    "services_gamification_integration.message.handle_gamification_when_user_3": "Handle gamification when user attends an appointment.",
    "services_gamification_integration.message.handle_gamification_when_user_4": "Handle gamification when user uploads a document.",
    "services_gamification_integration.message.handle_gamification_when_user_5": "Handle gamification when user shares a document.",
    "services_gamification_integration.message.handle_gamification_when_user_6": "Handle gamification when user sends a message.",
    "services_gamification_integration.message.handle_gamification_when_user_7": "Handle gamification when user requests help.",
    "services_gamification_integration.message.handle_gamification_when_user_8": "Handle gamification when user provides help.",
    "services_gamification_integration.message.trigger_a_custom_achievement_f": "Trigger a custom achievement for specific events.",
    "services_gamification_integration.message.handle_multiple_gamification_a": "Handle multiple gamification activities in batch.",
    "services_gamification_integration.message.missing_type_or_user_id": "Missing type or user_id",
    "services_gamification_integration.message.route_activity_to_appropriate": "Route activity to appropriate handler.",
    "services_gamification_integration.message.check_for_improvement_based_ac": "Check for improvement-based achievements.",
    "services_gamification_integration.message.get_comprehensive_engagement_s": "Get comprehensive engagement summary including gamification data.",
    "services_gamification_integration.message.00_00": "+00:00",
    "services_availability_service.message.availability_service_for_manag": "Availability service for managing trainer availability.",
    "services_availability_service.message.get_or_create_the_def": "\n        Get or create the default availability schedule for a user.\n        \n        Args:\n            user_id (int): The user ID\n            \n        Returns:\n            AvailabilitySchedule: The availability schedule\n        ",
    "services_availability_service.message.09_00": "09:00",
    "services_availability_service.message.17_00": "17:00",
    "services_availability_service.message.get_a_user_s_availabi": "\n        Get a user's availability between two dates.\n        \n        Args:\n            user_id (int): The user ID\n            start_date (datetime): The start date\n            end_date (datetime): The end date\n            \n        Returns:\n            dict: The user's availability\n        ",
    "services_availability_service.message.y_m_d": "%Y-%m-%d",
    "services_availability_service.message.00_00": "00:00",
    "services_availability_service.message.23_59": "23:59",
    "services_availability_service.message.00_00_1": "00:00",
    "services_availability_service.message.23_59_1": "23:59",
    "services_availability_service.message.h_m": "%H:%M",
    "services_availability_service.message.h_m_1": "%H:%M",
    "services_availability_service.message.y_m_d_1": "%Y-%m-%d",
    "services_availability_service.message.y_m_d_2": "%Y-%m-%d",
    "services_availability_service.message.y_m_d_3": "%Y-%m-%d",
    "services_availability_service.message.get_available_time_sl": "\n        Get available time slots for a specific date.\n        \n        Args:\n            user_id (int): The user ID\n            date (datetime): The date\n            duration_minutes (int): The appointment duration in minutes\n            \n        Returns:\n            list: List of available time slots\n        ",
    "services_availability_service.message.02d": "02d",
    "services_availability_service.message.02d_1": "02d",
    "services_availability_service.message.02d_2": "02d",
    "services_availability_service.message.02d_3": "02d",
    "services_webrtc_service.message.webrtc_service_implementation": "WebRTC service implementation for direct peer-to-peer video calls.",
    "services_webrtc_service.message.add_participant_to_room": "Add participant to room.",
    "services_webrtc_service.message.joined_room": " joined room ",
    "services_webrtc_service.message.left_room": " left room ",
    "services_webrtc_service.message.get_list_of_participants_for_r": "Get list of participants for room.",
    "services_webrtc_service.message.add_chat_message_to_room": "Add chat message to room.",
    "services_webrtc_service.message.check_if_room_is_empty": "Check if room is empty.",
    "services_webrtc_service.message.webrtc_service_for_managing_pe": "WebRTC service for managing peer-to-peer video calls.",
    "services_webrtc_service.message.create_a_new_webrtc_r": "\n        Create a new WebRTC room.\n        \n        Args:\n            conference_id: Optional conference ID to associate with room\n            \n        Returns:\n            str: Room ID\n        ",
    "services_webrtc_service.message.not_found": " not found",
    "services_webrtc_service.message.not_found_1": " not found",
    "services_webrtc_service.message.stun_stun_l_google_com_19302": "stun:stun.l.google.com:19302",
    "services_webrtc_service.message.stun_stun1_l_google_com_19302": "stun:stun1.l.google.com:19302",
    "services_webrtc_service.message.cleaned_up_empty_room": "Cleaned up empty room ",
    "services_webrtc_service.message.handle_webrtc_signali": "\n        Handle WebRTC signaling messages.\n        \n        Args:\n            socket_id: Socket connection ID\n            signal_data: Signaling data\n            \n        Returns:\n            Dict: Response data\n        ",
    "services_webrtc_service.message.not_connected_to_any_room": "Not connected to any room",
    "services_webrtc_service.message.another_participant_is_already": "Another participant is already sharing screen",
    "services_webrtc_service.message.send_chat_message_in": "\n        Send chat message in room.\n        \n        Args:\n            socket_id: Socket connection ID\n            message: Chat message\n            \n        Returns:\n            Dict: Chat message data\n        ",
    "services_webrtc_service.message.not_connected_to_any_room_1": "Not connected to any room",
    "services_webrtc_service.message.start_recording_in_ro": "\n        Start recording in room.\n        \n        Args:\n            socket_id: Socket connection ID\n            \n        Returns:\n            Dict: Recording start response\n        ",
    "services_webrtc_service.message.not_connected_to_any_room_2": "Not connected to any room",
    "services_webrtc_service.message.only_host_can_start_recording": "Only host can start recording",
    "services_webrtc_service.message.recording_is_already_in_progre": "Recording is already in progress",
    "services_webrtc_service.message.stop_recording_in_roo": "\n        Stop recording in room.\n        \n        Args:\n            socket_id: Socket connection ID\n            \n        Returns:\n            Dict: Recording stop response\n        ",
    "services_webrtc_service.message.not_connected_to_any_room_3": "Not connected to any room",
    "services_webrtc_service.message.only_host_can_stop_recording": "Only host can stop recording",
    "services_webrtc_service.message.no_recording_in_progress": "No recording in progress",
    "services_webrtc_service.message.not_found_2": " not found",
    "services_webrtc_service.message.register_webrtc_event_handlers": "Register WebRTC event handlers with SocketIO.",
    "services_webrtc_service.message.handle_joining_webrtc_room": "Handle joining WebRTC room.",
    "services_webrtc_service.message.missing_room_id_or_user_id": "Missing room_id or user_id",
    "services_two_factor_service.message.service_for_managing_two_facto": "Service for managing two-factor authentication.",
    "services_two_factor_service.message.set_up_2fa_for_a_user": "Set up 2FA for a user.",
    "services_two_factor_service.message.2fa_is_already_enabled_for_thi": "2FA is already enabled for this user",
    "services_two_factor_service.message.verify_2fa_setup_with_initial": "Verify 2FA setup with initial token.",
    "services_two_factor_service.message.2fa_not_set_up_for_this_user": "2FA not set up for this user",
    "services_two_factor_service.message.2fa_is_already_enabled": "2FA is already enabled",
    "services_two_factor_service.message.verify_a_2fa_token_for_login": "Verify a 2FA token for login.",
    "services_two_factor_service.message.2fa_not_enabled_for_this_user": "2FA not enabled for this user",
    "services_two_factor_service.message.low_on_backup_codes": "Low on Backup Codes",
    "services_two_factor_service.message.disable_2fa_for_a_user": "Disable 2FA for a user.",
    "services_two_factor_service.message.2fa_not_set_up_for_this_user_1": "2FA not set up for this user",
    "services_two_factor_service.message.two_factor_authentication_has": "Two-factor authentication has been disabled for your account. Your account security may be reduced.",
    "services_two_factor_service.message.regenerate_backup_codes_for_a": "Regenerate backup codes for a user.",
    "services_two_factor_service.message.2fa_not_enabled_for_this_user_1": "2FA not enabled for this user",
    "services_two_factor_service.message.create_a_2fa_verification_sess": "Create a 2FA verification session.",
    "services_two_factor_service.message.verify_a_2fa_session_with_toke": "Verify a 2FA session with token.",
    "services_two_factor_service.message.get_2fa_status_for_a_user": "Get 2FA status for a user.",
    "services_two_factor_service.message.send_reminder_to_set_up_2fa": "Send reminder to set up 2FA.",
    "services_two_factor_service.message.for_enhanced_security_we_r": ",\n\nFor enhanced security, we recommend enabling two-factor authentication on your account. This adds an extra layer of protection.\n\nYou can enable 2FA in your account security settings.",
    "services_email_service.message.generate_a_secure_token_f": "\n    Generate a secure token for email verification, password reset, etc.\n    \n    Args:\n        data: Data to encode in the token\n        salt (str): Secret salt for the token\n        expires_in (int): Token expiration time in seconds\n        \n    Returns:\n        str: Secure token\n    ",
    "services_email_service.message.email_salt": "email-salt",
    "services_email_service.message.email_salt_1": "email-salt",
    "services_email_service.message.password_reset_salt": "password-reset-salt",
    "services_email_service.message.http_localhost_5173": "http://localhost:5173",
    "services_email_service.message.dear": "\n    Dear ",
    "services_email_service.message.to_reset_your_passw": ",\n    \n    To reset your password, please click on the following link:\n    \n    ",
    "services_email_service.message.if_you_did_not_reque": "\n    \n    If you did not request a password reset, please ignore this email.\n    \n    The link will expire in 1 hour.\n    \n    Best regards,\n    BDC Team\n    ",
    "services_email_service.message.p_dear": "\n    <p>Dear ",
    "services_email_service.message.p_p_to_reset_your_pas": ",</p>\n    <p>To reset your password, please click on the following link:</p>\n    <p><a href=\"",
    "services_email_service.message.reset_your_password_a_p": "\">Reset Your Password</a></p>\n    <p>If you did not request a password reset, please ignore this email.</p>\n    <p>The link will expire in 1 hour.</p>\n    <p>Best regards,<br>BDC Team</p>\n    ",
    "services_email_service.message.dear_1": "\n    Dear ",
    "services_email_service.message.p_dear_1": "\n    <p>Dear ",
    "services_email_service.message.dear_2": "\n    Dear ",
    "services_email_service.message.": ",\n    \n    ",
    "services_email_service.message.you_have_a_new_notification": "You have a new notification.",
    "services_email_service.message.best_regards_bd": "\n    \n    Best regards,\n    BDC Team\n    ",
    "services_email_service.message.p_dear_2": "\n    <p>Dear ",
    "services_email_service.message.p_p": ",</p>\n    <p>",
    "services_email_service.message.you_have_a_new_notification_1": "You have a new notification.",
    "services_email_service.message.p_p_best_regards_br_b": "</p>\n    <p>Best regards,<br>BDC Team</p>\n    ",
    "services_email_service.message.email_service_for_sending_vari": "Email service for sending various types of emails.",
    "services_email_service.message.dear_3": "\nDear ",
    "services_email_service.message.trainer": "\nTrainer: ",
    "services_email_service.message.frequency": "\nFrequency: ",
    "services_email_service.message.starting": "\nStarting: ",
    "services_email_service.message.number_of_appointments": "\nNumber of appointments: ",
    "services_email_service.message.please_log_in_to_your_accoun": "\n\nPlease log in to your account to view the full schedule.\n\nBest regards,\nBDC Team\n        ",
    "services_email_service.message.li_li_strong_trainer": "</li>\n    <li><strong>Trainer:</strong> ",
    "services_email_service.message.li_li_strong_frequenc": "</li>\n    <li><strong>Frequency:</strong> ",
    "services_email_service.message.li_li_strong_starting": "</li>\n    <li><strong>Starting:</strong> ",
    "services_email_service.message.li_li_strong_number_o": "</li>\n    <li><strong>Number of appointments:</strong> ",
    "services_email_service.message.li_ul_p_please_log_in_t": "</li>\n</ul>\n<p>Please log in to your account to view the full schedule.</p>\n<p>Best regards,<br>BDC Team</p>\n        ",
    "services_email_service.message.send_email_when_a_recurring_ap": "Send email when a recurring appointment series is cancelled.",
    "services_email_service.message.dear_4": "\nDear ",
    "services_email_service.message.your_recurring_appointment": ",\n\nYour recurring appointment series has been cancelled:\n\nTitle: ",
    "services_email_service.message.number_of_cancelled_appointme": "\nNumber of cancelled appointments: ",
    "services_email_service.message.reason": "\nReason: ",
    "services_email_service.message.if_you_have_any_questions_p": "\n\nIf you have any questions, please contact your trainer.\n\nBest regards,\nBDC Team\n        ",
    "services_email_service.message.h2_recurring_appointments_ca": "\n<h2>Recurring Appointments Cancelled</h2>\n<p>Dear ",
    "services_email_service.message.p_p_your_recurring_appoin": ",</p>\n<p>Your recurring appointment series has been cancelled:</p>\n<ul>\n    <li><strong>Title:</strong> ",
    "services_email_service.message.li_li_strong_number_o_1": "</li>\n    <li><strong>Number of cancelled appointments:</strong> ",
    "services_email_service.message.li_li_strong_reason": "</li>\n    <li><strong>Reason:</strong> ",
    "services_email_service.message.li_ul_p_if_you_have_any": "</li>\n</ul>\n<p>If you have any questions, please contact your trainer.</p>\n<p>Best regards,<br>BDC Team</p>\n        ",
    "services_recurring_appointment_service.message.recurring_appointment_service": "Recurring appointment service module.",
    "services_recurring_appointment_service.message.service_for_managing_recurring": "Service for managing recurring appointments.",
    "services_recurring_appointment_service.message.series_or_pattern_not_found": "Series or pattern not found",
    "services_recurring_appointment_service.message.cancelled_due_to_series_except": "Cancelled due to series exception",
    "services_recurring_appointment_service.message.cancelled": "\nCancelled: ",
    "services_recurring_appointment_service.message.get_the_series_for_a_given_app": "Get the series for a given appointment.\n        \n        Args:\n            appointment_id: ID of the appointment\n            \n        Returns:\n            AppointmentSeries or None\n        ",
    "services_video_conference_service.message.video_conference_service_imple": "Video Conference service implementation module.",
    "services_video_conference_service.message.zoom_video_conference_provider": "Zoom video conference provider implementation.",
    "services_video_conference_service.message.https_api_zoom_us_v2": "https://api.zoom.us/v2",
    "services_video_conference_service.message.get_access_token_for_zoom_api": "Get access token for Zoom API.",
    "services_video_conference_service.message.make_authenticated_request_to": "Make authenticated request to Zoom API.",
    "services_video_conference_service.message.create_a_zoom_meeting": "Create a Zoom meeting.",
    "services_video_conference_service.message.y_m_dt_h_m_sz": "%Y-%m-%dT%H:%M:%SZ",
    "services_video_conference_service.message.y_m_dt_h_m_sz_1": "%Y-%m-%dT%H:%M:%SZ",
    "services_video_conference_service.message.start_recording_a_zoom_meeting": "Start recording a Zoom meeting.",
    "services_video_conference_service.message.stop_recording_a_zoom_meeting": "Stop recording a Zoom meeting.",
    "services_video_conference_service.message.get_recordings_for_a_zoom_meet": "Get recordings for a Zoom meeting.",
    "services_video_conference_service.message.google_meet_video_conference_p": "Google Meet video conference provider implementation.",
    "services_video_conference_service.message.https_meet_googleapis_com_v2": "https://meet.googleapis.com/v2",
    "services_video_conference_service.message.create_a_google_meet_meeting": "Create a Google Meet meeting.",
    "services_video_conference_service.message.meet": "meet-",
    "services_video_conference_service.message.https_meet_google_com": "https://meet.google.com/",
    "services_video_conference_service.message.start_recording_a_google_meet": "Start recording a Google Meet meeting.",
    "services_video_conference_service.message.stop_recording_a_google_meet_m": "Stop recording a Google Meet meeting.",
    "services_video_conference_service.message.get_recordings_for_a_google_me": "Get recordings for a Google Meet meeting.",
    "services_video_conference_service.message.microsoft_teams_video_conferen": "Microsoft Teams video conference provider implementation.",
    "services_video_conference_service.message.https_graph_microsoft_com_v1": "https://graph.microsoft.com/v1.0",
    "services_video_conference_service.message.create_a_microsoft_teams_meeti": "Create a Microsoft Teams meeting.",
    "services_video_conference_service.message.teams": "teams-",
    "services_video_conference_service.message.https_teams_microsoft_com_l": "https://teams.microsoft.com/l/meetup-join/",
    "services_video_conference_service.message.start_recording_a_microsoft_te": "Start recording a Microsoft Teams meeting.",
    "services_video_conference_service.message.stop_recording_a_microsoft_tea": "Stop recording a Microsoft Teams meeting.",
    "services_video_conference_service.message.get_recordings_for_a_microsoft": "Get recordings for a Microsoft Teams meeting.",
    "services_video_conference_service.message.webrtc_direct_peer_to_peer_pro": "WebRTC direct peer-to-peer provider implementation.",
    "services_video_conference_service.message.create_a_webrtc_meeting_room": "Create a WebRTC meeting room.",
    "services_video_conference_service.message.http_localhost_3000": "http://localhost:3000",
    "services_video_conference_service.message.start_recording_a_webrtc_meeti": "Start recording a WebRTC meeting.",
    "services_video_conference_service.message.stop_recording_a_webrtc_meetin": "Stop recording a WebRTC meeting.",
    "services_video_conference_service.message.get_recordings_for_a_webrtc_me": "Get recordings for a WebRTC meeting.",
    "services_video_conference_service.message.video_conference_service_for_m": "Video Conference service for managing video conferences.",
    "services_video_conference_service.message.initialize_video_conference_se": "Initialize video conference service.",
    "services_video_conference_service.message.not_found": " not found",
    "services_video_conference_service.message.not_found_1": " not found",
    "services_video_conference_service.message.conference_already_exists_for": "Conference already exists for this appointment",
    "services_video_conference_service.message.video_conference_for_appointme": "Video conference for appointment: ",
    "services_video_conference_service.message.not_found_2": " not found",
    "services_video_conference_service.message.not_found_3": " not found",
    "services_video_conference_service.message.you_don_t_have_permission_to_c": "You don't have permission to cancel this conference",
    "services_video_conference_service.message.not_found_4": " not found",
    "services_video_conference_service.message.you_are_not_a_participant_in_t": "You are not a participant in this conference",
    "services_video_conference_service.message.not_found_5": " not found",
    "services_video_conference_service.message.you_don_t_have_permission_to_e": "You don't have permission to end this conference",
    "services_video_conference_service.message.not_found_6": " not found",
    "services_video_conference_service.message.participant_already_exists_in": "Participant already exists in this conference",
    "services_video_conference_service.message.not_found_7": " not found",
    "services_video_conference_service.message.not_found_8": " not found",
    "services_video_conference_service.message.you_don_t_have_permission_to_s": "You don't have permission to start recording",
    "services_video_conference_service.message.recording_is_not_allowed_for_t": "Recording is not allowed for this conference",
    "services_video_conference_service.message.not_found_9": " not found",
    "services_video_conference_service.message.you_don_t_have_permission_to_s_1": "You don't have permission to stop recording",
    "services_video_conference_service.message.get_analytics_for_a_v": "\n        Get analytics for a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            \n        Returns:\n            Dict: Analytics data\n        ",
    "services_video_conference_service.message.not_found_10": " not found",
    "services_video_conference_service.message.send_notifications_for_confere": "Send notifications for conference events.",
    "services_video_conference_service.message.your_video_conference": "Your video conference '",
    "services_video_conference_service.message.has_been": "' has been ",
    "services_video_conference_service.message.join_at": " Join at: ",
    "services_video_conference_service.message.generate_invitation_message_fo": "Generate invitation message for a conference.",
    "services_video_conference_service.message.you_are_invited_to_join_the_v": "\nYou are invited to join the video conference: ",
    "services_video_conference_service.message.date_time": "\n\nDate & Time: ",
    "services_video_conference_service.message.y_m_d_at_h_m_utc": "%Y-%m-%d at %H:%M UTC",
    "services_video_conference_service.message.duration": "\nDuration: ",
    "services_video_conference_service.message.minutes_join_url": " minutes\n\nJoin URL: ",
    "services_video_conference_service.message.host": "\n\nHost: ",
    "services_video_conference_service.message.please_join_a_few_minutes_be": "\n\nPlease join a few minutes before the scheduled time.\n        ",
    "services_video_conference_service.message.m_d_h_m": "%m/%d %H:%M",
    "services_tracing_service.message.distributed_tracing_service_f": "\nDistributed Tracing Service for BDC Application\nProvides OpenTelemetry instrumentation and correlation ID management\n",
    "services_tracing_service.message.central_service_for_manag": "\n    Central service for managing distributed tracing and correlation IDs\n    ",
    "services_tracing_service.message.bdc_backend": "bdc-backend",
    "services_tracing_service.message.1_0_0": "1.0.0",
    "services_tracing_service.message.bdc_backend_1": "bdc-backend",
    "services_tracing_service.message.1_0_0_1": "1.0.0",
    "services_tracing_service.message.http_jaeger_14268_api_traces": "http://jaeger:14268/api/traces",
    "services_tracing_service.message.http_otel_collector_4318": "http://otel-collector:4318",
    "services_tracing_service.message.1_0": "1.0",
    "services_tracing_service.message.service_instance_id": "service.instance.id",
    "services_tracing_service.message.api_key": "api-key",
    "services_tracing_service.message.distributed_tracing_initialize": "Distributed tracing initialized for ",
    "services_tracing_service.message.total_number_of_http_requests": "Total number of HTTP requests",
    "services_tracing_service.message.http_request_duration_in_secon": "HTTP request duration in seconds",
    "services_tracing_service.message.total_number_of_database_opera": "Total number of database operations",
    "services_tracing_service.message.database_operation_duration_in": "Database operation duration in seconds",
    "services_tracing_service.message.auto_instrument_flask_and_othe": "Auto-instrument Flask and other libraries",
    "services_tracing_service.message.generate_a_new_correlation_id": "Generate a new correlation ID",
    "services_tracing_service.message.generate_a_new_request_id": "Generate a new request ID",
    "services_tracing_service.message.get_current_correlation_id": "Get current correlation ID",
    "services_tracing_service.message.set_correlation_id_in_all_cont": "Set correlation ID in all contexts",
    "services_tracing_service.message.get_current_request_id": "Get current request ID",
    "services_tracing_service.message.set_request_id_in_all_contexts": "Set request ID in all contexts",
    "services_tracing_service.message.get_current_user_context": "Get current user context",
    "services_tracing_service.message.create_a_new_span": "Create a new span",
    "services_tracing_service.message.context_manager_for_tracing_an": "Context manager for tracing an operation",
    "services_tracing_service.message.inject_tracing_headers_for_out": "Inject tracing headers for outgoing requests",
    "services_tracing_service.message.x_correlation_id": "x-correlation-id",
    "services_tracing_service.message.x_request_id": "x-request-id",
    "services_tracing_service.message.record_http_request_metrics": "Record HTTP request metrics",
    "services_tracing_service.message.record_database_operation_metr": "Record database operation metrics",
    "services_tracing_service.message.decorator_for_tracing_fun": "\n    Decorator for tracing function calls\n    \n    Usage:\n        @trace_function(\"user_authentication\")\n        def authenticate_user(email, password):\n            # Function implementation\n            pass\n    ",
    "services_tracing_service.message.function_result_type": "function.result_type",
    "services_tracing_service.message.db": "db.",
    "services_tracing_service.message.db_rows_affected": "db.rows_affected",
    "services_tracing_service.message.get_current_correlation_id_1": "Get current correlation ID",
    "services_tracing_service.message.get_current_request_id_1": "Get current request ID",
    "services_alert_service.message.real_time_alert_service_for_b": "\nReal-time Alert Service for BDC Application\nHandles notifications for critical events via multiple channels\n",
    "services_alert_service.message.alert_event_data_structure": "Alert event data structure",
    "services_alert_service.message.convert_to_dictionary_for_json": "Convert to dictionary for JSON serialization",
    "services_alert_service.message.central_alert_service_for": "\n    Central alert service for handling real-time notifications\n    ",
    "services_alert_service.message.alert_service_initialized_with": "Alert service initialized with channels: ",
    "services_alert_service.message.smtp_gmail_com": "smtp.gmail.com",
    "services_alert_service.message.noreply_bdc_com": "noreply@bdc.com",
    "services_alert_service.message.record_alert_in_history_for_an": "Record alert in history for analysis",
    "services_alert_service.message.send_alert_to_specific_channel": "Send alert to specific channel",
    "services_alert_service.message.send_alert_to_slack": "Send alert to Slack",
    "services_alert_service.message.ff0000": "#FF0000",
    "services_alert_service.message.ff8c00": "#FF8C00",
    "services_alert_service.message.ffd700": "#FFD700",
    "services_alert_service.message.32cd32": "#32CD32",
    "services_alert_service.message.808080": "#808080",
    "services_alert_service.message.y_m_d_h_m_s_utc": "%Y-%m-%d %H:%M:%S UTC",
    "services_alert_service.message.send_alert_via_email": "Send alert via email",
    "services_alert_service.message.bdc_alert": "[BDC Alert - ",
    "services_alert_service.message.html": "\n            <html>\n            <body>\n                <h2 style=\"color: ",
    "services_alert_service.message.bdc": ";\">\n                    🚨 BDC Alert - ",
    "services_alert_service.message.h2": "\n                </h2>\n                <h3>",
    "services_alert_service.message.h3_p_stro": "</h3>\n                <p><strong>Message:</strong> ",
    "services_alert_service.message.p_p_stron": "</p>\n                <p><strong>Source:</strong> ",
    "services_alert_service.message.p_p_stron_1": "</p>\n                <p><strong>Event Type:</strong> ",
    "services_alert_service.message.p_p_stron_2": "</p>\n                <p><strong>Timestamp:</strong> ",
    "services_alert_service.message.y_m_d_h_m_s_utc_1": "%Y-%m-%d %H:%M:%S UTC",
    "services_alert_service.message.p": "</p>\n                ",
    "services_alert_service.message.p_strong_correlation_id_st": "<p><strong>Correlation ID:</strong> ",
    "services_alert_service.message.p_1": "</p>",
    "services_alert_service.message.": "\n                \n                <h4>Metadata:</h4>\n                <pre>",
    "services_alert_service.message.pre": "</pre>\n                \n                <hr>\n                <p><small>This alert was generated by the BDC Alert System</small></p>\n            </body>\n            </html>\n            ",
    "services_alert_service.message.bdc_alert_1": "\n            BDC Alert - ",
    "services_alert_service.message.titl": "\n            \n            Title: ",
    "services_alert_service.message.message": "\n            Message: ",
    "services_alert_service.message.source": "\n            Source: ",
    "services_alert_service.message.event_type": "\n            Event Type: ",
    "services_alert_service.message.timestamp": "\n            Timestamp: ",
    "services_alert_service.message.y_m_d_h_m_s_utc_2": "%Y-%m-%d %H:%M:%S UTC",
    "services_alert_service.message.meta": "\n            \n            Metadata:\n            ",
    "services_alert_service.message._1": "\n            \n            ---\n            This alert was generated by the BDC Alert System\n            ",
    "services_alert_service.message.send_alert_to_webhook_endpoint": "Send alert to webhook endpoint",
    "services_alert_service.message.bdc_alert_system": "bdc-alert-system",
    "services_alert_service.message.send_alert_to_microsoft_teams": "Send alert to Microsoft Teams",
    "services_alert_service.message.type": "@type",
    "services_alert_service.message.context": "@context",
    "services_alert_service.message.themecolor": "themeColor",
    "services_alert_service.message.https_schema_org_extensions": "https://schema.org/extensions",
    "services_alert_service.message.activitytitle": "activityTitle",
    "services_alert_service.message.activitysubtitle": "activitySubtitle",
    "services_alert_service.message.bdc_alert_2": "🚨 BDC Alert - ",
    "services_alert_service.message.y_m_d_h_m_s_utc_3": "%Y-%m-%d %H:%M:%S UTC",
    "services_alert_service.message.send_alert_to_discord": "Send alert to Discord",
    "services_alert_service.message.y_m_d_h_m_s_utc_4": "%Y-%m-%d %H:%M:%S UTC",
    "services_alert_service.message.total_alerts_24h": "total_alerts_24h",
    "services_alert_service.message.severity_breakdown_24h": "severity_breakdown_24h",
    "services_alert_service.message.convenience_function_for_sendi": "Convenience function for sending critical alerts",
    "services_alert_service.message.convenience_function_for_sendi_1": "Convenience function for sending security alerts",
    "services_alert_service.message.convenience_function_for_sendi_2": "Convenience function for sending performance alerts",
    "services_user_service.message.user_service_implementation_wi": "User service implementation with dependency injection.",
    "services_user_service.message.user_service_with_dependency_i": "User service with dependency injection.",
    "services_user_service.message.initialize_user_service_with_d": "Initialize user service with dependencies.",
    "services_user_service.message.get_user_repository_instance": "Get user repository instance.",
    "services_user_service.message.create_a_new_user": "Create a new user.",
    "services_user_service.message.already_exists": " already exists",
    "services_user_service.message.get_user_by_id": "Get user by ID.",
    "services_user_service.message.get_user_by_email": "Get user by email.",
    "services_user_service.message.search_users_with_pagination": "Search users with pagination.",
    "services_user_service.message.activate_a_user_account": "Activate a user account.",
    "services_user_service.message.deactivate_a_user_account": "Deactivate a user account.",
    "services_user_service.message.get_all_users_with_a_specific": "Get all users with a specific role.",
    "services_user_service.message.get_all_users_for_a_tenant": "Get all users for a tenant.",
    "services_user_service.message.upload_user_profile_picture": "Upload user profile picture.",
    "services_user_service.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "services_user_service.message.get_user_activity_history": "Get user activity history.",
    "services_user_service.message.get_overall_users_statistics": "Get overall users statistics.",
    "services_user_service.message.check_if_user_has_a_specific_p": "Check if user has a specific permission.",
    "services_user_service.message.get_all_permissions_for_a_user": "Get all permissions for a user.",
    "services_user_service.message.clear_relevant_cache_entries": "Clear relevant cache entries.",
    "services_search_service.message.search_and_filter_service": "Search and filter service.",
    "services_search_service.message.service_for_global_search_and": "Service for global search and filtering.",
    "services_search_service.message.perform_global_search_across_m": "Perform global search across multiple models.",
    "services_search_service.message.apply_filters_to_a_query": "Apply filters to a query.",
    "services_search_service.message.apply_sorting_to_a_query": "Apply sorting to a query.",
    "services_adaptive_test_service.message.adaptive_test_service_implemen": "Adaptive Test Service implementing Computerized Adaptive Testing (CAT) with IRT.",
    "services_adaptive_test_service.message.service_for_managing_adaptive": "Service for managing adaptive tests using CAT algorithm and IRT.",
    "services_adaptive_test_service.message.create_a_new_adaptive_test_que": "Create a new adaptive test question pool.",
    "services_adaptive_test_service.message.add_a_question_with_irt_parame": "Add a question with IRT parameters to the pool.",
    "services_adaptive_test_service.message.start_a_new_adaptive_test_sess": "Start a new adaptive test session.",
    "services_adaptive_test_service.message.no_more_questions_available": "No more questions available",
    "services_adaptive_test_service.message.consider_advanced_topics_and_c": "Consider advanced topics and challenging materials",
    "services_adaptive_test_service.message.explore_teaching_or_mentoring": "Explore teaching or mentoring opportunities",
    "services_adaptive_test_service.message.focus_on_mastering_remaining_c": "Focus on mastering remaining concepts",
    "services_adaptive_test_service.message.challenge_yourself_with_harder": "Challenge yourself with harder problems",
    "services_adaptive_test_service.message.practice_regularly_with_guided": "Practice regularly with guided exercises",
    "services_adaptive_test_service.message.get_questions_that_haven_t_bee": "Get questions that haven't been asked yet.",
    "services_adaptive_test_service.message.apply_exposure_control_to_prev": "Apply exposure control to prevent overuse of questions.",
    "services_adaptive_test_service.message.check_if_the_answer_is_correct": "Check if the answer is correct.",
    "services_adaptive_test_service.message.calculate_percentile_rank_for": "Calculate percentile rank for given ability.",
    "services_adaptive_test_service.message.analyze_patterns_in_responses": "Analyze patterns in responses.",
    "services_adaptive_test_service.message.calculate_response_consistency": "Calculate response consistency score.",
    "services_adaptive_test_service.message.service_for_managing_adaptive_1": "Service for managing adaptive questions.",
    "services_adaptive_test_service.message.calibrate_irt_parameters_based": "Calibrate IRT parameters based on response data.",
    "services_adaptive_test_service.message.get_detailed_statistics_for_a": "Get detailed statistics for a question.",
    "services_adaptive_test_service.message.service_for_integrating_adapti": "Service for integrating adaptive tests with regular evaluation system.",
    "services_adaptive_test_service.message.create_an_evaluation_that_uses": "Create an evaluation that uses adaptive testing.",
    "services_adaptive_test_service.message.test_set_not_found": "Test set not found",
    "services_adaptive_test_service.message.sync_adaptive_test_results_to": "Sync adaptive test results to regular evaluation.",
    "services_appointment_service_factory.message.factory_for_creating_appointme": "Factory for creating appointment service instances.",
    "services_appointment_service_factory.message.factory_for_creating_appointme_1": "Factory for creating appointment service instances.",
    "services_appointment_service_factory.message.create_an_appointment_service": "Create an appointment service instance with all dependencies.",
    "services_evaluation_service.message.evaluation_service_with_depend": "Evaluation service with dependency injection.",
    "services_evaluation_service.message.service_for_managing_evaluatio": "Service for managing evaluations.",
    "services_evaluation_service.message.create_a_new_evaluation": "Create a new evaluation.",
    "services_evaluation_service.message.get_evaluation_by_id": "Get evaluation by ID.",
    "services_evaluation_service.message.get_evaluations_with_filters_a": "Get evaluations with filters and pagination.",
    "services_evaluation_service.message.submitted_responses_for_evalua": "Submitted responses for evaluation ",
    "services_evaluation_service.message.get_all_evaluations_for_a_bene": "Get all evaluations for a beneficiary.",
    "services_evaluation_service.message.get_statistics_for_an_evaluati": "Get statistics for an evaluation.",
    "services_gamification_service.message.comprehensive_gamification_ser": "Comprehensive Gamification Service for BDC application.",
    "services_gamification_service.message.main_service_for_gamification": "Main service for gamification features.",
    "services_gamification_service.message.get_or_create_user_xp_profile": "Get or create user XP profile.",
    "services_gamification_service.message.award_points_to_a_user_and_han": "Award points to a user and handle level progression.",
    "services_gamification_service.message.apply_temporary_xp_multiplier": "Apply temporary XP multiplier to user.",
    "services_gamification_service.message.create_a_new_badge": "Create a new badge.",
    "services_gamification_service.message.award_a_badge_to_a_user": "Award a badge to a user.",
    "services_gamification_service.message.badge_earned": "🏆 Badge Earned: ",
    "services_gamification_service.message.congratulations_you_ve_earned": "Congratulations! You've earned the ",
    "services_gamification_service.message.badge": " badge.",
    "services_gamification_service.message.check_and_award_achievements_b": "Check and award achievements based on user activity.",
    "services_gamification_service.message.check_for_level_based_achievem": "Check for level-based achievements.",
    "services_gamification_service.message.check_for_activity_based_achie": "Check for activity-based achievements.",
    "services_gamification_service.message.check_for_progress_based_achie": "Check for progress-based achievements.",
    "services_gamification_service.message.check_for_streak_based_achieve": "Check for streak-based achievements.",
    "services_gamification_service.message.evaluate_if_achievement_condit": "Evaluate if achievement conditions are met.",
    "services_gamification_service.message.get_user_s_earned_badges": "Get user's earned badges.",
    "services_gamification_service.message.get_badges_available_to_earn": "Get badges available to earn (not yet earned by user).",
    "services_gamification_service.message.create_a_new_leaderboard": "Create a new leaderboard.",
    "services_gamification_service.message.calculate_score_for_leaderboar": "Calculate score for leaderboard metric.",
    "services_gamification_service.message.recalculate_positions_for_all": "Recalculate positions for all entries in a leaderboard.",
    "services_gamification_service.message.get_leaderboard_with_top_entri": "Get leaderboard with top entries.",
    "services_gamification_service.message.get_user_s_position_in_a_speci": "Get user's position in a specific leaderboard.",
    "services_gamification_service.message.create_a_new_challenge": "Create a new challenge.",
    "services_gamification_service.message.join_a_user_to_a_challenge": "Join a user to a challenge.",
    "services_gamification_service.message.challenge_is_not_active": "Challenge is not active",
    "services_gamification_service.message.user_is_not_participating_in_t": "User is not participating in this challenge",
    "services_gamification_service.message.handle_challenge_completion_re": "Handle challenge completion rewards and notifications.",
    "services_gamification_service.message.challenge": " challenge.",
    "services_gamification_service.message.get_active_challenges_for_a_us": "Get active challenges for a user or tenant.",
    "services_gamification_service.message.get_user_s_challenge_participa": "Get user's challenge participations.",
    "services_gamification_service.message.create_a_new_team": "Create a new team.",
    "services_gamification_service.message.join_a_user_to_a_team": "Join a user to a team.",
    "services_gamification_service.message.create_a_new_reward": "Create a new reward.",
    "services_gamification_service.message.redeem_a_reward_for_a_user": "Redeem a reward for a user.",
    "services_gamification_service.message.reward_redeemed": "🎁 Reward Redeemed: ",
    "services_gamification_service.message.for": " for ",
    "services_gamification_service.message.points": " points.",
    "services_gamification_service.message.get_available_rewards_optiona": "Get available rewards, optionally filtered by user's points.",
    "services_gamification_service.message.create_a_personal_goal_for_a_u": "Create a personal goal for a user.",
    "services_gamification_service.message.log_a_gamification_event_for_a": "Log a gamification event for analytics.",
    "services_gamification_service.message.get_comprehensive_progress_sum": "Get comprehensive progress summary for a user.",
    "services_gamification_service.message.get_user_engagement_metrics_fo": "Get user engagement metrics for the specified period.",
    "services_gamification_service.message.calculate_daily_activity_level": "Calculate daily activity levels.",
    "services_gamification_service.message.calculate_average_session_leng": "Calculate average session length in minutes.",
    "services_gamification_service.message.handle_gamification_for_user_l": "Handle gamification for user login.",
    "services_gamification_service.message.handle_gamification_for_evalua": "Handle gamification for evaluation completion.",
    "services_gamification_service.message.handle_gamification_for_progra": "Handle gamification for program completion.",
    "services_performance_prediction_service.message.performance_prediction_service": "Performance prediction service using machine learning.",
    "services_performance_prediction_service.message.service_for_predicting_benefic": "Service for predicting beneficiary performance using ML.",
    "services_performance_prediction_service.message.initialize_the_performance_pre": "Initialize the performance prediction service.",
    "services_performance_prediction_service.message.not_found": " not found",
    "services_performance_prediction_service.message.encode_education_level_to_nume": "Encode education level to numeric value.",
    "services_performance_prediction_service.message.calculate_monthly_attendance_r": "Calculate monthly attendance rates.",
    "services_performance_prediction_service.message.y_m": "%Y-%m",
    "services_performance_prediction_service.message.train_a_linear_regres": "\n        Train a linear regression model to predict assessment scores.\n        \n        Args:\n            tenant_id: ID of the tenant\n            user_id: ID of the user training the model\n            \n        Returns:\n            Dictionary with training results\n        ",
    "services_performance_prediction_service.message.training_score_prediction_mode": "Training score prediction model for tenant ",
    "services_performance_prediction_service.message.insufficient_data_for_training": "Insufficient data for training. Need at least 50 records.",
    "services_performance_prediction_service.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "services_performance_prediction_service.message.r2_score": "r2_score",
    "services_performance_prediction_service.message.insufficient_data_for_training_1": "Insufficient data for training. Need at least 50 records.",
    "services_performance_prediction_service.message.y_m_d_h_m_s_1": "%Y%m%d_%H%M%S",
    "services_performance_prediction_service.message.f1_score": "f1_score",
    "services_performance_prediction_service.message.train_a_time_series_m": "\n        Train a time series model to predict attendance patterns.\n        \n        Args:\n            tenant_id: ID of the tenant\n            user_id: ID of the user training the model\n            \n        Returns:\n            Dictionary with training results\n        ",
    "services_performance_prediction_service.message.training_attendance_time_serie": "Training attendance time series model for tenant ",
    "services_performance_prediction_service.message.insufficient_data_for_time_ser": "Insufficient data for time series analysis. Need at least 30 data points.",
    "services_performance_prediction_service.message.y_m_d_h_m_s_2": "%Y%m%d_%H%M%S",
    "services_performance_prediction_service.message.attendance_time_series_v": "Attendance Time Series v",
    "services_performance_prediction_service.message.generate_comprehensiv": "\n        Generate comprehensive performance predictions for a beneficiary.\n        \n        Args:\n            beneficiary_id: ID of the beneficiary\n            prediction_horizon: Time horizon for predictions ('week', 'month', 'quarter')\n            \n        Returns:\n            Dictionary with predictions and recommendations\n        ",
    "services_performance_prediction_service.message.not_found_1": " not found",
    "services_performance_prediction_service.message.prepare_training_data_for_scor": "Prepare training data for score prediction.",
    "services_performance_prediction_service.message.prepare_attendance_time_series": "Prepare attendance time series data.",
    "services_performance_prediction_service.message.make_score_prediction_using_tr": "Make score prediction using trained model.",
    "services_performance_prediction_service.message.make_attendance_prediction_usi": "Make attendance prediction using time series model.",
    "services_performance_prediction_service.message.get_attendance_history_for_a_s": "Get attendance history for a specific beneficiary.",
    "services_performance_prediction_service.message.calculate_overall_risk_level_b": "Calculate overall risk level based on predictions.",
    "services_performance_prediction_service.message.get_timedelta_for_prediction_h": "Get timedelta for prediction horizon.",
    "services_performance_prediction_service.message.generate_recommendations_for_l": "Generate recommendations for low predicted scores.",
    "services_performance_prediction_service.message.indicates_significant_learni": "% indicates significant learning challenges. Immediate intervention recommended.",
    "services_performance_prediction_service.message.schedule_one_on_one_tutoring_s": "Schedule one-on-one tutoring sessions",
    "services_performance_prediction_service.message.provide_additional_practice_ma": "Provide additional practice materials",
    "services_performance_prediction_service.message.consider_alternative_assessmen": "Consider alternative assessment methods",
    "services_performance_prediction_service.message.video_tutorials_for_difficult": "Video tutorials for difficult topics",
    "services_performance_prediction_service.message.additional_learning_resources": "Additional Learning Resources Recommended",
    "services_performance_prediction_service.message.suggests_need_for_supplement": "% suggests need for supplementary materials.",
    "services_performance_prediction_service.message.assign_extra_practice_exercise": "Assign extra practice exercises",
    "services_performance_prediction_service.message.encourage_participation_in_stu": "Encourage participation in study groups",
    "services_performance_prediction_service.message.peer_study_group_contacts": "Peer study group contacts",
    "services_performance_prediction_service.message.generate_recommendations_for_a": "Generate recommendations for at-risk beneficiaries.",
    "services_performance_prediction_service.message.schedule_immediate_counseling": "Schedule immediate counseling session",
    "services_performance_prediction_service.message.consider_program_modification": "Consider program modification or alternative pathways",
    "services_performance_prediction_service.message.increase_check_in_frequency_to": "Increase check-in frequency to daily",
    "services_performance_prediction_service.message.at_risk_of_non_completion": "At Risk of Non-Completion",
    "services_performance_prediction_service.message.indicates_significant_risk": "% indicates significant risk.",
    "services_performance_prediction_service.message.implement_weekly_progress_revi": "Implement weekly progress reviews",
    "services_performance_prediction_service.message.address_any_personal_challenge": "Address any personal challenges affecting performance",
    "services_performance_prediction_service.message.generate_recommendations_for_a_1": "Generate recommendations for attendance issues.",
    "services_performance_prediction_service.message.severe_attendance_issues_expec": "Severe Attendance Issues Expected",
    "services_performance_prediction_service.message.predicted_attendance_rate_of": "Predicted attendance rate of ",
    "services_performance_prediction_service.message.requires_immediate_action": "% requires immediate action.",
    "services_performance_prediction_service.message.contact_beneficiary_to_underst": "Contact beneficiary to understand attendance barriers",
    "services_performance_prediction_service.message.consider_flexible_scheduling_o": "Consider flexible scheduling options",
    "services_performance_prediction_service.message.implement_attendance_improveme": "Implement attendance improvement plan",
    "services_performance_prediction_service.message.set_up_automated_attendance_re": "Set up automated attendance reminders",
    "services_performance_prediction_service.message.is_below_minimum_requirement": "% is below minimum requirements.",
    "services_performance_prediction_service.message.send_attendance_reminders_befo": "Send attendance reminders before each session",
    "services_performance_prediction_service.message.discuss_importance_of_regular": "Discuss importance of regular attendance",
    "services_performance_prediction_service.message.identify_and_address_schedulin": "Identify and address scheduling conflicts",
    "services_performance_prediction_service.message.session_recording_for_missed_c": "Session recording for missed classes",
    "services_performance_prediction_service.message.send_notifications_for_high_ri": "Send notifications for high-risk beneficiaries.",
    "services_performance_prediction_service.message.in": " in ",
    "services_performance_prediction_service.message.needs_intervention": " needs intervention.",
    "services_performance_prediction_service.message.get_prediction_history_for_a_b": "Get prediction history for a beneficiary.",
    "services_performance_prediction_service.message.evaluate_accuracy_of_past_pred": "Evaluate accuracy of past predictions.",
    "services_performance_prediction_service.message.not_found_2": " not found",
    "services_performance_prediction_service.message.no_predictions_with_actual_val": "No predictions with actual values to evaluate",
    "services_beneficiary_service.message.beneficiary_service_implementa": "Beneficiary service implementation with dependency injection.",
    "services_beneficiary_service.message.beneficiary_service_with_depen": "Beneficiary service with dependency injection.",
    "services_beneficiary_service.message.initialize_beneficiary_service": "Initialize beneficiary service with dependencies.",
    "services_beneficiary_service.message.get_beneficiary_repository_ins": "Get beneficiary repository instance.",
    "services_beneficiary_service.message.create_a_new_beneficiary": "Create a new beneficiary.",
    "services_beneficiary_service.message.already_exists": " already exists",
    "services_beneficiary_service.message.beneficiary_with_national_id": "Beneficiary with national ID ",
    "services_beneficiary_service.message.already_exists_1": " already exists",
    "services_beneficiary_service.message.get_beneficiary_by_id": "Get beneficiary by ID.",
    "services_beneficiary_service.message.search_beneficiaries_with_pagi": "Search beneficiaries with pagination.",
    "services_beneficiary_service.message.get_beneficiary_by_email": "Get beneficiary by email.",
    "services_beneficiary_service.message.get_beneficiary_by_national_id": "Get beneficiary by national ID.",
    "services_beneficiary_service.message.get_all_beneficiaries_in_a_pro": "Get all beneficiaries in a program.",
    "services_beneficiary_service.message.enroll_beneficiary_in_a_progra": "Enroll beneficiary in a program.",
    "services_beneficiary_service.message.add_a_note_to_beneficiary": "Add a note to beneficiary.",
    "services_beneficiary_service.message.upload_a_document_for_benefici": "Upload a document for beneficiary.",
    "services_beneficiary_service.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "services_beneficiary_service.message.get_upcoming_appointments_for": "Get upcoming appointments for all beneficiaries.",
    "services_beneficiary_service.message.not_found": " not found",
    "services_beneficiary_service.message.export_list_of_beneficiaries": "Export list of beneficiaries.",
    "services_beneficiary_service.message.export_beneficiary_data_as_pdf": "Export beneficiary data as PDF.",
    "services_beneficiary_service.message.y_m_d": "%Y-%m-%d",
    "services_beneficiary_service.message.": " - ",
    "services_beneficiary_service.message.export_beneficiary_data_as_csv": "Export beneficiary data as CSV.",
    "services_beneficiary_service.message.export_list_of_beneficiaries_a": "Export list of beneficiaries as CSV.",
    "services_beneficiary_service.message.y_m_d_h_m_s_1": "%Y-%m-%d %H:%M:%S",
    "services_beneficiary_service.message.clear_relevant_cache_entries": "Clear relevant cache entries.",
    "services_storage_service.message.storage_service_for_file_uploa": "Storage service for file uploads and downloads.",
    "services_storage_service.message.us_east_1": "us-east-1",
    "services_storage_service.message.bdc_dev_bucket": "bdc-dev-bucket",
    "services_storage_service.message.service_for_handling_file_stor": "Service for handling file storage operations.",
    "services_storage_service.message.mp4": "mp4",
    "services_storage_service.message.app_static_uploads": "app/static/uploads",
    "services_storage_service.message.create_necessary_upload_direct": "Create necessary upload directories.",
    "services_storage_service.message.check_if_file_extension_is_all": "Check if file extension is allowed.",
    "services_storage_service.message.generate_unique_filename_to_av": "Generate unique filename to avoid collisions.",
    "services_storage_service.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "services_storage_service.message.save_uploaded_file_to_specifie": "Save uploaded file to specified directory.",
    "services_storage_service.message.file_size_too_large": "File size too large",
    "services_storage_service.message.s3": "s3://",
    "services_storage_service.message.save_and_optimize_profile_pict": "Save and optimize profile picture.",
    "services_storage_service.message.documents": "documents/",
    "services_storage_service.message.move_file_to_a_different_direc": "Move file to a different directory.",
    "services_storage_service.message.source_file_not_found": "Source file not found",
    "services_ai_report_service.message.ai_powered_report_synthesis_se": "AI-powered report synthesis service.",
    "services_ai_report_service.message.service_for_generating_ai_powe": "Service for generating AI-powered reports.",
    "services_ai_report_service.message.initialize_ai_report_service": "Initialize AI Report Service.",
    "services_ai_report_service.message.ai_report": "ai_report:",
    "services_ai_report_service.message.ai_report_service_v2_0": "AI Report Service v2.0",
    "services_ai_report_service.message.some_beneficiaries_not_found": "Some beneficiaries not found",
    "services_ai_report_service.message.calculate_start_date_based_on": "Calculate start date based on time period.",
    "services_ai_report_service.message.get_default_sections_for_repor": "Get default sections for report type.",
    "services_ai_report_service.message.gather_all_relevant_data_for_a": "Gather all relevant data for a beneficiary.",
    "services_ai_report_service.message.get_assessment_data_for_benefi": "Get assessment data for beneficiary.",
    "services_ai_report_service.message.get_appointment_data_for_benef": "Get appointment data for beneficiary.",
    "services_ai_report_service.message.get_progress_data_for_benefici": "Get progress data for beneficiary.",
    "services_ai_report_service.message.get_document_data_for_benefici": "Get document data for beneficiary.",
    "services_ai_report_service.message.get_notes_data_for_beneficiary": "Get notes data for beneficiary.",
    "services_ai_report_service.message.get_program_data_for_beneficia": "Get program data for beneficiary.",
    "services_ai_report_service.message.generate_comprehensive_report": "Generate comprehensive report using AI.",
    "services_ai_report_service.message.prepare_context_for_ai_analysi": "Prepare context for AI analysis.",
    "services_ai_report_service.message.beneficiary_profile": "\n        Beneficiary Profile:\n        - Name: ",
    "services_ai_report_service.message.enrollment_date": "\n        - Enrollment Date: ",
    "services_ai_report_service.message.status": "\n        - Status: ",
    "services_ai_report_service.message.assessment_p": "\n        \n        Assessment Performance:\n        - Total Assessments: ",
    "services_ai_report_service.message.average_score": "\n        - Average Score: ",
    "services_ai_report_service.message.score_trend": "%\n        - Score Trend: ",
    "services_ai_report_service.message.attendance_a": "\n        \n        Attendance and Engagement:\n        - Attendance Rate: ",
    "services_ai_report_service.message.cancelled_appointme": "\n        - Cancelled Appointments: ",
    "services_ai_report_service.message.progress_met": "\n        \n        Progress Metrics:\n        - Overall Improvement: ",
    "services_ai_report_service.message.active_programs": "%\n        - Active Programs: ",
    "services_ai_report_service.message.recent_activ": "\n        \n        Recent Activity:\n        - Documents Uploaded: ",
    "services_ai_report_service.message.notes_added": "\n        - Notes Added: ",
    "services_ai_report_service.message.call_openai_api_for_insights_g": "Call OpenAI API for insights generation.",
    "services_ai_report_service.message.gpt_4": "gpt-4",
    "services_ai_report_service.message.you_are_an_ai_assistant_specia": "You are an AI assistant specialized in analyzing educational and developmental data for beneficiaries in a training program. Provide insightful, actionable analysis.",
    "services_ai_report_service.message.create_prompt_for_ai_based_on": "Create prompt for AI based on report type.",
    "services_ai_report_service.message.based_on_the_foll": "\n            Based on the following beneficiary data, generate a comprehensive analysis report:\n            \n            ",
    "services_ai_report_service.message.analyze_the_follo": "\n            Analyze the following progress data and provide insights:\n            \n            ",
    "services_ai_report_service.message.focu": "\n            \n            Focus on:\n            1. Progress trends and patterns\n            2. Performance trajectory\n            3. Specific areas of improvement or concern\n            4. Recommendations for maintaining or improving progress\n            ",
    "services_ai_report_service.message.analyze_the_follo_1": "\n            Analyze the following data and provide insights:\n            \n            ",
    "services_ai_report_service.message.prov": "\n            \n            Provide a structured analysis with key findings and recommendations.\n            ",
    "services_ai_report_service.message.generate_mock_insights_when_ai": "Generate mock insights when AI is not available.",
    "services_ai_report_service.message.the_beneficiary_shows_consiste": "The beneficiary shows consistent engagement with the program and demonstrates steady progress across key performance indicators. Overall trajectory is positive with some areas requiring additional support.",
    "services_ai_report_service.message.assessment_scores_show_an_upwa": "Assessment scores show an upward trend with 15% improvement over the reporting period",
    "services_ai_report_service.message.attendance_rate_of_85_indicat": "Attendance rate of 85% indicates strong commitment to the program",
    "services_ai_report_service.message.recent_performance_suggests_re": "Recent performance suggests readiness for more advanced learning objectives",
    "services_ai_report_service.message.engagement_metrics_indicate_hi": "Engagement metrics indicate high motivation and active participation",
    "services_ai_report_service.message.documentation_completion_rate": "Documentation completion rate has improved significantly",
    "services_ai_report_service.message.consistent_attendance_and_part": "Consistent attendance and participation",
    "services_ai_report_service.message.strong_improvement_in_assessme": "Strong improvement in assessment scores",
    "services_ai_report_service.message.excellent_engagement_with_trai": "Excellent engagement with trainers",
    "services_ai_report_service.message.proactive_in_seeking_help_when": "Proactive in seeking help when needed",
    "services_ai_report_service.message.time_management_skills_could_b": "Time management skills could be enhanced",
    "services_ai_report_service.message.written_communication_needs_de": "Written communication needs development",
    "services_ai_report_service.message.more_practice_needed_in_practi": "More practice needed in practical applications",
    "services_ai_report_service.message.continue_current_learning_path": "Continue current learning path with increased complexity",
    "services_ai_report_service.message.implement_weekly_goal_setting": "Implement weekly goal-setting sessions",
    "services_ai_report_service.message.introduce_peer_mentoring_oppor": "Introduce peer mentoring opportunities",
    "services_ai_report_service.message.focus_on_practical_skill_appli": "Focus on practical skill application",
    "services_ai_report_service.message.schedule_regular_progress_revi": "Schedule regular progress reviews",
    "services_ai_report_service.message.schedule_advanced_skills_asses": "Schedule advanced skills assessment",
    "services_ai_report_service.message.develop_personalized_learning": "Develop personalized learning plan",
    "services_ai_report_service.message.arrange_peer_learning_sessions": "Arrange peer learning sessions",
    "services_ai_report_service.message.analyze_attendance_and_engagem": "Analyze attendance and engagement patterns.",
    "services_ai_report_service.message.determine_performance_level_ba": "Determine performance level based on score.",
    "services_ai_report_service.message.calculate_overall_engagement_s": "Calculate overall engagement score.",
    "services_ai_report_service.message.calculate_attendance_consisten": "Calculate attendance consistency rating.",
    "services_ai_report_service.message.project_future_outcomes_based": "Project future outcomes based on current progress.",
    "services_ai_report_service.message.3_month_projection": "3_month_projection",
    "services_ai_report_service.message.6_month_projection": "6_month_projection",
    "services_ai_report_service.message.consider_adjusting_learning_ap": "Consider adjusting learning approach to accelerate progress",
    "services_ai_report_service.message.schedule_additional_support_se": "Schedule additional support sessions",
    "services_ai_report_service.message.maintain_current_learning_pace": "Maintain current learning pace with gradual complexity increase",
    "services_ai_report_service.message.introduce_advanced_topics_to_s": "Introduce advanced topics to sustain momentum",
    "services_ai_report_service.message.excellent_progress_consider": "Excellent progress - consider leadership or mentoring roles",
    "services_ai_report_service.message.explore_specialized_advanced_t": "Explore specialized advanced training opportunities",
    "services_ai_report_service.message.improve_attendance_to_maximize": "Improve attendance to maximize learning outcomes",
    "services_ai_report_service.message.consistently_high_performance": "Consistently high performance in assessments",
    "services_ai_report_service.message.excellent_assessment_completio": "Excellent assessment completion rate",
    "services_ai_report_service.message.focus_on_improving_overall_ass": "Focus on improving overall assessment scores",
    "services_ai_report_service.message.address_factors_contributing_t": "Address factors contributing to declining performance",
    "services_ai_report_service.message.work_on_maintaining_consistent": "Work on maintaining consistent performance",
    "services_ai_report_service.message.continue_building_on_current_p": "Continue building on current progress",
    "services_ai_report_service.message.calculate_distribution_of_asse": "Calculate distribution of assessment scores.",
    "services_ai_report_service.message.provide_additional_study_mater": "Provide additional study materials and support",
    "services_ai_report_service.message.consider_reassessing_learning": "Consider reassessing learning objectives",
    "services_ai_report_service.message.focus_on_strengthening_weak_ar": "Focus on strengthening weak areas identified in assessments",
    "services_ai_report_service.message.implement_targeted_practice_se": "Implement targeted practice sessions",
    "services_ai_report_service.message.continue_current_approach_with": "Continue current approach with minor adjustments",
    "services_ai_report_service.message.introduce_more_challenging_ass": "Introduce more challenging assessment topics",
    "services_ai_report_service.message.maintain_excellence_with_advan": "Maintain excellence with advanced challenges",
    "services_ai_report_service.message.consider_peer_tutoring_opportu": "Consider peer tutoring opportunities",
    "services_ai_report_service.message.investigate_causes_of_performa": "Investigate causes of performance decline",
    "services_ai_report_service.message.provide_additional_motivation": "Provide additional motivation and support",
    "services_ai_report_service.message.recognize_and_celebrate_improv": "Recognize and celebrate improvement",
    "services_ai_report_service.message.maintain_current_strategies_th": "Maintain current strategies that are working",
    "services_ai_report_service.message.generate_ai_insights_for_progr": "Generate AI insights for program.",
    "services_ai_report_service.message.active_beneficiaries": " active beneficiaries",
    "services_ai_report_service.message.create_summaries_for_each_bene": "Create summaries for each beneficiary in program.",
    "services_ai_report_service.message.generate_recommendations_for_p": "Generate recommendations for program improvement.",
    "services_ai_report_service.message.overall_program_performance_is": "Overall program performance is below expectations",
    "services_ai_report_service.message.implement_engagement_improveme": "Implement engagement improvement strategies",
    "services_ai_report_service.message.low_engagement_levels_may_impa": "Low engagement levels may impact learning outcomes",
    "services_ai_report_service.message.high_program_completion_rate": "High program completion rate",
    "services_ai_report_service.message.majority_of_beneficiaries_perf": "Majority of beneficiaries performing above expectations",
    "services_ai_report_service.message.identify_risk_factors_for_prog": "Identify risk factors for program.",
    "services_ai_report_service.message.significant_portion_of_benefic": "Significant portion of beneficiaries have low attendance",
    "services_ai_report_service.message.multiple_beneficiaries_showing": "Multiple beneficiaries showing declining performance",
    "services_ai_report_service.message.assess_risk_level_for_a_benefi": "Assess risk level for a beneficiary.",
    "services_ai_report_service.message.gather_specific_metrics_for_co": "Gather specific metrics for comparison.",
    "services_ai_report_service.message.strong_correlation_between_att": "Strong correlation between attendance and assessment performance",
    "services_ai_report_service.message.focus_on_improving_attendance": "Focus on improving attendance",
    "services_ai_report_service.message.implement_strategies_to_accele": "Implement strategies to accelerate progress",
    "services_ai_report_service.message.create_summary_of_comparison_d": "Create summary of comparison data.",
    "services_ai_report_service.message.create_detailed_metric_compari": "Create detailed metric comparisons.",
    "services_ai_report_service.message.create_rankings_for_each_metri": "Create rankings for each metric.",
    "services_ai_report_service.message.generate_recommendations_based": "Generate recommendations based on comparative analysis.",
    "services_ai_report_service.message.consider_peer_mentoring_betwee": "Consider peer mentoring between high and low performers",
    "services_ai_report_service.message.review_program_structure_as_ma": "Review program structure as majority show concerning metrics",
    "services_ai_report_service.message.leverage_identified_correlatio": "Leverage identified correlations to improve overall performance",
    "services_ai_report_service.message.calculate_average_for_a_metric": "Calculate average for a metric across beneficiaries.",
    "services_ai_report_service.message.find_highest_value_for_a_metri": "Find highest value for a metric.",
    "services_ai_report_service.message.find_lowest_value_for_a_metric": "Find lowest value for a metric.",
    "services_ai_report_service.message.prepare_context_for_ai_synthes": "Prepare context for AI synthesis.",
    "services_ai_report_service.message.total": "- Total: ",
    "services_ai_report_service.message.average_score_1": "- Average Score: ",
    "services_ai_report_service.message.trend": "- Trend: ",
    "services_ai_report_service.message.attendance_rate": "- Attendance Rate: ",
    "services_ai_report_service.message.total_1": "- Total: ",
    "services_ai_report_service.message.total_documents": "- Total Documents: ",
    "services_ai_report_service.message.types": "- Types: ",
    "services_ai_report_service.message.total_notes": "- Total Notes: ",
    "services_ai_report_service.message.active_programs_1": "- Active Programs: ",
    "services_ai_report_service.message.call_ai_api_for_data_synthesis": "Call AI API for data synthesis.",
    "services_ai_report_service.message.generate_mock_synthesis_when_a": "Generate mock synthesis when AI is not available.",
    "services_ai_report_service.message.beneficiary_shows_consistent_e": "Beneficiary shows consistent engagement across multiple touchpoints",
    "services_ai_report_service.message.performance_metrics_indicate_s": "Performance metrics indicate steady progress with room for acceleration",
    "services_ai_report_service.message.documentation_and_notes_sugges": "Documentation and notes suggest active participation in program activities",
    "services_ai_report_service.message.cross_source_analysis_reveals": "Cross-source analysis reveals strong correlation between attendance and outcomes",
    "services_ai_report_service.message.regular_participation_across_a": "Regular participation across assessments, appointments, and activities",
    "services_ai_report_service.message.gradual_improvement_trend_acro": "Gradual improvement trend across multiple metrics",
    "services_ai_report_service.message.high_activity_in_the_last_30_d": "High activity in the last 30 days",
    "services_ai_report_service.message.weekend_activities_show_lower": "Weekend activities show lower engagement",
    "services_ai_report_service.message.maintain_current_engagement_le": "Maintain current engagement levels while introducing advanced challenges",
    "services_ai_report_service.message.schedule_regular_check_ins_dur": "Schedule regular check-ins during identified peak performance periods",
    "services_ai_report_service.message.consider_peer_learning_opportu": "Consider peer learning opportunities to enhance growth",
    "services_ai_report_service.message.create_summaries_for_each_data": "Create summaries for each data source.",
    "services_ai_report_service.message.average_score_2": "% average score",
    "services_ai_report_service.message.assessments": " assessments",
    "services_ai_report_service.message.attendance": "% attendance",
    "services_ai_report_service.message.appointments": " appointments",
    "services_ai_report_service.message.documents": " documents",
    "services_ai_report_service.message.notes": " notes",
    "services_ai_report_service.message.2_weeks": "2 weeks",
    "services_ai_report_service.message.1_month": "1 month",
    "services_ai_report_service.message.categorize_an_action_item": "Categorize an action item.",
    "services_document_version_service.message.document_version_service_for_m": "Document version service for managing document versions.",
    "services_document_version_service.message.service_for_document_version_m": "Service for document version management.",
    "services_document_version_service.message.create_a_new_version_of_a_docu": "Create a new version of a document.",
    "services_document_version_service.message.not_found": " not found",
    "services_document_version_service.message.version_control_is_not_enabled": "Version control is not enabled for this document",
    "services_document_version_service.message.file_content_has_not_changed": "File content has not changed",
    "services_document_version_service.message.a_new_version_of": "A new version of \"",
    "services_document_version_service.message.has_been_uploaded": "\" has been uploaded",
    "services_document_version_service.message.get_all_versions_of_a_document": "Get all versions of a document.",
    "services_document_version_service.message.get_a_specific_version": "Get a specific version.",
    "services_document_version_service.message.restore_a_previous_version_of": "Restore a previous version of a document.",
    "services_document_version_service.message.document_or_version_not_found": "Document or version not found",
    "services_document_version_service.message.version_does_not_belong_to_thi": "Version does not belong to this document",
    "services_document_version_service.message.compare_two_versions_of_a_docu": "Compare two versions of a document.",
    "services_document_version_service.message.one_or_both_versions_not_found": "One or both versions not found",
    "services_document_version_service.message.versions_do_not_belong_to_the": "Versions do not belong to the same document",
    "services_document_version_service.message.enable_version_control_for_a_d": "Enable version control for a document.",
    "services_document_version_service.message.not_found_1": " not found",
    "services_message_search_service.message.message_search_service_for_adv": "Message search service for advanced message searching.",
    "services_message_search_service.message.service_for_searching_messages": "Service for searching messages and threads.",
    "services_message_search_service.message.search_messages_with_various_f": "Search messages with various filters.\n        \n        Args:\n            user_id: ID of the user performing the search\n            query: Text to search in message content\n            thread_id: Filter by specific thread\n            sender_id: Filter by sender\n            start_date: Filter messages after this date\n            end_date: Filter messages before this date\n            has_attachments: Filter messages with/without attachments\n            is_unread: Filter unread messages\n            page: Page number for pagination\n            per_page: Items per page\n            sort_by: Field to sort by\n            sort_order: Sort order (asc/desc)\n            \n        Returns:\n            Tuple of (messages, total_count)\n        ",
    "services_message_search_service.message.get_quick_search_results_for_c": "Get quick search results for conversations.\n        \n        Args:\n            user_id: ID of the user performing the search\n            query: Search query\n            limit: Maximum number of results\n            \n        Returns:\n            Dictionary with search results organized by type\n        ",
    "services_message_search_service.message.get_message_statistics_for_a_u": "Get message statistics for a user.\n        \n        Args:\n            user_id: ID of the user\n            start_date: Start date for statistics\n            end_date: End date for statistics\n            \n        Returns:\n            Dictionary with message statistics\n        ",
    "services_message_search_service.message.extract_a_snippet_of_content_a": "Extract a snippet of content around the search query.\n        \n        Args:\n            content: Full content text\n            query: Search query\n            max_length: Maximum length of snippet\n            \n        Returns:\n            Snippet of content with query highlighted\n        ",
    "services_message_search_service.message.search_for_messages_with_attac": "Search for messages with attachments.\n        \n        Args:\n            user_id: ID of the user performing the search\n            filename: Filter by attachment filename\n            file_type: Filter by file type (e.g., 'pdf', 'image', 'document')\n            thread_id: Filter by specific thread\n            sender_id: Filter by sender\n            start_date: Filter messages after this date\n            end_date: Filter messages before this date\n            page: Page number for pagination\n            per_page: Items per page\n            \n        Returns:\n            Tuple of (attachments, total_count)\n        ",
    "services_analytics_service.message.analytics_service_for_generati": "Analytics service for generating metrics and insights.",
    "services_analytics_service.message.service_for_generating_analyti": "Service for generating analytics and metrics.",
    "services_analytics_service.message.get_analytics_for_a_program": "Get analytics for a program.\n        \n        Args:\n            program_id: ID of the program\n            start_date: Start date for analytics\n            end_date: End date for analytics\n            \n        Returns:\n            Dictionary containing program analytics\n        ",
    "services_analytics_service.message.get_analytics_for_a_beneficiar": "Get analytics for a beneficiary.\n        \n        Args:\n            beneficiary_id: ID of the beneficiary\n            start_date: Start date for analytics\n            end_date: End date for analytics\n            \n        Returns:\n            Dictionary containing beneficiary analytics\n        ",
    "services_analytics_service.message.get_analytics_for_a_trainer": "Get analytics for a trainer.\n        \n        Args:\n            trainer_id: ID of the trainer\n            start_date: Start date for analytics\n            end_date: End date for analytics\n            \n        Returns:\n            Dictionary containing trainer analytics\n        ",
    "services_analytics_service.message.count_beneficiaries_who_were_a": "Count beneficiaries who were active in the given period.",
    "services_analytics_service.message.calculate_completion_rate_for": "Calculate completion rate for a program.",
    "services_analytics_service.message.calculate_average_attendance_r": "Calculate average attendance rate for beneficiaries.",
    "services_analytics_service.message.calculate_average_performance": "Calculate average performance score for beneficiaries.",
    "services_analytics_service.message.calculate_engagement_metrics_f": "Calculate engagement metrics for beneficiaries.",
    "services_analytics_service.message.generate_progress_summary_for": "Generate progress summary for beneficiaries.",
    "services_analytics_service.message.calculate_attendance_rate_for": "Calculate attendance rate for a beneficiary.",
    "services_analytics_service.message.get_assessment_performance_met": "Get assessment performance metrics.",
    "services_analytics_service.message.calculate_engagement_score_for": "Calculate engagement score for a beneficiary.",
    "services_analytics_service.message.calculate_progress_metrics_for": "Calculate progress metrics for a beneficiary.",
    "services_analytics_service.message.get_activity_summary_for_a_ben": "Get activity summary for a beneficiary.",
    "services_analytics_service.message.calculate_completion_rate_for_1": "Calculate completion rate for trainer appointments.",
    "services_analytics_service.message.get_performance_metrics_for_tr": "Get performance metrics for trainer's beneficiaries.",
    "reporting_realtime_service.message.service_for_real_time_reportin": "Service for real-time reporting and live data feeds",
    "reporting_realtime_service.message.maximum_number_of_active_subsc": "Maximum number of active subscriptions reached",
    "reporting_realtime_service.message.get_status_of_a_subscription": "Get status of a subscription",
    "reporting_realtime_service.message.get_list_of_active_subscriptio": "Get list of active subscriptions",
    "reporting_realtime_service.message.fetch_data_for_a_subscription": "Fetch data for a subscription",
    "reporting_realtime_service.message.start_monitoring_for_data_chan": "Start monitoring for data changes for a subscription",
    "reporting_realtime_service.message.stop_monitoring_for_a_subscrip": "Stop monitoring for a subscription",
    "reporting_realtime_service.message.emit_data_to_a_specific_client": "Emit data to a specific client",
    "reporting_realtime_service.message.get_real_time_system_statistic": "Get real-time system statistics",
    "reporting_realtime_service.message.get_subscription_count_by_type": "Get subscription count by type",
    "reporting_realtime_service.message.broadcast_a_system_notificatio": "Broadcast a system notification to clients",
    "reporting_realtime_service.message.shutdown_the_real_time_service": "Shutdown the real-time service",
    "reporting_visualization_service.message.service_for_creating_advanced": "Service for creating advanced data visualizations",
    "reporting_visualization_service.message.get_predefined_color_palettes": "Get predefined color palettes",
    "reporting_visualization_service.message.3498db": "#3498db",
    "reporting_visualization_service.message.e74c3c": "#e74c3c",
    "reporting_visualization_service.message.2ecc71": "#2ecc71",
    "reporting_visualization_service.message.f39c12": "#f39c12",
    "reporting_visualization_service.message.9b59b6": "#9b59b6",
    "reporting_visualization_service.message.1abc9c": "#1abc9c",
    "reporting_visualization_service.message.0066cc": "#0066cc",
    "reporting_visualization_service.message.0080ff": "#0080ff",
    "reporting_visualization_service.message.3399ff": "#3399ff",
    "reporting_visualization_service.message.66b3ff": "#66b3ff",
    "reporting_visualization_service.message.99ccff": "#99ccff",
    "reporting_visualization_service.message.cce6ff": "#cce6ff",
    "reporting_visualization_service.message.006600": "#006600",
    "reporting_visualization_service.message.009900": "#009900",
    "reporting_visualization_service.message.00cc00": "#00cc00",
    "reporting_visualization_service.message.33ff33": "#33ff33",
    "reporting_visualization_service.message.66ff66": "#66ff66",
    "reporting_visualization_service.message.99ff99": "#99ff99",
    "reporting_visualization_service.message.ff6b6b": "#ff6b6b",
    "reporting_visualization_service.message.ffa500": "#ffa500",
    "reporting_visualization_service.message.ffd700": "#ffd700",
    "reporting_visualization_service.message.ff69b4": "#ff69b4",
    "reporting_visualization_service.message.ff1493": "#ff1493",
    "reporting_visualization_service.message.dc143c": "#dc143c",
    "reporting_visualization_service.message.00ced1": "#00ced1",
    "reporting_visualization_service.message.20b2aa": "#20b2aa",
    "reporting_visualization_service.message.4682b4": "#4682b4",
    "reporting_visualization_service.message.6495ed": "#6495ed",
    "reporting_visualization_service.message.87ceeb": "#87ceeb",
    "reporting_visualization_service.message.b0e0e6": "#b0e0e6",
    "reporting_visualization_service.message.440154": "#440154",
    "reporting_visualization_service.message.31688e": "#31688e",
    "reporting_visualization_service.message.35b779": "#35b779",
    "reporting_visualization_service.message.fde725": "#fde725",
    "reporting_visualization_service.message.0d0887": "#0d0887",
    "reporting_visualization_service.message.7e03a8": "#7e03a8",
    "reporting_visualization_service.message.cc4778": "#cc4778",
    "reporting_visualization_service.message.f89441": "#f89441",
    "reporting_visualization_service.message.f0f921": "#f0f921",
    "reporting_visualization_service.message.000004": "#000004",
    "reporting_visualization_service.message.420a68": "#420a68",
    "reporting_visualization_service.message.932667": "#932667",
    "reporting_visualization_service.message.dd513a": "#dd513a",
    "reporting_visualization_service.message.fca50a": "#fca50a",
    "reporting_visualization_service.message.2c3e50": "#2c3e50",
    "reporting_visualization_service.message.34495e": "#34495e",
    "reporting_visualization_service.message.7f8c8d": "#7f8c8d",
    "reporting_visualization_service.message.95a5a6": "#95a5a6",
    "reporting_visualization_service.message.bdc3c7": "#bdc3c7",
    "reporting_visualization_service.message.ecf0f1": "#ecf0f1",
    "reporting_visualization_service.message.ff9999": "#ff9999",
    "reporting_visualization_service.message.66b3ff_1": "#66b3ff",
    "reporting_visualization_service.message.99ff99_1": "#99ff99",
    "reporting_visualization_service.message.ffcc99": "#ffcc99",
    "reporting_visualization_service.message.ff99cc": "#ff99cc",
    "reporting_visualization_service.message.c2c2f0": "#c2c2f0",
    "reporting_visualization_service.message.get_available_chart_types_and": "Get available chart types and their configurations",
    "reporting_visualization_service.message.compare_values_across_categori": "Compare values across categories",
    "reporting_visualization_service.message.show_trends_over_time_or_conti": "Show trends over time or continuous data",
    "reporting_visualization_service.message.show_proportions_of_a_whole": "Show proportions of a whole",
    "reporting_visualization_service.message.show_proportions_with_central": "Show proportions with central space",
    "reporting_visualization_service.message.show_relationships_between_var": "Show relationships between variables",
    "reporting_visualization_service.message.show_cumulative_totals_over_ti": "Show cumulative totals over time",
    "reporting_visualization_service.message.show_distribution_of_values": "Show distribution of values",
    "reporting_visualization_service.message.show_correlation_or_intensity": "Show correlation or intensity",
    "reporting_visualization_service.message.show_hierarchical_data_proport": "Show hierarchical data proportions",
    "reporting_visualization_service.message.show_cumulative_effect_of_chan": "Show cumulative effect of changes",
    "reporting_visualization_service.message.create_a_chart_based_on_config": "Create a chart based on configuration",
    "reporting_visualization_service.message.no_data_provided_for_visualiza": "No data provided for visualization",
    "reporting_visualization_service.message.not_implemented": " not implemented",
    "reporting_visualization_service.message.create_a_bar_chart": "Create a bar chart",
    "reporting_visualization_service.message.create_a_line_chart": "Create a line chart",
    "reporting_visualization_service.message.lines_markers": "lines+markers",
    "reporting_visualization_service.message.lines_markers_1": "lines+markers",
    "reporting_visualization_service.message.create_a_pie_or_doughnut_chart": "Create a pie or doughnut chart",
    "reporting_visualization_service.message.label_percent": "label+percent",
    "reporting_visualization_service.message.create_a_scatter_plot": "Create a scatter plot",
    "reporting_visualization_service.message.create_an_area_chart": "Create an area chart",
    "reporting_visualization_service.message.create_a_box_plot": "Create a box plot",
    "reporting_visualization_service.message.text": "%{text}",
    "reporting_visualization_service.message.label_value_percent_parent": "label+value+percent parent",
    "reporting_visualization_service.message.create_a_sunburst_chart": "Create a sunburst chart",
    "reporting_visualization_service.message.create_a_waterfall_chart": "Create a waterfall chart",
    "reporting_visualization_service.message.rgb_63_63_63": "rgb(63, 63, 63)",
    "reporting_visualization_service.message.create_geographic_maps_with_va": "Create geographic maps with various overlays",
    "reporting_visualization_service.message.create_a_map_with_markers": "Create a map with markers",
    "reporting_visualization_service.message.lng": ", Lng: ",
    "reporting_visualization_service.message.lng_1": ", Lng: ",
    "reporting_visualization_service.message.create_a_heat_map_overlay": "Create a heat map overlay",
    "reporting_visualization_service.message.create_a_map_with_clustered_ma": "Create a map with clustered markers",
    "reporting_visualization_service.message.lng_2": ", Lng: ",
    "reporting_visualization_service.message.lng_3": ", Lng: ",
    "reporting_visualization_service.message.create_a_choropleth_map": "Create a choropleth map",
    "reporting_visualization_service.message.choropleth_maps_require_geojso": "Choropleth maps require GeoJSON boundary data",
    "reporting_visualization_service.message.return_available_chart_types": "Return available chart types",
    "reporting_visualization_service.message.return_available_color_palette": "Return available color palettes",
    "reporting_visualization_service.message.requires_at_least": " requires at least ",
    "reporting_visualization_service.message.dimensions": " dimensions",
    "reporting_visualization_service.message.not_found_in_data": "' not found in data",
    "reporting_visualization_service.message.rows_may_impact_performance": " rows) may impact performance",
    "reporting___init__.message.advanced_reporting_system_for": "\nAdvanced Reporting System for BDC\n\nThis module provides comprehensive reporting capabilities including:\n- Report builder with drag-and-drop interface\n- Custom dashboard creation with widgets\n- Automated report scheduling and delivery\n- Advanced data visualization (charts, maps, heat maps)\n- Export capabilities (PDF, Excel, CSV, PowerPoint)\n- Real-time reporting with live data feeds\n",
    "reporting_report_builder_service.message.service_for_building_custom_re": "Service for building custom reports with drag-and-drop functionality",
    "reporting_report_builder_service.message.get_all_available_fields_for_r": "Get all available fields for report building",
    "reporting_report_builder_service.message.return_available_fields_for_th": "Return available fields for the report builder",
    "reporting_report_builder_service.message.create_a_new_report_template": "Create a new report template",
    "reporting_report_builder_service.message.not_found": " not found",
    "reporting_report_builder_service.message.get_available_report_templates": "Get available report templates",
    "reporting_report_builder_service.message.generate_a_preview_of_the_temp": "Generate a preview of the template",
    "reporting_report_builder_service.message.build_sql_query_based_on_repor": "Build SQL query based on report configuration",
    "reporting_report_builder_service.message.apply_necessary_joins_based_on": "Apply necessary joins based on data sources",
    "reporting_report_builder_service.message.apply_filters_to_the_query": "Apply filters to the query",
    "reporting_report_builder_service.message.apply_grouping_to_the_query": "Apply grouping to the query",
    "reporting_report_builder_service.message.apply_sorting_to_the_query": "Apply sorting to the query",
    "reporting_report_builder_service.message.get_the_model_class_for_a_data": "Get the model class for a data source",
    "reporting_report_builder_service.message.execute_a_report_and_return_th": "Execute a report and return the results",
    "reporting_report_builder_service.message.y_m_d": "%Y-%m-%d",
    "reporting_report_builder_service.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "reporting_report_builder_service.message.large_number_of_fields": "Large number of fields (",
    "reporting_report_builder_service.message.may_impact_performance": ") may impact performance",
    "reporting_report_builder_service.message.large_number_of_filters": "Large number of filters (",
    "reporting_report_builder_service.message.may_impact_performance_1": ") may impact performance",
    "reporting_report_builder_service.message.generate_a_preview_of_the_repo": "Generate a preview of the report with limited data",
    "reporting_dashboard_service.message.service_for_creating_and_manag": "Service for creating and managing custom dashboards with widgets",
    "reporting_dashboard_service.message.get_available_widget_types_and": "Get available widget types and their configurations",
    "reporting_dashboard_service.message.chart_bar": "chart-bar",
    "reporting_dashboard_service.message.display_key_performance_indica": "Display key performance indicators",
    "reporting_dashboard_service.message.display_data_on_interactive_ma": "Display data on interactive maps",
    "reporting_dashboard_service.message.display_scheduled_events_and_a": "Display scheduled events and appointments",
    "reporting_dashboard_service.message.track_progress_towards_goals": "Track progress towards goals",
    "reporting_dashboard_service.message.display_custom_text_and_markdo": "Display custom text and markdown content",
    "reporting_dashboard_service.message.return_available_widget_types": "Return available widget types",
    "reporting_dashboard_service.message.create_a_new_dashboard": "Create a new dashboard",
    "reporting_dashboard_service.message.not_found": " not found",
    "reporting_dashboard_service.message.get_a_specific_dashboard": "Get a specific dashboard",
    "reporting_dashboard_service.message.not_found_1": " not found",
    "reporting_dashboard_service.message.access_denied_to_this_dashboar": "Access denied to this dashboard",
    "reporting_dashboard_service.message.add_a_widget_to_a_dashboard": "Add a widget to a dashboard",
    "reporting_dashboard_service.message.not_found_2": " not found",
    "reporting_dashboard_service.message.not_found_3": " not found",
    "reporting_dashboard_service.message.load_data_for_a_specific_widge": "Load data for a specific widget",
    "reporting_dashboard_service.message.build_data_configuration_for_w": "Build data configuration for widget based on its type and settings",
    "reporting_dashboard_service.message.is_missing": "' is missing",
    "reporting_dashboard_service.message.generate_a_preview_of_the_dash": "Generate a preview of the dashboard",
    "reporting_dashboard_service.message.duplicate_an_existing_dashboar": "Duplicate an existing dashboard",
    "reporting_dashboard_service.message.share_dashboard_with_other_use": "Share dashboard with other users",
    "reporting_dashboard_service.message.get_analytics_for_dashboard_us": "Get analytics for dashboard usage",
    "reporting_export_service.message.not_implemented": " not implemented",
    "reporting_export_service.message.export_report_as_pdf": "Export report as PDF",
    "reporting_export_service.message.333333": "#333333",
    "reporting_export_service.message.br": "<br/>",
    "reporting_export_service.message.br_1": "<br/>",
    "reporting_export_service.message.br_2": "<br/>",
    "reporting_export_service.message.i_note_only_first": "<i>Note: Only first ",
    "reporting_export_service.message.rows_shown_i": " rows shown</i>",
    "reporting_export_service.message.export_report_as_excel_workboo": "Export report as Excel workbook",
    "reporting_export_service.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "reporting_export_service.message.export_report_as_csv": "Export report as CSV",
    "reporting_export_service.message.export_report_as_powerpoint_pr": "Export report as PowerPoint presentation",
    "reporting_export_service.message.y_m_d": "%Y-%m-%d",
    "reporting_export_service.message.records": " records",
    "reporting_export_service.message.export_report_as_word_document": "Export report as Word document",
    "reporting_export_service.message.rows_shown": " rows shown",
    "reporting_export_service.message.export_report_as_json": "Export report as JSON",
    "reporting_export_service.message.export_report_as_xml": "Export report as XML",
    "reporting_export_service.message.pretty_print_xml_file": "Pretty print XML file",
    "reporting_export_service.message.utf_16": "utf-16",
    "reporting_export_service.message.latin_1": "latin-1",
    "reporting_export_service.message.may_not_be_supported": "' may not be supported",
    "reporting_export_service.message.large_number_of_rows": "Large number of rows (",
    "reporting_export_service.message.may_impact_pdf_generation_pe": ") may impact PDF generation performance",
    "reporting_export_service.message.large_number_of_charts_may_imp": "Large number of charts may impact Excel file size",
    "reporting_export_service.message.clean_up_temporary_export_file": "Clean up temporary export files",
    "reporting_scheduler_service.message.report_scheduler_service_pro": "\nReport Scheduler Service\n\nProvides automated report scheduling and delivery:\n- Flexible scheduling options (daily, weekly, monthly, custom)\n- Multiple delivery methods (email, webhook, file system)\n- Report generation queue management\n- Conditional delivery based on data thresholds\n- Delivery history and retry logic\n",
    "reporting_scheduler_service.message.service_for_scheduling_and_del": "Service for scheduling and delivering automated reports",
    "reporting_scheduler_service.message.create_a_new_scheduled_report": "Create a new scheduled report",
    "reporting_scheduler_service.message.scheduled_report_with_id": "Scheduled report with ID ",
    "reporting_scheduler_service.message.not_found": " not found",
    "reporting_scheduler_service.message.get_a_specific_scheduled_repor": "Get a specific scheduled report",
    "reporting_scheduler_service.message.scheduled_report_with_id_1": "Scheduled report with ID ",
    "reporting_scheduler_service.message.not_found_1": " not found",
    "reporting_scheduler_service.message.scheduled_report_with_id_2": "Scheduled report with ID ",
    "reporting_scheduler_service.message.not_found_2": " not found",
    "reporting_scheduler_service.message.execute_a_scheduled_report_imm": "Execute a scheduled report immediately",
    "reporting_scheduler_service.message.delivery_conditions_not_met": "Delivery conditions not met",
    "reporting_scheduler_service.message.calculate_the_next_run_time_ba": "Calculate the next run time based on schedule configuration",
    "reporting_scheduler_service.message.09_00": "09:00",
    "reporting_scheduler_service.message.09_00_1": "09:00",
    "reporting_scheduler_service.message.09_00_2": "09:00",
    "reporting_scheduler_service.message.check_if_delivery_conditions_a": "Check if delivery conditions are met",
    "reporting_scheduler_service.message.deliver_the_report_using_the_c": "Deliver the report using the configured method",
    "reporting_scheduler_service.message.deliver_report_via_email": "Deliver report via email",
    "reporting_scheduler_service.message.please_find_the_attached_repor": "Please find the attached report.",
    "reporting_scheduler_service.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "reporting_scheduler_service.message.deliver_report_via_webhook": "Deliver report via webhook",
    "reporting_scheduler_service.message.deliver_report_via_ftp": "Deliver report via FTP",
    "reporting_scheduler_service.message.deliver_report_to_filesystem_l": "Deliver report to filesystem location",
    "reporting_scheduler_service.message.original_name": "{original_name}",
    "reporting_scheduler_service.message.y_m_d_h_m_s_1": "%Y%m%d_%H%M%S",
    "reporting_scheduler_service.message.y_m_d": "%Y%m%d",
    "reporting_scheduler_service.message.register_schedule_with_celery": "Register schedule with Celery for automatic execution",
    "file_upload_image_processor.message.image_processing_and_sanitizat": "Image processing and sanitization module.",
    "file_upload_image_processor.message.processes_and_sanitizes_images": "Processes and sanitizes images for secure storage.",
    "file_upload_image_processor.message.process_and_sanitize": "\n        Process and sanitize an image file.\n        \n        Args:\n            file_path: Path to input image\n            output_path: Path for processed image\n            \n        Returns:\n            Dictionary with processing results\n        ",
    "file_upload_image_processor.message.image_size_is_suspiciously_lar": "Image size is suspiciously large",
    "file_upload_image_processor.message.resize_image_if_it_exceeds_max": "Resize image if it exceeds maximum dimensions.",
    "file_upload_image_processor.message.generate_thumbnails_of_various": "Generate thumbnails of various sizes.",
    "file_upload_image_processor.message.add_a_watermark_to_an_image": "Add a watermark to an image.",
    "file_upload_image_processor.message.blur_specific_areas_o": "\n        Blur specific areas of an image.\n        \n        Args:\n            img_path: Path to image\n            areas: List of (x, y, width, height) tuples defining areas to blur\n            output_path: Output path for blurred image\n        ",
    "file_upload_file_scanner.message.file_scanner_with_magic_byte_d": "File scanner with magic byte detection and virus scanning.",
    "file_upload_file_scanner.message.exceeds_maximum_allowed_size": " exceeds maximum allowed size ",
    "file_upload_file_scanner.message.detect_mime_type_using_python": "Detect MIME type using python-magic.",
    "file_upload_file_scanner.message.get_detailed_file_description": "Get detailed file description using magic.",
    "file_upload_file_scanner.message.is_blocked_for_security_reaso": " is blocked for security reasons",
    "file_upload_file_scanner.message.is_not_allowed": " is not allowed",
    "file_upload_file_scanner.message.image_svg_xml": "image/svg+xml",
    "file_upload_file_scanner.message.svg_file_contains_potentially": "SVG file contains potentially dangerous content",
    "file_upload_file_scanner.message.calculate_sha_256_hash_of_file": "Calculate SHA-256 hash of file.",
    "file_upload_file_scanner.message.scan_file_for_viruses": "\n        Scan file for viruses using ClamAV.\n        \n        Returns:\n            Dictionary with scan results\n        ",
    "file_upload_file_scanner.message.move_infected_or_suspicious_fi": "Move infected or suspicious file to quarantine.",
    "file_upload_file_scanner.message.": " -> ",
    "file_upload_storage_manager.message.secure_storage_manager_with_en": "Secure storage manager with encryption and S3/CDN support.",
    "file_upload_storage_manager.message.manages_secure_file_storage_wi": "Manages secure file storage with encryption and cloud integration.",
    "file_upload_storage_manager.message.encryption_enabled_but_no_key": "Encryption enabled but no key provided",
    "file_upload_storage_manager.message.initialize_s3_client_if_config": "Initialize S3 client if configured.",
    "file_upload_storage_manager.message.s3_url": "s3_url",
    "file_upload_storage_manager.message.file_not_found_in_local_or_clo": "File not found in local or cloud storage",
    "file_upload_storage_manager.message.file_not_found_in_local_storag": "File not found in local storage",
    "file_upload_storage_manager.message.generate_a_secure_filename": "Generate a secure filename.",
    "file_upload_storage_manager.message.create_storage_path_with_prope": "Create storage path with proper directory structure.",
    "file_upload_storage_manager.message.encrypt_a_file_and_return_path": "Encrypt a file and return path to encrypted file.",
    "file_upload_storage_manager.message.decrypt_a_file_and_return_path": "Decrypt a file and return path to decrypted file.",
    "file_upload_storage_manager.message.upload_file_to_s3": "Upload file to S3.",
    "file_upload_storage_manager.message.inline_filename": "inline; filename=\"",
    "file_upload_storage_manager.message.https": "https://",
    "file_upload_storage_manager.message.create_a_signed_url_f": "\n        Create a signed URL for temporary file access.\n        \n        Args:\n            file_key: S3 key or file identifier\n            expiration: URL expiration time in seconds\n            \n        Returns:\n            Signed URL\n        ",
    "file_upload_storage_manager.message.expires": "?expires=",
    "file_upload_config.message.configuration_for_file_upload": "Configuration for file upload security system.",
    "file_upload_config.message.configuration_for_file_upload_1": "Configuration for file upload system.",
    "file_upload_config.message.image_jpeg": "image/jpeg",
    "file_upload_config.message.image_png": "image/png",
    "file_upload_config.message.image_gif": "image/gif",
    "file_upload_config.message.image_webp": "image/webp",
    "file_upload_config.message.image_svg_xml": "image/svg+xml",
    "file_upload_config.message.video_mp4": "video/mp4",
    "file_upload_config.message.video_mpeg": "video/mpeg",
    "file_upload_config.message.video_quicktime": "video/quicktime",
    "file_upload_config.message.video_webm": "video/webm",
    "file_upload_config.message.audio_mpeg": "audio/mpeg",
    "file_upload_config.message.audio_wav": "audio/wav",
    "file_upload_config.message.audio_ogg": "audio/ogg",
    "file_upload_config.message.audio_webm": "audio/webm",
    "file_upload_config.message.us_east_1": "us-east-1",
    "file_upload_config.message.create_necessary_directories_a": "Create necessary directories after initialization.",
    "file_upload_tests_example.message.example_tests_for_file_upload": "Example tests for file upload security system.",
    "file_upload_tests_example.message.test_file_scanner_functionalit": "Test file scanner functionality.",
    "file_upload_tests_example.message.test_mime_type_detection": "Test MIME type detection.",
    "file_upload_tests_example.message.image_jpeg": "image/jpeg",
    "file_upload_tests_example.message.test_that_blocked_extensions_a": "Test that blocked extensions are rejected.",
    "file_upload_tests_example.message.test_virus_scanning_for_clean": "Test virus scanning for clean file.",
    "file_upload_tests_example.message.test_virus_scanning_for_infect": "Test virus scanning for infected file.",
    "file_upload_tests_example.message.test_image_processing_function": "Test image processing functionality.",
    "file_upload_tests_example.message.test_exif_data_stripping": "Test EXIF data stripping.",
    "file_upload_tests_example.message.test_storage_manager_functiona": "Test storage manager functionality.",
    "file_upload_tests_example.message.test_secure_filename_generatio": "Test secure filename generation.",
    "file_upload_tests_example.message.test_storage_path_creation": "Test storage path creation.",
    "file_upload_tests_example.message.user123": "user123",
    "file_upload_tests_example.message.user123_1": "user123",
    "file_upload_tests_example.message.test_s3_upload_functionality": "Test S3 upload functionality.",
    "file_upload_tests_example.message.test_bucket": "test-bucket",
    "file_upload_tests_example.message.user123_2": "user123",
    "file_upload_tests_example.message.boto3_client": "boto3.client",
    "file_upload_tests_example.message.test_main_file_upload_service": "Test main file upload service.",
    "file_upload_tests_example.message.user123_3": "user123",
    "file_upload_tests_example.message.tenant456": "tenant456",
    "file_upload_tests_example.message.app_services_file_upload_audit": "app.services.file_upload.audit_logger.db",
    "file_upload_tests_example.message.test_uploading_an_oversized_fi": "Test uploading an oversized file.",
    "file_upload_tests_example.message.user123_4": "user123",
    "file_upload_tests_example.message.tenant456_1": "tenant456",
    "file_upload_tests_example.message.file_script_txt": "file<script>.txt",
    "file_upload_tests_example.message.file_name_with_spaces_doc": "file name with spaces.doc",
    "file_upload_tests_example.message.file_txt": "file@#$%^&*.txt",
    "file_upload_tests_example.message.integration_tests_for_file_upl": "Integration tests for file upload system.",
    "file_upload_tests_example.message.test_encryption_key": "test-encryption-key",
    "file_upload_tests_example.message.test_image_png": "test_image.png",
    "file_upload_tests_example.message.image_png": "image/png",
    "file_upload_tests_example.message.user123_5": "user123",
    "file_upload_tests_example.message.tenant456_2": "tenant456",
    "file_upload_tests_example.message.app_services_file_upload_audit_1": "app.services.file_upload.audit_logger.db",
    "file_upload_file_upload_service.message.main_file_upload_service_orche": "Main file upload service orchestrating all security features.",
    "file_upload_file_upload_service.message.main_service_for_secure_file_u": "Main service for secure file uploads.",
    "file_upload_file_upload_service.message.exceeds_maximum": " exceeds maximum ",
    "file_upload_file_upload_service.message.file_storage_path_not_found": "File storage path not found",
    "file_upload_file_upload_service.message.get_upload_statistics_for_a_us": "Get upload statistics for a user.",
    "file_upload_file_upload_service.message.create_a_signed_url_f": "\n        Create a signed URL for temporary file access.\n        \n        Args:\n            file_id: ID of file\n            expiration: URL expiration in seconds\n            \n        Returns:\n            Signed URL\n        ",
    "file_upload_file_upload_service.message.sanitize_filename_for_security": "Sanitize filename for security.",
    "file_upload_file_upload_service.message.w_s": "[^\\w\\s.-]",
    "file_upload_file_upload_service.message.save_uploaded_file_to_temporar": "Save uploaded file to temporary location.",
    "file_upload_file_upload_service.message.clean_up_old_temporary_files": "Clean up old temporary files.",
    "file_upload_file_upload_service.message.clean_up_old_audit_logs": "Clean up old audit logs.",
    "file_upload___init__.message.file_upload_security_system_fo": "File Upload Security System for BDC Project.\n\nThis module provides a comprehensive file upload security system with:\n- Advanced file type detection using python-magic\n- Virus scanning integration (ClamAV)\n- Image processing and sanitization\n- Secure storage with encryption\n- CDN/S3 integration\n- File versioning and audit trail\n",
    "file_upload_api_example.message.example_api_endpoints_for_secu": "Example API endpoints for secure file upload system.",
    "file_upload_api_example.message.download_a_file": "\n    Download a file.\n    \n    Args:\n        file_id: ID of file to download\n        \n    Returns:\n        File download response\n    ",
    "file_upload_api_example.message.get_upload_statistics_for": "\n    Get upload statistics for current user.\n    \n    Returns:\n        JSON response with user statistics\n    ",
    "file_upload_api_example.message.create_a_signed_url_for_t": "\n    Create a signed URL for temporary file access.\n    \n    Args:\n        file_id: ID of file\n        \n    Expected JSON data:\n    - expiration: Expiration time in seconds (default: 3600)\n    \n    Returns:\n        JSON response with signed URL\n    ",
    "file_upload_api_example.message.file_size_exceeds_maximum_allo": "File size exceeds maximum allowed size",
    "file_upload_audit_logger.message.file_upload_audit_logging_and": "File upload audit logging and versioning system.",
    "file_upload_audit_logger.message.model_for_file_upload_audit_lo": "Model for file upload audit logs.",
    "file_upload_audit_logger.message.model_for_file_versioning": "Model for file versioning.",
    "file_upload_audit_logger.message.file_upload_audits_id": "file_upload_audits.id",
    "file_upload_audit_logger.message.handles_file_upload_audit_logg": "Handles file upload audit logging and versioning.",
    "file_upload_audit_logger.message.log_a_file_upload_event": "Log a file upload event.",
    "file_upload_audit_logger.message.s3_url": "s3_url",
    "file_upload_audit_logger.message.by_user": " by user ",
    "file_upload_audit_logger.message.log_a_file_download_event": "Log a file download event.",
    "file_upload_audit_logger.message.file_not_found_for_download_lo": "File not found for download logging: ",
    "file_upload_audit_logger.message.log_a_file_deletion_event": "Log a file deletion event.",
    "file_upload_audit_logger.message.file_not_found_for_deletion_lo": "File not found for deletion logging: ",
    "file_upload_audit_logger.message.add_a_new_version_of_a_file": "Add a new version of a file.",
    "file_upload_audit_logger.message.create_a_file_version_entry": "Create a file version entry.",
    "file_upload_audit_logger.message.clean_up_old_audit_logs_based": "Clean up old audit logs based on retention policy.",
    "file_upload_audit_logger.message.old_audit_entries": " old audit entries",
    "file_upload_audit_logger.message.get_upload_statistics_for_a_us": "Get upload statistics for a user.",
    "file_upload_migrations.message.database_migration_for_file_up": "Database migration for file upload audit tables.\n\nRun this migration to create the necessary tables:\n    alembic revision -m \"Add file upload audit tables\"\n    \nThen copy the upgrade() and downgrade() functions to the generated migration file.\n",
    "file_upload_migrations.message.create_file_upload_audit_table": "Create file upload audit tables.",
    "file_upload_migrations.message.s3_url": "s3_url",
    "file_upload_migrations.message.file_upload_audits_id": "file_upload_audits.id",
    "file_upload_migrations.message.drop_file_upload_audit_tables": "Drop file upload audit tables.",
    "file_upload_exceptions.message.custom_exceptions_for_file_upl": "Custom exceptions for file upload system.",
    "file_upload_exceptions.message.base_exception_for_file_upload": "Base exception for file upload system.",
    "file_upload_exceptions.message.raised_when_file_type_is_not_a": "Raised when file type is not allowed.",
    "file_upload_exceptions.message.raised_when_file_size_exceeds": "Raised when file size exceeds limit.",
    "file_upload_exceptions.message.raised_when_virus_is_detected": "Raised when virus is detected in file.",
    "core_service_container.message.service_container_for_dependen": "Service container for dependency injection management.",
    "core_service_container.message.dependency_injection_cont": "\n    Dependency injection container for managing service instances.\n    \n    Features:\n    - Service registration with factory functions\n    - Singleton and transient lifecycle management\n    - Dependency resolution with circular dependency detection\n    - Request-scoped services\n    - Service aliases\n    - Service metadata\n    - Thread-safe operations\n    ",
    "core_service_container.message.initialize_the_service_contain": "Initialize the service container.",
    "core_service_container.message.register_a_service_wi": "\n        Register a service with the container.\n        \n        Args:\n            name: Service name\n            factory: Factory function or class to create the service\n            singleton: Whether to create only one instance\n            dependencies: List of dependency service names\n            metadata: Additional metadata for the service\n            interface: Interface that the service implements\n        ",
    "core_service_container.message.singleton": " (singleton=",
    "core_service_container.message.register_a_service_with_a_fact": "Register a service with a factory function.",
    "core_service_container.message.register_a_service_with_a_clas": "Register a service with a class.",
    "core_service_container.message.create_an_alias_for_a_service": "Create an alias for a service.",
    "core_service_container.message.": " -> ",
    "core_service_container.message.is_not_registered": "' is not registered",
    "core_service_container.message._1": " -> ",
    "core_service_container.message.resolve_all_services": "\n        Resolve all services implementing an interface.\n        \n        Args:\n            interface: Interface type\n            \n        Returns:\n            List of service instances\n        ",
    "core_service_container.message.check_if_a_service_is_register": "Check if a service is registered.",
    "core_service_container.message.get_metadata_for_a_service": "Get metadata for a service.",
    "core_service_container.message.list_all_registered_service_na": "List all registered service names.",
    "core_service_container.message.clear_all_singleton_instances": "Clear all singleton instances.",
    "core_service_container.message.cleared_all_singleton_instance": "Cleared all singleton instances",
    "core_service_container.message.unregister_a_service": "\n        Unregister a service.\n        \n        Args:\n            name: Service name\n            \n        Returns:\n            True if unregistered, False if not found\n        ",
    "core_service_container.message.register_default_repository_se": "Register default repository services.",
    "core_service_container.message.get_the_global_service_contain": "Get the global service container instance.",
    "core_service_container.message.set_up_per_request_contai": "\n    Set up per-request container handling.\n    \n    Args:\n        app: Flask application instance\n    ",
    "core_service_container.message.clean_up_request_scoped_contai": "Clean up request-scoped container.",
    "core_service_container.message.get_request_scoped_container_o": "Get request-scoped container or global container.",
    "core___init__.message.core_service_layer_components": "Core service layer components for dependency injection.",
    "core_base_service.message.base_service_interface_and_imp": "Base service interface and implementation for standardized service layer.",
    "core_base_service.message.base_interface_for_all_service": "Base interface for all services.",
    "core_base_service.message.get_the_repository_instance_fo": "Get the repository instance for this service.",
    "core_base_service.message.get_logger_instance_for_this_s": "Get logger instance for this service.",
    "core_base_service.message.hook_called_before_entity_crea": "Hook called before entity creation.",
    "core_base_service.message.hook_called_after_entity_creat": "Hook called after entity creation.",
    "core_base_service.message.hook_called_before_entity_dele": "Hook called before entity deletion.",
    "core_base_service.message.hook_called_after_entity_delet": "Hook called after entity deletion.",
    "core_base_service.message.initialize_base_servi": "\n        Initialize base service.\n        \n        Args:\n            repository: Repository instance\n            db_session: Database session\n            cache_enabled: Whether to enable caching\n            cache_timeout: Cache timeout in seconds\n        ",
    "core_base_service.message.get_repository_instance_creat": "Get repository instance, creating if necessary.",
    "core_base_service.message.get_the_repository_instance_fo_1": "Get the repository instance for this service.",
    "core_base_service.message.get_logger_instance_for_this_s_1": "Get logger instance for this service.",
    "core_base_service.message.hook_called_before_entity_crea_1": "Hook called before entity creation.",
    "core_base_service.message.hook_called_after_entity_creat_1": "Hook called after entity creation.",
    "core_base_service.message.hook_called_before_entity_dele_1": "Hook called before entity deletion.",
    "core_base_service.message.hook_called_after_entity_delet_1": "Hook called after entity deletion.",
    "core_base_service.message.entity": " entity: ",
    "core_base_service.message.get_entity_by_id": "\n        Get entity by ID.\n        \n        Args:\n            entity_id: Entity ID\n            use_cache: Whether to use cache\n            \n        Returns:\n            Entity or None if not found\n        ",
    "core_base_service.message.id": " ID: ",
    "core_base_service.message.get_all_entities_with": "\n        Get all entities with optional filtering and pagination.\n        \n        Args:\n            filters: Filter criteria\n            pagination: Pagination params (page, per_page)\n            \n        Returns:\n            List of entities\n        ",
    "core_base_service.message.entity_1": " entity: ",
    "core_base_service.message.entity_2": " entity: ",
    "core_base_service.message.count_entities_with_o": "\n        Count entities with optional filtering.\n        \n        Args:\n            filters: Filter criteria\n            \n        Returns:\n            Entity count\n        ",
    "core_base_service.message.check_if_entity_exist": "\n        Check if entity exists.\n        \n        Args:\n            entity_id: Entity ID\n            \n        Returns:\n            True if exists, False otherwise\n        ",
    "core_base_service.message.generate_cache_key_for_this_se": "Generate cache key for this service.",
    "core_base_service.message.clear_all_cache_for_this_servi": "Clear all cache for this service.",
    "core_base_service.message.clearing_cache_for_pattern": "Clearing cache for pattern: ",
    "core_base_service.message.clear_cache_for_specific_entit": "Clear cache for specific entity.",
    "core_base_service.message.clear_cache_for_specific_entit_1": "Clear cache for specific entity by ID.",
    "core_base_service.message.begin_a_new_transaction": "Begin a new transaction.",
    "core_base_service.message.flush_pending_changes_without": "Flush pending changes without committing.",
    "core_service_config.message.service_configuration_for_the": "Service configuration for the standardized service layer.",
    "core_service_config.message.configure_all_services_wi": "\n    Configure all services with dependency injection.\n    \n    Args:\n        app: Flask application instance\n        container: Service container (uses global if not provided)\n    ",
    "core_service_config.message.create_service_aliases_for_con": "Create service aliases for convenience.",
    "core_service_config.message.auth_v2": "auth_v2",
    "core_service_config.message.user_service_v2": "user_service_v2",
    "core_service_config.message.get_service_configuration_for": "Get service configuration for debugging/monitoring.",
    "core_service_factory.message.service_factory_for_creating_s": "Service factory for creating service instances with proper dependency injection.",
    "core_service_factory.message.interface_for_service_factorie": "Interface for service factories.",
    "core_service_factory.message.create_a_service_instance": "Create a service instance.",
    "core_service_factory.message.create_a_service_instance_with": "Create a service instance with explicit dependencies.",
    "core_service_factory.message.factory_for_creating_serv": "\n    Factory for creating service instances with dependency injection.\n    \n    This factory provides:\n    - Automatic dependency resolution\n    - Service configuration\n    - Instance caching\n    - Lifecycle management\n    ",
    "core_service_factory.message.initialize_service_fa": "\n        Initialize service factory.\n        \n        Args:\n            service_class: Service class to instantiate\n            service_name: Service name for container registration\n            use_request_scope: Whether to use request-scoped container\n        ",
    "core_service_factory.message.get_appropriate_container_base": "Get appropriate container based on scope.",
    "core_service_factory.message.create_a_service_inst": "\n        Create a service instance.\n        \n        Args:\n            **kwargs: Additional arguments for service construction\n            \n        Returns:\n            Service instance\n        ",
    "core_service_factory.message.create_a_service_inst_1": "\n        Create a service instance with explicit dependencies.\n        \n        Args:\n            dependencies: Dependency instances\n            **kwargs: Additional arguments\n            \n        Returns:\n            Service instance\n        ",
    "core_service_factory.message.with_dependencies": " with dependencies: ",
    "core_service_factory.message.instance": " instance",
    "core_service_factory.message.resolve_dependencies": "\n        Resolve dependencies for the service.\n        \n        Returns:\n            Dictionary of dependency instances\n        ",
    "core_service_factory.message.by_type": "' by type '",
    "core_service_factory.message.in_container": " in container",
    "core_service_factory.message.registry_for_managing_service": "Registry for managing service factories.",
    "core_service_factory.message.register_a_service_factory": "Register a service factory.",
    "core_service_factory.message.get_a_service_factory_by_name": "Get a service factory by name.",
    "core_service_factory.message.create_a_service_using_its_fac": "Create a service using its factory.",
    "core_service_factory.message.no_factory_registered_for_serv": "No factory registered for service: ",
    "core_service_factory.message.list_all_registered_factory_na": "List all registered factory names.",
    "core_service_factory.message.get_the_global_factory_registr": "Get the global factory registry.",
    "core_service_factory.message.create_and_optionally_reg": "\n    Create and optionally register a service factory.\n    \n    Args:\n        service_class: Service class\n        service_name: Optional service name\n        **kwargs: Additional factory configuration\n        \n    Returns:\n        ServiceFactory instance\n    ",
    "core_service_factory.message.get_a_service_instance_by": "\n    Get a service instance by name.\n    \n    First tries container resolution, then factory creation.\n    \n    Args:\n        service_name: Service name\n        **kwargs: Additional arguments\n        \n    Returns:\n        Service instance\n    ",
    "core_user_service_example.message.example_of_userservice_using_t": "Example of UserService using the new standardized service layer architecture.",
    "core_user_service_example.message.user_service_implementati": "\n    User service implementation using standardized architecture.\n    \n    This service demonstrates:\n    - Extending BaseService for common functionality\n    - Using @service decorator for auto-registration\n    - Leveraging dependency injection\n    - Using decorators for cross-cutting concerns\n    ",
    "core_user_service_example.message.initialize_user_service_with_d": "Initialize user service with dependencies.",
    "core_user_service_example.message.w_w_w": "^[\\w\\.-]+@[\\w\\.-]+\\.\\w+$",
    "core_user_service_example.message.process_data_before_creating_u": "Process data before creating user.",
    "core_user_service_example.message.process_after_creating_user": "Process after creating user.",
    "core_user_service_example.message.create_a_new_user_wit": "\n        Create a new user with profile.\n        \n        This method demonstrates using the base create() with additional logic.\n        ",
    "core_user_service_example.message.get_user_by_email_with_caching": "Get user by email with caching.",
    "core_user_service_example.message.get_users_by_role_with_caching": "Get users by role with caching.",
    "core_user_service_example.message.deactivate_a_user_account": "Deactivate a user account.",
    "core_user_service_example.message.send_notification_to": "\n        Send notification to user.\n        \n        Demonstrates using @inject decorator for optional dependencies.\n        ",
    "core_user_service_example.message.notification_service_not_avail": "Notification service not available",
    "core_user_service_example.message.create_default_user_profile": "Create default user profile.",
    "core_user_service_example.message.send_welcome_email_to_new_user": "Send welcome email to new user.",
    "core_user_service_example.message.would_send_welcome_email_to": "Would send welcome email to ",
    "core_user_service_example.message.get_user_permissions_based_on": "Get user permissions based on role.",
    "core_user_service_example.message.users": "users.*",
    "core_user_service_example.message.settings": "settings.*",
    "core_user_service_example.message.reports": "reports.*",
    "core_user_service_example.message.profile": "profile.*",
    "core_user_service_example.message.revoke_all_active_sessions_for": "Revoke all active sessions for user.",
    "core_user_service_example.message.revoking_sessions_for_user": "Revoking sessions for user ",
    "core_user_service_example.message.user_service_v3": "user_service_v3",
    "core_user_service_example.message.example_of_how_to_use_the_new": "Example of how to use the new service architecture.",
    "core_user_service_example.message.user_service_v3_1": "user_service_v3",
    "core_user_service_example.message.user_service_v3_2": "user_service_v3",
    "core_user_service_example.message.user_service_v3_3": "user_service_v3",
    "core_user_service_example.message.test_example_com": "test@example.com",
    "core_decorators.message.decorators_for_dependency_inje": "Decorators for dependency injection and service management.",
    "core_decorators.message.decorator_to_inject_servi": "\n    Decorator to inject services into function parameters.\n    \n    Args:\n        *service_names: Positional service names to inject\n        **named_services: Named services (param_name=service_name)\n        \n    Example:\n        @inject('user_service', 'auth_service')\n        def my_function(user_service, auth_service):\n            # Services are automatically injected\n            pass\n        \n        @inject(user_svc='user_service', auth='auth_service')\n        def my_function(user_svc, auth):\n            # Services injected with custom parameter names\n            pass\n    ",
    "core_decorators.message.not_found_in_container": "' not found in container",
    "core_decorators.message.not_found_in_container_1": "' not found in container",
    "core_decorators.message.transaction_rolled_back_for": "Transaction rolled back for ",
    "core_decorators.message.decorator_to_rate_limit_f": "\n    Decorator to rate limit function calls.\n    \n    Args:\n        calls: Number of allowed calls\n        period: Time period in seconds\n        \n    Example:\n        @rate_limit(calls=10, period=60)  # 10 calls per minute\n        def api_endpoint():\n            pass\n    ",
    "core_decorators.message.rate_limit": "rate_limit:",
    "core_decorators.message.rate_limit_exceeded_for": "Rate limit exceeded for ",
    "core_decorators.message.by": " by ",
    "core_decorators.message.calls_per": " calls per ",
    "core_decorators.message.seconds": " seconds",
    "core_decorators.message.expected": ": expected ",
    "core_decorators.message.decorator_to_run_function": "\n    Decorator to run function as async task.\n    \n    Args:\n        queue: Task queue name\n        \n    Example:\n        @async_task(queue='emails')\n        def send_email(to, subject, body):\n            pass\n    ",
    "core_decorators.message.on_queue": " on queue: ",
    "gamification_achievement_service.message.achievement_service_handles": "\nAchievement Service\n\nHandles the creation, management, and tracking of user achievements.\nIncludes both automatic achievements (triggered by system events) and \nmanual achievements (awarded by trainers/admins).\n",
    "gamification_achievement_service.message.service_for_managing_achieveme": "Service for managing achievements and tracking user progress",
    "gamification_achievement_service.message.create_a_new_achievement_defin": "Create a new achievement definition",
    "gamification_achievement_service.message.award_an_achievement_to_a_user": "Award an achievement to a user",
    "gamification_achievement_service.message.already_has_achievement": " already has achievement ",
    "gamification_achievement_service.message.to_user": " to user ",
    "gamification_achievement_service.message.check_and_award_eligible_achie": "Check and award eligible achievements for a user based on an event",
    "gamification_achievement_service.message.get_all_achievements_earned_by": "Get all achievements earned by a user",
    "gamification_achievement_service.message.get_user_s_progress_towards_a": "Get user's progress towards a specific achievement",
    "gamification_achievement_service.message.get_achievements_available_to": "Get achievements available to earn (not yet earned by user)",
    "gamification_achievement_service.message.check_if_user_is_eligible_for": "Check if user is eligible for an achievement based on criteria",
    "gamification_achievement_service.message.calculate_user_s_current_progr": "Calculate user's current progress towards an achievement",
    "gamification_achievement_service.message.check_learning_path_achievemen": "Check learning path achievements",
    "gamification_achievement_service.message.calculate_progress_for_complet": "Calculate progress for completion achievements",
    "gamification_achievement_service.message.evaluations": " evaluations",
    "gamification_achievement_service.message.calculate_progress_for_streak": "Calculate progress for streak achievements",
    "gamification_achievement_service.message.calculate_progress_for_perform": "Calculate progress for performance achievements",
    "gamification_achievement_service.message.calculate_progress_for_partici": "Calculate progress for participation achievements",
    "gamification_achievement_service.message.calculate_progress_for_milesto": "Calculate progress for milestone achievements",
    "gamification_learning_path_service.message.learning_path_service_manage": "\nLearning Path Service\n\nManages personalized learning paths with gamified elements.\nHandles adaptive recommendations, skill-based progression, and customized challenges.\n",
    "gamification_learning_path_service.message.learning_path_node_types": "Learning path node types",
    "gamification_learning_path_service.message.service_for_managing_personali": "Service for managing personalized learning paths",
    "gamification_learning_path_service.message.create_a_new_learning_path": "Create a new learning path",
    "gamification_learning_path_service.message.add_a_node_to_a_learning_path": "Add a node to a learning path",
    "gamification_learning_path_service.message.added_node_to_learning_path": "Added node to learning path ",
    "gamification_learning_path_service.message.generate_a_personalized_learni": "Generate a personalized learning path for a user",
    "gamification_learning_path_service.message.unknown_path_generation_type": "Unknown path generation type: ",
    "gamification_learning_path_service.message.assign_a_learning_path_to_a_us": "Assign a learning path to a user",
    "gamification_learning_path_service.message.to_user": " to user ",
    "gamification_learning_path_service.message.start_a_learning_path_for_a_us": "Start a learning path for a user",
    "gamification_learning_path_service.message.for_user": " for user ",
    "gamification_learning_path_service.message.user_path_not_found": "User path not found",
    "gamification_learning_path_service.message.for_user_1": " for user ",
    "gamification_learning_path_service.message.in_path": " in path ",
    "gamification_learning_path_service.message.get_all_learning_paths_for_a_u": "Get all learning paths for a user",
    "gamification_learning_path_service.message.get_detailed_progress_for_a_sp": "Get detailed progress for a specific learning path",
    "gamification_learning_path_service.message.get_recommended_learning_paths": "Get recommended learning paths for a user",
    "gamification_learning_path_service.message.create_an_adaptive_learning_pa": "Create an adaptive learning path based on user goals and preferences",
    "gamification_learning_path_service.message.personalized_learning_path_to": "Personalized learning path to achieve: ",
    "gamification_learning_path_service.message.generate_a_skill_based_learnin": "Generate a skill-based learning path",
    "gamification_learning_path_service.message.generate_a_goal_oriented_learn": "Generate a goal-oriented learning path",
    "gamification_learning_path_service.message.generate_an_adaptive_learning": "Generate an adaptive learning path",
    "gamification_learning_path_service.message.generate_a_competency_based_le": "Generate a competency-based learning path",
    "gamification_learning_path_service.message.calculate_estimated_completion": "Calculate estimated completion date for a learning path",
    "gamification_learning_path_service.message.get_the_next_available_node_in": "Get the next available node in the learning path",
    "gamification_learning_path_service.message.check_if_a_node_is_available_t": "Check if a node is available to the user",
    "gamification_learning_path_service.message.check_if_a_node_is_mandatory": "Check if a node is mandatory",
    "gamification_learning_path_service.message.get_user_s_learning_profile_fo": "Get user's learning profile for recommendations",
    "gamification_learning_path_service.message.calculate_relevance_score_for": "Calculate relevance score for a learning path",
    "gamification_learning_path_service.message.get_reason_for_recommending_a": "Get reason for recommending a path",
    "gamification_learning_path_service.message.assess_user_s_current_skills": "Assess user's current skills",
    "gamification_learning_path_service.message.determine_appropriate_difficul": "Determine appropriate difficulty level",
    "gamification_learning_path_service.message.generate_adaptive_nodes_for_a": "Generate adaptive nodes for a learning path",
    "gamification_learning_path_service.message.create_nodes_for_skill_based_l": "Create nodes for skill-based learning",
    "gamification_learning_path_service.message.create_nodes_for_goal_oriented": "Create nodes for goal-oriented learning",
    "gamification_learning_path_service.message.step_1_foundation_for": "Step 1: Foundation for ",
    "gamification_learning_path_service.message.create_nodes_for_competency_ba": "Create nodes for competency-based learning",
    "gamification_gamification_manager.message.gamification_manager_central": "\nGamification Manager\n\nCentral orchestrator for all gamification features.\nCoordinates between different gamification services and handles complex workflows.\n",
    "gamification_gamification_manager.message.central_manager_for_all_gamifi": "Central manager for all gamification features",
    "gamification_gamification_manager.message.main_entry_point_for_triggerin": "Main entry point for triggering gamification events",
    "gamification_gamification_manager.message.for_user": " for user ",
    "gamification_gamification_manager.message.no_handler_for_event_type": "No handler for event type: ",
    "gamification_gamification_manager.message.get_comprehensive_gamification": "Get comprehensive gamification summary for a user",
    "gamification_gamification_manager.message.get_gamification_dashboard_dat": "Get gamification dashboard data optimized for UI display",
    "gamification_gamification_manager.message.create_a_comprehensive_gamific": "Create a comprehensive gamification challenge",
    "gamification_gamification_manager.message.award_multiple_rewards_in_a_si": "Award multiple rewards in a single transaction",
    "gamification_gamification_manager.message.handle_evaluation_completion_e": "Handle evaluation completion event",
    "gamification_gamification_manager.message.handle_program_completion_even": "Handle program completion event",
    "gamification_gamification_manager.message.handle_daily_login_event": "Handle daily login event",
    "gamification_gamification_manager.message.handle_perfect_score_achieveme": "Handle perfect score achievement event",
    "gamification_gamification_manager.message.handle_first_evaluation_comple": "Handle first evaluation completion event",
    "gamification_gamification_manager.message.handle_streak_milestone_event": "Handle streak milestone event",
    "gamification_gamification_manager.message.handle_social_interaction_even": "Handle social interaction event",
    "gamification_gamification_manager.message.handle_learning_path_node_comp": "Handle learning path node completion event",
    "gamification_gamification_manager.message.handle_team_challenge_completi": "Handle team challenge completion event",
    "gamification_gamification_manager.message.updating_leaderboards_for_user": "Updating leaderboards for user ",
    "gamification_gamification_manager.message.calculate_overall_gamification": "Calculate overall gamification engagement score",
    "gamification_gamification_manager.message.get_recent_rank_improvements_f": "Get recent rank improvements for user",
    "gamification_gamification_manager.message.get_current_streak_status": "Get current streak status",
    "gamification_gamification_manager.message.get_upcoming_milestones_for_us": "Get upcoming milestones for user",
    "gamification_gamification_manager.message.context_manager_for_database_t": "Context manager for database transactions",
    "gamification_xp_service.message.experience_points_xp_servic": "\nExperience Points (XP) Service\n\nManages experience points calculation, distribution, and tracking.\nHandles XP multipliers, bonus events, and different XP sources.\n",
    "gamification_xp_service.message.service_for_managing_experienc": "Service for managing experience points",
    "gamification_xp_service.message.award_xp_to_a_user_for_a_speci": "Award XP to a user for a specific activity",
    "gamification_xp_service.message.xp_to_user": " XP to user ",
    "gamification_xp_service.message.award_xp_for_a_predefined_acti": "Award XP for a predefined activity",
    "gamification_xp_service.message.get_user_s_xp_transaction_hist": "Get user's XP transaction history",
    "gamification_xp_service.message.get_comprehensive_xp_statistic": "Get comprehensive XP statistics for a user",
    "gamification_xp_service.message.get_xp_leaderboard_for_differe": "Get XP leaderboard for different timeframes",
    "gamification_xp_service.message.create_a_temporary_xp_multipli": "Create a temporary XP multiplier event",
    "gamification_xp_service.message.calculate_total_multiplier_inc": "Calculate total multiplier including active events and conditions",
    "gamification_xp_service.message.calculate_bonus_multiplier_for": "Calculate bonus multiplier for specific activity conditions",
    "gamification_xp_service.message.check_if_a_multiplier_applies": "Check if a multiplier applies to this user and activity",
    "gamification_xp_service.message.get_time_based_xp_multipliers": "Get time-based XP multipliers",
    "gamification_xp_service.message.get_streak_based_xp_multiplier": "Get streak-based XP multiplier",
    "gamification_xp_service.message.calculate_user_s_current_daily": "Calculate user's current daily activity streak",
    "gamification___init__.message.gamification_services_package": "\nGamification Services Package\n\nThis package contains all gamification-related services for the BDC project including:\n- Achievement and badge systems\n- Experience points and leveling\n- Progress tracking and milestones\n- Leaderboards and competitions\n- Social features and team challenges\n- Personalized learning paths\n",
    "gamification_progress_service.message.progress_service_manages_pro": "\nProgress Service\n\nManages progress tracking, milestone detection, and reward distribution.\nHandles different types of progress: learning paths, skill development, \nprogram completion, and custom objectives.\n",
    "gamification_progress_service.message.service_for_tracking_progress": "Service for tracking progress and managing milestones",
    "gamification_progress_service.message.score_100_on_any_evaluation": "Score 100% on any evaluation",
    "gamification_progress_service.message.maintain_a_7_day_learning_stre": "Maintain a 7-day learning streak",
    "gamification_progress_service.message.master_a_skill_reach_90_prof": "Master a skill (reach 90% proficiency)",
    "gamification_progress_service.message.create_a_new_progress_tracker": "Create a new progress tracker for a user",
    "gamification_progress_service.message.get_all_progress_trackers_for": "Get all progress trackers for a user",
    "gamification_progress_service.message.create_a_new_milestone": "Create a new milestone",
    "gamification_progress_service.message.check_and_award_eligible_miles": "Check and award eligible milestones for a user",
    "gamification_progress_service.message.award_a_milestone_to_a_user": "Award a milestone to a user",
    "gamification_progress_service.message.to_user": " to user ",
    "gamification_progress_service.message.get_all_milestones_achieved_by": "Get all milestones achieved by a user",
    "gamification_progress_service.message.get_comprehensive_progress_das": "Get comprehensive progress dashboard data",
    "gamification_progress_service.message.create_a_progress_goal_with_de": "Create a progress goal with deadline and rewards",
    "gamification_progress_service.message.track_program_completion_progr": "Track program completion progress",
    "gamification_progress_service.message.track_skill_development_progre": "Track skill development progress",
    "gamification_progress_service.message.track_evaluation_performance_p": "Track evaluation performance progress",
    "gamification_progress_service.message.track_learning_streak_progress": "Track learning streak progress",
    "gamification_progress_service.message.track_social_engagement_progre": "Track social engagement progress",
    "gamification_progress_service.message.track_custom_objective_progres": "Track custom objective progress",
    "gamification_progress_service.message.check_if_user_is_eligible_for": "Check if user is eligible for a milestone",
    "gamification_progress_service.message.process_rewards_for_achieving": "Process rewards for achieving a milestone",
    "gamification_progress_service.message.calculate_overall_progress_acr": "Calculate overall progress across all trackers",
    "gamification_progress_service.message.get_next_achievable_milestones": "Get next achievable milestones for a user",
    "gamification_progress_service.message.calculate_user_s_progress_towa": "Calculate user's progress towards a specific milestone",
    "gamification_progress_service.message.progress_calculation_not_imple": "Progress calculation not implemented",
    "gamification_progress_service.message.calculate_user_s_current_learn": "Calculate user's current learning streak",
    "gamification_progress_service.message.create_a_milestone_achievement": "Create a milestone achievement record",
    "gamification_social_service.message.social_service_manages_socia": "\nSocial Service\n\nManages social features including team challenges, sharing, collaboration,\nand social interactions within the gamification system.\n",
    "gamification_social_service.message.types_of_social_shares": "Types of social shares",
    "gamification_social_service.message.service_for_social_features_an": "Service for social features and team interactions",
    "gamification_social_service.message.create_a_new_team": "Create a new team",
    "gamification_social_service.message.by_user": " by user ",
    "gamification_social_service.message.join_a_team_by_id_or_join_code": "Join a team by ID or join code",
    "gamification_social_service.message.joined_team": " joined team ",
    "gamification_social_service.message.left_team": " left team ",
    "gamification_social_service.message.get_all_teams_a_user_belongs_t": "Get all teams a user belongs to",
    "gamification_social_service.message.create_a_new_team_challenge": "Create a new team challenge",
    "gamification_social_service.message.start_a_team_challenge": "Start a team challenge",
    "gamification_social_service.message.create_a_social_share": "Create a social share",
    "gamification_social_service.message.get_social_feed_for_user": "Get social feed for user",
    "gamification_social_service.message.react_to_a_social_share": "React to a social share",
    "gamification_social_service.message.reacted_to_share": " reacted to share ",
    "gamification_social_service.message.with": " with ",
    "gamification_social_service.message.create_a_collaboration_session": "Create a collaboration session",
    "gamification_social_service.message.get_team_leaderboard_for_a_spe": "Get team leaderboard for a specific metric",
    "gamification_social_service.message.generate_a_unique_team_join_co": "Generate a unique team join code",
    "gamification_social_service.message.get_number_of_participants_in": "Get number of participants in a challenge",
    "gamification_social_service.message.get_reactions_for_a_social_sha": "Get reactions for a social share",
    "gamification_level_service.message.level_service_manages_user_l": "\nLevel Service\n\nManages user levels, level progression, and level-based rewards.\nHandles level calculations, requirements, and milestone rewards.\n",
    "gamification_level_service.message.service_for_managing_user_leve": "Service for managing user levels and progression",
    "gamification_level_service.message.just_starting_your_learning_jo": "Just starting your learning journey",
    "gamification_level_service.message.getting_familiar_with_the_basi": "Getting familiar with the basics",
    "gamification_level_service.message.actively_learning_and_growing": "Actively learning and growing",
    "gamification_level_service.message.exceptional_knowledge_and_skil": "Exceptional knowledge and skill",
    "gamification_level_service.message.get_title_and_description_for": "Get title and description for a level",
    "gamification_level_service.message.just_starting_your_learning_jo_1": "Just starting your learning journey",
    "gamification_level_service.message.get_rewards_for_achieving_a_sp": "Get rewards for achieving a specific level",
    "gamification_level_service.message.master": " Master",
    "gamification_level_service.message.1_1x_xp_multiplier_for_24_hour": "1.1x XP multiplier for 24 hours",
    "gamification_level_service.message.access_to_mentor_features": "Access to mentor features",
    "gamification_level_service.message.all_badges_get_golden_borders": "All badges get golden borders",
    "gamification_level_service.message.permanent_hall_of_fame_entry": "Permanent Hall of Fame entry",
    "gamification_level_service.message.get_global_level_statistics": "Get global level statistics",
    "gamification_level_service.message.create_a_custom_level_progress": "Create a custom level progression system",
    "gamification_level_service.message.preview_xp_requirements_for_le": "Preview XP requirements for level progression",
    "gamification_level_service.message.calculate_xp_using_fibonacci_s": "Calculate XP using Fibonacci sequence",
    "gamification_level_service.message.calculate_xp_using_milestone_b": "Calculate XP using milestone-based progression",
    "gamification_badge_service.message.badge_service_manages_the_ba": "\nBadge Service\n\nManages the badge system including badge creation, assignment, and visual customization.\nHandles different badge types: achievement badges, skill badges, participation badges, etc.\n",
    "gamification_badge_service.message.service_for_managing_badges_an": "Service for managing badges and badge assignments",
    "gamification_badge_service.message.4caf50": "#4CAF50",
    "gamification_badge_service.message.linear_gradient_135deg_4caf5": "linear-gradient(135deg, #4CAF50, #8BC34A)",
    "gamification_badge_service.message.2px_solid_2e7d32": "2px solid #2E7D32",
    "gamification_badge_service.message.ffffff": "#FFFFFF",
    "gamification_badge_service.message.score_100_on_an_evaluation": "Score 100% on an evaluation",
    "gamification_badge_service.message.ffd700": "#FFD700",
    "gamification_badge_service.message.linear_gradient_135deg_ffd70": "linear-gradient(135deg, #FFD700, #FFA000)",
    "gamification_badge_service.message.3px_solid_ff8f00": "3px solid #FF8F00",
    "gamification_badge_service.message.1a1a1a": "#1A1A1A",
    "gamification_badge_service.message.rgba_255_215_0_0_6": "rgba(255, 215, 0, 0.6)",
    "gamification_badge_service.message.maintain_a_7_day_learning_stre": "Maintain a 7-day learning streak",
    "gamification_badge_service.message.ff5722": "#FF5722",
    "gamification_badge_service.message.linear_gradient_135deg_ff572": "linear-gradient(135deg, #FF5722, #E64A19)",
    "gamification_badge_service.message.2px_solid_bf360c": "2px solid #BF360C",
    "gamification_badge_service.message.ffffff_1": "#FFFFFF",
    "gamification_badge_service.message.participate_in_5_team_challeng": "Participate in 5 team challenges",
    "gamification_badge_service.message.9c27b0": "#9C27B0",
    "gamification_badge_service.message.linear_gradient_135deg_9c27b": "linear-gradient(135deg, #9C27B0, #673AB7)",
    "gamification_badge_service.message.2px_solid_4a148c": "2px solid #4A148C",
    "gamification_badge_service.message.ffffff_2": "#FFFFFF",
    "gamification_badge_service.message.2196f3": "#2196F3",
    "gamification_badge_service.message.linear_gradient_135deg_2196f": "linear-gradient(135deg, #2196F3, #1976D2)",
    "gamification_badge_service.message.2px_solid_0d47a1": "2px solid #0D47A1",
    "gamification_badge_service.message.ffffff_3": "#FFFFFF",
    "gamification_badge_service.message.9c27b0_1": "#9C27B0",
    "gamification_badge_service.message.linear_gradient_135deg_9c27b_1": "linear-gradient(135deg, #9C27B0, #673AB7, #FFD700)",
    "gamification_badge_service.message.3px_solid_4a148c": "3px solid #4A148C",
    "gamification_badge_service.message.ffffff_4": "#FFFFFF",
    "gamification_badge_service.message.rgba_156_39_176_0_8": "rgba(156, 39, 176, 0.8)",
    "gamification_badge_service.message.create_a_new_badge": "Create a new badge",
    "gamification_badge_service.message.4caf50_1": "#4CAF50",
    "gamification_badge_service.message.award_a_badge_to_a_user": "Award a badge to a user",
    "gamification_badge_service.message.already_has_badge": " already has badge ",
    "gamification_badge_service.message.to_user": " to user ",
    "gamification_badge_service.message.get_all_badges_earned_by_a_use": "Get all badges earned by a user",
    "gamification_badge_service.message.get_user_s_most_impressive_bad": "Get user's most impressive badges for showcase",
    "gamification_badge_service.message.get_badges_available_to_earn": "Get badges available to earn (not yet earned by user)",
    "gamification_badge_service.message.get_badge_statistics_for_a_use": "Get badge statistics for a user or globally",
    "gamification_badge_service.message.create_a_custom_badge_design": "Create a custom badge design",
    "gamification_badge_service.message.4caf50_2": "#4CAF50",
    "gamification_badge_service.message.2px_solid_2e7d32_1": "2px solid #2E7D32",
    "gamification_badge_service.message.ffffff_5": "#FFFFFF",
    "gamification_badge_service.message.14px": "14px",
    "gamification_badge_service.message.8px": "8px",
    "gamification_badge_service.message.0_2px_4px_rgba_0_0_0_0_2": "0 2px 4px rgba(0,0,0,0.2)",
    "gamification_badge_service.message.generate_css_for_a_badge_desig": "Generate CSS for a badge design",
    "gamification_badge_service.message.badge": "badge-",
    "gamification_badge_service.message.display_inline_flex": " {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    background: ",
    "gamification_badge_service.message.border": ";\n    border: ",
    "gamification_badge_service.message.2px_solid_ccc": "2px solid #ccc",
    "gamification_badge_service.message.color": ";\n    color: ",
    "gamification_badge_service.message.ffffff_6": "#FFFFFF",
    "gamification_badge_service.message.font_family": ";\n    font-family: ",
    "gamification_badge_service.message.font_size": ";\n    font-size: ",
    "gamification_badge_service.message.14px_1": "14px",
    "gamification_badge_service.message.padding": ";\n    padding: ",
    "gamification_badge_service.message.8px_1": "8px",
    "gamification_badge_service.message.box_shadow": ";\n    box-shadow: ",
    "gamification_badge_service.message.0_2px_4px_rgba_0_0_0_0_2_1": "0 2px 4px rgba(0,0,0,0.2)",
    "gamification_badge_service.message.position_relative": ";\n    position: relative;\n    overflow: hidden;\n}\n",
    "gamification_badge_service.message.border_radius_50_width": " { border-radius: 50%; width: 60px; height: 60px; }\n",
    "gamification_badge_service.message.clip_path_polygon_25_0": " { clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%); width: 60px; height: 60px; }\n",
    "gamification_badge_service.message.clip_path_polygon_50_0": " { clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%); width: 60px; height: 60px; }\n",
    "gamification_badge_service.message.transform_rotate_45deg_w": " { transform: rotate(45deg); width: 50px; height: 50px; }\n",
    "gamification_badge_service.message.clip_path_polygon_50_0_1": " { clip-path: polygon(50% 0%, 100% 25%, 82% 100%, 18% 100%, 0% 25%); width: 60px; height: 70px; }\n",
    "gamification_badge_service.message.before_content_positi": "::before { content: ''; position: absolute; top: -2px; left: -2px; right: -2px; bottom: -2px; background: ",
    "gamification_badge_service.message.border_radius_inherit_z_in": "; border-radius: inherit; z-index: -1; filter: blur(8px); }\n",
    "gamification_badge_service.message.animation_badge_pulse_2s_i": " { animation: badge-pulse 2s infinite; }\n",
    "gamification_badge_service.message.keyframes_badge_pulse_0_1": "@keyframes badge-pulse { 0%, 100% { transform: scale(1); } 50% { transform: scale(1.1); } }\n",
    "gamification_badge_service.message.animation_badge_sparkle_3s": " { animation: badge-sparkle 3s infinite; }\n",
    "gamification_badge_service.message.keyframes_badge_sparkle_0": "@keyframes badge-sparkle { 0%, 100% { filter: brightness(1); } 50% { filter: brightness(1.3) saturate(1.2); } }\n",
    "gamification_badge_service.message.calculate_user_s_badge_complet": "Calculate user's badge completion rate",
    "gamification_badge_service.message.get_most_frequently_earned_bad": "Get most frequently earned badges",
    "gamification_badge_service.message.get_rarest_badges_least_earne": "Get rarest badges (least earned)",
    "gamification_leaderboard_service.message.leaderboard_service_manages": "\nLeaderboard Service\n\nManages various types of leaderboards and competitive elements.\nHandles rankings, competitions, and performance comparisons.\n",
    "gamification_leaderboard_service.message.service_for_managing_leaderboa": "Service for managing leaderboards and competitions",
    "gamification_leaderboard_service.message.create_a_new_leaderboard": "Create a new leaderboard",
    "gamification_leaderboard_service.message.get_leaderboard_data_with_opti": "Get leaderboard data with optional user position",
    "gamification_leaderboard_service.message.get_leaderboard_data_by_type_a": "Get leaderboard data by type and time frame",
    "gamification_leaderboard_service.message.with": " with ",
    "gamification_leaderboard_service.message.entries": " entries",
    "gamification_leaderboard_service.message.get_user_s_rankings_across_all": "Get user's rankings across all leaderboards",
    "gamification_leaderboard_service.message.create_a_new_competition": "Create a new competition",
    "gamification_leaderboard_service.message.get_multiple_global_leaderboar": "Get multiple global leaderboards",
    "gamification_leaderboard_service.message.calculate_evaluation_score_bas": "Calculate evaluation score-based leaderboard",
    "gamification_leaderboard_service.message.calculate_completion_rate_base": "Calculate completion rate-based leaderboard",
    "gamification_leaderboard_service.message.calculate_program_progress_bas": "Calculate program progress-based leaderboard",
    "gamification_leaderboard_service.message.get_start_date_for_time_frame": "Get start date for time frame",
    "gamification_leaderboard_service.message.calculate_overall_ranking_scor": "Calculate overall ranking score across all leaderboards",
    "gamification_leaderboard_service.message.get_number_of_participants_in": "Get number of participants in a competition",
    "gamification_leaderboard_service.message.check_if_user_is_participating": "Check if user is participating in a competition",
    "gamification_leaderboard_service.message.get_user_s_rank_in_a_competiti": "Get user's rank in a competition",
    "optimization_query_optimizer.message.database_query_optimization_u": "\nDatabase query optimization utilities\n",
    "optimization_query_optimizer.message.took": " took ",
    "optimization_query_optimizer.message.database_query_optimization_ut": "Database query optimization utilities",
    "optimization_query_optimizer.message.optimize_a_sqlalchemy_query_wi": "Optimize a SQLAlchemy query with various strategies",
    "optimization_query_optimizer.message.cache_hit_for_query": "Cache hit for query: ",
    "optimization_query_optimizer.message.apply_eager_loading_strategies": "Apply eager loading strategies for relationships",
    "optimization_query_optimizer.message.apply_database_specific_query": "Apply database-specific query hints",
    "optimization_query_optimizer.message.execute_queries_in_batches_to": "Execute queries in batches to avoid memory issues",
    "optimization_query_optimizer.message.paginate_query_results_efficie": "Paginate query results efficiently",
    "optimization_query_optimizer.message.analyze_query_performance_and": "Analyze query performance and suggest optimizations",
    "optimization_query_optimizer.message.consider_using_eager_loading_t": "Consider using eager loading to avoid N+1 queries",
    "optimization_query_optimizer.message.consider_adding_indexes_on_fre": "Consider adding indexes on frequently queried columns",
    "optimization_query_optimizer.message.consider_using_pagination_for": "Consider using pagination for large result sets",
    "optimization_query_optimizer.message.detect_potential_n_1_query_pro": "Detect potential N+1 query problems",
    "optimization_query_optimizer.message.generate_a_cache_key_for_the_q": "Generate a cache key for the query",
    "optimization_query_optimizer.message.query": "query:",
    "optimization_query_optimizer.message.get_query_optimization_statist": "Get query optimization statistics",
    "optimization_query_optimizer.message.clear_the_query_cache": "Clear the query cache",
    "optimization_query_optimizer.message.query_1": "query:*",
    "optimization_query_optimizer.message.suggest_indexes_based_on_query": "Suggest indexes based on query patterns",
    "optimization_query_optimizer.message.analyze_common_filter_patterns": "Analyze common filter patterns for a model",
    "optimization_query_optimizer.message.check_if_a_column_has_an_index": "Check if a column has an index",
    "optimization_query_optimizer.message.create_an_execution_plan_for_t": "Create an execution plan for the query",
    "optimization_query_optimizer.message.execution_plan_not_available_f": "Execution plan not available for this database",
    "optimization_query_optimizer.message.apply_complex_query_optimizati": "Apply complex query optimizations based on level",
    "optimization_query_optimizer.message.apply_common_table_expression": "Apply Common Table Expression optimizations",
    "optimization___init__.message.optimization_services_module": "\nOptimization services module including API optimization, database query optimization, and caching strategies.\n",
    "optimization_api_optimizer.message.api_response_time_optimizatio": "\nAPI response time optimization\n",
    "optimization_api_optimizer.message.took": " took ",
    "optimization_api_optimizer.message.api_response_optimization_util": "API response optimization utilities",
    "optimization_api_optimizer.message.decorator_to_optimize_api_resp": "Decorator to optimize API responses",
    "optimization_api_optimizer.message.decorator_to_enable_batch_proc": "Decorator to enable batch processing for APIs",
    "optimization_api_optimizer.message.batch_size_exceeds_maximum_of": "Batch size exceeds maximum of ",
    "optimization_api_optimizer.message.paginate_database_query_result": "Paginate database query results",
    "optimization_api_optimizer.message.stream_large_responses_to_avoi": "Stream large responses to avoid memory issues",
    "optimization_api_optimizer.message.generate_cache_key_for_respons": "Generate cache key for response",
    "optimization_api_optimizer.message.response_hash": "response:hash:",
    "optimization_api_optimizer.message.track_response_time_metrics": "Track response time metrics",
    "optimization_api_optimizer.message.took_1": " took ",
    "optimization_api_optimizer.message.implement_rate_limiting_for_ap": "Implement rate limiting for APIs",
    "optimization_api_optimizer.message.user": "user:",
    "optimization_api_optimizer.message.rate_limit": "rate_limit:",
    "optimization_api_optimizer.message.implement_http_conditional_req": "Implement HTTP conditional requests (ETag/Last-Modified)",
    "optimization_api_optimizer.message.optimize_json_serialization_fo": "Optimize JSON serialization for performance",
    "optimization_api_optimizer.message.implement_partial_response_to": "Implement partial response to reduce payload size",
    "optimization_api_optimizer.message.get_api_optimization_statistic": "Get API optimization statistics",
    "optimization_api_optimizer.message.analyze_api_performance_and_su": "Analyze API performance and suggest improvements",
    "optimization_api_optimizer.message.low_cache_hit_rate": "Low cache hit rate",
    "optimization_api_optimizer.message.consider_increasing_cache_ttl": "Consider increasing cache TTL or warming cache for frequently accessed data",
    "optimization_api_optimizer.message.high_percentage_of_slow_reques": "High percentage of slow requests",
    "optimization_api_optimizer.message.optimize_database_queries_or_i": "Optimize database queries or implement pagination",
    "optimization_api_optimizer.message.enable_compression_for_more_re": "Enable compression for more response types",
    "optimization_cache_strategy.message.advanced_caching_strategy_imp": "\nAdvanced caching strategy implementation\n",
    "optimization_cache_strategy.message.took": " took ",
    "optimization_cache_strategy.message.advanced_caching_strategy_impl": "Advanced caching strategy implementation",
    "optimization_cache_strategy.message.decorator_for_caching_function": "Decorator for caching function results",
    "optimization_cache_strategy.message.set_value_in_cache_with_policy": "Set value in cache with policy handling",
    "optimization_cache_strategy.message.metadata": ":metadata",
    "optimization_cache_strategy.message.cache_entries_matching_patter": " cache entries matching pattern: ",
    "optimization_cache_strategy.message.pre_populate_cache_with_freque": "Pre-populate cache with frequently accessed data",
    "optimization_cache_strategy.message.cache_entries": " cache entries",
    "optimization_cache_strategy.message.implement_write_through_cachin": "Implement write-through caching pattern",
    "optimization_cache_strategy.message.implement_write_behind_caching": "Implement write-behind caching pattern",
    "optimization_cache_strategy.message.schedule_asynchronous_write_to": "Schedule asynchronous write to data source",
    "optimization_cache_strategy.message.to_data_source": " to data source: ",
    "optimization_cache_strategy.message.get_detailed_cache_statistics": "Get detailed cache statistics",
    "optimization_cache_strategy.message.id": "id:",
    "optimization_cache_strategy.message.id_1": ":id:",
    "optimization_cache_strategy.message.hash": ":hash:",
    "optimization_cache_strategy.message.check_if_cache_eviction_is_nee": "Check if cache eviction is needed",
    "optimization_cache_strategy.message.evict_old_cache_entries_based": "Evict old cache entries based on policy",
    "optimization_cache_strategy.message.optimize_cache_performance_bas": "Optimize cache performance based on statistics",
    "optimization_cache_strategy.message.low_cache_hit_rate": "Low cache hit rate: ",
    "optimization_cache_strategy.message.evictions": " evictions",
    "optimization_cache_strategy.message.create_a_tiered_caching_system": "Create a tiered caching system",
    "optimization_cache_strategy.message.promote_frequently_accessed_it": "Promote frequently accessed items to higher tier",
    "optimization_cache_strategy.message.implement_cache_clustering_for": "Implement cache clustering for distributed caching",
    "optimization_cache_strategy.message.configured_cache_clustering_wi": "Configured cache clustering with ",
    "optimization_cache_strategy.message.nodes": " nodes",
    "optimization_cache_strategy.message.implement_cache_partitioning_f": "Implement cache partitioning for better performance",
    "optimization_cache_strategy.message.get_partition_key_based_on_has": "Get partition key based on hash",
    "optimization_cache_strategy.message.partition": "partition:",
    "optimization_db_indexing.message.database_indexing_strategy": "\nDatabase indexing strategy\n",
    "optimization_db_indexing.message.took": " took ",
    "optimization_db_indexing.message.enhanced_database_indexing_str": "Enhanced database indexing strategy implementation",
    "optimization_db_indexing.message.analyze_database_and_create_ne": "Analyze database and create necessary indexes",
    "optimization_db_indexing.message.analyze_indexes_for_a_specific": "Analyze indexes for a specific model",
    "optimization_db_indexing.message.get_suggested_indexes_for_a_mo": "Get suggested indexes for a model based on common patterns",
    "optimization_db_indexing.message.define_common_query_patterns_f": "Define common query patterns for models",
    "optimization_db_indexing.message.create_an_index_on_specified_c": "Create an index on specified columns",
    "optimization_db_indexing.message.create": "\n            CREATE ",
    "optimization_db_indexing.message.index_if_not_exists": " INDEX IF NOT EXISTS ",
    "optimization_db_indexing.message.on": "\n            ON ",
    "optimization_db_indexing.message.": ")\n            ",
    "optimization_db_indexing.message.on_1": " on ",
    "optimization_db_indexing.message.drop_indexes_that_haven_t_been": "Drop indexes that haven't been used recently",
    "optimization_db_indexing.message.drop_index_if_exists": "DROP INDEX IF EXISTS ",
    "optimization_db_indexing.message.analyze_query_performance_and": "Analyze query performance and suggest index improvements",
    "optimization_db_indexing.message.analyze_execution_plan_and_pro": "Analyze execution plan and provide suggestions",
    "optimization_db_indexing.message.sequential_scan_detected_con": "Sequential scan detected - consider adding an index",
    "optimization_db_indexing.message.cost": "cost=",
    "optimization_db_indexing.message.cost_1": "cost=",
    "optimization_db_indexing.message.high_cost_operation_detected": "High cost operation detected (cost=",
    "optimization_db_indexing.message.optimize_query_or_add_inde": ") - optimize query or add indexes",
    "optimization_db_indexing.message.comprehensive_database_index_o": "Comprehensive database index optimization",
    "optimization_db_indexing.message.consider_partitioning_large_ta": "Consider partitioning large tables",
    "optimization_db_indexing.message.use_covering_indexes_for_frequ": "Use covering indexes for frequently accessed column combinations",
    "optimization_db_indexing.message.monitor_slow_query_log_for_opt": "Monitor slow query log for optimization opportunities",
    "optimization_db_indexing.message.consider_using_partial_indexes": "Consider using partial indexes for filtered queries",
    "optimization_db_indexing.message.create_a_covering_index_postg": "Create a covering index (PostgreSQL specific)",
    "optimization_db_indexing.message.create_index": "\n            CREATE INDEX ",
    "optimization_db_indexing.message.on_2": " ON ",
    "optimization_db_indexing.message.include": ")\n            INCLUDE (",
    "optimization_db_indexing.message._1": ")\n            ",
    "optimization_db_indexing.message.create_index_1": "\n        CREATE INDEX ",
    "optimization_db_indexing.message.on_3": " ON ",
    "optimization_db_indexing.message.get_comprehensive_index_statis": "Get comprehensive index statistics",
    "video_conference_providers_base_provider.message.base_interface_for_video_confe": "Base interface for video conference providers.",
    "video_conference_providers_base_provider.message.interface_for_video_conference": "Interface for video conference providers.",
    "video_conference_providers_base_provider.message.create_a_meeting_with": "\n        Create a meeting with the provider.\n        \n        Args:\n            meeting_data: Meeting configuration data\n            \n        Returns:\n            Dict containing meeting_id, meeting_url, and provider-specific data\n        ",
    "video_conference_providers_base_provider.message.get_meeting_analytics": "\n        Get meeting analytics and statistics.\n        \n        Args:\n            meeting_id: Provider-specific meeting identifier\n            \n        Returns:\n            Dict containing analytics data\n        ",
    "video_conference_providers_base_provider.message.get_the_provider_name": "\n        Get the provider name.\n        \n        Returns:\n            str: Provider name\n        ",
    "video_conference_providers_base_provider.message.get_list_of_supported": "\n        Get list of supported features.\n        \n        Returns:\n            List of supported feature names\n        ",
    "video_conference_providers_base_provider.message.check_if_a_feature_is": "\n        Check if a feature is supported.\n        \n        Args:\n            feature: Feature name to check\n            \n        Returns:\n            bool: True if feature is supported\n        ",
    "video_conference_providers_webrtc_provider.message.webrtc_provider_implementation": "WebRTC provider implementation for direct peer-to-peer video calls.",
    "video_conference_providers_webrtc_provider.message.webrtc_provider_implementation_1": "WebRTC provider implementation for direct peer-to-peer video calls.",
    "video_conference_providers_webrtc_provider.message.initialize_webrtc_provider_wit": "Initialize WebRTC provider with configuration.",
    "video_conference_providers_webrtc_provider.message.stun_stun_l_google_com_19302": "stun:stun.l.google.com:19302",
    "video_conference_providers_webrtc_provider.message.stun_stun1_l_google_com_19302": "stun:stun1.l.google.com:19302",
    "video_conference_providers_webrtc_provider.message.http_localhost_3000": "http://localhost:3000",
    "video_conference_providers_webrtc_provider.message.get_list_of_supported_webrtc_f": "Get list of supported WebRTC features.",
    "video_conference_providers_webrtc_provider.message.create_a_webrtc_meeting_room": "Create a WebRTC meeting room.",
    "video_conference_providers_webrtc_provider.message.password": "?password=",
    "video_conference_providers_webrtc_provider.message.not_found": " not found",
    "video_conference_providers_webrtc_provider.message.not_found_1": " not found",
    "video_conference_providers_webrtc_provider.message.start_recording_a_webrtc_meeti": "Start recording a WebRTC meeting.",
    "video_conference_providers_webrtc_provider.message.recording_not_allowed_for_room": "Recording not allowed for room ",
    "video_conference_providers_webrtc_provider.message.started_recording_for_webrtc_r": "Started recording for WebRTC room ",
    "video_conference_providers_webrtc_provider.message.stop_recording_a_webrtc_meetin": "Stop recording a WebRTC meeting.",
    "video_conference_providers_webrtc_provider.message.no_active_recording_for_room": "No active recording for room ",
    "video_conference_providers_webrtc_provider.message.stopped_recording_for_webrtc_r": "Stopped recording for WebRTC room ",
    "video_conference_providers_webrtc_provider.message.get_recordings_for_a_webrtc_me": "Get recordings for a WebRTC meeting.",
    "video_conference_providers_webrtc_provider.message.add_participants_to_a_webrtc_m": "Add participants to a WebRTC meeting.",
    "video_conference_providers_webrtc_provider.message.capacity_exceeded": " capacity exceeded",
    "video_conference_providers_webrtc_provider.message.get_current_webrtc_meeting_par": "Get current WebRTC meeting participants.",
    "video_conference_providers_webrtc_provider.message.send_meeting_invitations_for_w": "Send meeting invitations for WebRTC meeting.",
    "video_conference_providers_webrtc_provider.message.password_1": "?password=",
    "video_conference_providers_webrtc_provider.message.invitations_prepared_for_webrt": "Invitations prepared for WebRTC room ",
    "video_conference_providers_webrtc_provider.message.get_webrtc_meeting_analytics": "Get WebRTC meeting analytics.",
    "video_conference_providers_webrtc_provider.message.get_list_of_all_active_webrtc": "Get list of all active WebRTC rooms.",
    "video_conference_providers_webrtc_provider.message.clean_up_expired_or_inactive_r": "Clean up expired or inactive rooms.",
    "video_conference_providers_webrtc_provider.message.expired_webrtc_rooms": " expired WebRTC rooms",
    "video_conference_providers___init__.message.video_conference_providers_pac": "Video Conference Providers package.",
    "video_conference_providers_google_meet_provider.message.google_meet_video_conference_p": "Google Meet video conference provider implementation.",
    "video_conference_providers_google_meet_provider.message.google_meet_video_conference_p_1": "Google Meet video conference provider implementation.",
    "video_conference_providers_google_meet_provider.message.initialize_google_meet_provide": "Initialize Google Meet provider with configuration.",
    "video_conference_providers_google_meet_provider.message.missing_google_meet_configurat": "Missing Google Meet configuration: ",
    "video_conference_providers_google_meet_provider.message.get_list_of_supported_google_m": "Get list of supported Google Meet features.",
    "video_conference_providers_google_meet_provider.message.setup_google_oauth2_credential": "Setup Google OAuth2 credentials.",
    "video_conference_providers_google_meet_provider.message.https_oauth2_googleapis_com": "https://oauth2.googleapis.com/token",
    "video_conference_providers_google_meet_provider.message.no_google_refresh_token_provid": "No Google refresh token provided. Some features may not work.",
    "video_conference_providers_google_meet_provider.message.get_google_calendar_service": "Get Google Calendar service.",
    "video_conference_providers_google_meet_provider.message.create_a_google_meet_meeting": "Create a Google Meet meeting.",
    "video_conference_providers_google_meet_provider.message.conferencedata": "conferenceData",
    "video_conference_providers_google_meet_provider.message.guestscaninviteothers": "guestsCanInviteOthers",
    "video_conference_providers_google_meet_provider.message.guestscanmodify": "guestsCanModify",
    "video_conference_providers_google_meet_provider.message.guestscanseeotherguests": "guestsCanSeeOtherGuests",
    "video_conference_providers_google_meet_provider.message.datetime": "dateTime",
    "video_conference_providers_google_meet_provider.message.timezone": "timeZone",
    "video_conference_providers_google_meet_provider.message.datetime_1": "dateTime",
    "video_conference_providers_google_meet_provider.message.timezone_1": "timeZone",
    "video_conference_providers_google_meet_provider.message.createrequest": "createRequest",
    "video_conference_providers_google_meet_provider.message.requestid": "requestId",
    "video_conference_providers_google_meet_provider.message.conferencesolutionkey": "conferenceSolutionKey",
    "video_conference_providers_google_meet_provider.message.meet": "meet-",
    "video_conference_providers_google_meet_provider.message.hangoutsmeet": "hangoutsMeet",
    "video_conference_providers_google_meet_provider.message.displayname": "displayName",
    "video_conference_providers_google_meet_provider.message.conferencedata_1": "conferenceData",
    "video_conference_providers_google_meet_provider.message.entrypoints": "entryPoints",
    "video_conference_providers_google_meet_provider.message.entrypointtype": "entryPointType",
    "video_conference_providers_google_meet_provider.message.hangoutlink": "hangoutLink",
    "video_conference_providers_google_meet_provider.message.conferenceid": "conferenceId",
    "video_conference_providers_google_meet_provider.message.datetime_2": "dateTime",
    "video_conference_providers_google_meet_provider.message.timezone_2": "timeZone",
    "video_conference_providers_google_meet_provider.message.datetime_3": "dateTime",
    "video_conference_providers_google_meet_provider.message.timezone_3": "timeZone",
    "video_conference_providers_google_meet_provider.message.displayname_1": "displayName",
    "video_conference_providers_google_meet_provider.message.datetime_4": "dateTime",
    "video_conference_providers_google_meet_provider.message.datetime_5": "dateTime",
    "video_conference_providers_google_meet_provider.message.hangoutlink_1": "hangoutLink",
    "video_conference_providers_google_meet_provider.message.start_recording_a_google_meet": "Start recording a Google Meet meeting.",
    "video_conference_providers_google_meet_provider.message.stop_recording_a_google_meet_m": "Stop recording a Google Meet meeting.",
    "video_conference_providers_google_meet_provider.message.get_recordings_for_a_google_me": "Get recordings for a Google Meet meeting.",
    "video_conference_providers_google_meet_provider.message.google_meet_recordings_retriev": "Google Meet recordings retrieval not implemented",
    "video_conference_providers_google_meet_provider.message.add_participants_to_a_google_m": "Add participants to a Google Meet meeting.",
    "video_conference_providers_google_meet_provider.message.displayname_2": "displayName",
    "video_conference_providers_google_meet_provider.message.send_meeting_invitations_via_g": "Send meeting invitations via Google Calendar.",
    "video_conference_providers_google_meet_provider.message.get_google_meet_meeting_analyt": "Get Google Meet meeting analytics.",
    "video_conference_providers_google_meet_provider.message.displayname_3": "displayName",
    "video_conference_providers_google_meet_provider.message.responsestatus": "responseStatus",
    "video_conference_providers_google_meet_provider.message.needsaction": "needsAction",
    "video_conference_providers_google_meet_provider.message.get_current_google_meet_meetin": "Get current Google Meet meeting participants.",
    "video_conference_providers_google_meet_provider.message.displayname_4": "displayName",
    "video_conference_providers_google_meet_provider.message.responsestatus_1": "responseStatus",
    "video_conference_providers_google_meet_provider.message.needsaction_1": "needsAction",
    "video_conference_providers_zoom_provider.message.zoom_video_conference_provider": "Zoom video conference provider implementation.",
    "video_conference_providers_zoom_provider.message.zoom_video_conference_provider_1": "Zoom video conference provider implementation.",
    "video_conference_providers_zoom_provider.message.initialize_zoom_provider_with": "Initialize Zoom provider with configuration.",
    "video_conference_providers_zoom_provider.message.https_api_zoom_us_v2": "https://api.zoom.us/v2",
    "video_conference_providers_zoom_provider.message.get_list_of_supported_zoom_fea": "Get list of supported Zoom features.",
    "video_conference_providers_zoom_provider.message.get_or_refresh_access_token_fo": "Get or refresh access token for Zoom API.",
    "video_conference_providers_zoom_provider.message.appkey": "appKey",
    "video_conference_providers_zoom_provider.message.tokenexp": "tokenExp",
    "video_conference_providers_zoom_provider.message.https_zoom_us_oauth_token": "https://zoom.us/oauth/token",
    "video_conference_providers_zoom_provider.message.make_authenticated_request_to": "Make authenticated request to Zoom API.",
    "video_conference_providers_zoom_provider.message.zoom_api_rate_limit_exceeded": "Zoom API rate limit exceeded",
    "video_conference_providers_zoom_provider.message.zoom_api_request_timed_out": "Zoom API request timed out",
    "video_conference_providers_zoom_provider.message.create_a_zoom_meeting": "Create a Zoom meeting.",
    "video_conference_providers_zoom_provider.message.y_m_dt_h_m_sz": "%Y-%m-%dT%H:%M:%SZ",
    "video_conference_providers_zoom_provider.message.y_m_dt_h_m_sz_1": "%Y-%m-%dT%H:%M:%SZ",
    "video_conference_providers_zoom_provider.message.start_recording_a_zoom_meeting": "Start recording a Zoom meeting.",
    "video_conference_providers_zoom_provider.message.stop_recording_a_zoom_meeting": "Stop recording a Zoom meeting.",
    "video_conference_providers_zoom_provider.message.get_recordings_for_a_zoom_meet": "Get recordings for a Zoom meeting.",
    "video_conference_providers_zoom_provider.message.add_participants_to_a_zoom_mee": "Add participants to a Zoom meeting.",
    "video_conference_providers_zoom_provider.message.get_current_zoom_meeting_parti": "Get current Zoom meeting participants.",
    "video_conference_providers_zoom_provider.message.send_meeting_invitations_via_z": "Send meeting invitations via Zoom.",
    "video_conference_providers_zoom_provider.message.get_zoom_meeting_analytics": "Get Zoom meeting analytics.",
    "video_conference_providers_zoom_provider.message.remove_participant_not_directl": "Remove participant not directly supported by Zoom API",
    "video_conference_providers_microsoft_teams_provider.message.microsoft_teams_video_conferen": "Microsoft Teams video conference provider implementation.",
    "video_conference_providers_microsoft_teams_provider.message.microsoft_teams_video_conferen_1": "Microsoft Teams video conference provider implementation.",
    "video_conference_providers_microsoft_teams_provider.message.initialize_microsoft_teams_pro": "Initialize Microsoft Teams provider with configuration.",
    "video_conference_providers_microsoft_teams_provider.message.https_graph_microsoft_com_v1": "https://graph.microsoft.com/v1.0",
    "video_conference_providers_microsoft_teams_provider.message.get_list_of_supported_microsof": "Get list of supported Microsoft Teams features.",
    "video_conference_providers_microsoft_teams_provider.message.get_or_refresh_access_token_fo": "Get or refresh access token for Microsoft Graph API.",
    "video_conference_providers_microsoft_teams_provider.message.https_login_microsoftonline": "https://login.microsoftonline.com/",
    "video_conference_providers_microsoft_teams_provider.message.https_graph_microsoft_com_d": "https://graph.microsoft.com/.default",
    "video_conference_providers_microsoft_teams_provider.message.make_authenticated_request_to": "Make authenticated request to Microsoft Graph API.",
    "video_conference_providers_microsoft_teams_provider.message.microsoft_graph_api_rate_limit": "Microsoft Graph API rate limit exceeded",
    "video_conference_providers_microsoft_teams_provider.message.microsoft_graph_api_request_ti": "Microsoft Graph API request timed out",
    "video_conference_providers_microsoft_teams_provider.message.create_a_microsoft_teams_meeti": "Create a Microsoft Teams meeting.",
    "video_conference_providers_microsoft_teams_provider.message.startdatetime": "startDateTime",
    "video_conference_providers_microsoft_teams_provider.message.enddatetime": "endDateTime",
    "video_conference_providers_microsoft_teams_provider.message.allowedpresenters": "allowedPresenters",
    "video_conference_providers_microsoft_teams_provider.message.allowmeetingchat": "allowMeetingChat",
    "video_conference_providers_microsoft_teams_provider.message.allowteamworkreactions": "allowTeamworkReactions",
    "video_conference_providers_microsoft_teams_provider.message.lobbybypasssettings": "lobbyBypassSettings",
    "video_conference_providers_microsoft_teams_provider.message.isdialinbypassenabled": "isDialInBypassEnabled",
    "video_conference_providers_microsoft_teams_provider.message.lobbybypasssettings_1": "lobbyBypassSettings",
    "video_conference_providers_microsoft_teams_provider.message.isdialinbypassenabled_1": "isDialInBypassEnabled",
    "video_conference_providers_microsoft_teams_provider.message.joinweburl": "joinWebUrl",
    "video_conference_providers_microsoft_teams_provider.message.joinweburl_1": "joinWebUrl",
    "video_conference_providers_microsoft_teams_provider.message.audioconferencing": "audioConferencing",
    "video_conference_providers_microsoft_teams_provider.message.chatinfo": "chatInfo",
    "video_conference_providers_microsoft_teams_provider.message.lobbybypasssettings_2": "lobbyBypassSettings",
    "video_conference_providers_microsoft_teams_provider.message.startdatetime_1": "startDateTime",
    "video_conference_providers_microsoft_teams_provider.message.enddatetime_1": "endDateTime",
    "video_conference_providers_microsoft_teams_provider.message.lobbybypasssettings_3": "lobbyBypassSettings",
    "video_conference_providers_microsoft_teams_provider.message.isdialinbypassenabled_2": "isDialInBypassEnabled",
    "video_conference_providers_microsoft_teams_provider.message.lobbybypasssettings_4": "lobbyBypassSettings",
    "video_conference_providers_microsoft_teams_provider.message.isdialinbypassenabled_3": "isDialInBypassEnabled",
    "video_conference_providers_microsoft_teams_provider.message.start_recording_a_microsoft_te": "Start recording a Microsoft Teams meeting.",
    "video_conference_providers_microsoft_teams_provider.message.teams_recording_control_via_ap": "Teams recording control via API requires additional setup",
    "video_conference_providers_microsoft_teams_provider.message.stop_recording_a_microsoft_tea": "Stop recording a Microsoft Teams meeting.",
    "video_conference_providers_microsoft_teams_provider.message.teams_recording_control_via_ap_1": "Teams recording control via API requires additional setup",
    "video_conference_providers_microsoft_teams_provider.message.get_recordings_for_a_microsoft": "Get recordings for a Microsoft Teams meeting.",
    "video_conference_providers_microsoft_teams_provider.message.teams_recordings_retrieval_req": "Teams recordings retrieval requires SharePoint/OneDrive integration",
    "video_conference_providers_microsoft_teams_provider.message.add_participants_to_a_microsof": "Add participants to a Microsoft Teams meeting.",
    "video_conference_providers_microsoft_teams_provider.message.send_meeting_invitations_via_m": "Send meeting invitations via Microsoft Teams.",
    "video_conference_providers_microsoft_teams_provider.message.onlinemeetingurl": "onlineMeetingUrl",
    "video_conference_providers_microsoft_teams_provider.message.isonlinemeeting": "isOnlineMeeting",
    "video_conference_providers_microsoft_teams_provider.message.onlinemeetingprovider": "onlineMeetingProvider",
    "video_conference_providers_microsoft_teams_provider.message.datetime": "dateTime",
    "video_conference_providers_microsoft_teams_provider.message.timezone": "timeZone",
    "video_conference_providers_microsoft_teams_provider.message.startdatetime_2": "startDateTime",
    "video_conference_providers_microsoft_teams_provider.message.datetime_1": "dateTime",
    "video_conference_providers_microsoft_teams_provider.message.timezone_1": "timeZone",
    "video_conference_providers_microsoft_teams_provider.message.enddatetime_2": "endDateTime",
    "video_conference_providers_microsoft_teams_provider.message.emailaddress": "emailAddress",
    "video_conference_providers_microsoft_teams_provider.message.joinweburl_2": "joinWebUrl",
    "video_conference_providers_microsoft_teams_provider.message.teamsforbusiness": "teamsForBusiness",
    "video_conference_providers_microsoft_teams_provider.message.get_current_microsoft_teams_me": "Get current Microsoft Teams meeting participants.",
    "video_conference_providers_microsoft_teams_provider.message.get_microsoft_teams_meeting_an": "Get Microsoft Teams meeting analytics.",
    "video_conference_providers_microsoft_teams_provider.message.startdatetime_3": "startDateTime",
    "video_conference_providers_microsoft_teams_provider.message.enddatetime_3": "endDateTime",
    "video_conference_providers_microsoft_teams_provider.message.joinweburl_3": "joinWebUrl",
    "v2_auth_service.message.authentication_service_impleme": "Authentication service implementation with proper JWT handling.",
    "v2_auth_service.message.authentication_service_with_pr": "Authentication service with proper JWT and security handling.",
    "v2_auth_service.message.initialize_auth_service_with_d": "Initialize auth service with dependencies.",
    "v2_auth_service.message.authenticate_user_and_return_j": "Authenticate user and return JWT tokens.",
    "v2_auth_service.message.login_attempt_with_non_existen": "Login attempt with non-existent email: ",
    "v2_auth_service.message.login_attempt_for_inactive_use": "Login attempt for inactive user: ",
    "v2_auth_service.message.register_a_new_user_and_return": "Register a new user and return tokens.",
    "v2_auth_service.message.registration_attempt_with_exis": "Registration attempt with existing email: ",
    "v2_auth_service.message.refresh_access_token_for_user": "Refresh access token for user.",
    "v2_auth_service.message.logout_user_by_blacklisting_th": "Logout user by blacklisting the JWT token.",
    "v2_auth_service.message.reset_user_password_admin_fun": "Reset user password (admin function).",
    "v2_user_service.message.user_service_with_business_log": "User service with business logic.",
    "v2_user_service.message.initialize_service_with_depend": "Initialize service with dependencies.",
    "v2_user_service.message.get_all_users_optionally_filt": "Get all users, optionally filtered by tenant.",
    "v2_user_service.message.get_user_by_id": "Get user by ID.",
    "v2_user_service.message.get_user_by_email": "Get user by email.",
    "v2_user_service.message.create_a_new_user": "Create a new user.",
    "v2_user_service.message.already_exists": " already exists",
    "v2_user_service.message.role_to": " role to ",
    "v2_user_service.message.get_users_by_role": "Get users by role.",
    "v2_beneficiary_service.message.beneficiary_service_with_busin": "Beneficiary service with business logic.",
    "v2_beneficiary_service.message.initialize_service_with_depend": "Initialize service with dependencies.",
    "v2_beneficiary_service.message.get_all_beneficiaries_optiona": "Get all beneficiaries, optionally filtered by tenant.",
    "v2_beneficiary_service.message.get_beneficiary_by_id": "Get beneficiary by ID.",
    "v2_beneficiary_service.message.create_a_new_beneficiary": "Create a new beneficiary.",
    "v2_beneficiary_service.message.already_exists": " already exists",
    "v2_beneficiary_service.message.search_beneficiaries_by_name_o": "Search beneficiaries by name or email.",
    "v2_beneficiary_service.message.get_programs_enrolled_by_benef": "Get programs enrolled by beneficiary.",
    "v2_beneficiary_service.message.get_evaluations_for_beneficiar": "Get evaluations for beneficiary.",
    "interfaces_user_service_interface.message.create_a_new_user": "Create a new user.",
    "interfaces_user_service_interface.message.get_user_by_id": "Get user by ID.",
    "interfaces_user_service_interface.message.get_user_by_email": "Get user by email.",
    "interfaces_user_service_interface.message.search_users_with_pagination": "Search users with pagination.",
    "interfaces_user_service_interface.message.activate_a_user_account": "Activate a user account.",
    "interfaces_user_service_interface.message.deactivate_a_user_account": "Deactivate a user account.",
    "interfaces_user_service_interface.message.get_all_users_with_a_specific": "Get all users with a specific role.",
    "interfaces_user_service_interface.message.get_all_users_for_a_tenant": "Get all users for a tenant.",
    "interfaces_user_service_interface.message.upload_user_profile_picture": "Upload user profile picture.",
    "interfaces_user_service_interface.message.get_user_activity_history": "Get user activity history.",
    "interfaces_user_service_interface.message.get_overall_users_statistics": "Get overall users statistics.",
    "interfaces_user_service_interface.message.check_if_user_has_a_specific_p": "Check if user has a specific permission.",
    "interfaces_user_service_interface.message.get_all_permissions_for_a_user": "Get all permissions for a user.",
    "interfaces_auth_service_interface.message.refresh_access_token_using_ref": "Refresh access token using refresh token.",
    "interfaces_auth_service_interface.message.request_password_reset_for_use": "Request password reset for user.",
    "interfaces_auth_service_interface.message.generate_password_reset_token": "Generate password reset token.",
    "interfaces_auth_service_interface.message.confirm_password_reset_with_to": "Confirm password reset with token.",
    "interfaces_auth_service_interface.message.verify_user_email_with_token": "Verify user email with token.",
    "interfaces_beneficiary_service_interface.message.create_a_new_beneficiary": "Create a new beneficiary.",
    "interfaces_beneficiary_service_interface.message.get_beneficiary_by_id": "Get beneficiary by ID.",
    "interfaces_beneficiary_service_interface.message.search_beneficiaries_with_pagi": "Search beneficiaries with pagination.",
    "interfaces_beneficiary_service_interface.message.get_beneficiary_by_email": "Get beneficiary by email.",
    "interfaces_beneficiary_service_interface.message.get_beneficiary_by_national_id": "Get beneficiary by national ID.",
    "interfaces_beneficiary_service_interface.message.get_all_beneficiaries_in_a_pro": "Get all beneficiaries in a program.",
    "interfaces_beneficiary_service_interface.message.enroll_beneficiary_in_a_progra": "Enroll beneficiary in a program.",
    "interfaces_beneficiary_service_interface.message.add_a_note_to_beneficiary": "Add a note to beneficiary.",
    "interfaces_beneficiary_service_interface.message.upload_a_document_for_benefici": "Upload a document for beneficiary.",
    "interfaces_beneficiary_service_interface.message.get_upcoming_appointments_for": "Get upcoming appointments for all beneficiaries.",
    "interfaces_beneficiary_service_interface.message.export_list_of_beneficiaries": "Export list of beneficiaries.",
    "ai_human_review_workflow.message.human_review_workflow_for_ai": "\nHuman review workflow for AI-generated content\n",
    "ai_human_review_workflow.message.for_user": " for user ",
    "ai_human_review_workflow.message.service_for_managing_human_rev": "Service for managing human review of AI-generated content",
    "ai_human_review_workflow.message.create_a_new_review_workflow_f": "Create a new review workflow for AI-generated content",
    "ai_human_review_workflow.message.start_reviewing_a_workflow": "Start reviewing a workflow",
    "ai_human_review_workflow.message.not_found": " not found",
    "ai_human_review_workflow.message.is_not_available_for_review": " is not available for review",
    "ai_human_review_workflow.message.not_found_or_not_assigned_to": " not found or not assigned to reviewer",
    "ai_human_review_workflow.message.is_not_in_review": " is not in review",
    "ai_human_review_workflow.message.submit_revised_content_for_re": "Submit revised content for re-review",
    "ai_human_review_workflow.message.not_found_1": " not found",
    "ai_human_review_workflow.message.is_not_pending_revision": " is not pending revision",
    "ai_human_review_workflow.message.not_found_2": " not found",
    "ai_human_review_workflow.message.auto_approved_due_to_high_conf": "Auto-approved due to high confidence score",
    "ai_human_review_workflow.message.has_been_auto_approved": " has been auto-approved",
    "ai_human_review_workflow.message.get_pending_review_workflows": "Get pending review workflows",
    "ai_human_review_workflow.message.get_review_workflow_statistics": "Get review workflow statistics",
    "ai_human_review_workflow.message.notify_available_reviewers_of": "Notify available reviewers of new content to review",
    "ai_human_review_workflow.message.new_content_for_review": "New Content for Review",
    "ai_human_review_workflow.message.requires_review": " requires review",
    "ai_human_review_workflow.message.notify_creator_of_content_appr": "Notify creator of content approval",
    "ai_human_review_workflow.message.has_been_approved": " has been approved",
    "ai_human_review_workflow.message.notify_creator_of_content_reje": "Notify creator of content rejection",
    "ai_human_review_workflow.message.has_been_rejected": " has been rejected",
    "ai_human_review_workflow.message.notify_creator_of_revision_req": "Notify creator of revision request",
    "ai_human_review_workflow.message.requires_revision": " requires revision",
    "ai_human_review_workflow.message.notify_reviewer_of_revision_su": "Notify reviewer of revision submission",
    "ai_human_review_workflow.message.ready_for_review": " ready for review",
    "ai_human_review_workflow.message.get_date_filter_based_on_time": "Get date filter based on time period",
    "ai_human_review_workflow.message.integration_point_for_ai_servi": "Integration point for AI services to submit content for review",
    "ai_note_analysis.message.ai_powered_note_analysis_serv": "\nAI-powered note analysis service\n",
    "ai_note_analysis.message.gpt_4": "gpt-4",
    "ai_note_analysis.message.ai_powered_note_analysis_servi": "AI-powered note analysis service",
    "ai_note_analysis.message.gpt_4_1": "gpt-4",
    "ai_note_analysis.message.analyze_a_note_using": "\n        Analyze a note using AI and NLP techniques\n        \n        Args:\n            note_id: ID of the note to analyze\n            db: Database session\n            analysis_type: Type of analysis to perform\n            \n        Returns:\n            Dictionary containing analysis results\n        ",
    "ai_note_analysis.message.note_analysis": "note_analysis:",
    "ai_note_analysis.message.not_found": " not found",
    "ai_note_analysis.message.not_analizi_u_anda_implementa": "Not analizi şu anda implementasyon aşamasındadır.",
    "ai_recommendations.message.ai_powered_personalized_recom": "\nAI-powered personalized recommendations service\n",
    "ai_recommendations.message.gpt_4": "gpt-4",
    "ai_recommendations.message.ai_powered_recommendation_engi": "AI-powered recommendation engine for personalized learning paths",
    "ai_recommendations.message.gpt_4_1": "gpt-4",
    "ai_recommendations.message.generate_personalized": "\n        Generate personalized recommendations for a beneficiary\n        \n        Args:\n            beneficiary_id: ID of the beneficiary\n            db: Database session\n            recommendation_type: Type of recommendations to generate\n            \n        Returns:\n            Dictionary containing personalized recommendations\n        ",
    "ai_recommendations.message.recommendations": "recommendations:",
    "ai_recommendations.message.not_found": " not found",
    "ai_recommendations.message.temel_becerilere_odaklanarak_b": "Temel becerilere odaklanarak başlayın",
    "ai_recommendations.message.2_weeks": "2 weeks",
    "ai___init__.message.ai_services_package_for_bdc_a": "\nAI Services Package for BDC Application\n\nThis package contains AI-related services including content analysis, recommendations,\nand AI-enhanced features throughout the application.\n",
    "ai_content_recommendations.message.ai_powered_content_recommenda": "\nAI-powered content recommendation service\n",
    "ai_content_recommendations.message.ai_powered_content_recommendat": "AI-powered content recommendation service",
    "ai_content_recommendations.message.generate_personalized_content": "Generate personalized content recommendations",
    "ai_content_recommendations.message.content_rec": "content_rec:",
    "ai_content_recommendations.message.not_found": " not found",
    "ai_content_recommendations.message.generate_structure_suggestions": "Generate structure suggestions for content creation",
    "ai_content_recommendations.message.gpt_4": "gpt-4",
    "ai_content_recommendations.message.you_are_an_expert_content_stra": "You are an expert content strategist and educational designer. \n                        Provide detailed, actionable structure suggestions for various types of content.",
    "ai_content_recommendations.message.gather_relevant_context_data_f": "Gather relevant context data for recommendations",
    "ai_content_recommendations.message.generate_recommendations_using": "Generate recommendations using AI",
    "ai_content_recommendations.message.gpt_4_1": "gpt-4",
    "ai_content_recommendations.message.you_are_an_expert_educational": "You are an expert educational content curator and learning advisor. \n                        Generate highly personalized, actionable content recommendations based on learner data.",
    "ai_content_recommendations.message.build_the_prompt_for_ai_recomm": "Build the prompt for AI recommendations",
    "ai_content_recommendations.message.generate_personalized": "\n        Generate personalized content recommendations based on the following learner profile:\n        \n        Context Type: ",
    "ai_content_recommendations.message.specific_need": "\n        Specific Need: ",
    "ai_content_recommendations.message.skill_gaps": "\n        \n        Skill Gaps: ",
    "ai_content_recommendations.message.recent_topics_of_inte": "\n        Recent Topics of Interest: ",
    "ai_content_recommendations.message.performance_trend": "\n        Performance Trend: ",
    "ai_content_recommendations.message.recent_asses": "\n        \n        Recent Assessment Scores:\n        ",
    "ai_content_recommendations.message.learning_pre": "\n        \n        Learning Preferences:\n        ",
    "ai_content_recommendations.message.focu": "\n            \n            Focus on skill-building resources and exercises.\n            Prioritize practical applications and hands-on learning.\n            Include progressive difficulty levels.\n            ",
    "ai_content_recommendations.message.focu_1": "\n            \n            Focus on foundational concepts and theory.\n            Include explanatory content and tutorials.\n            Provide multiple learning modalities.\n            ",
    "ai_content_recommendations.message.focu_2": "\n            \n            Focus on practice materials and sample questions.\n            Include test-taking strategies and tips.\n            Provide timed practice opportunities.\n            ",
    "ai_content_recommendations.message.enhance_recommendations_with_a": "Enhance recommendations with available database resources",
    "ai_content_recommendations.message.build_prompt_for_structure_sug": "Build prompt for structure suggestions",
    "ai_content_recommendations.message.generate_detailed_str": "\n        Generate detailed structure suggestions for creating ",
    "ai_content_recommendations.message.content": " content.\n        ",
    "ai_content_recommendations.message.curr": "\n            \n            Current content to improve:\n            ",
    "ai_content_recommendations.message.spec": "\n            \n            Specific requirements:\n            ",
    "ai_content_recommendations.message.generate_content_templates_bas": "Generate content templates based on suggestions",
    "ai_content_recommendations.message.get_best_practices_for_content": "Get best practices for content type",
    "ai_content_recommendations.message.start_with_clear_measurable_l": "Start with clear, measurable learning objectives",
    "ai_content_recommendations.message.include_diverse_activities_to": "Include diverse activities to accommodate different learning styles",
    "ai_content_recommendations.message.build_in_assessment_checkpoint": "Build in assessment checkpoints throughout the lesson",
    "ai_content_recommendations.message.allow_time_for_questions_and_d": "Allow time for questions and discussion",
    "ai_content_recommendations.message.end_with_a_summary_and_preview": "End with a summary and preview of next lesson",
    "ai_content_recommendations.message.align_questions_directly_with": "Align questions directly with learning objectives",
    "ai_content_recommendations.message.use_a_variety_of_question_type": "Use a variety of question types",
    "ai_content_recommendations.message.provide_clear_instructions_and": "Provide clear instructions and scoring rubrics",
    "ai_content_recommendations.message.lead_with_key_findings_and_rec": "Lead with key findings and recommendations",
    "ai_content_recommendations.message.use_data_visualizations_to_sup": "Use data visualizations to support points",
    "ai_content_recommendations.message.keep_language_clear_and_jargon": "Keep language clear and jargon-free",
    "ai_content_recommendations.message.include_specific_actionable_n": "Include specific, actionable next steps",
    "ai_content_recommendations.message.proofread_for_clarity_and_prof": "Proofread for clarity and professionalism",
    "ai_content_recommendations.message.use_clear_concise_language": "Use clear, concise language",
    "ai_content_recommendations.message.review_and_revise_before_final": "Review and revise before finalizing",
    "ai_content_recommendations.message.find_documents_matching_recomm": "Find documents matching recommendation criteria",
    "ai_content_recommendations.message.calculate_how_well_recommendat": "Calculate how well recommendations match user preferences",
    "ai_content_recommendations.message.start_with_context_and_objecti": "Start with context and objectives",
    "ai_content_recommendations.message.wrap_up_and_next_steps": "Wrap up and next steps",
    "ai_content_recommendations.message.resources_to_address_identifie": "Resources to address identified skill gaps",
    "ai_content_recommendations.message.1_2_hours": "1-2 hours",
    "ai_content_recommendations.message.focus_on_consistent_practice": "Focus on consistent practice",
    "ai_content_recommendations.message.review_previous_materials_regu": "Review previous materials regularly",
    "ai_content_recommendations.message.seek_help_when_needed": "Seek help when needed",
    "ai_content_recommendations.message.set_small_achievable_goals": "Set small, achievable goals",
    "ai_report_synthesis.message.ai_powered_report_synthesis_s": "\nAI-powered report synthesis service\n",
    "ai_report_synthesis.message.executive_summary_bu_bir": "{\"executive_summary\": \"Bu bir örnek rapor özetidir.\", \"sections\": {}}",
    "ai_report_synthesis.message.ai_powered_report_synthesis_se": "AI-powered report synthesis service",
    "ai_report_synthesis.message.generate_a_comprehensive_ai_po": "Generate a comprehensive AI-powered report for a beneficiary",
    "ai_report_synthesis.message.ai_report": "ai_report:",
    "ai_report_synthesis.message.not_found": " not found",
    "ai_report_synthesis.message.bu_bir_rnek_rapor_zetidir": "Bu bir örnek rapor özetidir.",
    "ai_report_synthesis.message.bu_bir_rnek_bulgudur": "Bu bir örnek bulgudur",
    "ai_report_synthesis.message.bu_ikinci_rnek_bulgudur": "Bu ikinci örnek bulgudur",
    "orchestration_tasks.message.task_orchestration_with_celery": "Task orchestration with Celery integration.",
    "orchestration_tasks.message.result_of_a_task_execution": "Result of a task execution.",
    "orchestration_tasks.message.base_celery_task_for_pipeline": "Base Celery task for pipeline operations.",
    "orchestration_tasks.message.register_default_task_implemen": "Register default task implementations.",
    "orchestration_tasks.message.register_a_task_handler_for_a": "Register a task handler for a specific task type.",
    "orchestration_tasks.message.execute_a_pipeline_task": "Execute a pipeline task.",
    "orchestration_tasks.message.type": " (type: ",
    "orchestration_tasks.message.execution_time": " (execution time: ",
    "orchestration_tasks.message.": " - ",
    "orchestration_tasks.message.attempt": " (attempt ",
    "orchestration_tasks.message.handle_text_generation_tasks": "Handle text generation tasks.",
    "orchestration_tasks.message.gpt_3_5_turbo": "gpt-3.5-turbo",
    "orchestration_tasks.message.no_prompt_provided_for_text_ge": "No prompt provided for text generation",
    "orchestration_tasks.message.bert_base_uncased": "bert-base-uncased",
    "orchestration_tasks.message.no_text_provided_for_classific": "No text provided for classification",
    "orchestration_tasks.message.no_categories_provided_for_cla": "No categories provided for classification",
    "orchestration_tasks.message.gpt_3_5_turbo_1": "gpt-3.5-turbo",
    "orchestration_tasks.message.no_text_provided_for_extractio": "No text provided for extraction",
    "orchestration_tasks.message.no_extraction_schema_provided": "No extraction schema provided",
    "orchestration_tasks.message.rules_passed": " rules passed",
    "orchestration_tasks.message.no_handler_specified_for_custo": "No handler specified for custom task",
    "orchestration_tasks.message.manager_for_celery_task_execut": "Manager for Celery task execution.",
    "orchestration_tasks.message.execute_a_single_task_asynchro": "Execute a single task asynchronously.",
    "orchestration_tasks.message.execute_multiple_tasks_in_para": "Execute multiple tasks in parallel.",
    "orchestration_tasks.message.execute_tasks_with_a_callback": "Execute tasks with a callback after completion.",
    "orchestration_tasks.message.get_the_status_of_a_task": "Get the status of a task.",
    "orchestration_tasks.message.cancel_a_running_task": "Cancel a running task.",
    "orchestration_config.message.configuration_management_for_a": "Configuration management for AI pipeline orchestration.",
    "orchestration_config.message.configuration_for_the_orchestr": "Configuration for the orchestration system.",
    "orchestration_config.message.redis_localhost_6379_1": "redis://localhost:6379/1",
    "orchestration_config.message.redis_localhost_6379_2": "redis://localhost:6379/2",
    "orchestration_config.message.initialize_default_values_that": "Initialize default values that require computation.",
    "orchestration_config.message.redis_localhost_6379_1_1": "redis://localhost:6379/1",
    "orchestration_config.message.redis_localhost_6379_2_1": "redis://localhost:6379/2",
    "orchestration_config.message.convert_configuration_to_dicti": "Convert configuration to dictionary.",
    "orchestration_config.message.1_0_0": "1.0.0",
    "orchestration_config.message.gpt_4": "gpt-4",
    "orchestration_config.message.bert_base_uncased": "bert-base-uncased",
    "orchestration_config.message.extract_text_output_title": "extract_text_output.title",
    "orchestration_config.message.extract_text_output_content": "extract_text_output.content",
    "orchestration_config.message.extract_text_output_title_1": "extract_text_output.title",
    "orchestration_config.message.classify_document_output_categ": "classify_document_output.category",
    "orchestration_config.message.classify_document_output_confi": "classify_document_output.confidence",
    "orchestration_config.message.human_review_output_status": "human_review_output.status",
    "orchestration_config.message.generate_and_refine_content_ba": "Generate and refine content based on input prompts",
    "orchestration_config.message.1_0_0_1": "1.0.0",
    "orchestration_config.message.gpt_4_1": "gpt-4",
    "orchestration_config.message.generate_draft_output_generate": "generate_draft_output.generated_text",
    "orchestration_config.message.gpt_4_2": "gpt-4",
    "orchestration_config.message.please_refine_and_improve_the": "Please refine and improve the following content: {generate_draft_output.generated_text}",
    "orchestration_config.message.refine_content_output_generate": "refine_content_output.generated_text",
    "orchestration_config.message.refine_content_output_usage_to": "refine_content_output.usage.total_tokens",
    "orchestration_config.message.get_an_example_pipeline_config": "Get an example pipeline configuration by name.",
    "orchestration_config.message.list_all_available_example_con": "List all available example configurations.",
    "orchestration_monitoring.message.pipeline_monitoring_and_loggin": "Pipeline monitoring and logging system.",
    "orchestration_monitoring.message.types_of_metrics_to_track": "Types of metrics to track.",
    "orchestration_monitoring.message.container_for_pipeline_executi": "Container for pipeline execution metrics.",
    "orchestration_monitoring.message.calculate_execution_time_perce": "Calculate execution time percentiles.",
    "orchestration_monitoring.message.p50": "p50",
    "orchestration_monitoring.message.p90": "p90",
    "orchestration_monitoring.message.p95": "p95",
    "orchestration_monitoring.message.p99": "p99",
    "orchestration_monitoring.message.convert_metrics_to_dictionary": "Convert metrics to dictionary.",
    "orchestration_monitoring.message.represents_a_monitoring_alert": "Represents a monitoring alert.",
    "orchestration_monitoring.message.convert_alert_to_dictionary": "Convert alert to dictionary.",
    "orchestration_monitoring.message.defines_conditions_for_trigger": "Defines conditions for triggering alerts.",
    "orchestration_monitoring.message.create_an_alert_for_this_rule": "Create an alert for this rule.",
    "orchestration_monitoring.message.comprehensive_pipeline_monitor": "Comprehensive pipeline monitoring system.",
    "orchestration_monitoring.message.initialize_the_monitoring_syst": "Initialize the monitoring system.",
    "orchestration_monitoring.message.monitor_metrics": "monitor:metrics:",
    "orchestration_monitoring.message.monitor_executions": "monitor:executions:",
    "orchestration_monitoring.message.monitor_alerts": "monitor:alerts:",
    "orchestration_monitoring.message.monitor_events": "monitor:events:",
    "orchestration_monitoring.message.start_background_monitoring_ta": "Start background monitoring tasks.",
    "orchestration_monitoring.message.setup_default_alert_rules_for": "Setup default alert rules for common issues.",
    "orchestration_monitoring.message.pipeline_pipeline_has_long_a": "Pipeline {pipeline} has long average execution time: {current_value:.1f}s (threshold: {threshold}s)",
    "orchestration_monitoring.message.pipeline_pipeline_has_low_th": "Pipeline {pipeline} has low throughput: {current_value:.2f} exec/hour (threshold: {threshold})",
    "orchestration_monitoring.message.periodically_collect_and_store": "Periodically collect and store metrics.",
    "orchestration_monitoring.message.periodically_check_alert_condi": "Periodically check alert conditions.",
    "orchestration_monitoring.message.periodically_clean_up_old_data": "Periodically clean up old data.",
    "orchestration_monitoring.message.register_a_pipeline_for_monito": "Register a pipeline for monitoring.",
    "orchestration_monitoring.message.monitor_pipelines": "monitor:pipelines",
    "orchestration_monitoring.message.registered_pipeline_for_monito": "Registered pipeline for monitoring: ",
    "orchestration_monitoring.message.record_the_start_of_a_pipeline": "Record the start of a pipeline execution.",
    "orchestration_monitoring.message.record_the_completion_of_a_pip": "Record the completion of a pipeline execution.",
    "orchestration_monitoring.message.execution_data_not_found": "Execution data not found: ",
    "orchestration_monitoring.message.add_an_alert_rule_for_a_pipeli": "Add an alert rule for a pipeline.",
    "orchestration_monitoring.message.added_alert_rule": "Added alert rule '",
    "orchestration_monitoring.message.for_pipeline": "' for pipeline: ",
    "orchestration_monitoring.message.remove_an_alert_rule": "Remove an alert rule.",
    "orchestration_monitoring.message.acknowledged_by": " acknowledged by ",
    "orchestration_monitoring.message.get_current_metrics_for_a_pipe": "Get current metrics for a pipeline.",
    "orchestration_monitoring.message.get_metrics_for_all_pipelines": "Get metrics for all pipelines.",
    "orchestration_monitoring.message.get_active_alerts_optionally": "Get active alerts, optionally filtered by pipeline.",
    "orchestration_monitoring.message.get_overall_system_health_metr": "Get overall system health metrics.",
    "orchestration_monitoring.message.store_current_metrics_to_redis": "Store current metrics to Redis.",
    "orchestration_monitoring.message.check_all_alert_rules_and_trig": "Check all alert rules and trigger alerts if needed.",
    "orchestration_monitoring.message.log_a_monitoring_event": "Log a monitoring event.",
    "orchestration_monitoring.message.clean_up_old_monitoring_data": "Clean up old monitoring data.",
    "orchestration_monitoring.message.add_an_event_handler_for_monit": "Add an event handler for monitoring events.",
    "orchestration_monitoring.message.stop_background_monitoring_tas": "Stop background monitoring tasks.",
    "orchestration_cache.message.result_caching_and_optimizatio": "Result caching and optimization system.",
    "orchestration_cache.message.cache_strategies_for_different": "Cache strategies for different types of data.",
    "orchestration_cache.message.compression_types_for_cached_d": "Compression types for cached data.",
    "orchestration_cache.message.represents_a_cached_entry_with": "Represents a cached entry with metadata.",
    "orchestration_cache.message.calculate_the_size_of_the_cach": "Calculate the size of the cached value.",
    "orchestration_cache.message.check_if_the_cache_entry_has_e": "Check if the cache entry has expired.",
    "orchestration_cache.message.serialize_the_cached_value_bas": "Serialize the cached value based on compression type.",
    "orchestration_cache.message.cache_statistics_and_metrics": "Cache statistics and metrics.",
    "orchestration_cache.message.calculate_cache_hit_rate": "Calculate cache hit rate.",
    "orchestration_cache.message.calculate_cache_miss_rate": "Calculate cache miss rate.",
    "orchestration_cache.message.calculate_average_entry_size": "Calculate average entry size.",
    "orchestration_cache.message.convert_stats_to_dictionary": "Convert stats to dictionary.",
    "orchestration_cache.message.advanced_result_caching_system": "Advanced result caching system with optimization features.",
    "orchestration_cache.message.initialize_the_cache_system": "Initialize the cache system.",
    "orchestration_cache.message.cache_results": "cache:results:",
    "orchestration_cache.message.cache_meta": "cache:meta:",
    "orchestration_cache.message.cache_stats": "cache:stats",
    "orchestration_cache.message.start_background_maintenance_t": "Start background maintenance tasks.",
    "orchestration_cache.message.periodically_clean_up_expired": "Periodically clean up expired entries.",
    "orchestration_cache.message.store_a_value_in_the_cache": "Store a value in the cache.",
    "orchestration_cache.message.exceeds_max_size": ") exceeds max size (",
    "orchestration_cache.message.cached_value_with_key": "Cached value with key: ",
    "orchestration_cache.message.clear_all_cache_entries": "Clear all cache entries.",
    "orchestration_cache.message.expired_cache_entries": " expired cache entries",
    "orchestration_cache.message.evict_least_recently_used_entr": "Evict least recently used entries to reach target size.",
    "orchestration_cache.message.get_metadata_for_a_cache_entry": "Get metadata for a cache entry.",
    "orchestration_cache.message.calculate_total_size_of_all_ca": "Calculate total size of all cache entries.",
    "orchestration___init__.message.ai_pipeline_orchestration_syst": "AI Pipeline Orchestration System for BDC Project.",
    "orchestration_human_loop.message.status_of_human_review_request": "Status of human review requests.",
    "orchestration_human_loop.message.priority_levels_for_review_req": "Priority levels for review requests.",
    "orchestration_human_loop.message.assignment_of_review_to_a_spec": "Assignment of review to a specific reviewer.",
    "orchestration_human_loop.message.profile_of_a_human_reviewer": "Profile of a human reviewer.",
    "orchestration_human_loop.message.initialize_the_human_in_the_lo": "Initialize the human-in-the-loop manager.",
    "orchestration_human_loop.message.hitl_reviews": "hitl:reviews",
    "orchestration_human_loop.message.hitl_reviewers": "hitl:reviewers",
    "orchestration_human_loop.message.hitl_assignments": "hitl:assignments",
    "orchestration_human_loop.message.hitl_notifications": "hitl:notifications",
    "orchestration_human_loop.message.create_a_new_review_request": "Create a new review request.",
    "orchestration_human_loop.message.for_task": " for task: ",
    "orchestration_human_loop.message.get_a_review_request_by_id": "Get a review request by ID.",
    "orchestration_human_loop.message.list_pending_review_requests_w": "List pending review requests with optional filters.",
    "orchestration_human_loop.message.assign_a_review_to_a_specific": "Assign a review to a specific reviewer.",
    "orchestration_human_loop.message.to_reviewer": " to reviewer ",
    "orchestration_human_loop.message.by_reviewer": " by reviewer ",
    "orchestration_human_loop.message.reject_a_review_request": "Reject a review request.",
    "orchestration_human_loop.message.by_reviewer_1": " by reviewer ",
    "orchestration_human_loop.message.cancel_a_review_request": "Cancel a review request.",
    "orchestration_human_loop.message.register_a_new_reviewer": "Register a new reviewer.",
    "orchestration_human_loop.message.get_current_workload_for_a_rev": "Get current workload for a reviewer.",
    "orchestration_human_loop.message.get_reviewer_by_id": "Get reviewer by ID.",
    "orchestration_human_loop.message.get_assignment_for_a_review": "Get assignment for a review.",
    "orchestration_human_loop.message.add_review_to_priority_queue": "Add review to priority queue.",
    "orchestration_human_loop.message.hitl_queue": "hitl:queue",
    "orchestration_human_loop.message.automatically_assign_review_to": "Automatically assign review to best available reviewer.",
    "orchestration_human_loop.message.mark_a_review_as_expired": "Mark a review as expired.",
    "orchestration_human_loop.message.send_notification_for_new_revi": "Send notification for new review.",
    "orchestration_human_loop.message.send_notification_for_review_a": "Send notification for review assignment.",
    "orchestration_human_loop.message.send_notification_for_review_c": "Send notification for review completion.",
    "orchestration_human_loop.message.send_notification_for_review_r": "Send notification for review rejection.",
    "orchestration_pipeline.message.pipeline_definition_and_config": "Pipeline definition and configuration module.",
    "orchestration_pipeline.message.types_of_tasks_in_pipeline": "Types of tasks in pipeline.",
    "orchestration_pipeline.message.configuration_for_a_pipeline_t": "Configuration for a pipeline task.",
    "orchestration_pipeline.message.configuration_for_an_ai_pipeli": "Configuration for an AI pipeline.",
    "orchestration_pipeline.message.1_0_0": "1.0.0",
    "orchestration_pipeline.message.save_pipeline_configuration_to": "Save pipeline configuration to YAML file.",
    "orchestration_pipeline.message.save_pipeline_configuration_to_1": "Save pipeline configuration to JSON file.",
    "orchestration_pipeline.message.represents_a_pipeline_executio": "Represents a pipeline execution instance.",
    "orchestration_pipeline.message.ai_pipeline_definition_and_man": "AI Pipeline definition and management.",
    "orchestration_pipeline.message.initialize_pipeline_with_confi": "Initialize pipeline with configuration.",
    "orchestration_pipeline.message.has_unknown_dependency": "' has unknown dependency '",
    "orchestration_pipeline.message.duplicate_task_names_found_in": "Duplicate task names found in pipeline configuration",
    "orchestration_pipeline.message.get_tasks_organized_by_executi": "Get tasks organized by execution order (topological sort).",
    "orchestration_pipeline.message.circular_dependency_detected_i": "Circular dependency detected in pipeline",
    "orchestration_pipeline.message.create_a_new_pipeline_executio": "Create a new pipeline execution instance.",
    "orchestration_pipeline.message.get_task_configuration_by_name": "Get task configuration by name.",
    "orchestration_pipeline.message.add_a_new_task_to_the_pipeline": "Add a new task to the pipeline.",
    "orchestration_pipeline.message.not_found_in_pipeline": "' not found in pipeline",
    "orchestration_pipeline.message.task_with_name": "Task with name '",
    "orchestration_pipeline.message.already_exists": "' already exists",
    "orchestration_pipeline.message.task": "': task '",
    "orchestration_pipeline.message.depends_on_it": "' depends on it",
    "orchestration_pipeline.message.not_found": "' not found",
    "orchestration_pipeline.message.generate_a_text_representation": "Generate a text representation of the pipeline.",
    "orchestration_pipeline.message.v": " (v",
    "orchestration_pipeline.message.": " <- ",
    "orchestration_pipeline.message._1": "  - ",
    "orchestration_orchestrator.message.main_pipeline_orchestrator_tha": "Main pipeline orchestrator that coordinates all components.",
    "orchestration_orchestrator.message.orchestrates_ai_pipeline_execu": "Orchestrates AI pipeline execution with all components.",
    "orchestration_orchestrator.message.register_a_pipeline_for_execut": "Register a pipeline for execution.",
    "orchestration_orchestrator.message.execute_a_pipeline_asynchronou": "Execute a pipeline asynchronously.",
    "orchestration_orchestrator.message.execute_pipeline_tasks_asynchr": "Execute pipeline tasks asynchronously.",
    "orchestration_orchestrator.message.with": " with ",
    "orchestration_orchestrator.message.tasks": " tasks",
    "orchestration_orchestrator.message.": " - ",
    "orchestration_orchestrator.message.execute_a_stage_of_tasks_in_pa": "Execute a stage of tasks in parallel.",
    "orchestration_orchestrator.message.using_cached_result_for_task": "Using cached result for task: ",
    "orchestration_orchestrator.message._1": " - ",
    "orchestration_orchestrator.message.handle_human_in_the_loop_revie": "Handle human-in-the-loop review for a task.",
    "orchestration_orchestrator.message.for_task": " for task: ",
    "orchestration_orchestrator.message.prepare_input_data_for_a_task": "Prepare input data for a task based on dependencies.",
    "orchestration_orchestrator.message.aggregate_task_outputs_into_fi": "Aggregate task outputs into final pipeline output.",
    "orchestration_orchestrator.message.generate_cache_key_for_pipelin": "Generate cache key for pipeline results.",
    "orchestration_orchestrator.message.pipeline": "pipeline:",
    "orchestration_orchestrator.message.generate_cache_key_for_task_re": "Generate cache key for task results.",
    "orchestration_orchestrator.message.task": "task:",
    "orchestration_orchestrator.message.get_the_status_of_a_pipeline_e": "Get the status of a pipeline execution.",
    "orchestration_orchestrator.message.pause_a_running_pipeline_execu": "Pause a running pipeline execution.",
    "orchestration_orchestrator.message.resume_a_paused_pipeline_execu": "Resume a paused pipeline execution.",
    "orchestration_orchestrator.message.cancel_a_pipeline_execution": "Cancel a pipeline execution.",
    "orchestration_orchestrator.message.add_a_callback_for_pipeline_co": "Add a callback for pipeline completion.",
    "orchestration_versioning.message.model_versioning_and_managemen": "Model versioning and management system.",
    "orchestration_versioning.message.represents_a_specific_version": "Represents a specific version of a model.",
    "orchestration_versioning.message.registry_of_all_models_and_the": "Registry of all models and their versions.",
    "orchestration_versioning.message.manages_model_versions_and_lif": "Manages model versions and lifecycle.",
    "orchestration_versioning.message.initialize_model_version_manag": "Initialize model version manager.",
    "orchestration_versioning.message.save_model_registry_to_disk": "Save model registry to disk.",
    "orchestration_versioning.message.calculate_sha256_checksum_of_a": "Calculate SHA256 checksum of a file.",
    "orchestration_versioning.message.register_a_new_model_version": "Register a new model version.",
    "orchestration_versioning.message.model_file_not_found": "Model file not found: ",
    "orchestration_versioning.message.already_exists_for_model": " already exists for model ",
    "orchestration_versioning.message.get_a_specific_model_version": "Get a specific model version.",
    "orchestration_versioning.message.list_all_registered_models": "List all registered models.",
    "orchestration_versioning.message.list_all_versions_of_a_model": "List all versions of a model.",
    "orchestration_versioning.message.get_the_latest_version_of_a_mo": "Get the latest version of a model.",
    "orchestration_versioning.message.set_the_default_version_for_a": "Set the default version for a model.",
    "orchestration_versioning.message.set_default_version_for": "Set default version for ",
    "orchestration_versioning.message.add_tags_to_a_model_version": "Add tags to a model version.",
    "orchestration_versioning.message.compare_two_versions_of_a_mode": "Compare two versions of a model.",
    "orchestration_versioning.message.one_or_both_versions_not_found": "One or both versions not found",
    "orchestration_versioning.message.compare_two_dictionaries_and_r": "Compare two dictionaries and return differences.",
    "orchestration_versioning.message.export_the_entire_registry_to": "Export the entire registry to a file.",
    "orchestration_examples.message.examples_and_usage_demonstrati": "Examples and usage demonstrations for the AI pipeline orchestration system.",
    "orchestration_examples.message.initialize_the_orchestration_s": "Initialize the orchestration system with all components.",
    "orchestration_examples.message.starting_comprehensive_ai_p": "\n🚀 Starting comprehensive AI pipeline orchestration example...\n",
    "orchestration_examples.message.setup_model_versions_in_the_re": "Setup model versions in the registry.",
    "orchestration_examples.message.setting_up_model_versions": "📦 Setting up model versions...",
    "orchestration_examples.message.gpt_4": "gpt-4",
    "orchestration_examples.message.text_generation": "text-generation",
    "orchestration_examples.message.bert_base_uncased": "bert-base-uncased",
    "orchestration_examples.message.v1_0": "v1.0",
    "orchestration_examples.message.bert_base_model_for_classifica": "BERT base model for classification",
    "orchestration_examples.message.gpt_3_5_turbo": "gpt-3.5-turbo",
    "orchestration_examples.message.v1_0_1": "v1.0",
    "orchestration_examples.message.text_generation_1": "text-generation",
    "orchestration_examples.message.cost_effective": "cost-effective",
    "orchestration_examples.message.mock_model_data_for": "Mock model data for ",
    "orchestration_examples.message.registered": "  ✅ Registered ",
    "orchestration_examples.message.total_models_registered": "  📋 Total models registered: ",
    "orchestration_examples.message.setup_human_reviewers_for_hitl": "Setup human reviewers for HITL workflows.",
    "orchestration_examples.message.setting_up_human_reviewers": "\n👥 Setting up human reviewers...",
    "orchestration_examples.message.reviewer_001": "reviewer_001",
    "orchestration_examples.message.alice_example_com": "alice@example.com",
    "orchestration_examples.message.reviewer_002": "reviewer_002",
    "orchestration_examples.message.bob_example_com": "bob@example.com",
    "orchestration_examples.message.reviewer_003": "reviewer_003",
    "orchestration_examples.message.carol_example_com": "carol@example.com",
    "orchestration_examples.message.registered_reviewer": "  ✅ Registered reviewer: ",
    "orchestration_examples.message.total_reviewers_registered": "  👥 Total reviewers registered: ",
    "orchestration_examples.message.create_and_register_pipelines": "Create and register pipelines.",
    "orchestration_examples.message.creating_and_registering_pi": "\n🔧 Creating and registering pipelines...",
    "orchestration_examples.message.registered_pipeline": "  ✅ Registered pipeline: ",
    "orchestration_examples.message.tasks": "     Tasks: ",
    "orchestration_examples.message.execution_order": "     Execution order: ",
    "orchestration_examples.message.stages": " stages",
    "orchestration_examples.message.registered_pipeline_1": "  ✅ Registered pipeline: ",
    "orchestration_examples.message.tasks_1": "     Tasks: ",
    "orchestration_examples.message.analyze_and_summarize_data": "Analyze and summarize data",
    "orchestration_examples.message.1_0_0": "1.0.0",
    "orchestration_examples.message.app_services_ai_orchestration": "app.services.ai.orchestration.examples.custom_data_loader",
    "orchestration_examples.message.gpt_4_1": "gpt-4",
    "orchestration_examples.message.analyze_the_following_data_and": "Analyze the following data and provide insights: {load_data_output}",
    "orchestration_examples.message.registered_pipeline_2": "  ✅ Registered pipeline: ",
    "orchestration_examples.message.total_pipelines_registered": "  📊 Total pipelines registered: 3",
    "orchestration_examples.message.setup_monitoring_and_alert_rul": "Setup monitoring and alert rules.",
    "orchestration_examples.message.setting_up_monitoring_and_a": "\n📊 Setting up monitoring and alerts...",
    "orchestration_examples.message.pipeline_pipeline_has_long_e": "Pipeline {pipeline} has long execution time: {current_value:.1f}s",
    "orchestration_examples.message.pipeline_pipeline_has_no_rec": "Pipeline {pipeline} has no recent executions",
    "orchestration_examples.message.added_alert_rule": "  ✅ Added alert rule: ",
    "orchestration_examples.message.alert": "  🚨 ALERT: ",
    "orchestration_examples.message.added_alert_event_handler": "  📢 Added alert event handler",
    "orchestration_examples.message.execute_pipelines_with_differe": "Execute pipelines with different scenarios.",
    "orchestration_examples.message.executing_pipelines": "\n⚡ Executing pipelines...",
    "orchestration_examples.message.this_is_a_sample_legal_documen": "This is a sample legal document about contract terms and conditions. It contains important clauses about liability and termination procedures.",
    "orchestration_examples.message.user123": "user123",
    "orchestration_examples.message.started_document_processin": "  ⏳ Started document processing: ",
    "orchestration_examples.message.write_a_comprehensive_guide_ab": "Write a comprehensive guide about AI pipeline orchestration",
    "orchestration_examples.message.started_content_generation": "  ⏳ Started content generation: ",
    "orchestration_examples.message.sales_data_csv": "sales_data.csv",
    "orchestration_examples.message.started_data_analysis": "  ⏳ Started data analysis: ",
    "orchestration_examples.message.execution_status": "\n  📋 Execution Status:",
    "orchestration_examples.message.not_found": ": Not found",
    "orchestration_examples.message.demonstrating_human_in_the": "\n👤 Demonstrating Human-in-the-Loop workflow...",
    "orchestration_examples.message.2024_01_01": "2024-01-01",
    "orchestration_examples.message.pending_reviews": "  📋 Pending reviews: ",
    "orchestration_examples.message.reviewer_001_1": "reviewer_001",
    "orchestration_examples.message.assigned_review_to_reviewe": "  ✅ Assigned review to reviewer_001",
    "orchestration_examples.message.all_extracted_entities_look_ac": "All extracted entities look accurate",
    "orchestration_examples.message.reviewer_001_2": "reviewer_001",
    "orchestration_examples.message.quick_and_accurate_extraction": "Quick and accurate extraction",
    "orchestration_examples.message.reviewer_001_3": "reviewer_001",
    "orchestration_examples.message.reviewer_workload": "  👥 Reviewer workload: ",
    "orchestration_examples.message.active_reviews": " active reviews",
    "orchestration_examples.message.demonstrating_caching_capab": "\n💾 Demonstrating caching capabilities...",
    "orchestration_examples.message.this_is_a_cached_result": "This is a cached result",
    "orchestration_examples.message.gpt_4_2": "gpt-4",
    "orchestration_examples.message.abc123": "abc123",
    "orchestration_examples.message.cached_data": "  💾 Cached data: ",
    "orchestration_examples.message.cache_stats": "  📊 Cache stats:",
    "orchestration_examples.message.hit_rate": "    Hit rate: ",
    "orchestration_examples.message.total_entries": "    Total entries: ",
    "orchestration_examples.message.total_size": "    Total size: ",
    "orchestration_examples.message.bytes": " bytes",
    "orchestration_examples.message.cache_optimization": "  🔧 Cache optimization:",
    "orchestration_examples.message.cleaned_expired": "    Cleaned expired: ",
    "orchestration_examples.message.total_entries_1": "    Total entries: ",
    "orchestration_examples.message.system_health_and_monitorin": "\n📈 System Health and Monitoring Results...",
    "orchestration_examples.message.system_health": "  🏥 System Health:",
    "orchestration_examples.message.total_pipelines": "    Total pipelines: ",
    "orchestration_examples.message.active_pipelines": "    Active pipelines: ",
    "orchestration_examples.message.total_executions": "    Total executions: ",
    "orchestration_examples.message.active_alerts": "    Active alerts: ",
    "orchestration_examples.message.pipeline_metrics": "\n  📊 Pipeline Metrics:",
    "orchestration_examples.message.executions": "      Executions: ",
    "orchestration_examples.message.avg_execution_time": "      Avg execution time: ",
    "orchestration_examples.message.active_alerts_1": "\n  🚨 Active Alerts (",
    "orchestration_examples.message.no_active_alerts": "\n  ✅ No active alerts",
    "orchestration_examples.message.recent_executions": "\n  📝 Recent Executions (",
    "orchestration_examples.message.": " - ",
    "orchestration_examples.message.example_custom_task_handler_fo": "Example custom task handler for data loading.",
    "orchestration_examples.message.run_the_comprehensive_example": "Run the comprehensive example.",
    "sync_offline_handler.message.offline_online_state_handler": "\nOffline/Online State Handler\n\nManages offline/online state transitions and queues operations when offline:\n- Network state detection and monitoring\n- Operation queuing during offline periods\n- Automatic retry with exponential backoff\n- Conflict detection and resolution preparation\n- Data consistency maintenance during network interruptions\n",
    "sync_offline_handler.message.types_of_operations_that_can_b": "Types of operations that can be queued",
    "sync_offline_handler.message.priority_levels_for_queued_ope": "Priority levels for queued operations",
    "sync_offline_handler.message.represents_an_operation_queued": "Represents an operation queued for execution when online",
    "sync_offline_handler.message.handles_offline_online_st": "\n    Handles offline/online state transitions and operation queuing\n    \n    Features:\n    - Network state monitoring and detection\n    - Operation queuing with priority and dependency management\n    - Automatic retry with exponential backoff\n    - Persistent storage of queued operations\n    - Conflict detection preparation\n    - Bandwidth-aware operation scheduling\n    ",
    "sync_offline_handler.message.start_the_offline_handler_back": "Start the offline handler background tasks",
    "sync_offline_handler.message.stop_the_offline_handler_and_s": "Stop the offline handler and save state",
    "sync_offline_handler.message.queue_an_operation_for_executi": "Queue an operation for execution when online",
    "sync_offline_handler.message.operation_queue_is_full": "Operation queue is full",
    "sync_offline_handler.message.of_type": " of type ",
    "sync_offline_handler.message.cancel_a_queued_operation": "Cancel a queued operation",
    "sync_offline_handler.message.get_the_current_status_of_an_o": "Get the current status of an operation",
    "sync_offline_handler.message.manually_set_network_state_us": "Manually set network state (useful for testing or manual control)",
    "sync_offline_handler.message.to": " to ",
    "sync_offline_handler.message.monitor_network_connectivity_s": "Monitor network connectivity status",
    "sync_offline_handler.message.check_network_connectivity_and": "Check network connectivity and return a score (0.0 to 1.0)",
    "sync_offline_handler.message.https_httpbin_org_status_200": "https://httpbin.org/status/200",
    "sync_offline_handler.message.process_queued_operations_when": "Process queued operations when online",
    "sync_offline_handler.message.check_if_all_dependencies_for": "Check if all dependencies for an operation are satisfied",
    "sync_offline_handler.message.execute_a_queued_operation": "Execute a queued operation",
    "sync_offline_handler.message.of_type_1": " of type ",
    "sync_offline_handler.message.no_handler_for_operation_type": "No handler for operation type ",
    "sync_offline_handler.message.schedule_an_operation_for_retr": "Schedule an operation for retry with exponential backoff",
    "sync_offline_handler.message.for_operation": " for operation ",
    "sync_offline_handler.message.in": " in ",
    "sync_offline_handler.message.seconds": " seconds",
    "sync_offline_handler.message.save_the_current_queue_state_t": "Save the current queue state to persistent storage",
    "sync_offline_handler.message.add_a_handler_for_network_stat": "Add a handler for network state changes",
    "sync_offline_handler.message.add_a_handler_for_a_specific_o": "Add a handler for a specific operation type",
    "sync_offline_handler.message.get_current_queue_status_and_s": "Get current queue status and statistics",
    "sync_offline_handler.message.check_if_currently_online": "Check if currently online",
    "sync_conflict_resolver.message.conflict_resolution_system_i": "\nConflict Resolution System\n\nImplements various conflict resolution algorithms for data synchronization:\n- Last Write Wins (LWW) strategy\n- Three-way merge algorithm\n- Custom business rule-based resolution\n- Operational Transform (OT) for text editing\n- Conflict detection and metadata tracking\n- User-driven conflict resolution with fallback strategies\n",
    "sync_conflict_resolver.message.types_of_conflicts_that_can_oc": "Types of conflicts that can occur",
    "sync_conflict_resolver.message.available_conflict_resolution": "Available conflict resolution strategies",
    "sync_conflict_resolver.message.possible_conflict_resolution_o": "Possible conflict resolution outcomes",
    "sync_conflict_resolver.message.represents_a_change_to_data": "Represents a change to data",
    "sync_conflict_resolver.message.result_of_a_merge_operation": "Result of a merge operation",
    "sync_conflict_resolver.message.comprehensive_conflict_re": "\n    Comprehensive conflict resolution system for data synchronization\n    \n    Features:\n    - Multiple resolution strategies\n    - Automatic conflict detection\n    - Three-way merge algorithm\n    - Operational transform for text\n    - Custom business rules\n    - User-driven resolution with UI callbacks\n    - Conflict history and analytics\n    ",
    "sync_conflict_resolver.message.detect_conflicts_between_local": "Detect conflicts between local and remote data",
    "sync_conflict_resolver.message.conflicts_for": " conflicts for ",
    "sync_conflict_resolver.message.check_if_local_and_remote_data": "Check if local and remote data have overlapping changes",
    "sync_conflict_resolver.message.detect_conflicts_at_the_field": "Detect conflicts at the field level",
    "sync_conflict_resolver.message.detect_structural_conflicts_s": "Detect structural conflicts (schema changes)",
    "sync_conflict_resolver.message.resolve_a_list_of_conflicts_us": "Resolve a list of conflicts using the specified strategy",
    "sync_conflict_resolver.message.resolve_a_single_conflict_usin": "Resolve a single conflict using the specified strategy",
    "sync_conflict_resolver.message.no_handler_for_strategy": "No handler for strategy: ",
    "sync_conflict_resolver.message.using_strategy": " using strategy ",
    "sync_conflict_resolver.message.resolve_conflict_using_last_wr": "Resolve conflict using Last Write Wins strategy",
    "sync_conflict_resolver.message.latest_version_data_not_availa": "Latest version data not available",
    "sync_conflict_resolver.message.resolve_conflict_using_first_w": "Resolve conflict using First Write Wins strategy",
    "sync_conflict_resolver.message.earliest_version_data_not_avai": "Earliest version data not available",
    "sync_conflict_resolver.message.resolve_conflict_using_three_w": "Resolve conflict using three-way merge algorithm",
    "sync_conflict_resolver.message.insufficient_versions_for_thre": "Insufficient versions for three-way merge",
    "sync_conflict_resolver.message.used_last_write_wins": ", used last write wins",
    "sync_conflict_resolver.message.resolve_conflict_using_operati": "Resolve conflict using Operational Transform (mainly for text)",
    "sync_conflict_resolver.message.no_text_conflicts_found_for_ot": "No text conflicts found for OT",
    "sync_conflict_resolver.message.merge_text_changes_using_a_sim": "Merge text changes using a simple diff-based approach",
    "sync_conflict_resolver.message.check_if_two_diffs_overlap_si": "Check if two diffs overlap (simplified check)",
    "sync_conflict_resolver.message.set_a_value_in_nested_dictiona": "Set a value in nested dictionary using dot notation path",
    "sync_conflict_resolver.message.resolve_conflict_using_custom": "Resolve conflict using custom business rules",
    "sync_conflict_resolver.message.no_custom_rules_for_entity_typ": "No custom rules for entity type: ",
    "sync_conflict_resolver.message.resolve_conflict_by_requesting": "Resolve conflict by requesting user decision",
    "sync_conflict_resolver.message.conflict_requires_user_decisio": "Conflict requires user decision",
    "sync_conflict_resolver.message.resolve_conflict_by_merging_al": "Resolve conflict by merging all non-conflicting changes",
    "sync_conflict_resolver.message.insufficient_versions_for_merg": "Insufficient versions for merge",
    "sync_conflict_resolver.message.add_a_custom_rule_handler_for": "Add a custom rule handler for an entity type",
    "sync_conflict_resolver.message.add_a_callback_for_user_decisi": "Add a callback for user decision conflicts",
    "sync_conflict_resolver.message.get_conflict_history_with_opti": "Get conflict history with optional filtering",
    "sync_conflict_resolver.message.get_conflict_resolution_statis": "Get conflict resolution statistics",
    "sync_config.message.lz4": "lz4",
    "sync_config.message.aes256": "aes256",
    "sync_config.message.chacha20": "chacha20",
    "sync_config.message.monitoring_and_metrics_configu": "Monitoring and metrics configuration",
    "sync_config.message.config_file_not_found": "Config file not found: ",
    "sync_config.message.apply_legacy_configuration_for": "Apply legacy configuration for backward compatibility",
    "sync_config.message.": "  - ",
    "sync_config.message._1": " = ",
    "sync_config.message.save_current_configuration_to": "Save current configuration to file",
    "sync_config.message.get_database_url_based_on_stor": "Get database URL based on storage configuration",
    "sync_config.message.postgresql_localhost_bdc_syn": "postgresql://localhost/bdc_sync",
    "sync_config.message.mongodb_localhost_27017_bdc": "mongodb://localhost:27017/bdc_sync",
    "sync_config.message.redis_localhost_6379_0": "redis://localhost:6379/0",
    "sync_config.message.check_if_running_in_production": "Check if running in production environment",
    "sync_config.message.check_if_debug_mode_is_enabled": "Check if debug mode is enabled",
    "sync_config.message.create_a_default_configuration": "Create a default configuration file",
    "sync_config.message.string_representation_of_confi": "String representation of configuration",
    "sync_config.message.offline": ", offline=",
    "sync_config.message._2": ", ...)",
    "sync_config.message.create_configuration_optimized": "Create configuration optimized for development",
    "sync_config.message.create_configuration_optimized_1": "Create configuration optimized for production",
    "sync_config.message.create_configuration_for_testi": "Create configuration for testing",
    "sync_version_manager.message.data_versioning_and_merging_s": "\nData Versioning and Merging System\n\nManages data versions, tracks changes, and provides merging capabilities:\n- Version creation and management\n- Change tracking and metadata\n- Version comparison and diffing\n- Automatic and manual merge operations\n- Branch management for complex scenarios\n- Version history and lineage tracking\n",
    "sync_version_manager.message.types_of_changes_that_can_be_t": "Types of changes that can be tracked",
    "sync_version_manager.message.types_of_merge_operations": "Types of merge operations",
    "sync_version_manager.message.represents_a_change_to_a_speci": "Represents a change to a specific field",
    "sync_version_manager.message.represents_a_version_of_data": "Represents a version of data",
    "sync_version_manager.message.calculate_checksum_for_the_ver": "Calculate checksum for the version data",
    "sync_version_manager.message.represents_a_branch_in_version": "Represents a branch in version history",
    "sync_version_manager.message.represents_a_merge_operation": "Represents a merge operation",
    "sync_version_manager.message.comprehensive_data_versio": "\n    Comprehensive data versioning and merging system\n    \n    Features:\n    - Version creation and management\n    - Change tracking with detailed metadata\n    - Version comparison and diffing\n    - Multiple merge strategies\n    - Branch management\n    - Version history and lineage\n    - Compression for storage efficiency\n    - Conflict detection and resolution integration\n    ",
    "sync_version_manager.message.create_a_new_version_of_data": "Create a new version of data",
    "sync_version_manager.message.for": " for ",
    "sync_version_manager.message.get_a_specific_version_by_id": "Get a specific version by ID",
    "sync_version_manager.message.get_the_latest_version_for_an": "Get the latest version for an entity",
    "sync_version_manager.message.get_version_history_for_an_ent": "Get version history for an entity",
    "sync_version_manager.message.compare_two_versions_and_retur": "Compare two versions and return differences",
    "sync_version_manager.message.one_or_both_versions_not_found": "One or both versions not found",
    "sync_version_manager.message.version1": "version1",
    "sync_version_manager.message.version2": "version2",
    "sync_version_manager.message.calculate_differences_between": "Calculate differences between two data objects",
    "sync_version_manager.message.merge_multiple_versions_into_a": "Merge multiple versions into a target version",
    "sync_version_manager.message.not_found": " not found",
    "sync_version_manager.message.not_found_1": " not found",
    "sync_version_manager.message.perform_a_fast_forward_merge": "Perform a fast-forward merge (when target is ancestor of source)",
    "sync_version_manager.message.fast_forward_merge_requires_ex": "Fast-forward merge requires exactly one source version",
    "sync_version_manager.message.target_is_not_an_ancestor_of_s": "Target is not an ancestor of source",
    "sync_version_manager.message.perform_a_three_way_merge": "Perform a three-way merge",
    "sync_version_manager.message.three_way_merge_requires_exact": "Three-way merge requires exactly one source version",
    "sync_version_manager.message.no_common_ancestor_found": "No common ancestor found",
    "sync_version_manager.message.common_ancestor_version_not_fo": "Common ancestor version not found",
    "sync_version_manager.message.perform_a_recursive_merge_for": "Perform a recursive merge (for multiple sources)",
    "sync_version_manager.message.get_all_ancestor_version_ids_f": "Get all ancestor version IDs for a version",
    "sync_version_manager.message.find_the_most_recent_common_an": "Find the most recent common ancestor of two versions",
    "sync_version_manager.message.get_the_list_of_changes_betwee": "Get the list of changes between two versions",
    "sync_version_manager.message.check_if_a_change_conflicts_wi": "Check if a change conflicts with other changes",
    "sync_version_manager.message.apply_a_change_to_data": "Apply a change to data",
    "sync_version_manager.message.create_a_new_branch": "Create a new branch",
    "sync_version_manager.message.already_exists": " already exists",
    "sync_version_manager.message.for_1": " for ",
    "sync_version_manager.message.switch_to_a_different_branch_a": "Switch to a different branch and return the head version",
    "sync_version_manager.message.compress_data_for_storage": "Compress data for storage",
    "sync_version_manager.message.notify_registered_change_liste": "Notify registered change listeners",
    "sync_version_manager.message.add_a_change_listener": "Add a change listener",
    "sync_version_manager.message.get_version_manager_statistics": "Get version manager statistics",
    "sync_version_manager.message.clean_up_old_versions_to_save": "Clean up old versions to save storage",
    "sync_version_manager.message.old_versions": " old versions",
    "sync___init__.message.real_time_data_synchronizatio": "\nReal-time Data Synchronization System for BDC Project\n\nThis module provides comprehensive real-time data synchronization capabilities including:\n- WebSocket connection management\n- Offline/online state handling  \n- Conflict resolution algorithms\n- Data versioning and merging\n- Event sourcing for audit trails\n- Cross-device synchronization\n\nThe synchronization system is designed to handle distributed data consistency\nacross multiple clients and devices while maintaining data integrity and\nproviding seamless user experience during network interruptions.\n",
    "sync___init__.message.1_0_0": "1.0.0",
    "sync_event_sourcing.message.event_sourcing_system_for_aud": "\nEvent Sourcing System for Audit Trails\n\nImplements event sourcing pattern for comprehensive audit trails:\n- Event store with immutable event logging\n- Event replay and reconstruction capabilities\n- Snapshot management for performance\n- Event streaming and subscription\n- Audit trail generation and querying\n- Event projection and aggregation\n",
    "sync_event_sourcing.message.types_of_events_that_can_be_st": "Types of events that can be stored",
    "sync_event_sourcing.message.status_of_an_event": "Status of an event",
    "sync_event_sourcing.message.represents_an_immutable_event": "Represents an immutable event in the system",
    "sync_event_sourcing.message.calculate_checksum_for_event_i": "Calculate checksum for event integrity",
    "sync_event_sourcing.message.convert_event_to_dictionary": "Convert event to dictionary",
    "sync_event_sourcing.message.represents_a_snapshot_of_aggre": "Represents a snapshot of aggregate state at a point in time",
    "sync_event_sourcing.message.represents_a_projection_of_eve": "Represents a projection of events for read models",
    "sync_event_sourcing.message.abstract_base_class_for_event": "Abstract base class for event handlers",
    "sync_event_sourcing.message.check_if_this_handler_can_proc": "Check if this handler can process the given event",
    "sync_event_sourcing.message.event_store_for_immutable": "\n    Event store for immutable event logging and retrieval\n    \n    Features:\n    - Immutable event storage\n    - Event integrity verification\n    - Event querying and filtering\n    - Snapshot management\n    - Event compression for storage efficiency\n    ",
    "sync_event_sourcing.message.append_an_event_to_the_store": "Append an event to the store",
    "sync_event_sourcing.message.to_store": " to store",
    "sync_event_sourcing.message.verify_event_integrity_using_c": "Verify event integrity using checksum",
    "sync_event_sourcing.message.get_events_based_on_various_fi": "Get events based on various filters",
    "sync_event_sourcing.message.get_all_events_for_a_specific": "Get all events for a specific aggregate",
    "sync_event_sourcing.message.create_a_snapshot_of_aggregate": "Create a snapshot of aggregate state",
    "sync_event_sourcing.message.at_version": " at version ",
    "sync_event_sourcing.message.get_the_latest_snapshot_for_an": "Get the latest snapshot for an aggregate",
    "sync_event_sourcing.message.get_event_store_statistics": "Get event store statistics",
    "sync_event_sourcing.message.start_the_event_sourcing_servi": "Start the event sourcing service",
    "sync_event_sourcing.message.starting_event_sourcing_servic": "Starting event sourcing service",
    "sync_event_sourcing.message.stop_the_event_sourcing_servic": "Stop the event sourcing service",
    "sync_event_sourcing.message.stopping_event_sourcing_servic": "Stopping event sourcing service",
    "sync_event_sourcing.message.publish_an_event_to_the_store": "Publish an event to the store and notify handlers",
    "sync_event_sourcing.message.notify_registered_event_handle": "Notify registered event handlers",
    "sync_event_sourcing.message.apply_an_event_to_aggregate_st": "Apply an event to aggregate state",
    "sync_event_sourcing.message.replay_events_with_optional_fi": "Replay events with optional filtering",
    "sync_event_sourcing.message.events": " events",
    "sync_event_sourcing.message.create_a_new_event_projection": "Create a new event projection",
    "sync_event_sourcing.message.background_task_to_process_pro": "Background task to process projections",
    "sync_event_sourcing.message.get_new_events_for_a_projectio": "Get new events for a projection",
    "sync_event_sourcing.message.add_an_event_handler_for_a_spe": "Add an event handler for a specific event type",
    "sync_event_sourcing.message.add_an_event_handler_for_a_spe_1": "Add an event handler for a specific aggregate type",
    "sync_event_sourcing.message.subscribe_to_events_of_a_speci": "Subscribe to events of a specific type",
    "sync_event_sourcing.message.subscribe_to_events_for_a_spec": "Subscribe to events for a specific aggregate type",
    "sync_event_sourcing.message.get_audit_trail_for_analysis_a": "Get audit trail for analysis and compliance",
    "sync_sync_service.message.main_synchronization_service": "\nMain Synchronization Service\n\nOrchestrates all synchronization components and provides a unified interface:\n- Coordinates WebSocket connections, offline handling, conflict resolution\n- Manages data versioning and event sourcing\n- Provides high-level sync operations\n- Handles service lifecycle and configuration\n- Monitors sync health and performance\n- Exposes APIs for external integration\n",
    "sync_sync_service.message.represents_a_synchronization_r": "Represents a synchronization request",
    "sync_sync_service.message.response_to_a_synchronization": "Response to a synchronization request",
    "sync_sync_service.message.main_synchronization_serv": "\n    Main synchronization service that orchestrates all sync components\n    \n    Features:\n    - Unified interface for all sync operations\n    - Automatic conflict detection and resolution\n    - Real-time and offline synchronization\n    - Cross-device coordination\n    - Event sourcing and audit trails\n    - Performance monitoring and optimization\n    - Extensible plugin architecture\n    ",
    "sync_sync_service.message.initialize_all_sync_service_co": "Initialize all sync service components",
    "sync_sync_service.message.initialize_all_core_synchroniz": "Initialize all core synchronization components",
    "sync_sync_service.message.setup_integrations_between_com": "Setup integrations between components",
    "sync_sync_service.message.register_default_request_handl": "Register default request handlers",
    "sync_sync_service.message.setup_request_processing_middl": "Setup request processing middleware",
    "sync_sync_service.message.start_the_synchronization_serv": "Start the synchronization service",
    "sync_sync_service.message.starting_synchronization_servi": "Starting synchronization service components",
    "sync_sync_service.message.stop_the_synchronization_servi": "Stop the synchronization service",
    "sync_sync_service.message.process_a_synchronization_requ": "Process a synchronization request",
    "sync_sync_service.message.request_blocked_by_middleware": "Request blocked by middleware",
    "sync_sync_service.message.no_handler_for_operation": "No handler for operation: ",
    "sync_sync_service.message.handle_a_general_sync_request": "Handle a general sync request",
    "sync_sync_service.message.handle_a_create_request": "Handle a create request",
    "sync_sync_service.message.not_found": " not found",
    "sync_sync_service.message.conflicts_require_manual_resol": "Conflicts require manual resolution",
    "sync_sync_service.message.handle_get_version_request": "Handle get version request",
    "sync_sync_service.message.handle_get_history_request": "Handle get history request",
    "sync_sync_service.message.handle_manual_conflict_resolut": "Handle manual conflict resolution",
    "sync_sync_service.message.authenticate_and_authorize_req": "Authenticate and authorize request",
    "sync_sync_service.message.collect_metrics_for_request": "Collect metrics for request",
    "sync_sync_service.message.handle_offline_sync_operations": "Handle offline sync operations",
    "sync_sync_service.message.custom_conflict_resolution_for": "Custom conflict resolution for User entities",
    "sync_sync_service.message.custom_conflict_resolution_for_1": "Custom conflict resolution for Document entities",
    "sync_sync_service.message.handle_version_manager_events": "Handle version manager events",
    "sync_sync_service.message.for": " for ",
    "sync_sync_service.message.register_a_device_for_synchron": "Register a device for synchronization",
    "sync_sync_service.message.device_coordinator_not_availab": "Device coordinator not available",
    "sync_sync_service.message.device_coordinator_not_availab_1": "Device coordinator not available",
    "sync_sync_service.message.add_a_custom_request_handler": "Add a custom request handler",
    "sync_utils.message.generate_a_unique_identifier": "Generate a unique identifier",
    "sync_utils.message.generate_a_shorter_unique_iden": "Generate a shorter unique identifier",
    "sync_utils.message.get_current_timestamp_as_float": "Get current timestamp as float",
    "sync_utils.message.get_current_timestamp_in_milli": "Get current timestamp in milliseconds",
    "sync_utils.message.convert_timestamp_to_datetime": "Convert timestamp to datetime object",
    "sync_utils.message.convert_datetime_object_to_tim": "Convert datetime object to timestamp",
    "sync_utils.message.y_m_d_h_m_s_utc": "%Y-%m-%d %H:%M:%S UTC",
    "sync_utils.message.sha256": "sha256",
    "sync_utils.message.calculate_checksum_for_data": "Calculate checksum for data",
    "sync_utils.message.md5": "md5",
    "sync_utils.message.sha1": "sha1",
    "sync_utils.message.sha256_1": "sha256",
    "sync_utils.message.sha512": "sha512",
    "sync_utils.message.compress_data_using_specified": "Compress data using specified method",
    "sync_utils.message.decompress_data_using_specifie": "Decompress data using specified method",
    "sync_utils.message.serialize_object_to_string_wit": "Serialize object to string with optional compression",
    "sync_utils.message.estimate_the_size_of_an_object": "Estimate the size of an object in bytes",
    "sync_utils.message.deep_merge_two_dictionaries": "Deep merge two dictionaries",
    "sync_utils.message.calculate_deep_differences_bet": "Calculate deep differences between two dictionaries",
    "sync_utils.message.flatten_a_nested_dictionary": "Flatten a nested dictionary",
    "sync_utils.message.unflatten_a_dictionary_with_do": "Unflatten a dictionary with dot notation keys",
    "sync_utils.message.a_za_z0_9_a_za_z0_9": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
    "sync_utils.message.sanitize_filename_for_safe_sto": "Sanitize filename for safe storage",
    "sync_utils.message.": "[<>:\"/\\\\|?*]",
    "sync_utils.message.decorator_for_retrying_functio": "Decorator for retrying functions with exponential backoff",
    "sync_utils.message.s": "s: ",
    "sync_utils.message.8_8_8_8": "8.8.8.8",
    "sync_utils.message.test_network_connectivity_to_a": "Test network connectivity to a host",
    "sync_utils.message.get_current_memory_usage_stati": "Get current memory usage statistics",
    "sync_utils.message.pb": " PB",
    "sync_utils.message.a_simple_circular_buffer_imple": "A simple circular buffer implementation",
    "sync_utils.message.add_item_to_buffer": "Add item to buffer",
    "sync_utils.message.get_all_items_in_order": "Get all items in order",
    "sync_utils.message.get_the_latest_n_items": "Get the latest n items",
    "sync_utils.message.simple_rate_limiter_using_toke": "Simple rate limiter using token bucket algorithm",
    "sync_utils.message.try_to_acquire_tokens": "Try to acquire tokens",
    "sync_utils.message.async_context_manager_for_lock": "Async context manager for locking",
    "sync_exceptions.message.exceptions_related_to_websocke": "Exceptions related to WebSocket connections",
    "sync_device_sync.message.types_of_devices_that_can_sync": "Types of devices that can sync",
    "sync_device_sync.message.describes_a_device_s_synchroni": "Describes a device's synchronization capabilities",
    "sync_device_sync.message.represents_a_synchronization_o": "Represents a synchronization operation",
    "sync_device_sync.message.defines_synchronization_polici": "Defines synchronization policies for different scenarios",
    "sync_device_sync.message.start_the_device_sync_coordina": "Start the device sync coordinator",
    "sync_device_sync.message.starting_device_sync_coordinat": "Starting device sync coordinator",
    "sync_device_sync.message.stop_the_device_sync_coordinat": "Stop the device sync coordinator",
    "sync_device_sync.message.stopping_device_sync_coordinat": "Stopping device sync coordinator",
    "sync_device_sync.message.register_a_new_device_for_sync": "Register a new device for synchronization",
    "sync_device_sync.message.for_user": " for user ",
    "sync_device_sync.message.handle_device_status_changes": "Handle device status changes",
    "sync_device_sync.message.synchronize_data_across_device": "Synchronize data across devices",
    "sync_device_sync.message.not_found": " not found",
    "sync_device_sync.message.apply_sync_policies_to_a_sync": "Apply sync policies to a sync operation",
    "sync_device_sync.message.background_task_to_schedule_an": "Background task to schedule and execute sync operations",
    "sync_device_sync.message.execute_a_sync_operation": "Execute a sync operation",
    "sync_device_sync.message.filter_target_devices_based_on": "Filter target devices based on their status and capabilities",
    "sync_device_sync.message.estimate_the_size_of_data_in_b": "Estimate the size of data in bytes",
    "sync_device_sync.message.sync_data_to_a_specific_device": "Sync data to a specific device",
    "sync_device_sync.message.not_found_1": " not found",
    "sync_device_sync.message.monitor_device_health_and_conn": "Monitor device health and connectivity",
    "sync_device_sync.message.as_offline_stale": " as offline (stale)",
    "sync_device_sync.message.subscribe_device_to_relevant_s": "Subscribe device to relevant sync channels",
    "sync_device_sync.message.user": "user:",
    "sync_device_sync.message.device_type": "device_type:",
    "sync_device_sync.message.category": "category:",
    "sync_device_sync.message.trigger_initial_synchronizatio": "Trigger initial synchronization for a new device",
    "sync_device_sync.message.trigger_synchronization_for_a": "Trigger synchronization for a device that came online",
    "sync_device_sync.message.handle_operations_when_a_devic": "Handle operations when a device goes offline",
    "sync_device_sync.message.create_default_synchronization": "Create default synchronization policies",
    "sync_device_sync.message.20": ">20%",
    "sync_device_sync.message.get_all_devices_for_a_user": "Get all devices for a user",
    "sync_websocket_manager.message.websocket_connection_manager": "\nWebSocket Connection Manager\n\nHandles WebSocket connections for real-time synchronization including:\n- Connection lifecycle management\n- Authentication and authorization\n- Connection pooling and load balancing\n- Message routing and broadcasting\n- Heartbeat and keep-alive functionality\n- Automatic reconnection with exponential backoff\n",
    "sync_websocket_manager.message.manages_websocket_connect": "\n    Manages WebSocket connections for real-time synchronization\n    \n    Features:\n    - Connection pooling and management\n    - Authentication and session management\n    - Message routing and broadcasting\n    - Heartbeat monitoring\n    - Automatic cleanup of stale connections\n    ",
    "sync_websocket_manager.message.start_the_websocket_manager_ba": "Start the WebSocket manager background tasks",
    "sync_websocket_manager.message.stop_the_websocket_manager_and": "Stop the WebSocket manager and cleanup resources",
    "sync_websocket_manager.message.handle_a_new_websocket_connect": "Handle a new WebSocket connection",
    "sync_websocket_manager.message.handle_the_full_lifecycle_of_a": "Handle the full lifecycle of a WebSocket connection",
    "sync_websocket_manager.message.handle_an_incoming_websocket_m": "Handle an incoming WebSocket message",
    "sync_websocket_manager.message.no_handler_for_message_type": "No handler for message type: ",
    "sync_websocket_manager.message.no_authentication_token_provid": "No authentication token provided",
    "sync_websocket_manager.message.authenticated_for_user": " authenticated for user ",
    "sync_websocket_manager.message.handle_subscription_to_channel": "Handle subscription to channels",
    "sync_websocket_manager.message.subscribed_to_channels": " subscribed to channels: ",
    "sync_websocket_manager.message.send_message_to_all_connection": "Send message to all connections for a specific user",
    "sync_websocket_manager.message.send_message_to_a_specific_dev": "Send message to a specific device",
    "sync_websocket_manager.message.send_message_to_all_connection_1": "Send message to all connections for a tenant",
    "sync_websocket_manager.message.broadcast_message_to_all_subsc": "Broadcast message to all subscribers of a channel",
    "sync_websocket_manager.message.send_message_to_a_specific_con": "Send message to a specific connection",
    "sync_websocket_manager.message.monitor_connection_health_with": "Monitor connection health with heartbeats",
    "sync_websocket_manager.message.cleaning_up_stale_connection": "Cleaning up stale connection: ",
    "sync_websocket_manager.message.periodic_cleanup_of_stale_conn": "Periodic cleanup of stale connections",
    "sync_websocket_manager.message.clean_up_a_connection_and_all": "Clean up a connection and all its associated data",
    "sync_websocket_manager.message.close_all_active_connections": "Close all active connections",
    "sync_websocket_manager.message.register_a_message_handler_for": "Register a message handler for a specific message type",
    "sync_websocket_manager.message.add_middleware_to_process_mess": "Add middleware to process messages",
    "sync_websocket_manager.message.get_all_connection_ids_for_a_u": "Get all connection IDs for a user",
    "sync_websocket_manager.message.get_all_connection_ids_for_a_d": "Get all connection IDs for a device",
    "i18n_language_detection_service.message.language_detection_service_for": "Language detection service for multi-language support.",
    "i18n_language_detection_service.message.service_for_detecting_user_s_p": "Service for detecting user's preferred language.",
    "i18n_language_detection_service.message.en_us": "en-US",
    "i18n_language_detection_service.message.tr_tr": "tr-TR",
    "i18n_language_detection_service.message.": "العربية",
    "i18n_language_detection_service.message.ar_sa": "ar-SA",
    "i18n_language_detection_service.message.es_es": "es-ES",
    "i18n_language_detection_service.message.fr_fr": "fr-FR",
    "i18n_language_detection_service.message.de_de": "de-DE",
    "i18n_language_detection_service.message.ru_ru": "ru-RU",
    "i18n_language_detection_service.message.u0600_u06ff_u0750_u077f_u0": "[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]",
    "i18n_language_detection_service.message._1": "(والله|الحمد|أللهم|السلام|مرحبا|شكرا)",
    "i18n_language_detection_service.message.i": "[çğıöşüÇĞIİÖŞÜ]",
    "i18n_language_detection_service.message.merhaba_te_ekk_rler_g_nayd_n": "(merhaba|teşekkürler|günaydın|iyi|nasıl|nerede)",
    "i18n_language_detection_service.message._2": "[ñáéíóúüÑÁÉÍÓÚÜ]",
    "i18n_language_detection_service.message.hola_gracias_buenos_como_dond": "(hola|gracias|buenos|como|donde|que|por)",
    "i18n_language_detection_service.message._3": "[àâäéèêëïîôöùûüÿçÀÂÄÉÈÊËÏÎÔÖÙÛÜŸÇ]",
    "i18n_language_detection_service.message.bonjour_merci_comment_ou_que": "(bonjour|merci|comment|ou|que|pour|avec)",
    "i18n_language_detection_service.message._4": "[äöüßÄÖÜ]",
    "i18n_language_detection_service.message.hallo_danke_guten_wie_wo_was": "(hallo|danke|guten|wie|wo|was|für|mit)",
    "i18n_language_detection_service.message._5": "[а-яё]",
    "i18n_language_detection_service.message._6": "(привет|спасибо|доброе|как|где|что|для)",
    "i18n_language_detection_service.message.initialize_language_detection": "Initialize language detection service.",
    "i18n_language_detection_service.message.get_fallback_language": "\n        Get fallback language for a given language.\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            Fallback language code\n        ",
    "i18n_language_detection_service.message.check_if_a_language_i": "\n        Check if a language is right-to-left.\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            True if RTL, False otherwise\n        ",
    "i18n_i18n_manager.message.comprehensive_internationaliza": "Comprehensive internationalization manager service.",
    "i18n_i18n_manager.message.get_all_active_languages": "Get all active languages.",
    "i18n_i18n_manager.message.create_a_new_language": "Create a new language.",
    "i18n_i18n_manager.message.languages": "languages_*",
    "i18n_i18n_manager.message.languages_1": "languages_*",
    "i18n_i18n_manager.message.get_multilingual_cont": "\n        Get multilingual content for an entity.\n        \n        Args:\n            entity_type: Type of entity\n            entity_id: ID of the entity\n            language_code: Optional language filter\n            field_name: Optional field filter\n            \n        Returns:\n            Dictionary of content organized by field and language\n        ",
    "i18n_i18n_manager.message.translate_all_content": "\n        Translate all content for an entity to target languages.\n        \n        Args:\n            entity_type: Type of entity\n            entity_id: ID of the entity\n            source_language: Source language code\n            target_languages: List of target language codes\n            user_id: ID of user requesting translation\n            \n        Returns:\n            Translation results\n        ",
    "i18n_i18n_manager.message.no_source_content_found": "No source content found",
    "i18n_i18n_manager.message.to": " to ",
    "i18n_i18n_manager.message.get_user_s_language_preference": "Get user's language preferences.",
    "i18n_i18n_manager.message.detect_the_best_language_for_a": "Detect the best language for a user.",
    "i18n_i18n_manager.message.create_a_new_translation_proje": "Create a new translation project.",
    "i18n_i18n_manager.message.calculate_the_scope_and_total": "Calculate the scope and total items for a translation project.",
    "i18n_i18n_manager.message.get_detailed_status_of_a_trans": "Get detailed status of a translation project.",
    "i18n_i18n_manager.message.get_comprehensive_translation": "Get comprehensive translation analytics.",
    "i18n_i18n_manager.message.get_language_coverage_report_f": "Get language coverage report for all entities.",
    "i18n_i18n_manager.message.clean_up_old_translation_versi": "Clean up old translation versions and unused data.",
    "i18n_i18n_manager.message.export_all_data_for_a_specific": "Export all data for a specific language.",
    "i18n_translation_service.message.translation_service_for_multi": "Translation service for multi-language support.",
    "i18n_translation_service.message.translation_result_with_metada": "Translation result with metadata.",
    "i18n_translation_service.message.service_for_handling_translati": "Service for handling translations and localization.",
    "i18n_translation_service.message.load_all_translation_files_int": "Load all translation files into memory.",
    "i18n_translation_service.message.load_translation_file": "\n        Load translation file for a specific language.\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            Translation dictionary\n        ",
    "i18n_translation_service.message.create_default_transl": "\n        Create default translation file for a language.\n        \n        Args:\n            language_code: Language code\n        ",
    "i18n_translation_service.message.get_default_translati": "\n        Get default translations for a language.\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            Default translations dictionary\n        ",
    "i18n_translation_service.message.password_reset_email_sent": "Password reset email sent",
    "i18n_translation_service.message.password_is_too_short": "Password is too short",
    "i18n_translation_service.message.file_is_too_large": "File is too large",
    "i18n_translation_service.message.ifre_s_f_rlama_e_postas_g_nd": "Şifre sıfırlama e-postası gönderildi",
    "i18n_translation_service.message.": "حفظ",
    "i18n_translation_service.message._1": "إلغاء",
    "i18n_translation_service.message._2": "حذف",
    "i18n_translation_service.message._3": "تحرير",
    "i18n_translation_service.message._4": "إنشاء",
    "i18n_translation_service.message._5": "تحديث",
    "i18n_translation_service.message._6": "بحث",
    "i18n_translation_service.message._7": "تصفية",
    "i18n_translation_service.message._8": "جاري التحميل...",
    "i18n_translation_service.message._9": "خطأ",
    "i18n_translation_service.message._10": "نجح",
    "i18n_translation_service.message._11": "تحذير",
    "i18n_translation_service.message._12": "معلومات",
    "i18n_translation_service.message._13": "تأكيد",
    "i18n_translation_service.message._14": "نعم",
    "i18n_translation_service.message._15": "موافق",
    "i18n_translation_service.message._16": "إرسال",
    "i18n_translation_service.message._17": "إعادة تعيين",
    "i18n_translation_service.message._18": "إغلاق",
    "i18n_translation_service.message._19": "العودة",
    "i18n_translation_service.message._20": "التالي",
    "i18n_translation_service.message._21": "السابق",
    "i18n_translation_service.message._22": "الرئيسية",
    "i18n_translation_service.message._23": "لوحة التحكم",
    "i18n_translation_service.message._24": "الملف الشخصي",
    "i18n_translation_service.message._25": "الإعدادات",
    "i18n_translation_service.message._26": "تسجيل الخروج",
    "i18n_translation_service.message._27": "تسجيل الدخول",
    "i18n_translation_service.message._28": "التسجيل",
    "i18n_translation_service.message.to": " to ",
    "i18n_translation_service.message.get_translation_dicti": "\n        Get translation dictionary for a language and optional section.\n        \n        Args:\n            language: Language code\n            section: Optional section to filter\n            \n        Returns:\n            Translation dictionary\n        ",
    "i18n_translation_service.message.for": " for ",
    "i18n_translation_service.message.save_translation_file": "\n        Save translation file to disk.\n        \n        Args:\n            language: Language code\n        ",
    "i18n_translation_service.message.get_list_of_missing_t": "\n        Get list of missing translation keys for a target language.\n        \n        Args:\n            target_language: Language to check\n            reference_language: Reference language to compare against\n            \n        Returns:\n            List of missing translation keys\n        ",
    "i18n_translation_service.message.get_translation_cover": "\n        Get translation coverage percentage for a language.\n        \n        Args:\n            language: Language to check\n            reference_language: Reference language\n            \n        Returns:\n            Coverage percentage (0.0 to 1.0)\n        ",
    "i18n_locale_service.message.en_us": "en_US",
    "i18n_locale_service.message.tr_tr": "tr_TR",
    "i18n_locale_service.message.ar_sa": "ar_SA",
    "i18n_locale_service.message.es_es": "es_ES",
    "i18n_locale_service.message.fr_fr": "fr_FR",
    "i18n_locale_service.message.de_de": "de_DE",
    "i18n_locale_service.message.ru_ru": "ru_RU",
    "i18n_locale_service.message.en_us_1": "en_US",
    "i18n_locale_service.message.tr_tr_1": "tr_TR",
    "i18n_locale_service.message.ar_sa_1": "ar_SA",
    "i18n_locale_service.message.es_es_1": "es_ES",
    "i18n_locale_service.message.fr_fr_1": "fr_FR",
    "i18n_locale_service.message.de_de_1": "de_DE",
    "i18n_locale_service.message.ru_ru_1": "ru_RU",
    "i18n_locale_service.message.en_us_2": "en_US",
    "i18n_locale_service.message.tr_tr_2": "tr_TR",
    "i18n_locale_service.message.ar_sa_2": "ar_SA",
    "i18n_locale_service.message.es_es_2": "es_ES",
    "i18n_locale_service.message.fr_fr_2": "fr_FR",
    "i18n_locale_service.message.de_de_2": "de_DE",
    "i18n_locale_service.message.ru_ru_2": "ru_RU",
    "i18n_locale_service.message.get_babel_locale_obje": "\n        Get Babel Locale object for language code.\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            Babel Locale object or None\n        ",
    "i18n_locale_service.message.en_us_3": "en_US",
    "i18n_locale_service.message.en_us_4": "en_US",
    "i18n_locale_service.message.y_m_d": "%Y-%m-%d",
    "i18n_locale_service.message.y_m_d_1": "%Y-%m-%d",
    "i18n_locale_service.message.y_m_d_h_m_s": "%Y-%m-%d %H:%M:%S",
    "i18n_locale_service.message.y_m_d_h_m_s_1": "%Y-%m-%d %H:%M:%S",
    "i18n_locale_service.message.h_m_s": "%H:%M:%S",
    "i18n_locale_service.message.h_m_s_1": "%H:%M:%S",
    "i18n_locale_service.message.en_us_5": "en_US",
    "i18n_locale_service.message.0": "#,##0.",
    "i18n_locale_service.message.0_1": "#,##0.",
    "i18n_locale_service.message.get_relative_time_des": "\n        Get relative time description (e.g., \"2 hours ago\", \"in 3 days\").\n        \n        Args:\n            datetime_obj: Datetime to describe\n            language_code: Language code\n            base_datetime: Base datetime (defaults to now)\n            \n        Returns:\n            Relative time string\n        ",
    "i18n_locale_service.message.get_weekday_names_for": "\n        Get weekday names for a locale.\n        \n        Args:\n            language_code: Language code\n            width: Width ('narrow', 'abbreviated', 'wide')\n            \n        Returns:\n            List of weekday names\n        ",
    "i18n_locale_service.message.get_month_names_for_a": "\n        Get month names for a locale.\n        \n        Args:\n            language_code: Language code\n            width: Width ('narrow', 'abbreviated', 'wide')\n            \n        Returns:\n            List of month names\n        ",
    "i18n_locale_service.message.en_us_6": "en_US",
    "i18n_locale_service.message.percentsign": "percentSign",
    "i18n_locale_service.message.get_first_day_of_week": "\n        Get first day of week for locale (0=Monday, 6=Sunday).\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            First day of week (0-6)\n        ",
    "i18n_locale_service.message.y_m_d_2": "%Y-%m-%d",
    "i18n_locale_service.message.y_m_d_3": "%Y-%m-%d",
    "i18n_locale_service.message.d_m_y": "%d/%m/%Y",
    "i18n_locale_service.message.m_d_y": "%m/%d/%Y",
    "i18n_locale_service.message.d_m_y_1": "%d.%m.%Y",
    "i18n_locale_service.message.get_calendar_data_for": "\n        Get calendar data for locale (weekday/month names, first day of week, etc.).\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            Calendar data dictionary\n        ",
    "i18n_content_translation_service.message.content_translation_service_fo": "Content translation service for multi-language content management.",
    "i18n_content_translation_service.message.model_for_storing_content_tran": "Model for storing content translations.",
    "i18n_content_translation_service.message.model_for_translation_memory": "Model for translation memory (TM) segments.",
    "i18n_content_translation_service.message.service_for_managing_content_t": "Service for managing content translations.",
    "i18n_content_translation_service.message.initialize_content_translation": "Initialize content translation service.",
    "i18n_content_translation_service.message.translate_content_usi": "\n        Translate content using the best available method.\n        \n        Args:\n            request: Translation request\n            user_id: ID of requesting user\n            \n        Returns:\n            Translation response\n        ",
    "i18n_content_translation_service.message.translate_content_usi_1": "\n        Translate content using AI (OpenAI GPT).\n        \n        Args:\n            request: Translation request\n            \n        Returns:\n            Translation response or None\n        ",
    "i18n_content_translation_service.message.you_are_a_professional_transla": "You are a professional translator. Translate the given text accurately while preserving meaning and tone.",
    "i18n_content_translation_service.message.you_are_a_professional_transla_1": "You are a professional translator. Translate the HTML content while preserving all HTML tags and structure.",
    "i18n_content_translation_service.message.context": " Context: ",
    "i18n_content_translation_service.message.translate_the_following": "\nTranslate the following ",
    "i18n_content_translation_service.message.to": " to ",
    "i18n_content_translation_service.message.": ":\n\n",
    "i18n_content_translation_service.message.please_provide_only_the_tran": "\n\nPlease provide only the translation without any explanations or additional text.\n",
    "i18n_content_translation_service.message.gpt_3_5_turbo": "gpt-3.5-turbo",
    "i18n_content_translation_service.message.gpt_3_5_turbo_1": "gpt-3.5-turbo",
    "i18n_content_translation_service.message.calculate_confidence": "\n        Calculate confidence score for AI translation.\n        \n        Args:\n            source: Source text\n            translation: Translated text\n            response: OpenAI response object\n            \n        Returns:\n            Confidence score (0.0 to 1.0)\n        ",
    "i18n_content_translation_service.message.check_translation_mem": "\n        Check translation memory for existing translations.\n        \n        Args:\n            source_text: Source text\n            source_lang: Source language\n            target_lang: Target language\n            \n        Returns:\n            Translation memory result or None\n        ",
    "i18n_content_translation_service.message.calculate_similarity": "\n        Calculate similarity between two texts (simplified implementation).\n        \n        Args:\n            text1: First text\n            text2: Second text\n            \n        Returns:\n            Similarity score (0.0 to 1.0)\n        ",
    "i18n_content_translation_service.message.store_translation_in": "\n        Store translation in translation memory.\n        \n        Args:\n            source_text: Source text\n            target_text: Target text\n            source_lang: Source language\n            target_lang: Target language\n            user_id: User ID\n        ",
    "i18n_content_translation_service.message.store_content_transla": "\n        Store content translation in database.\n        \n        Args:\n            content_id: ID of source content\n            content_type: Type of content\n            field_name: Field name being translated\n            source_content: Original content\n            translated_content: Translated content\n            source_language: Source language\n            target_language: Target language\n            method: Translation method\n            confidence: Confidence score\n            user_id: User ID\n            \n        Returns:\n            ContentTranslation object or None\n        ",
    "i18n_content_translation_service.message.get_translations_for": "\n        Get translations for content.\n        \n        Args:\n            content_id: Content ID\n            content_type: Content type\n            target_language: Optional target language filter\n            \n        Returns:\n            List of ContentTranslation objects\n        ",
    "i18n_content_translation_service.message.get_translation_stati": "\n        Get translation statistics.\n        \n        Args:\n            language: Optional language filter\n            \n        Returns:\n            Translation statistics\n        ",
    "i18n_content_translation_service.message.bulk_translate_multip": "\n        Bulk translate multiple content items.\n        \n        Args:\n            content_items: List of content items to translate\n            target_languages: List of target languages\n            user_id: User ID\n            \n        Returns:\n            Bulk translation results\n        ",
    "analytics_config.message.analytics_system_configuratio": "\nAnalytics System Configuration\n\nCentral configuration for all analytics components including\nsettings, thresholds, and environment-specific parameters.\n",
    "analytics_config.message.database_configuration_for_ana": "Database configuration for analytics",
    "analytics_config.message.user_behavior_analytics_config": "User behavior analytics configuration",
    "analytics_config.message.security_configuration_for_ana": "Security configuration for analytics",
    "analytics_config.message.main_analytics_configuration_c": "Main analytics configuration class",
    "analytics_config.message.load_predictive_analytics_conf": "Load predictive analytics configuration",
    "analytics_config.message.0_7": "0.7",
    "analytics_config.message.0_05": "0.05",
    "analytics_config.message.load_behavior_analytics_config": "Load behavior analytics configuration",
    "analytics_config.message.load_performance_metrics_confi": "Load performance metrics configuration",
    "analytics_config.message.load_report_generation_configu": "Load report generation configuration",
    "analytics_config.message.load_data_export_configuration": "Load data export configuration",
    "analytics_config.message.load_alert_system_configuratio": "Load alert system configuration",
    "analytics_config.message.apply_environment_specific_con": "Apply environment-specific configuration overrides",
    "analytics_config.message.get_machine_learning_model_spe": "Get machine learning model specific configuration",
    "analytics_config.message.convert_configuration_to_dicti": "Convert configuration to dictionary",
    "analytics_config.message.get_global_analytics_configura": "Get global analytics configuration instance",
    "analytics_config.message.set_global_analytics_configura": "Set global analytics configuration instance",
    "analytics_real_time_dashboard.message.real_time_metric_data_structur": "Real-time metric data structure",
    "analytics_real_time_dashboard.message.chart_data_structure_for_dashb": "Chart data structure for dashboard",
    "analytics_real_time_dashboard.message.collect_all_real_time_metrics": "Collect all real-time metrics",
    "analytics_real_time_dashboard.message.get_real_time_user_metrics": "Get real-time user metrics",
    "analytics_real_time_dashboard.message.get_real_time_appointment_metr": "Get real-time appointment metrics",
    "analytics_real_time_dashboard.message.get_real_time_evaluation_metri": "Get real-time evaluation metrics",
    "analytics_real_time_dashboard.message.get_real_time_system_metrics": "Get real-time system metrics",
    "analytics_real_time_dashboard.message.get_real_time_engagement_metri": "Get real-time engagement metrics",
    "analytics_real_time_dashboard.message.avg_session_duration_sec": "Avg Session Duration (sec)",
    "analytics_real_time_dashboard.message.get_real_time_performance_metr": "Get real-time performance metrics",
    "analytics_real_time_dashboard.message.avg_response_time_ms": "Avg Response Time (ms)",
    "analytics_real_time_dashboard.message.broadcast_metrics_to_connected": "Broadcast metrics to connected WebSocket clients",
    "analytics_real_time_dashboard.message.generate_chart_data_for_specif": "Generate chart data for specified metric",
    "analytics_real_time_dashboard.message.generate_line_chart_data": "Generate line chart data",
    "analytics_real_time_dashboard.message.24h": "24h",
    "analytics_real_time_dashboard.message.over_time": " Over Time",
    "analytics_real_time_dashboard.message.bordercolor": "borderColor",
    "analytics_real_time_dashboard.message.backgroundcolor": "backgroundColor",
    "analytics_real_time_dashboard.message.rgb_75_192_192": "rgb(75, 192, 192)",
    "analytics_real_time_dashboard.message.rgba_75_192_192_0_2": "rgba(75, 192, 192, 0.2)",
    "analytics_real_time_dashboard.message.beginatzero": "beginAtZero",
    "analytics_real_time_dashboard.message.generate_bar_chart_data": "Generate bar chart data",
    "analytics_real_time_dashboard.message.h_00": "%H:00",
    "analytics_real_time_dashboard.message.by_hour": " by Hour",
    "analytics_real_time_dashboard.message.backgroundcolor_1": "backgroundColor",
    "analytics_real_time_dashboard.message.bordercolor_1": "borderColor",
    "analytics_real_time_dashboard.message.borderwidth": "borderWidth",
    "analytics_real_time_dashboard.message.rgba_54_162_235_0_5": "rgba(54, 162, 235, 0.5)",
    "analytics_real_time_dashboard.message.rgba_54_162_235_1": "rgba(54, 162, 235, 1)",
    "analytics_real_time_dashboard.message.generate_pie_chart_data": "Generate pie chart data",
    "analytics_real_time_dashboard.message.rgba_255_99_132_0_5": "rgba(255, 99, 132, 0.5)",
    "analytics_real_time_dashboard.message.rgba_54_162_235_0_5_1": "rgba(54, 162, 235, 0.5)",
    "analytics_real_time_dashboard.message.rgba_255_205_86_0_5": "rgba(255, 205, 86, 0.5)",
    "analytics_real_time_dashboard.message.rgba_75_192_192_0_5": "rgba(75, 192, 192, 0.5)",
    "analytics_real_time_dashboard.message.distribution": " Distribution",
    "analytics_real_time_dashboard.message.backgroundcolor_2": "backgroundColor",
    "analytics_real_time_dashboard.message.borderwidth_1": "borderWidth",
    "analytics_real_time_dashboard.message.generate_gauge_chart_data": "Generate gauge chart data",
    "analytics_real_time_dashboard.message.gauge": " Gauge",
    "analytics_real_time_dashboard.message.calculate_percentage_change_be": "Calculate percentage change between current and previous values",
    "analytics_real_time_dashboard.message.add_client_to_active_connectio": "Add client to active connections",
    "analytics_real_time_dashboard.message.get_dashboard_summary_with_key": "Get dashboard summary with key metrics",
    "analytics_real_time_dashboard.message.handle_client_connection_to_an": "Handle client connection to analytics namespace",
    "analytics_real_time_dashboard.message.connected_to_real_time_analyti": "Connected to real-time analytics",
    "analytics_real_time_dashboard.message.handle_chart_data_request": "Handle chart data request",
    "analytics_performance_metrics.message.performance_metrics_and_kpi_t": "\nPerformance Metrics and KPI Tracking Service\n\nComprehensive performance monitoring and KPI tracking system\nfor business metrics, operational metrics, and system performance.\n",
    "analytics_performance_metrics.message.trend_direction_for_metrics": "Trend direction for metrics",
    "analytics_performance_metrics.message.kpi_metric_data_structure": "KPI metric data structure",
    "analytics_performance_metrics.message.performance_dashboard_data_str": "Performance dashboard data structure",
    "analytics_performance_metrics.message.metric_alert_data_structure": "Metric alert data structure",
    "analytics_performance_metrics.message.service_for_tracking_and": "\n    Service for tracking and analyzing performance metrics and KPIs\n    across all aspects of the BDC platform.\n    ",
    "analytics_performance_metrics.message.get_comprehensive_performance": "Get comprehensive performance dashboard",
    "analytics_performance_metrics.message.get_business_related_kpi_metri": "Get business-related KPI metrics",
    "analytics_performance_metrics.message.get_operational_kpi_metrics": "Get operational KPI metrics",
    "analytics_performance_metrics.message.get_technical_performance_metr": "Get technical performance metrics",
    "analytics_performance_metrics.message.get_user_experience_metrics": "Get user experience metrics",
    "analytics_performance_metrics.message.support_ticket_resolution_time": "Support Ticket Resolution Time",
    "analytics_performance_metrics.message.create_a_kpi_metric_with_calcu": "Create a KPI metric with calculated trend and status",
    "analytics_performance_metrics.message.support_ticket_resolution_time_1": "Support Ticket Resolution Time",
    "analytics_performance_metrics.message.calculate_overall_health_score": "Calculate overall health score based on all metrics",
    "analytics_performance_metrics.message.generate_alerts_based_on_metri": "Generate alerts based on metric thresholds",
    "analytics_performance_metrics.message.is_critically": " is critically ",
    "analytics_performance_metrics.message.is_approaching_threshold": " is approaching threshold: ",
    "analytics_performance_metrics.message.get_historical_data_for_a_spec": "Get historical data for a specific metric",
    "analytics_performance_metrics.message.y_m_d": "%Y-%m-%d",
    "analytics_performance_metrics.message.get_comparative_analysis_of_me": "Get comparative analysis of metrics over time",
    "analytics_performance_metrics.message.generate_insights_based_on_met": "Generate insights based on metric analysis",
    "analytics_performance_metrics.message.shows_steady_improvement_with": " shows steady improvement with low volatility",
    "analytics_performance_metrics.message.shows_high_volatility_inves": " shows high volatility - investigate underlying causes",
    "analytics_performance_metrics.message.is_currently_below_historical": " is currently below historical average - attention needed",
    "analytics_performance_metrics.message.export_comprehensive_metrics_r": "Export comprehensive metrics report",
    "analytics_performance_metrics.message.generate_recommendations_based": "Generate recommendations based on dashboard data",
    "analytics_performance_metrics.message.critical_metrics": " critical metrics",
    "analytics_performance_metrics.message.at_risk_metrics_closely": " at-risk metrics closely",
    "analytics_performance_metrics.message.overall_system_health_is_below": "Overall system health is below acceptable levels - implement improvement plan",
    "analytics_performance_metrics.message.escalate_to_engineering_tea": " - escalate to engineering team",
    "analytics_performance_metrics.message.review_business_processes": " - review business processes",
    "analytics_performance_metrics.message.optimize_workflows": " - optimize workflows",
    "analytics___init__.message.advanced_analytics_system_for": "\nAdvanced Analytics System for BDC Project\n\nThis module provides comprehensive analytics capabilities including:\n- Real-time analytics dashboard\n- Predictive analytics using ML models\n- User behavior analytics and cohort analysis\n- Performance metrics and KPI tracking\n- Custom report generation\n- Data export and visualization tools\n",
    "analytics_user_behavior_analytics.message.user_behavior_analytics_servi": "\nUser Behavior Analytics Service\n\nComprehensive user behavior analysis including cohort analysis,\nuser journey mapping, engagement metrics, and behavioral patterns.\n",
    "analytics_user_behavior_analytics.message.cohort_analysis_data_structure": "Cohort analysis data structure",
    "analytics_user_behavior_analytics.message.user_journey_data_structure": "User journey data structure",
    "analytics_user_behavior_analytics.message.comprehensive_user_behavi": "\n    Comprehensive user behavior analytics service providing insights\n    into user patterns, cohort analysis, and engagement metrics.\n    ",
    "analytics_user_behavior_analytics.message.perform_cohort_analysis_for_us": "Perform cohort analysis for user retention",
    "analytics_user_behavior_analytics.message.y_m": "%Y-%m",
    "analytics_user_behavior_analytics.message.y_w_u": "%Y-W%U",
    "analytics_user_behavior_analytics.message.y_m_1": "%Y-%m",
    "analytics_user_behavior_analytics.message.analyze_user_journeys_and_iden": "Analyze user journeys and identify patterns",
    "analytics_user_behavior_analytics.message.calculate_comprehensive_engage": "Calculate comprehensive engagement metrics for users",
    "analytics_user_behavior_analytics.message.segment_users_based_on_behavio": "Segment users based on behavioral patterns",
    "analytics_user_behavior_analytics.message.analyze_feature_usage_patterns": "Analyze feature usage patterns across the platform",
    "analytics_user_behavior_analytics.message.30_days": "30 days",
    "analytics_user_behavior_analytics.message.calculate_correlation_between": "Calculate correlation between feature usage",
    "analytics_user_behavior_analytics.message.identify_common_usage_patterns": "Identify common usage patterns and behaviors",
    "analytics_user_behavior_analytics.message.analyze_temporal_usage_pattern": "Analyze temporal usage patterns",
    "analytics_user_behavior_analytics.message.analyze_common_action_sequence": "Analyze common action sequences",
    "analytics_user_behavior_analytics.message.analyze_session_duration_and_f": "Analyze session duration and frequency patterns",
    "analytics_user_behavior_analytics.message.generate_recommendations_for_b": "Generate recommendations for behavioral segments",
    "analytics_user_behavior_analytics.message.leverage_for_referrals_and_tes": "Leverage for referrals and testimonials",
    "analytics_user_behavior_analytics.message.provide_exclusive_features_and": "Provide exclusive features and early access",
    "analytics_user_behavior_analytics.message.gather_feedback_for_improvemen": "Gather feedback for improvements",
    "analytics_user_behavior_analytics.message.provide_quick_wins_and_early_v": "Provide quick wins and early value",
    "analytics_user_behavior_analytics.message.send_welcome_series_emails": "Send welcome series emails",
    "analytics_user_behavior_analytics.message.gather_feedback_on_pain_points": "Gather feedback on pain points",
    "analytics_user_behavior_analytics.message.no_specific_recommendations_av": "No specific recommendations available",
    "analytics_user_behavior_analytics.message.calculate_revenue_per_user_for": "Calculate revenue per user for a cohort period (simulated)",
    "analytics_user_behavior_analytics.message.get_comprehensive_behavior_sum": "Get comprehensive behavior summary for a specific user",
    "analytics_user_behavior_analytics.message.not_found": " not found",
    "analytics_data_export.message.data_export_request_configurat": "Data export request configuration",
    "analytics_data_export.message.seaborn_v0_8": "seaborn-v0_8",
    "analytics_data_export.message.export_data_based_on_request_c": "Export data based on request configuration",
    "analytics_data_export.message.apply_filters_to_database_quer": "Apply filters to database query",
    "analytics_data_export.message.convert_database_records_to_pa": "Convert database records to pandas DataFrame",
    "analytics_data_export.message.optimize_dataframe_data_types": "Optimize DataFrame data types for memory efficiency",
    "analytics_data_export.message.int64": "int64",
    "analytics_data_export.message.float64": "float64",
    "analytics_data_export.message.int64_1": "int64",
    "analytics_data_export.message.clean_dataframe_by_handling_mi": "Clean DataFrame by handling missing values and duplicates",
    "analytics_data_export.message.int64_2": "int64",
    "analytics_data_export.message.float64_1": "float64",
    "analytics_data_export.message.datetime64_ns": "datetime64[ns]",
    "analytics_data_export.message.calculate_data_quality_score_f": "Calculate data quality score for each row",
    "analytics_data_export.message.add_metadata_columns_to_datafr": "Add metadata columns to DataFrame",
    "analytics_data_export.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "analytics_data_export.message.d7e4bc": "#D7E4BC",
    "analytics_data_export.message.parquet": "*.parquet",
    "analytics_data_export.message.xml_version_1_0_encoding": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
    "analytics_data_export.message.export": "<export>\n",
    "analytics_data_export.message.metadata": "  <metadata>\n",
    "analytics_data_export.message.export_id": "    <export_id>",
    "analytics_data_export.message.export_id_1": "</export_id>\n",
    "analytics_data_export.message.timestamp": "    <timestamp>",
    "analytics_data_export.message.timestamp_1": "</timestamp>\n",
    "analytics_data_export.message.metadata_1": "  </metadata>\n",
    "analytics_data_export.message.": "  <",
    "analytics_data_export.message.xml": "<?xml",
    "analytics_data_export.message._1": "  </",
    "analytics_data_export.message.export_1": "</export>\n",
    "analytics_data_export.message.calculate_total_record_count_a": "Calculate total record count across all DataFrames",
    "analytics_data_export.message.generate_metadata_for_export": "Generate metadata for export",
    "analytics_data_export.message.create_visualization_based_on": "Create visualization based on configuration",
    "analytics_data_export.message.no_data_available_for_visualiz": "No data available for visualization: ",
    "analytics_data_export.message.y_m_d_h_m_s_1": "%Y%m%d_%H%M%S",
    "analytics_data_export.message.create_line_chart_visualizatio": "Create line chart visualization",
    "analytics_data_export.message.create_bar_chart_visualization": "Create bar chart visualization",
    "analytics_data_export.message.create_pie_chart_visualization": "Create pie chart visualization",
    "analytics_data_export.message.create_scatter_plot_visualizat": "Create scatter plot visualization",
    "analytics_data_export.message.heatmap_requires_numeric_data": "Heatmap requires numeric data",
    "analytics_data_export.message.create_box_plot_visualization": "Create box plot visualization",
    "analytics_data_export.message.create_area_chart_visualizatio": "Create area chart visualization",
    "analytics_data_export.message.create_gauge_chart_visualizati": "Create gauge chart visualization",
    "analytics_data_export.message.gauge_number_delta": "gauge+number+delta",
    "analytics_report_generator.message.generated_report_data_structur": "Generated report data structure",
    "analytics_report_generator.message.seaborn_v0_8": "seaborn-v0_8",
    "analytics_report_generator.message.initialize_default_report_temp": "Initialize default report templates",
    "analytics_report_generator.message.high_level_overview_of_key_met": "High-level overview of key metrics and KPIs",
    "analytics_report_generator.message.detailed_operational_metrics_a": "Detailed operational metrics and performance analysis",
    "analytics_report_generator.message.comprehensive_user_behavior_an": "Comprehensive user behavior and engagement analysis",
    "analytics_report_generator.message.technical_and_business_perform": "Technical and business performance metrics",
    "analytics_report_generator.message.generate_a_report_based_on_tem": "Generate a report based on template and parameters",
    "analytics_report_generator.message.not_found": " not found",
    "analytics_report_generator.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "analytics_report_generator.message.generate_executive_summary_rep": "Generate executive summary report content",
    "analytics_report_generator.message.generate_operational_analytics": "Generate operational analytics report content",
    "analytics_report_generator.message.generate_user_behavior_analysi": "Generate user behavior analysis report content",
    "analytics_report_generator.message.generate_performance_metrics_r": "Generate performance metrics report content",
    "analytics_report_generator.message.generate_custom_report_based_o": "Generate custom report based on template configuration",
    "analytics_report_generator.message.generate_content_for_a_specifi": "Generate content for a specific report section",
    "analytics_report_generator.message.no_content_available_for_this": "No content available for this section",
    "analytics_report_generator.message.generate_automated_insights_ba": "Generate automated insights based on report content",
    "analytics_report_generator.message.strong_user_engagement_indicat": "Strong user engagement indicates healthy platform adoption",
    "analytics_report_generator.message.low_user_engagement_suggests_n": "Low user engagement suggests need for improved user experience",
    "analytics_report_generator.message.excellent_appointment_completi": "Excellent appointment completion rate demonstrates effective scheduling",
    "analytics_report_generator.message.low_appointment_completion_rat": "Low appointment completion rate may indicate scheduling or reminder issues",
    "analytics_report_generator.message.high_no_show_rate_requires_int": "High no-show rate requires intervention and improved reminder systems",
    "analytics_report_generator.message.low_resource_utilization_sugge": "Low resource utilization suggests capacity optimization opportunities",
    "analytics_report_generator.message.high_percentage_of_at_risk_use": "High percentage of at-risk users requires retention intervention",
    "analytics_report_generator.message.regular_monitoring_of_these_me": "Regular monitoring of these metrics is recommended for optimal performance",
    "analytics_report_generator.message.generate_html_version_of_repor": "Generate HTML version of report",
    "analytics_report_generator.message.doctype_html": "\n        <!DOCTYPE html>\n        <html>\n        <head>\n            <title>{{ title }}</title>\n            <style>\n                body { font-family: Arial, sans-serif; margin: 40px; }\n                .header { background-color: #f5f5f5; padding: 20px; border-radius: 5px; }\n                .section { margin: 20px 0; }\n                .metric { display: inline-block; margin: 10px; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }\n                .insights { background-color: #e7f3ff; padding: 15px; border-radius: 5px; }\n                table { border-collapse: collapse; width: 100%; }\n                th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n                th { background-color: #f2f2f2; }\n            </style>\n        </head>\n        <body>\n            <div class=\"header\">\n                <h1>{{ title }}</h1>\n                <p>Generated: {{ generated_at }}</p>\n            </div>\n            \n            <div class=\"section\">\n                <h2>Report Content</h2>\n                {{ content_html | safe }}\n            </div>\n            \n            {% if insights %}\n            <div class=\"insights\">\n                <h3>Key Insights</h3>\n                <ul>\n                {% for insight in insights %}\n                    <li>{{ insight }}</li>\n                {% endfor %}\n                </ul>\n            </div>\n            {% endif %}\n        </body>\n        </html>\n        ",
    "analytics_report_generator.message.y_m_d_h_m_s_1": "%Y-%m-%d %H:%M:%S",
    "analytics_report_generator.message.h3": "<h3>",
    "analytics_report_generator.message.h3_1": "</h3>",
    "analytics_report_generator.message.table": "<table>",
    "analytics_report_generator.message.tr_td_strong": "<tr><td><strong>",
    "analytics_report_generator.message.strong_td_td": "</strong></td><td>",
    "analytics_report_generator.message.td_tr": "</td></tr>",
    "analytics_report_generator.message.table_1": "</table>",
    "analytics_report_generator.message.ul": "<ul>",
    "analytics_report_generator.message.li": "<li>",
    "analytics_report_generator.message.li_1": "</li>",
    "analytics_report_generator.message.ul_1": "</ul>",
    "analytics_report_generator.message.p": "<p>",
    "analytics_report_generator.message.p_1": "</p>",
    "analytics_report_generator.message.calculate_growth_metrics_for_t": "Calculate growth metrics for the period",
    "analytics_report_generator.message.generate_charts_for_executive": "Generate charts for executive summary (base64 encoded)",
    "analytics_report_generator.message.base64_encoded_chart_data": "base64_encoded_chart_data",
    "analytics_report_generator.message.base64_encoded_chart_data_1": "base64_encoded_chart_data",
    "analytics_report_generator.message.base64_encoded_chart_data_2": "base64_encoded_chart_data",
    "analytics_report_generator.message.calculate_score_distribution_f": "Calculate score distribution for evaluations",
    "analytics_report_generator.message.0_20": "0-20",
    "analytics_report_generator.message.21_40": "21-40",
    "analytics_report_generator.message.41_60": "41-60",
    "analytics_report_generator.message.61_80": "61-80",
    "analytics_report_generator.message.81_100": "81-100",
    "analytics_report_generator.message.0_20_1": "0-20",
    "analytics_report_generator.message.21_40_1": "21-40",
    "analytics_report_generator.message.41_60_1": "41-60",
    "analytics_report_generator.message.61_80_1": "61-80",
    "analytics_report_generator.message.81_100_1": "81-100",
    "analytics_report_generator.message.calculate_operational_efficien": "Calculate operational efficiency metrics",
    "analytics_report_generator.message.y_m_d": "%Y-%m-%d",
    "analytics_report_generator.message.y_m_d_1": "%Y-%m-%d",
    "analytics_report_generator.message.y_m_d_2": "%Y-%m-%d",
    "analytics_report_generator.message.generate_user_journey_insights": "Generate user journey insights",
    "analytics_report_generator.message.average_time_to_first_appointm": "Average time to first appointment is 5.2 days",
    "analytics_report_generator.message.mobile_users_show_15_better_e": "Mobile users show 15% better engagement than desktop users",
    "analytics_report_generator.message.2024_01_01": "2024-01-01",
    "analytics_report_generator.message.2024_01_02": "2024-01-02",
    "analytics_report_generator.message.2024_01_03": "2024-01-03",
    "analytics_report_generator.message.2024_01_01_1": "2024-01-01",
    "analytics_report_generator.message.2024_01_02_1": "2024-01-02",
    "analytics_report_generator.message.2024_01_03_1": "2024-01-03",
    "analytics_report_generator.message.overall_system_health_requires": "Overall system health requires immediate attention",
    "analytics_report_generator.message.critical_alerts_immediately": " critical alerts immediately",
    "analytics_report_generator.message.implement_automated_monitoring": "Implement automated monitoring for early issue detection",
    "analytics_report_generator.message.regular_performance_optimizati": "Regular performance optimization reviews recommended",
    "analytics_report_generator.message.generate_overview_section_cont": "Generate overview section content",
    "analytics_report_generator.message.this_report_provides_comprehen": "This report provides comprehensive analytics for the specified period",
    "analytics_report_generator.message.data_analysis_based_on_system": "Data analysis based on system metrics and user interactions",
    "analytics_report_generator.message.all_active_users_and_system_co": "All active users and system components included",
    "analytics_report_generator.message.generate_key_metrics_section_c": "Generate key metrics section content",
    "analytics_report_generator.message.detailed_definitions_available": "Detailed definitions available in appendix",
    "analytics_report_generator.message.generate_trends_section_conten": "Generate trends section content",
    "analytics_report_generator.message.historical_data_analysis_shows": "Historical data analysis shows positive growth trajectory",
    "analytics_report_generator.message.weekly_and_monthly_patterns_id": "Weekly and monthly patterns identified",
    "analytics_report_generator.message.forecasted_growth_based_on_cur": "Forecasted growth based on current trends",
    "analytics_report_generator.message.generate_alerts_section_conten": "Generate alerts section content",
    "analytics_report_generator.message.generate_recommendations_secti": "Generate recommendations section content",
    "analytics_report_generator.message.generate_csv_version_of_report": "Generate CSV version of report",
    "analytics_report_generator.message.timestamp": ",timestamp",
    "analytics_report_generator.message.text": ",text",
    "analytics_examples.message.analytics_system_usage_exampl": "\nAnalytics System Usage Examples\n\nComprehensive examples demonstrating how to use all components\nof the advanced analytics system.\n",
    "analytics_examples.message.examples_demonstrating_va": "\n    Examples demonstrating various analytics capabilities\n    ",
    "analytics_examples.message.example_basic_setup_and_initi": "Example: Basic setup and initialization",
    "analytics_examples.message.basic_setup_example": "=== Basic Setup Example ===",
    "analytics_examples.message.analytics_orchestrator_start": "✓ Analytics orchestrator started",
    "analytics_examples.message.system_health_score": "✓ System health score: ",
    "analytics_examples.message.active_workflows": "✓ Active workflows: ",
    "analytics_examples.message.recent_insights": "✓ Recent insights: ",
    "analytics_examples.message.example_real_time_dashboard_u": "Example: Real-time dashboard usage",
    "analytics_examples.message.real_time_dashboard_examp": "\n=== Real-time Dashboard Example ===",
    "analytics_examples.message.active_users": "✓ Active users: ",
    "analytics_examples.message.new_registrations": "✓ New registrations: ",
    "analytics_examples.message.total_users": "✓ Total users: ",
    "analytics_examples.message.24h": "24h",
    "analytics_examples.message.generated": "✓ Generated ",
    "analytics_examples.message.chart_with": " chart with ",
    "analytics_examples.message.data_points": " data points",
    "analytics_examples.message.dashboard_tracking": "✓ Dashboard tracking ",
    "analytics_examples.message.metrics": " metrics",
    "analytics_examples.message.active_connections": "✓ Active connections: ",
    "analytics_examples.message.example_predictive_analytics": "Example: Predictive analytics usage",
    "analytics_examples.message.predictive_analytics_exam": "\n=== Predictive Analytics Example ===",
    "analytics_examples.message.predictive_models_initialize": "✓ Predictive models initialized",
    "analytics_examples.message.": "  - ",
    "analytics_examples.message.accuracy": ": Accuracy ",
    "analytics_examples.message.f1": ", F1 ",
    "analytics_examples.message.appointment_no_show_predicti": "✓ Appointment no-show prediction: ",
    "analytics_examples.message.confidence": " (confidence: ",
    "analytics_examples.message.user_churn_prediction": "✓ User churn prediction: ",
    "analytics_examples.message.probability": " probability",
    "analytics_examples.message.generated_capacity_forecasts": "✓ Generated capacity forecasts for ",
    "analytics_examples.message.days": " days",
    "analytics_examples.message.note_prediction_examples_skip": "Note: Prediction examples skipped due to insufficient data: ",
    "analytics_examples.message.example_user_behavior_analyti": "Example: User behavior analytics",
    "analytics_examples.message.user_behavior_analytics_e": "\n=== User Behavior Analytics Example ===",
    "analytics_examples.message.analyzed": "✓ Analyzed ",
    "analytics_examples.message.cohorts": " cohorts",
    "analytics_examples.message.average_retention_rate": "✓ Average retention rate: ",
    "analytics_examples.message.note_cohort_analysis_skipped": "Note: Cohort analysis skipped: ",
    "analytics_examples.message.analyzed_1": "✓ Analyzed ",
    "analytics_examples.message.users": " users",
    "analytics_examples.message.average_engagement_score": "✓ Average engagement score: ",
    "analytics_examples.message.high_engagement_users": "✓ High engagement users: ",
    "analytics_examples.message.note_engagement_analysis_skip": "Note: Engagement analysis skipped: ",
    "analytics_examples.message.segmenting_users_by_behavior": "Segmenting users by behavior...",
    "analytics_examples.message._1": "  - ",
    "analytics_examples.message.users_1": " users (",
    "analytics_examples.message.engagement": " engagement)",
    "analytics_examples.message.note_user_segmentation_skippe": "Note: User segmentation skipped: ",
    "analytics_examples.message.top_features_by_adoption": "Top Features by Adoption:",
    "analytics_examples.message._2": "  - ",
    "analytics_examples.message.adoption": "% adoption",
    "analytics_examples.message.note_feature_usage_analysis_s": "Note: Feature usage analysis skipped: ",
    "analytics_examples.message.example_performance_metrics_a": "Example: Performance metrics and KPI tracking",
    "analytics_examples.message.performance_metrics_examp": "\n=== Performance Metrics Example ===",
    "analytics_examples.message.overall_health_score": "✓ Overall health score: ",
    "analytics_examples.message.business_metrics": "✓ Business metrics: ",
    "analytics_examples.message.operational_metrics": "✓ Operational metrics: ",
    "analytics_examples.message.technical_metrics": "✓ Technical metrics: ",
    "analytics_examples.message.user_experience_metrics": "✓ User experience metrics: ",
    "analytics_examples.message._3": "  - ",
    "analytics_examples.message.1f": "+.1f",
    "analytics_examples.message.active_alerts": "⚠️  Active alerts: ",
    "analytics_examples.message._4": "  - ",
    "analytics_examples.message.no_active_alerts": "✓ No active alerts",
    "analytics_examples.message.retrieved": "✓ Retrieved ",
    "analytics_examples.message.historical_data_points": " historical data points",
    "analytics_examples.message.note_history_retrieval_skippe": "Note: History retrieval skipped: ",
    "analytics_examples.message.example_custom_report_generat": "Example: Custom report generation",
    "analytics_examples.message.report_generation_example": "\n=== Report Generation Example ===",
    "analytics_examples.message.generating_executive_summary_r": "Generating executive summary report...",
    "analytics_examples.message.generated_report": "✓ Generated report: ",
    "analytics_examples.message.report_id": "✓ Report ID: ",
    "analytics_examples.message.generated_insights": "✓ Generated insights: ",
    "analytics_examples.message._5": "  - ",
    "analytics_examples.message.note_report_generation_skippe": "Note: Report generation skipped: ",
    "analytics_examples.message.generating_operational_analyti": "Generating operational analytics report...",
    "analytics_examples.message.generated_operational_report": "✓ Generated operational report: ",
    "analytics_examples.message.note_operational_report_skipp": "Note: Operational report skipped: ",
    "analytics_examples.message.example_data_export_and_visua": "Example: Data export and visualization",
    "analytics_examples.message.data_export_example": "\n=== Data Export Example ===",
    "analytics_examples.message.creating_data_export_request": "Creating data export request...",
    "analytics_examples.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "analytics_examples.message.file_size": "✓ File size: ",
    "analytics_examples.message.kb": " KB",
    "analytics_examples.message.record_count": "✓ Record count: ",
    "analytics_examples.message.file_path": "✓ File path: ",
    "analytics_examples.message.note_data_export_skipped": "Note: Data export skipped: ",
    "analytics_examples.message.note_visualization_creation_s": "Note: Visualization creation skipped: ",
    "analytics_examples.message.workflow_orchestration_ex": "\n=== Workflow Orchestration Example ===",
    "analytics_examples.message.executing_daily_insights_workf": "Executing daily insights workflow...",
    "analytics_examples.message.workflow_execution": "✓ Workflow execution: ",
    "analytics_examples.message.status": "✓ Status: ",
    "analytics_examples.message.components_executed": "✓ Components executed: ",
    "analytics_examples.message.generated_1": "✓ Generated ",
    "analytics_examples.message.insights": " insights",
    "analytics_examples.message.note_workflow_execution_skipp": "Note: Workflow execution skipped: ",
    "analytics_examples.message.custom_analytics_workflow_for": "Custom analytics workflow for demonstration",
    "analytics_examples.message.components": "✓ Components: ",
    "analytics_examples.message.note_custom_workflow_creation": "Note: Custom workflow creation skipped: ",
    "analytics_examples.message.workflow_active": "✓ Workflow active: ",
    "analytics_examples.message.currently_running": "✓ Currently running: ",
    "analytics_examples.message.total_executions": "✓ Total executions: ",
    "analytics_examples.message.note_workflow_status_check_sk": "Note: Workflow status check skipped: ",
    "analytics_examples.message.example_insights_and_alerts": "Example: Insights and alerts",
    "analytics_examples.message.insights_and_alerts_examp": "\n=== Insights and Alerts Example ===",
    "analytics_examples.message.retrieved_1": "✓ Retrieved ",
    "analytics_examples.message.insights_1": " insights",
    "analytics_examples.message._6": "  - ",
    "analytics_examples.message.insights_2": " insights",
    "analytics_examples.message._7": "  - ",
    "analytics_examples.message.note_insights_retrieval_skipp": "Note: Insights retrieval skipped: ",
    "analytics_examples.message.critical_insights_found": "⚠️  Critical insights found: ",
    "analytics_examples.message._8": "  - ",
    "analytics_examples.message.recommendations": "    Recommendations: ",
    "analytics_examples.message.no_critical_insights_found": "✓ No critical insights found",
    "analytics_examples.message.note_critical_insights_check": "Note: Critical insights check skipped: ",
    "analytics_examples.message.example_advanced_configuratio": "Example: Advanced configuration usage",
    "analytics_examples.message.advanced_configuration_ex": "\n=== Advanced Configuration Example ===",
    "analytics_examples.message.environment": "✓ Environment: ",
    "analytics_examples.message.predictive_auto_retrain": "✓ Predictive auto-retrain: ",
    "analytics_examples.message.security_anonymization": "✓ Security anonymization: ",
    "analytics_examples.message.appointment_no_show_model_conf": "Appointment No-show Model Config:",
    "analytics_examples.message.estimators": "  - Estimators: ",
    "analytics_examples.message.max_depth": "  - Max depth: ",
    "analytics_examples.message.class_weight": "  - Class weight: ",
    "analytics_examples.message.width": "  - Width: ",
    "analytics_examples.message.height": "  - Height: ",
    "analytics_examples.message.theme": "  - Theme: ",
    "analytics_examples.message.configuration_sections": "✓ Configuration sections: ",
    "analytics_examples.message.system_remains_operational": "✓ System remains operational (health: ",
    "analytics_examples.message.run_all_examples_in_sequence": "Run all examples in sequence",
    "analytics_examples.message.running_analytics_system_exa": "🚀 Running Analytics System Examples",
    "analytics_examples.message._9": " - ",
    "analytics_examples.message.create_flask_routes_for_analyt": "Create Flask routes for analytics",
    "analytics_examples.message.example_celery_tasks_for_analy": "Example Celery tasks for analytics",
    "analytics_examples.message.create_celery_tasks_for_schedu": "Create Celery tasks for scheduled analytics",
    "analytics_examples.message.daily_insights_generation_task": "Daily insights generation task",
    "analytics_examples.message.analytics_daily_insights": "analytics.daily_insights",
    "analytics_examples.message.weekly_reports_generation_task": "Weekly reports generation task",
    "analytics_examples.message.analytics_weekly_reports": "analytics.weekly_reports",
    "analytics_examples.message.analytics_model_retraining": "analytics.model_retraining",
    "analytics_analytics_orchestrator.message.analytics_orchestrator_centr": "\nAnalytics Orchestrator\n\nCentral orchestration service that coordinates all analytics components,\nmanages workflows, and provides unified access to analytics capabilities.\n",
    "analytics_analytics_orchestrator.message.types_of_analytics_workflows": "Types of analytics workflows",
    "analytics_analytics_orchestrator.message.central_orchestration_ser": "\n    Central orchestration service for all analytics components.\n    Manages workflows, coordinates services, and provides unified access.\n    ",
    "analytics_analytics_orchestrator.message.initialize_default_analytics_w": "Initialize default analytics workflows",
    "analytics_analytics_orchestrator.message.continuous_real_time_monitorin": "Continuous real-time monitoring and alerting",
    "analytics_analytics_orchestrator.message.daily_analytics_insights_and_r": "Daily analytics insights and recommendations",
    "analytics_analytics_orchestrator.message.comprehensive_weekly_analytics": "Comprehensive weekly analytics reports",
    "analytics_analytics_orchestrator.message.monthly_comprehensive_analytic": "Monthly comprehensive analytics and strategic insights",
    "analytics_analytics_orchestrator.message.start_the_analytics_orchestrat": "Start the analytics orchestrator",
    "analytics_analytics_orchestrator.message.initialize_all_analytics_servi": "Initialize all analytics services",
    "analytics_analytics_orchestrator.message.all_analytics_services_initial": "All analytics services initialized",
    "analytics_analytics_orchestrator.message.start_scheduled_workflow_execu": "Start scheduled workflow execution",
    "analytics_analytics_orchestrator.message.run_continuous_real_time_monit": "Run continuous real-time monitoring",
    "analytics_analytics_orchestrator.message.execute_a_specific_workflow": "Execute a specific workflow",
    "analytics_analytics_orchestrator.message.not_found": " not found",
    "analytics_analytics_orchestrator.message.y_m_d_h_m_s": "%Y%m%d_%H%M%S",
    "analytics_analytics_orchestrator.message.execute_a_specific_analytics_c": "Execute a specific analytics component",
    "analytics_analytics_orchestrator.message.execute_dashboard_analytics_co": "Execute dashboard analytics component",
    "analytics_analytics_orchestrator.message.execute_performance_metrics_co": "Execute performance metrics component",
    "analytics_analytics_orchestrator.message.execute_user_behavior_analytic": "Execute user behavior analytics component",
    "analytics_analytics_orchestrator.message.execute_predictive_analytics_c": "Execute predictive analytics component",
    "analytics_analytics_orchestrator.message.generated_for_high_risk_users": "Generated for high-risk users",
    "analytics_analytics_orchestrator.message.generated_for_next_7_days": "Generated for next 7 days",
    "analytics_analytics_orchestrator.message.generated_for_upcoming_appoint": "Generated for upcoming appointments",
    "analytics_analytics_orchestrator.message.execute_report_generation_comp": "Execute report generation component",
    "analytics_analytics_orchestrator.message.execute_data_export_component": "Execute data export component",
    "analytics_analytics_orchestrator.message.y_m_d_h_m_s_1": "%Y%m%d_%H%M%S",
    "analytics_analytics_orchestrator.message.y_m_d": "%Y%m%d",
    "analytics_analytics_orchestrator.message.system_health_below_threshold": "System Health Below Threshold",
    "analytics_analytics_orchestrator.message.overall_system_health_score_is": "Overall system health score is ",
    "analytics_analytics_orchestrator.message.below_acceptable_threshold": "%, below acceptable threshold",
    "analytics_analytics_orchestrator.message.review_critical_alerts_and_add": "Review critical alerts and address immediately",
    "analytics_analytics_orchestrator.message.consider_scaling_resources_if": "Consider scaling resources if needed",
    "analytics_analytics_orchestrator.message.y_m_d_1": "%Y%m%d",
    "analytics_analytics_orchestrator.message.high_user_engagement_detected": "High User Engagement Detected",
    "analytics_analytics_orchestrator.message.average_user_engagement_score": "Average user engagement score is ",
    "analytics_analytics_orchestrator.message.indicating_strong_platform": "%, indicating strong platform adoption",
    "analytics_analytics_orchestrator.message.leverage_high_engagement_for_u": "Leverage high engagement for user testimonials",
    "analytics_analytics_orchestrator.message.plan_capacity_for_continued_gr": "Plan capacity for continued growth",
    "analytics_analytics_orchestrator.message.y_m_d_h_m": "%Y%m%d_%H%M",
    "analytics_analytics_orchestrator.message.critical_performance_issues_de": "Critical Performance Issues Detected",
    "analytics_analytics_orchestrator.message.critical_performance_alerts_r": " critical performance alerts require immediate attention",
    "analytics_analytics_orchestrator.message.address_critical_alerts_immedi": "Address critical alerts immediately",
    "analytics_analytics_orchestrator.message.escalate_to_technical_team": "Escalate to technical team",
    "analytics_analytics_orchestrator.message.monitor_system_closely_for_res": "Monitor system closely for resolution",
    "analytics_analytics_orchestrator.message.generate_user_behavior_insight": "Generate user behavior insights",
    "analytics_analytics_orchestrator.message.at_risk": "at risk",
    "analytics_analytics_orchestrator.message.y_m_d_2": "%Y%m%d",
    "analytics_analytics_orchestrator.message.high_number_of_at_risk_users": "High Number of At-Risk Users",
    "analytics_analytics_orchestrator.message.users_identified_as_at_risk_f": " users identified as at-risk for churn",
    "analytics_analytics_orchestrator.message.implement_targeted_re_engageme": "Implement targeted re-engagement campaigns",
    "analytics_analytics_orchestrator.message.provide_personalized_support_t": "Provide personalized support to at-risk users",
    "analytics_analytics_orchestrator.message.analyze_common_factors_contrib": "Analyze common factors contributing to risk",
    "analytics_analytics_orchestrator.message.check_for_system_wide_alerts": "Check for system-wide alerts",
    "analytics_analytics_orchestrator.message.y_m_d_h_m_s_2": "%Y%m%d_%H%M%S",
    "analytics_analytics_orchestrator.message.critical_alerts_require_immed": " critical alerts require immediate attention",
    "analytics_analytics_orchestrator.message.address_critical_issues_immedi": "Address critical issues immediately",
    "analytics_analytics_orchestrator.message.run_a_continuous_workflow": "Run a continuous workflow",
    "analytics_analytics_orchestrator.message.schedule_a_workflow_for_period": "Schedule a workflow for periodic execution",
    "analytics_analytics_orchestrator.message.get_comprehensive_analytics_su": "Get comprehensive analytics summary",
    "analytics_analytics_orchestrator.message.create_a_custom_analytics_work": "Create a custom analytics workflow",
    "analytics_analytics_orchestrator.message.get_status_of_a_specific_workf": "Get status of a specific workflow",
    "analytics_analytics_orchestrator.message.not_found_1": " not found",
    "analytics_analytics_orchestrator.message.get_analytics_insights_with_op": "Get analytics insights with optional filtering",
    "analytics_predictive_analytics.message.predictive_analytics_service": "\nPredictive Analytics Service\n\nMachine learning-based predictive analytics for the BDC project.\nIncludes models for user behavior prediction, appointment no-shows,\nevaluation outcomes, and performance forecasting.\n",
    "analytics_predictive_analytics.message.predictive_analytics_serv": "\n    Predictive analytics service using machine learning models\n    for various business predictions and forecasts.\n    ",
    "analytics_predictive_analytics.message.initialize_and_train_all_predi": "Initialize and train all predictive models",
    "analytics_predictive_analytics.message.train_model_to_predict_appoint": "Train model to predict appointment no-shows",
    "analytics_predictive_analytics.message.insufficient_data_for_appointm": "Insufficient data for appointment no-show model",
    "analytics_predictive_analytics.message.appointment_no_show_model_trai": "Appointment no-show model trained. Accuracy: ",
    "analytics_predictive_analytics.message.train_model_to_predict_user_ch": "Train model to predict user churn",
    "analytics_predictive_analytics.message.insufficient_data_for_user_chu": "Insufficient data for user churn model",
    "analytics_predictive_analytics.message.user_churn_model_trained_r_s": "User churn model trained. R² Score: ",
    "analytics_predictive_analytics.message.train_model_to_predict_evaluat": "Train model to predict evaluation outcomes",
    "analytics_predictive_analytics.message.insufficient_data_for_evaluati": "Insufficient data for evaluation outcome model",
    "analytics_predictive_analytics.message.evaluation_outcome_model_train": "Evaluation outcome model trained. R² Score: ",
    "analytics_predictive_analytics.message.train_model_to_predict_user_en": "Train model to predict user engagement levels",
    "analytics_predictive_analytics.message.insufficient_data_for_engageme": "Insufficient data for engagement prediction model",
    "analytics_predictive_analytics.message.engagement_prediction_model_tr": "Engagement prediction model trained. Accuracy: ",
    "analytics_predictive_analytics.message.train_model_to_forecast_system": "Train model to forecast system capacity needs",
    "analytics_predictive_analytics.message.insufficient_data_for_capacity": "Insufficient data for capacity forecasting model",
    "analytics_predictive_analytics.message.active_users_lag1": "active_users_lag1",
    "analytics_predictive_analytics.message.active_users_lag7": "active_users_lag7",
    "analytics_predictive_analytics.message.capacity_forecasting_model_tra": "Capacity forecasting model trained. R² Score: ",
    "analytics_predictive_analytics.message.predict_if_an_appointment_will": "Predict if an appointment will be a no-show",
    "analytics_predictive_analytics.message.not_found_please_train_the_m": " not found. Please train the model first.",
    "analytics_predictive_analytics.message.no_show": "no-show",
    "analytics_predictive_analytics.message.will_attend": "will attend",
    "analytics_predictive_analytics.message.with": " with ",
    "analytics_predictive_analytics.message.confidence": " confidence",
    "analytics_predictive_analytics.message.predict_if_a_user_will_churn": "Predict if a user will churn",
    "analytics_predictive_analytics.message.not_found_please_train_the_m_1": " not found. Please train the model first.",
    "analytics_predictive_analytics.message.predict_evaluation_outcome_sco": "Predict evaluation outcome score",
    "analytics_predictive_analytics.message.not_found_please_train_the_m_2": " not found. Please train the model first.",
    "analytics_predictive_analytics.message.forecast_capacity_needs_for_th": "Forecast capacity needs for the next N days",
    "analytics_predictive_analytics.message.not_found_please_train_the_m_3": " not found. Please train the model first.",
    "analytics_predictive_analytics.message.active_users_for": " active users for ",
    "analytics_predictive_analytics.message.y_m_d": "%Y-%m-%d",
    "analytics_predictive_analytics.message.get_performance_metrics_for_al": "Get performance metrics for all models",
    "analytics_predictive_analytics.message.retrain_models_if_they_re_outd": "Retrain models if they're outdated",
    "analytics_predictive_analytics.message.prepare_appointment_data_for_m": "Prepare appointment data for model training",
    "analytics_predictive_analytics.message.prepare_user_churn_data_for_mo": "Prepare user churn data for model training",
    "analytics_predictive_analytics.message.prepare_evaluation_data_for_mo": "Prepare evaluation data for model training",
    "analytics_predictive_analytics.message.prepare_engagement_data_for_mo": "Prepare engagement data for model training",
    "analytics_predictive_analytics.message.prepare_capacity_data_for_mode": "Prepare capacity data for model training",
    "analytics_predictive_analytics.message.active_users_lag1_1": "active_users_lag1",
    "analytics_predictive_analytics.message.active_users_lag7_1": "active_users_lag7",
    "analytics_predictive_analytics.message.extract_features_for_appointme": "Extract features for appointment prediction",
    "analytics_predictive_analytics.message.extract_features_for_user_chur": "Extract features for user churn prediction",
    "analytics_predictive_analytics.message.extract_features_for_evaluatio": "Extract features for evaluation outcome prediction",
    "analytics_predictive_analytics.message.extract_features_for_capacity": "Extract features for capacity forecasting",
    "analytics_predictive_analytics.message.active_users_lag1_2": "active_users_lag1",
    "analytics_predictive_analytics.message.active_users_lag7_2": "active_users_lag7",
    "interfaces_notification_repository_interface.message.interface_for_notification_rep_2": "Interface for notification repository operations.",
    "interfaces_notification_repository_interface.message.interface_for_notification_rep_3": "Interface for notification repository.",
    "interfaces_notification_repository_interface.message.create_a_new_notification_1": "Create a new notification.",
    "interfaces_notification_repository_interface.message.find_notification_by_id_1": "Find notification by ID.",
    "interfaces_notification_repository_interface.message.get_user_notifications_with_fi_1": "Get user notifications with filtering options.",
    "interfaces_notification_repository_interface.message.mark_notification_as_read_1": "Mark notification as read.",
    "interfaces_notification_repository_interface.message.mark_all_user_notifications_as_1": "Mark all user notifications as read.",
    "interfaces_notification_repository_interface.message.get_count_of_unread_notificati_1": "Get count of unread notifications.",
    "interfaces_document_repository_interface.message.interface_for_document_reposit_1": "Interface for document repository.",
    "interfaces_document_repository_interface.message.find_document_by_id": "Find document by ID.",
    "interfaces_document_repository_interface.message.find_documents_by_beneficiary_1": "Find documents by beneficiary ID.",
    "interfaces_document_repository_interface.message.find_documents_by_uploader_id_1": "Find documents by uploader ID.",
    "interfaces_document_repository_interface.message.find_all_documents_with_option": "Find all documents with optional pagination.",
    "interfaces_document_repository_interface.message.create_a_new_document": "Create a new document.",
    "interfaces_document_repository_interface.message.create_a_new_document_permissi": "Create a new document permission.",
    "interfaces_document_repository_interface.message.find_permission_by_document_an": "Find permission by document and user.",
    "interfaces_document_repository_interface.message.find_permission_by_document_an_1": "Find permission by document and role.",
    "interfaces_document_repository_interface.message.find_all_permissions_for_a_doc": "Find all permissions for a document.",
    "interfaces_document_repository_interface.message.find_all_permissions_for_a_use": "Find all permissions for a user.",
    "interfaces_calendar_service_interface.message.interface_for_calendar_service": "Interface for calendar service operations.",
    "interfaces_calendar_service_interface.message.get_appointment_by_id": "Get appointment by ID.\n        \n        Args:\n            appointment_id: Appointment ID\n            \n        Returns:\n            Appointment data or None if not found\n        ",
    "interfaces_calendar_service_interface.message.get_appointments_for_a_user": "Get appointments for a user.\n        \n        Args:\n            user_id: User ID\n            \n        Returns:\n            List of appointment data\n        ",
    "interfaces_calendar_service_interface.message.get_appointments_for_a_benefic": "Get appointments for a beneficiary.\n        \n        Args:\n            beneficiary_id: Beneficiary ID\n            \n        Returns:\n            List of appointment data\n        ",
    "interfaces_calendar_service_interface.message.get_appointments_in_date_range": "Get appointments in date range.\n        \n        Args:\n            start_date: Start date\n            end_date: End date\n            user_id: Optional user ID filter\n            \n        Returns:\n            List of appointment data\n        ",
    "interfaces_calendar_service_interface.message.get_upcoming_appointments": "Get upcoming appointments.\n        \n        Args:\n            user_id: Optional user ID filter\n            limit: Maximum number of results\n            \n        Returns:\n            List of upcoming appointment data\n        ",
    "interfaces_calendar_service_interface.message.get_conflicting_appointments": "Get conflicting appointments.\n        \n        Args:\n            user_id: User ID\n            start_time: Start time\n            end_time: End time\n            exclude_appointment_id: Appointment ID to exclude\n            \n        Returns:\n            List of conflicting appointment data\n        ",
    "interfaces_calendar_service_interface.message.get_user_s_schedule_for_a_spec": "Get user's schedule for a specific date.\n        \n        Args:\n            user_id: User ID\n            date: Date to get schedule for\n            \n        Returns:\n            List of appointment data for the date\n        ",
    "interfaces_beneficiary_repository_interface.message.interface_for_beneficiary_repo": "Interface for beneficiary repository operations.",
    "interfaces_beneficiary_repository_interface.message.interface_for_beneficiary_repo_1": "Interface for beneficiary repository operations.",
    "interfaces_beneficiary_repository_interface.message.create_a_new_beneficiary": "Create a new beneficiary.",
    "interfaces_beneficiary_repository_interface.message.get_a_beneficiary_by_id": "Get a beneficiary by ID.",
    "interfaces_beneficiary_repository_interface.message.get_a_beneficiary_by_user_id": "Get a beneficiary by user ID.",
    "interfaces_beneficiary_repository_interface.message.get_beneficiaries_by_trainer_i": "Get beneficiaries by trainer ID with pagination.",
    "interfaces_beneficiary_repository_interface.message.get_all_beneficiaries_with_opt": "Get all beneficiaries with optional filters and pagination.",
    "interfaces_beneficiary_repository_interface.message.count_beneficiaries_for_a_user": "Count beneficiaries for a user.",
    "interfaces_beneficiary_repository_interface.message.get_a_beneficiary_by_phone_num": "Get a beneficiary by phone number.",
    "interfaces_beneficiary_repository_interface.message.get_beneficiaries_by_caregiver": "Get beneficiaries by caregiver ID.",
    "interfaces_user_service_interface.message.interface_for_user_service_ope": "Interface for User service operations.",
    "interfaces_user_service_interface.message.interface_defining_operations": "Interface defining operations for User service.",
    "interfaces_user_service_interface.message.create_a_new_user_1": "Create a new user.",
    "interfaces_user_service_interface.message.get_a_user_by_id": "Get a user by ID.",
    "interfaces_user_service_interface.message.get_a_user_by_email": "Get a user by email.",
    "interfaces_user_service_interface.message.verify_a_password_against_its": "Verify a password against its hash.",
    "interfaces_user_service_interface.message.authenticate_a_user_by_email_a": "Authenticate a user by email and password.",
    "interfaces_document_service_interface.message.interface_for_document_service": "Interface for document service.",
    "interfaces_document_service_interface.message.get_all_permissions_f": "\n        Get all permissions for a document.\n        \n        Args:\n            document_id (int): Document ID\n            \n        Returns:\n            list: List of permissions\n        ",
    "interfaces_document_service_interface.message.get_all_documents_a_u": "\n        Get all documents a user has access to.\n        \n        Args:\n            user_id (int): User ID\n            \n        Returns:\n            list: List of documents with permissions\n        ",
    "interfaces___init__.message.service_interfaces_for_depende": "Service interfaces for dependency injection and testing.",
    "interfaces_notification_service_interface.message.interface_for_notification_ser": "Interface for Notification service operations.",
    "interfaces_notification_service_interface.message.interface_defining_operations": "Interface defining operations for Notification service.",
    "interfaces_notification_service_interface.message.create_a_new_notification_for": "Create a new notification for a user.",
    "interfaces_notification_service_interface.message.create_notifications_for_multi": "Create notifications for multiple users.",
    "interfaces_notification_service_interface.message.create_notification_for_all_us": "Create notification for all users with a specific role.",
    "interfaces_notification_service_interface.message.create_notification_for_all_us_1": "Create notification for all users in a tenant.",
    "interfaces_notification_service_interface.message.mark_a_notification_as_read": "Mark a notification as read.",
    "interfaces_notification_service_interface.message.mark_all_notifications_as_read": "Mark all notifications as read for a user.",
    "interfaces_notification_service_interface.message.get_notifications_for_a_user": "Get notifications for a user.",
    "interfaces_notification_service_interface.message.get_count_of_unread_notificati": "Get count of unread notifications for a user.",
    "interfaces_program_service_interface.message.interface_for_program_service": "Interface for program service operations.",
    "interfaces_program_service_interface.message.get_program_by_id": "Get program by ID.\n        \n        Args:\n            program_id: Program ID\n            \n        Returns:\n            Program data or None if not found\n        ",
    "interfaces_program_service_interface.message.get_all_programs": "Get all programs.\n        \n        Args:\n            limit: Maximum number of results\n            offset: Number of results to skip\n            \n        Returns:\n            List of program data\n        ",
    "interfaces_program_service_interface.message.get_programs_by_trainer": "Get programs by trainer.\n        \n        Args:\n            trainer_id: Trainer ID\n            \n        Returns:\n            List of program data\n        ",
    "interfaces_program_service_interface.message.get_programs_by_tenant": "Get programs by tenant.\n        \n        Args:\n            tenant_id: Tenant ID\n            \n        Returns:\n            List of program data\n        ",
    "interfaces_program_service_interface.message.get_all_active_programs": "Get all active programs.\n        \n        Returns:\n            List of active program data\n        ",
    "interfaces_program_service_interface.message.get_programs_by_category": "Get programs by category.\n        \n        Args:\n            category: Program category\n            \n        Returns:\n            List of program data\n        ",
    "interfaces_program_service_interface.message.get_program_enrollments": "Get program enrollments.\n        \n        Args:\n            program_id: Program ID\n            \n        Returns:\n            List of enrollment data\n        ",
    "interfaces_program_service_interface.message.get_program_statistics": "Get program statistics.\n        \n        Args:\n            program_id: Program ID\n            \n        Returns:\n            Dictionary with program statistics\n        ",
    "interfaces_auth_service_interface.message.interface_for_authentication_s": "Interface for authentication service.",
    "interfaces_auth_service_interface.message.get_user_by_email_add": "\n        Get user by email address.\n        \n        Args:\n            email: User's email\n            \n        Returns:\n            User instance or None if not found\n        ",
    "interfaces_auth_service_interface.message.get_user_by_id": "\n        Get user by ID.\n        \n        Args:\n            user_id: User's ID\n            \n        Returns:\n            User instance or None if not found\n        ",
    "interfaces_auth_service_interface.message.verify_user_s_passwor": "\n        Verify user's password.\n        \n        Args:\n            user: User instance\n            password: Password to verify\n            \n        Returns:\n            True if password is correct, False otherwise\n        ",
    "interfaces_appointment_service_interface.message.appointment_service_interface": "Appointment service interface module.",
    "interfaces_appointment_service_interface.message.sync_appointment_to_g": "\n        Sync appointment to Google Calendar.\n        \n        Args:\n            appointment_id: The appointment ID\n            user_id: The requesting user's ID\n            \n        Returns:\n            Dict containing sync status and event ID\n        ",
    "interfaces_sms_service_interface.message.interface_for_sms_service_oper": "Interface for SMS service operations.",
    "interfaces_sms_service_interface.message.get_the_status_of_an": "\n        Get the status of an SMS message.\n        \n        Returns:\n            Message status details or None\n        ",
    "interfaces_sms_service_interface.message.get_sms_history_with": "\n        Get SMS history with filters.\n        \n        Returns:\n            List of SMS messages\n        ",
    "interfaces_sms_service_interface.message.get_sms_statistics": "\n        Get SMS statistics.\n        \n        Returns:\n            Statistics including counts, costs, etc.\n        ",
    "interfaces_sms_service_interface.message.create_an_sms_campaig": "\n        Create an SMS campaign.\n        \n        Returns:\n            Campaign ID or None\n        ",
    "interfaces_sms_service_interface.message.get_campaign_status_a": "\n        Get campaign status and statistics.\n        \n        Returns:\n            Campaign details or None\n        ",
    "interfaces_appointment_repository_interface.message.interface_for_appointment_repo": "Interface for appointment repository operations.",
    "interfaces_appointment_repository_interface.message.interface_for_appointment_repo_1": "Interface for appointment repository operations.",
    "interfaces_appointment_repository_interface.message.find_appointment_by_id": "Find appointment by ID.",
    "interfaces_appointment_repository_interface.message.find_all_appointments_matching": "Find all appointments matching filters with pagination.",
    "interfaces_appointment_repository_interface.message.create_a_new_appointment": "Create a new appointment.",
    "interfaces_evaluation_service_interface.message.interface_for_evaluation_servi": "Interface for evaluation service operations.",
    "interfaces_evaluation_service_interface.message.get_evaluation_by_id": "Get evaluation by ID.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            \n        Returns:\n            Evaluation data or None if not found\n        ",
    "interfaces_evaluation_service_interface.message.get_evaluations_for_a_benefici": "Get evaluations for a beneficiary.\n        \n        Args:\n            beneficiary_id: Beneficiary ID\n            \n        Returns:\n            List of evaluation data\n        ",
    "interfaces_evaluation_service_interface.message.get_evaluations_by_trainer": "Get evaluations by trainer.\n        \n        Args:\n            trainer_id: Trainer ID\n            \n        Returns:\n            List of evaluation data\n        ",
    "interfaces_evaluation_service_interface.message.get_evaluations_by_status": "Get evaluations by status.\n        \n        Args:\n            status: Evaluation status\n            \n        Returns:\n            List of evaluation data\n        ",
    "interfaces_evaluation_service_interface.message.get_evaluation_statistics": "Get evaluation statistics.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            \n        Returns:\n            Dictionary with evaluation statistics\n        ",
    "interfaces_user_repository_interface.message.interface_for_user_repository": "Interface for user repository.",
    "interfaces_user_repository_interface.message.find_user_by_id": "Find user by ID.",
    "interfaces_user_repository_interface.message.find_user_by_email": "Find user by email.",
    "interfaces_user_repository_interface.message.find_user_by_username": "Find user by username.",
    "interfaces_user_repository_interface.message.find_all_users_with_optional_p": "Find all users with optional pagination.",
    "interfaces_user_repository_interface.message.find_users_by_role": "Find users by role.",
    "interfaces_user_repository_interface.message.create_a_new_user": "Create a new user.",
    "interfaces_user_repository_interface.message.check_if_user_exists_by_email": "Check if user exists by email.",
    "interfaces_user_repository_interface.message.check_if_user_exists_by_userna": "Check if user exists by username."
  },
  "template": {
    "realtime.template.emitted_to_user": "Emitted  to user ",
    "realtime.template.failed_to_emit_to_user": "Failed to emit  to user : ",
    "realtime.template.emitted_to_tenant": "Emitted  to tenant ",
    "realtime.template.failed_to_emit_to_tenant": "Failed to emit  to tenant : ",
    "realtime.template.emitted_to_role": "Emitted  to role ",
    "realtime.template.failed_to_emit_to_role": "Failed to emit  to role : ",
    "realtime.template.broadcast_to_all_clients": "Broadcast  to all clients",
    "realtime.template.failed_to_broadcast": "Failed to broadcast : ",
    "__init__.template.i18n_middleware_initializati": "❌ I18n middleware initialization failed: ",
    "__init__.template.performance_optimization_ini": "❌ Performance optimization initialization failed: ",
    "__init__.template.registered_blueprint": "✅ Registered blueprint: ",
    "__init__.template.failed_to_register_blueprint": "❌ Failed to register blueprint : ",
    "__init__.template.memory_baseline_setup_failed": "❌ Memory baseline setup failed: ",
    "__init__.template.database_indexes_optimized": "✅ Database indexes optimized: ",
    "__init__.template.database_optimization_failed": "❌ Database optimization failed: ",
    "__init__.template.slow_request_detected_s": "Slow request detected:  (s) -  ",
    "__init__.template.request_error_during_teardown": "Request error during teardown: ",
    "__init__.template.404_error": "404 error: ",
    "__init__.template.500_error": "500 error: ",
    "__init__.template.high_memory_usage_detected_dur": "High memory usage detected during error: ",
    "__init__.template.rate_limit_exceeded": "Rate limit exceeded: ",
    "__init__.template.database_optimization_comple": "✅ Database optimization completed: ",
    "__init__.template.database_optimization_failed_1": "❌ Database optimization failed: ",
    "__init__.template.cache_clearing_failed": "❌ Cache clearing failed: ",
    "__init__.template.system_health": "\n🏥 SYSTEM HEALTH: ",
    "__init__.template.database_performance": "\n📊 DATABASE PERFORMANCE:",
    "__init__.template.total_queries": "   - Total queries: ",
    "__init__.template.average_query_time_s": "   - Average query time: s",
    "__init__.template.slow_queries": "   - Slow queries: ",
    "__init__.template.cache_performance": "\n🎯 CACHE PERFORMANCE:",
    "__init__.template.hit_rate": "   - Hit rate: %",
    "__init__.template.total_requests": "   - Total requests: ",
    "__init__.template.memory_usage": "\n💾 MEMORY USAGE:",
    "__init__.template.current_mb": "   - Current:  MB",
    "__init__.template.peak_mb": "   - Peak:  MB",
    "__init__.template.percentage": "   - Percentage: %",
    "__init__.template.recommendations": "\n💡 RECOMMENDATIONS:",
    "__init__.template.": "   - [] : ",
    "__init__.template.performance_report_generatio": "❌ Performance report generation failed: ",
    "__init__.template.bdc_application_created_succ": "🎉 BDC Application created successfully with comprehensive performance optimization!",
    "__init__.template.performance_monitoring_avail": "📈 Performance monitoring available at: /api/performance/dashboard",
    "__init__.template.health_check_available_at": "🏥 Health check available at: /health",
    "container.template.service_is_not_registered": "Service '' is not registered",
    "cli.template.running_migration": "Running migration: ",
    "cli.template.": "⏭️  ",
    "cli.template.error": "Error: ",
    "cli.template.migration_summary_successful": "Migration summary:  successful,  skipped,  failed",
    "cli.template._1": "  - ",
    "cli.template._2": "  ⚠️  ",
    "cli.template._3": "  ❌ ",
    "cli.template._4": "  ⚠️  ",
    "cli.template._5": "  - ",
    "cli.template.registered": "✅  - registered",
    "cli.template.not_registered": "❌  - not registered",
    "cli.template.error_1": "❌  - error: ",
    "socketio_basic.template.received_message": "Received message: ",
    "websocket_notifications.template.token_decode_error": "Token decode error: ",
    "websocket_notifications.template.user_connected_to_notificatio": "User  connected to notifications",
    "websocket_notifications.template.connection_error": "Connection error: ",
    "websocket_notifications.template.mark_read_error": "Mark read error: ",
    "websocket_notifications.template.token_decode_error_1": "Token decode error: ",
    "websocket_notifications.template.user_connected_to_messages": "User  connected to messages",
    "websocket_notifications.template.connection_error_1": "Connection error: ",
    "websocket_notifications.template.join_thread_error": "Join thread error: ",
    "websocket_notifications.template.leave_thread_error": "Leave thread error: ",
    "websocket_notifications.template.sent_you_a_message": "  sent you a message",
    "websocket_notifications.template.message_sent_error": "Message sent error: ",
    "websocket_notifications.template.typing_indicator_error": "Typing indicator error: ",
    "websocket_notifications.template.mark_message_read_error": "Mark message read error: ",
    "socketio_events.template.user_connected_successfull": "User  () connected successfully",
    "socketio_events.template.valid_token_but_user_not_foun": "Valid token but user  not found",
    "socketio_events.template.connection_authentication_erro": "Connection authentication error: ",
    "socketio_events.template.user_disconnected": "User  disconnected",
    "socketio_events.template.error_during_disconnect_cleanu": "Error during disconnect cleanup: ",
    "socketio_events.template.anonymous_client_disconnected": "Anonymous client  disconnected",
    "socketio_events.template.invalid_token_in_message": "Invalid token in message: ",
    "socketio_events.template.user_tried_to_send_message_to": "User  tried to send message to thread they're not in: ",
    "socketio_events.template.failed_to_create_notification": "Failed to create notification: ",
    "socketio_events.template.error_sending_message": "Error sending message: ",
    "socketio_events.template.user": "User ",
    "socketio_events.template.error_in_typing_indicator": "Error in typing indicator: ",
    "socketio_events.template.marked_notifications_as_read": "Marked  notifications as read for user ",
    "socketio_events.template.marked_thread_as_read_for_use": "Marked thread  as read for user ",
    "socketio_events.template.error_marking_items_as_read": "Error marking items as read: ",
    "socketio_events.template.sent_notification_to_user": "Sent notification to user ",
    "socketio_events.template.failed_to_send_notification_to": "Failed to send notification to user : ",
    "socketio_events.template.user_not_connected_notificat": "User  not connected, notification not sent",
    "socketio_events.template.broadcast_to_tenant": "Broadcast  to tenant ",
    "socketio_events.template.failed_to_broadcast_to_tenant": "Failed to broadcast  to tenant : ",
    "socketio_events.template.broadcast_to_role": "Broadcast  to role ",
    "socketio_events.template.failed_to_broadcast_to_role": "Failed to broadcast  to role : ",
    "socketio_events.template.failed_to_broadcast_system_not": "Failed to broadcast system notification: ",
    "middleware_alert_middleware.template.critical_endpoint_accessed": "Critical endpoint accessed: ",
    "middleware_alert_middleware.template.endpoint_took_s_to_respond": "Endpoint  took s to respond",
    "middleware_alert_middleware.template.endpoint_took_s_to_respond_1": "Endpoint  took s to respond",
    "middleware_alert_middleware.template.request_teardown_error": "Request teardown error: ",
    "middleware_alert_middleware.template.500_error_on": "500 error on : ",
    "middleware_alert_middleware.template.potential_security_probe": "Potential security probe: ",
    "middleware_alert_middleware.template.403_error_on_unauthorized_ac": "403 error on : Unauthorized access attempt",
    "middleware_alert_middleware.template.unhandled_exception": "Unhandled exception: ",
    "middleware_alert_middleware.template.high_error_rate_on_request": "High error rate on : / requests failed",
    "middleware_alert_middleware.template.exception_in": "Exception in ",
    "middleware_alert_middleware.template.function_raised_exception": "Function  raised exception: ",
    "middleware_alert_middleware.template.critical_performance_alert": "Critical Performance Alert: ",
    "middleware_alert_middleware.template.function_took_s_to_execute": "Function  took s to execute",
    "middleware_alert_middleware.template.performance_warning": "Performance Warning: ",
    "middleware_alert_middleware.template.function_took_s_to_execute_1": "Function  took s to execute",
    "middleware_alert_middleware.template.function_exception_with_perfor": "Function Exception with Performance Data: ",
    "middleware_alert_middleware.template.function_failed_after_s": "Function  failed after s: ",
    "middleware_cors_middleware.template.handling_options_preflight_req": "Handling OPTIONS preflight request: ",
    "middleware_cors_middleware.template.origin": "Origin: ",
    "middleware_cors_middleware.template.access_control_request_method": "Access-Control-Request-Method: ",
    "middleware_cors_middleware.template.access_control_request_headers": "Access-Control-Request-Headers: ",
    "middleware_cors_middleware.template.response_status_for": "Response status:  for  ",
    "middleware_cors_middleware.template.origin_not_in_allowed_origins": "Origin  not in allowed origins: ",
    "middleware_i18n_middleware.template.detected_language_for_ip": "Detected language:  for IP: ",
    "middleware_i18n_middleware.template.error_in_i18n_middleware_befor": "Error in i18n middleware before_request: ",
    "middleware_i18n_middleware.template.error_in_i18n_middleware_after": "Error in i18n middleware after_request: ",
    "middleware_i18n_middleware.template.error_detecting_user_language": "Error detecting user language: ",
    "middleware_i18n_middleware.template.error_getting_explicit_languag": "Error getting explicit language: ",
    "middleware_i18n_middleware.template.error_getting_user_preference": "Error getting user preference language: ",
    "middleware_i18n_middleware.template.error_getting_browser_language": "Error getting browser language: ",
    "middleware_i18n_middleware.template.error_getting_geolocation_lang": "Error getting geolocation language: ",
    "middleware_i18n_middleware.template.error_in_content_localization": "Error in content localization middleware: ",
    "middleware_i18n_middleware.template.error_localizing_data": "Error localizing data: ",
    "middleware_i18n_middleware.template.error_translating_field": "Error translating field: ",
    "middleware_i18n_middleware.template.error_in_rtl_support_middlewar": "Error in RTL support middleware: ",
    "middleware_rate_limiter.template.invalid_rate_limit_format_u": "Invalid RATE_LIMIT format: . Using default: 60,1",
    "middleware_rate_limiter.template.rate_limit_exceeded_for_req": "Rate limit exceeded for .  requests in  seconds.",
    "middleware_rate_limiter.template.you_have_exceeded_the_rate_lim": "You have exceeded the rate limit of  requests per  seconds.",
    "middleware_cache_middleware.template.etag": "etag::",
    "middleware_cache_middleware.template.etag_1": "etag::",
    "middleware_cache_middleware.template.error_generating_etag": "Error generating ETag: ",
    "middleware_cache_middleware.template.max_age": "max-age=",
    "middleware_ip_whitelist.template.invalid_ip_or_network_in_white": "Invalid IP or network in whitelist: ",
    "middleware_ip_whitelist.template.invalid_ip_address": "Invalid IP address: ",
    "middleware_security_middleware.template.slow_request_took_s": "Slow request:   took s",
    "middleware_security_middleware.template.script_window_location_href": "<script>window.location.href=\"\";</script>",
    "middleware_security_middleware.template.rate_limit": "rate_limit::",
    "middleware_security_middleware.template.rate_limiting_error": "Rate limiting error: ",
    "middleware_security_middleware.template.suspicious_request_detected": "Suspicious request detected:  - ",
    "middleware_security_middleware.template.suspicious_header_detected": "Suspicious header detected:  - : ",
    "middleware_tracing_middleware.template.request_started": "Request started:  []",
    "middleware_tracing_middleware.template.error_in_tracing_before_reques": "Error in tracing before_request: ",
    "middleware_tracing_middleware.template.request_completed_s": "Request completed:   [] [] (s)",
    "middleware_tracing_middleware.template.error_in_tracing_after_request": "Error in tracing after_request: ",
    "middleware_tracing_middleware.template.error_in_tracing_teardown_requ": "Error in tracing teardown_request: ",
    "middleware_tracing_middleware.template.032x": "032x",
    "middleware_tracing_middleware.template.error_adding_tracing_headers": "Error adding tracing headers: ",
    "middleware_tracing_middleware.template.http_request_header": "http.request.header.",
    "middleware_tracing_middleware.template.http_response_header": "http.response.header.",
    "middleware_tracing_middleware.template.http": "HTTP ",
    "middleware_tracing_middleware.template.error_updating_span_with_respo": "Error updating span with response: ",
    "middleware_tracing_middleware.template.could_not_set_user_context": "Could not set user context: ",
    "middleware_tracing_middleware.template.error_recording_request_metric": "Error recording request metrics: ",
    "middleware_tracing_middleware.template.http_1": "HTTP ",
    "middleware_tracing_middleware.template.http_2": "HTTP ",
    "middleware_performance_middleware.template.slow_request_s": "Slow request:  (s)",
    "middleware_auth_middleware.template.access_denied_required_roles": "Access denied. Required roles: ",
    "middleware_auth_middleware.template.permission_denied_required": "Permission denied. Required: ",
    "validation_validators.template.email_domain_is_not_allowed": "Email domain '' is not allowed",
    "validation_validators.template.email_domain_is_not_allowed_1": "Email domain '' is not allowed",
    "validation_validators.template.password_must_be_at_least_cha": "Password must be at least  characters long",
    "validation_validators.template.password_must_not_exceed_char": "Password must not exceed  characters",
    "validation_validators.template.url_scheme_must_be_one_of": "URL scheme must be one of: ",
    "validation_validators.template.domain_is_not_allowed": "Domain '' is not allowed",
    "validation_validators.template.domain_is_blocked": "Domain '' is blocked",
    "validation_validators.template.file_type_is_not_allowed": "File type '.' is not allowed",
    "validation_validators.template.mime_type_is_not_allowed": "MIME type '' is not allowed",
    "validation_validators.template.file_size_exceeds_maximum_allo": "File size exceeds maximum allowed size of MB",
    "validation_validators.template.file_appears_to_be_which_is": "File appears to be , which is not allowed",
    "validation_validators.template.json_structure_exceeds_maximum": "JSON structure exceeds maximum depth of ",
    "validation_validators.template.json_data_exceeds_maximum_size": "JSON data exceeds maximum size of  bytes",
    "validation_validators.template.invalid_json_data_type": "Invalid JSON data type: ",
    "validation_validators.template.date_must_be_after": "Date must be after ",
    "validation_validators.template.date_must_be_before": "Date must be before ",
    "validation_example_usage.template.you_do_not_have_access_to_bene": "You do not have access to beneficiary ",
    "validation_example_usage.template.currency_must_be_one_of": "Currency must be one of: ",
    "validation_validation_middleware.template.incoming_request": "Incoming request:  ",
    "validation_validation_middleware.template.validation_error": "Validation error: ",
    "validation_validation_middleware.template.bad_request": "Bad request: ",
    "validation_validation_middleware.template.no_data_provided": "No  data provided",
    "validation_validation_middleware.template.sql_injection_attempt_detected": "SQL injection attempt detected: ",
    "validation_validation_middleware.template.invalid_location": "Invalid location: ",
    "validation_validation_middleware.template.error_getting_request_data": "Error getting request data: ",
    "validation_validation_middleware.template.invalid_data": "Invalid  data",
    "validation_validation_middleware.template.invalid_api_key_attempt": "Invalid API key attempt",
    "validation_validation_middleware.template.rate_limit_exceeded": "Rate limit exceeded",
    "validation_validation_middleware.template.user": "user:",
    "validation_validation_middleware.template.ip": "ip:",
    "validation_sanitizers.template.": "://",
    "validation_business_validators.template.beneficiary_must_be_at_least": "Beneficiary must be at least  years old",
    "validation_business_validators.template.beneficiary_must_be_no_more_th": "Beneficiary must be no more than  years old",
    "validation_business_validators.template.cannot_cancel_appointment": "Cannot cancel  appointment",
    "validation_business_validators.template.scores": "scores.",
    "validation_business_validators.template.scores_1": "scores.",
    "validation_business_validators.template.invalid_role_must_be_one_of": "Invalid role. Must be one of: ",
    "validation_business_validators.template.language_must_be_one_of": "Language must be one of: ",
    "validation_decorators.template.file_validation_failed": "File validation failed: ",
    "validation_decorators.template.is_required": " is required",
    "validation_decorators.template.is_required_1": " is required",
    "validation_decorators.template.business_rule_validation_faile": "Business rule validation failed: ",
    "tasks_maintenance.template.error_in_cleanup_old_notificat": "Error in cleanup_old_notifications task: ",
    "tasks_maintenance.template.error_deleting_orphaned_file": "Error deleting orphaned file : ",
    "tasks_maintenance.template.error_in_cleanup_orphaned_docu": "Error in cleanup_orphaned_documents task: ",
    "tasks_maintenance.template.error_in_cleanup_old_audit_log": "Error in cleanup_old_audit_logs task: ",
    "tasks_maintenance.template.marked_test_sessions_as_aband": "Marked  test sessions as abandoned",
    "tasks_maintenance.template.error_in_cleanup_abandoned_tes": "Error in cleanup_abandoned_test_sessions task: ",
    "tasks_maintenance.template.optimize_table": "OPTIMIZE TABLE ",
    "tasks_maintenance.template.database_optimization_complete": "Database optimization completed for ",
    "tasks_maintenance.template.error_in_optimize_database_tas": "Error in optimize_database task: ",
    "tasks_maintenance.template.storage_usage_has_exceeded_mb": "Storage usage has exceeded MB. Current usage: MB",
    "tasks_maintenance.template.storage_check_complete_mb_use": "Storage check complete: MB used,  files",
    "tasks_maintenance.template.error_in_check_storage_usage_t": "Error in check_storage_usage task: ",
    "tasks_evaluations.template.your_evaluation_is_overdue": "Your evaluation \"\" is overdue. Please complete it as soon as possible.",
    "tasks_evaluations.template.the_evaluation_for_is_ove": "The evaluation \"\" for   is overdue.",
    "tasks_evaluations.template.error_processing_overdue_evalu": "Error processing overdue evaluation : ",
    "tasks_evaluations.template.processed_overdue_evaluations": "Processed  overdue evaluations",
    "tasks_evaluations.template.error_in_check_overdue_evaluat": "Error in check_overdue_evaluations task: ",
    "tasks_evaluations.template.test_session_not_found": "Test session  not found",
    "tasks_evaluations.template.evaluation_not_found_for_sessi": "Evaluation not found for session ",
    "tasks_evaluations.template.ai_analysis_for_your_evaluatio": "AI analysis for your evaluation \"\" is ready.",
    "tasks_evaluations.template.ai_analysis_completed_for_sess": "AI analysis completed for session ",
    "tasks_evaluations.template.error_in_process_ai_analysis_t": "Error in process_ai_analysis task: ",
    "tasks_evaluations.template.evaluation_not_found": "Evaluation  not found",
    "tasks_evaluations.template.your_evaluation_is_due_in": "Your evaluation \"\" is due in  days.",
    "tasks_evaluations.template.sent_reminder_for_evaluation": "Sent reminder for evaluation ",
    "tasks_evaluations.template.error_in_send_evaluation_remin": "Error in send_evaluation_reminder task: ",
    "tasks_email.template.email_sent_to": "Email sent to ",
    "tasks_email.template.error_sending_email_to": "Error sending email to : ",
    "tasks_email.template.error_sending_bulk_email_to": "Error sending bulk email to : ",
    "tasks_email.template.bulk_email_complete_sent_f": "Bulk email complete:  sent,  failed",
    "tasks_email.template.error_in_send_bulk_email_task": "Error in send_bulk_email task: ",
    "tasks_email.template.user_not_found": "User  not found",
    "tasks_email.template.welcome_email_sent_to_user": "Welcome email sent to user ",
    "tasks_email.template.error_in_send_welcome_email_ta": "Error in send_welcome_email task: ",
    "tasks_email.template.user_not_found_1": "User  not found",
    "tasks_email.template.password_reset_email_sent_to_u": "Password reset email sent to user ",
    "tasks_email.template.error_in_send_password_reset_e": "Error in send_password_reset_email task: ",
    "tasks_email.template.test_session_not_found": "Test session  not found",
    "tasks_email.template.evaluation_complete_emails_sen": "Evaluation complete emails sent for session ",
    "tasks_email.template.error_in_send_evaluation_compl": "Error in send_evaluation_complete_email task: ",
    "tasks_reports.template.weekly_report": "Weekly Report - ",
    "tasks_reports.template.error_generating_report_for_te": "Error generating report for tenant : ",
    "tasks_reports.template.generated_weekly_reports": "Generated  weekly reports",
    "tasks_reports.template.error_in_generate_weekly_repor": "Error in generate_weekly_reports task: ",
    "tasks_reports.template.monthly_analytics": "Monthly Analytics - ",
    "tasks_reports.template.error_generating_analytics_for": "Error generating analytics for tenant : ",
    "tasks_reports.template.generated_monthly_analytics_r": "Generated  monthly analytics reports",
    "tasks_reports.template.error_in_generate_monthly_anal": "Error in generate_monthly_analytics task: ",
    "tasks_reports.template.beneficiary_not_found": "Beneficiary  not found",
    "tasks_reports.template.progress_report": "Progress Report -  ",
    "tasks_reports.template.generated_progress_report_for": "Generated progress report for beneficiary ",
    "tasks_reports.template.error_in_generate_beneficiary": "Error in generate_beneficiary_progress_report task: ",
    "tasks_notifications.template.you_have_an_appointment_in_ho": "You have an appointment in  hours with  ",
    "tasks_notifications.template.error_sending_reminder_for_app": "Error sending reminder for appointment : ",
    "tasks_notifications.template.sent_appointment_reminders": "Sent  appointment reminders",
    "tasks_notifications.template.error_in_send_appointment_remi": "Error in send_appointment_reminders task: ",
    "tasks_notifications.template.error_sending_notification_to": "Error sending notification to user : ",
    "tasks_notifications.template.sent_notifications": "Sent  notifications",
    "tasks_notifications.template.error_in_send_bulk_notificatio": "Error in send_bulk_notification task: ",
    "tasks_notifications.template.error_sending_notification_to_1": "Error sending notification to user : ",
    "tasks_notifications.template.sent_notifications_to_users": "Sent  notifications to  users",
    "tasks_notifications.template.error_in_send_role_based_notif": "Error in send_role_based_notification task: ",
    "tasks_sms.template.sms_message_not_found": "SMS message  not found",
    "tasks_sms.template.sms_message_is_not_pending": "SMS message  is not pending",
    "tasks_sms.template.error_sending_scheduled_sms": "Error sending scheduled SMS: ",
    "tasks_sms.template.error_processing_bulk_sms": "Error processing bulk SMS: ",
    "tasks_sms.template.campaign_not_found": "Campaign  not found",
    "tasks_sms.template.error_sending_campaign_sms_to": "Error sending campaign SMS to : ",
    "tasks_sms.template.error_executing_sms_campaign": "Error executing SMS campaign: ",
    "tasks_sms.template.error_updating_sms_delivery_st": "Error updating SMS delivery status: ",
    "tasks_sms.template.error_sending_appointment_remi": "Error sending appointment reminders: ",
    "tasks_sms.template.error_cleaning_up_sms_records": "Error cleaning up SMS records: ",
    "core_app_factory.template.configuration_validation_faile": "Configuration validation failed: ",
    "core_app_factory.template.failed_to_create_application": "Failed to create application: ",
    "core_app_factory.template.failed_to_configure_custom_log": "Failed to configure custom logging, using basic: ",
    "core_app_factory.template.failed_to_register_blueprints": "Failed to register blueprints: ",
    "core_app_factory.template.registered_blueprint": "Registered blueprint: ",
    "core_app_factory.template.failed_to_register_blueprint": "Failed to register blueprint : ",
    "core_app_factory.template.registered_blueprint_1": "Registered blueprint: ",
    "core_app_factory.template.failed_to_register_blueprint_1": "Failed to register blueprint : ",
    "core_app_factory.template.could_not_import_v2_api_bluepr": "Could not import v2 API blueprints: ",
    "core_app_factory.template.failed_to_register_middleware": "Failed to register middleware: ",
    "core_app_factory.template.failed_to_initialize_ip_whitel": "Failed to initialize IP whitelist middleware: ",
    "core_app_factory.template.failed_to_register_cli_command": "Failed to register CLI commands: ",
    "core_app_factory.template.request": "Request:   - ",
    "core_app_factory.template.response_bytes": "Response:  -  bytes",
    "core_app_factory.template.failed_to_initialize_database": "Failed to initialize database: ",
    "core_query_cache.template.serialization_error": "Serialization error: ",
    "core_query_cache.template.deserialization_error": "Deserialization error: ",
    "core_query_cache.template.cache_hit": "Cache hit: ",
    "core_query_cache.template.cache_get_error": "Cache get error: ",
    "core_query_cache.template.cache_set_ttl_s": "Cache set:  (TTL: s)",
    "core_query_cache.template.cache_set_error": "Cache set error: ",
    "core_query_cache.template.invalidated_cache_entries_mat": "Invalidated  cache entries matching pattern: ",
    "core_query_cache.template.cache_pattern_invalidation_err": "Cache pattern invalidation error: ",
    "core_query_cache.template.query_executed_and_cached_e": "Query executed and cached:  (execution: s)",
    "core_query_cache.template.error_storing_invalidation_tag": "Error storing invalidation tag : ",
    "core_query_cache.template.invalidated_entries_for_tag": "Invalidated  entries for tag: ",
    "core_query_cache.template.error_invalidating_by_tag": "Error invalidating by tag : ",
    "core_query_cache.template.error_getting_redis_memory_inf": "Error getting Redis memory info: ",
    "core_query_cache.template.starting_cache_warming_with_q": "Starting cache warming with  queries",
    "core_query_cache.template.warmed_cache_for": "Warmed cache for: ",
    "core_query_cache.template.error_warming_cache_for_query": "Error warming cache for query: ",
    "core_query_cache.template.cleaned_up_expired_cache_entr": "Cleaned up  expired cache entries",
    "core_query_cache.template.cache_cleanup_error": "Cache cleanup error: ",
    "core_query_cache.template.invalidated_cache_entries_for": "Invalidated  cache entries for  ",
    "core_query_cache.template.query": "query::",
    "core_query_cache.template.query_cache_initialized_with_r": "Query cache initialized with Redis: ",
    "core_query_cache.template.failed_to_initialize_query_cac": "Failed to initialize query cache: ",
    "core_config_manager.template.cannot_create_database_directo": "Cannot create database directory: ",
    "core_config_manager.template.failed_to_load_configuration": "Failed to load configuration: ",
    "core_config_manager.template.configuration_loading_failed": "Configuration loading failed: ",
    "core_config_manager.template.failed_to_import_config": "Failed to import config: ",
    "core_config_manager.template.created_upload_folder": "Created upload folder: ",
    "core_config_manager.template.failed_to_create_upload_folder": "Failed to create upload folder: ",
    "core_config_manager.template.validation_error_with": "Validation error with : ",
    "core_config_manager.template.validator_failed": "Validator  failed: ",
    "core_config_manager.template.config_error": "Config error: ",
    "core_config_manager.template.config_warning": "Config warning: ",
    "core_extension_manager.template.failed_to_initialize_database": "Failed to initialize database extensions: ",
    "core_extension_manager.template.failed_to_initialize_authentic": "Failed to initialize authentication extensions: ",
    "core_extension_manager.template.error_in_user_lookup": "Error in user lookup: ",
    "core_extension_manager.template.error_checking_token_blocklist": "Error checking token blocklist: ",
    "core_extension_manager.template.failed_to_initialize_cors_exte": "Failed to initialize CORS extensions: ",
    "core_extension_manager.template.failed_to_initialize_caching_e": "Failed to initialize caching extensions: ",
    "core_extension_manager.template.failed_to_initialize_mail_exte": "Failed to initialize mail extensions: ",
    "core_extension_manager.template.failed_to_initialize_rate_limi": "Failed to initialize rate limiting extensions: ",
    "core_extension_manager.template.failed_to_initialize_socketio": "Failed to initialize SocketIO extensions: ",
    "core_extension_manager.template.registered_extension_initializ": "Registered extension initializer: ",
    "core_extension_manager.template.extension_not_found_in_initia": "Extension  not found in initializers",
    "core_extension_manager.template.initializing_extension": "Initializing extension: ",
    "core_extension_manager.template.successfully_initialized_exten": "Successfully initialized extension: ",
    "core_extension_manager.template.failed_to_initialize_extension": "Failed to initialize extension: ",
    "core_extension_manager.template.exception_during_initializatio": "Exception during initialization of : ",
    "core_extension_manager.template.circular_dependency_detected_i": "Circular dependency detected involving ",
    "core_performance_init.template.database_performance_initial": "❌ Database performance initialization failed: ",
    "core_performance_init.template.query_cache_initialization_f": "❌ Query cache initialization failed: ",
    "core_performance_init.template.memory_optimization_initiali": "❌ Memory optimization initialization failed: ",
    "core_performance_init.template.performance_middleware_initi": "❌ Performance middleware initialization failed: ",
    "core_performance_init.template.performance_monitoring_regis": "❌ Performance monitoring registration failed: ",
    "core_performance_init.template.celery_optimization_initiali": "❌ Celery optimization initialization failed: ",
    "core_performance_init.template.performance_hooks_setup_fail": "❌ Performance hooks setup failed: ",
    "core_performance_init.template.initial_optimizations_failed": "❌ Initial optimizations failed: ",
    "core_performance_init.template.cache_warming_failed": "Cache warming failed: ",
    "core_performance_init.template.request_error": "Request error: ",
    "core_performance_init.template.request_teardown_error": "Request teardown error: ",
    "core_performance_init.template.index_optimization_result": "Index optimization result: ",
    "core_performance_init.template.index_creation_failed": "Index creation failed: ",
    "core_performance_init.template.object_pool_initialization_fai": "Object pool initialization failed: ",
    "core_performance_init.template.cache_warming_failed_1": "Cache warming failed: ",
    "core_performance_init.template.performance_report_generation": "Performance report generation failed: ",
    "core_performance_init.template.cache_hit_rate_is_low_con": "Cache hit rate is low (%), consider increasing cache TTL or warming more data",
    "core_performance_init.template.memory_usage_is_high_cons": "Memory usage is high (%), consider scaling up or optimizing memory usage",
    "core_performance_init.template.high_slow_request_rate_co": "High slow request rate (%), consider optimizing slow endpoints",
    "core_performance_init.template.recommendation_generation_fail": "Recommendation generation failed: ",
    "core_cache_manager.template.cache_get_error": "Cache get error: ",
    "core_cache_manager.template.cache_set_error": "Cache set error: ",
    "core_cache_manager.template.cache_invalidate_pattern_error": "Cache invalidate pattern error: ",
    "core_cache_manager.template.cache_clear_all_error": "Cache clear all error: ",
    "core_cache_manager.template.cache_hit_for_key": "Cache hit for key: ",
    "core_cache_manager.template.cache_miss_for_key": "Cache miss for key: ",
    "core_cache_manager.template.private_max_age": "private, max-age=",
    "core_cache_manager.template.api_response_user": "api_response:user::*",
    "core_cache_manager.template.api_response_user_1": "api_response:*:user__*",
    "core_cache_manager.template.api_response_beneficiary": "api_response:beneficiary::*",
    "core_cache_manager.template.api_response_beneficiary_1": "api_response:*:beneficiary__*",
    "core_cache_manager.template.api_response_tenant": "api_response:tenant::*",
    "core_cache_manager.template.api_response_tenant_1": "api_response:*:tenant__*",
    "core_database_manager.template.database_initialization_failed": "Database initialization failed: ",
    "core_database_manager.template.failed_to_create_tables": "Failed to create tables: ",
    "core_database_manager.template.failed_to_create_test_data": "Failed to create test data: ",
    "core_database_manager.template.created_user": "Created user: ",
    "core_database_manager.template.total_users_in_database": "Total users in database: ",
    "core_database_manager.template.failed_to_create_default_tenan": "Failed to create default tenant: ",
    "core_database_manager.template.failed_to_remove_default_tenan": "Failed to remove default tenant: ",
    "core_database_manager.template.failed_to_create_admin_user": "Failed to create admin user: ",
    "core_database_manager.template.failed_to_remove_admin_user": "Failed to remove admin user: ",
    "core_database_manager.template.registered_migration": "Registered migration: ",
    "core_database_manager.template.migration_not_found": "Migration  not found",
    "core_database_manager.template.migration_cannot_be_executed": "Migration  cannot be executed",
    "core_database_manager.template.running_migration": "Running migration: ",
    "core_database_manager.template.migration_completed": "Migration  completed: ",
    "core_database_manager.template.migration_failed": "Migration  failed: ",
    "core_database_manager.template.migration_summary_successful": "Migration summary:  successful,  skipped,  failed",
    "core_database_performance.template.configured_database_connection": "Configured database connection pool: ",
    "core_database_performance.template.slow_query_detected_s": "Slow query detected: s - ",
    "core_database_performance.template.session_cleanup_error": "Session cleanup error: ",
    "core_database_performance.template.database_session_error": "Database session error: ",
    "core_database_performance.template.query_cached_execution_s": "Query cached:  (execution: s)",
    "core_database_performance.template.explain_analyze": "EXPLAIN ANALYZE ",
    "core_database_performance.template.explain_query_plan": "EXPLAIN QUERY PLAN ",
    "core_database_performance.template.query_analysis_failed": "Query analysis failed: ",
    "core_database_performance.template.analyze": "ANALYZE ",
    "core_database_performance.template.analyze_1": "ANALYZE ",
    "core_database_performance.template.database_indexes_optimized": "Database indexes optimized: ",
    "core_database_performance.template.index_optimization_failed": "Index optimization failed: ",
    "core_database_performance.template.db_operation_completed_in_s": "DB Operation '' completed in s",
    "core_database_performance.template.db_operation_failed_after_s": "DB Operation '' failed after s: ",
    "core_database_performance.template.transaction_failed": "Transaction failed: ",
    "core_cdn_config.template.cdn_configuration_initialized": "CDN configuration initialized: ",
    "core_cdn_config.template.": "://",
    "core_cdn_config.template.v": "?v=",
    "core_cdn_config.template.v_1": "?v=",
    "core_cdn_config.template.error_generating_asset_manifes": "Error generating asset manifest: ",
    "core_cdn_config.template.found_large_assets_that_could": "Found  large assets that could be optimized",
    "core_cdn_config.template.asset_optimization_analysis_fa": "Asset optimization analysis failed: ",
    "core_cdn_config.template.link_rel_preload_href_as": "<link rel=\"preload\" href=\"\" as=\"style\">",
    "core_cdn_config.template.link_rel_preload_href_as_1": "<link rel=\"preload\" href=\"\" as=\"script\">",
    "core_cdn_config.template.link_rel_preload_href_as_2": "<link rel=\"preload\" href=\"\" as=\"font\" type=\"font/woff2\" crossorigin>",
    "core_cdn_config.template.link_rel_preload_href_as_3": "<link rel=\"preload\" href=\"\" as=\"image\">",
    "core_celery_optimizer.template.processed_batch_with_items": "Processed batch '' with  items",
    "core_celery_optimizer.template.task_starting": "Task starting:  ()",
    "core_celery_optimizer.template.task_completed_in_s": "Task completed:  () -  in s",
    "core_celery_optimizer.template.task_failed": "Task failed:  () - ",
    "core_celery_optimizer.template.consider_optimizing_slow_task": "Consider optimizing  slow tasks",
    "core_celery_optimizer.template.high_failure_rate_for_task": "High failure rate for task '': %",
    "core_celery_optimizer.template.insufficient_resources_to_star": "Insufficient resources to start task ",
    "core_tenant_isolation.template.invalid_or_inactive_tenant": "Invalid or inactive tenant: ",
    "core_tenant_isolation.template.access_denied_to_id_for_te": "Access denied to  (id=) for tenant ",
    "core_tenant_isolation.template.user_does_not_have_access_to_t": "User does not have access to tenant ",
    "core_container.template.no_binding_found_for": "No binding found for ",
    "core_initialization.template.created_user": "Created user: ",
    "core_initialization.template.total_users_in_database": "Total users in database: ",
    "core_cache_config.template.cache_warmed_for": "Cache warmed for ",
    "core_cache_config.template.failed_to_warm_cache_for": "Failed to warm cache for ",
    "core_cache_config.template.error_warming_cache_for": "Error warming cache for : ",
    "core_session_cache.template.session_deserialization_error": "Session deserialization error: ",
    "core_session_cache.template.session_retrieval_error": "Session retrieval error: ",
    "core_session_cache.template.session_deletion_error": "Session deletion error: ",
    "core_session_cache.template.session_save_error": "Session save error: ",
    "core_session_cache.template.session_data_parsing_error": "Session data parsing error: ",
    "core_session_cache.template.error_getting_user_sessions": "Error getting user sessions: ",
    "core_session_cache.template.invalidated_sessions_for_user": "Invalidated  sessions for user ",
    "core_session_cache.template.error_invalidating_user_sessio": "Error invalidating user sessions: ",
    "core_session_cache.template.error_tracking_user_session": "Error tracking user session: ",
    "core_session_cache.template.error_updating_session_activit": "Error updating session activity: ",
    "core_session_cache.template.error_getting_session_statisti": "Error getting session statistics: ",
    "core_session_cache.template.error_cleaning_user_key": "Error cleaning user key : ",
    "core_session_cache.template.cleaned_up_expired_session_re": "Cleaned up  expired session references",
    "core_session_cache.template.session_cleanup_error": "Session cleanup error: ",
    "core_session_cache.template.error_getting_session_security": "Error getting session security info: ",
    "core_session_cache.template.session_caching_initialized_wi": "Session caching initialized with Redis: ",
    "core_session_cache.template.failed_to_initialize_session_c": "Failed to initialize session caching: ",
    "core_memory_optimizer.template.object_reset_failed": "Object reset failed: ",
    "core_memory_optimizer.template.memory_monitoring_error": "Memory monitoring error: ",
    "core_memory_optimizer.template.memory_baseline_set_mb": "Memory baseline set:  MB",
    "core_memory_optimizer.template.error_getting_memory_allocatio": "Error getting memory allocations: ",
    "core_memory_optimizer.template.garbage_collection_objects_c": "Garbage collection:  objects collected,  ->  objects",
    "core_memory_optimizer.template.file_streamed_to_bytes": "File streamed to :  bytes",
    "core_memory_optimizer.template.streaming_upload_failed": "Streaming upload failed: ",
    "core_memory_optimizer.template.streaming_download_failed": "Streaming download failed: ",
    "core_memory_optimizer.template.memory_monitoring_error_1": "Memory monitoring error: ",
    "core_memory_optimizer.template.potential_memory_leak_detected": "Potential memory leak detected:  growth over  samples",
    "core_memory_optimizer.template.object_type_growing_rapidly": "Object type '' growing rapidly:  ->  ()",
    "core_tenant_isolation_example.template.created_documents": "Created  documents",
    "error_handling_error_manager.template.error_classifier_failed": "Error classifier failed: ",
    "error_handling_error_manager.template.custom_error_handler_failed": "Custom error handler failed: ",
    "error_handling_error_manager.template.error_callback_failed": "Error callback failed: ",
    "error_handling_error_manager.template.critical_error": "CRITICAL ERROR: ",
    "error_handling_error_manager.template.high_severity_error": "HIGH SEVERITY ERROR: ",
    "error_handling_error_manager.template.medium_severity_error": "MEDIUM SEVERITY ERROR: ",
    "error_handling_error_manager.template.low_severity_error": "LOW SEVERITY ERROR: ",
    "error_handling_error_manager.template.stack_trace_for_error": "Stack trace for error :\n",
    "error_handling_user_messages.template.added_message_mapping": "Added message mapping: .",
    "error_handling_user_messages.template.loaded_message_mappings_for_l": "Loaded  message mappings for locale: ",
    "error_handling_user_messages.template.div_class_user_message": "<div class=\"user-message \">",
    "error_handling_user_messages.template.h4_error_code_h4": "<h4>Error Code: </h4>",
    "error_handling_user_messages.template.p_class_message_p": "<p class=\"message\"></p>",
    "error_handling_user_messages.template.li_li": "<li></li>",
    "error_handling_user_messages.template.div_class_support_info_di": "<div class=\"support-info\"></div>",
    "error_handling_user_messages.template.div_class_technical_details": "<div class=\"technical-details\"><strong>Technical Details:</strong> </div>",
    "error_handling_config.template.configuration_file_not_found": "Configuration file not found: ",
    "error_handling_config.template.unsupported_file_format": "Unsupported file format: ",
    "error_handling_config.template.invalid_value_for_using_de": "Invalid value for : . Using default: ",
    "error_handling_config.template.config_watcher_failed": "Config watcher failed: ",
    "error_handling_config.template.unsupported_export_format": "Unsupported export format: ",
    "error_handling_retry_manager.template.operation_succeeded_on_atte": "Operation '' succeeded on attempt  after s",
    "error_handling_retry_manager.template.operation_failed_with_non_r": "Operation '' failed with non-retryable exception: ",
    "error_handling_retry_manager.template.operation_failed_on_attempt": "Operation '' failed on attempt /: ",
    "error_handling_retry_manager.template.retry_callback_failed": "Retry callback failed: ",
    "error_handling_retry_manager.template.waiting_s_before_attempt": "Waiting s before attempt ",
    "error_handling_retry_manager.template.async_operation_succeeded_o": "Async operation '' succeeded on attempt  after s",
    "error_handling_retry_manager.template.async_operation_failed_with": "Async operation '' failed with non-retryable exception: ",
    "error_handling_retry_manager.template.async_operation_failed_on_a": "Async operation '' failed on attempt /: ",
    "error_handling_retry_manager.template.retry_callback_failed_1": "Retry callback failed: ",
    "error_handling_retry_manager.template.waiting_s_before_attempt_1": "Waiting s before attempt ",
    "error_handling_error_recovery.template.retry_attempt_for": "Retry attempt / for ",
    "error_handling_error_recovery.template.retry_attempt_failed": "Retry attempt  failed: ",
    "error_handling_error_recovery.template.using_fallback_function_for": "Using fallback function for ",
    "error_handling_error_recovery.template.using_fallback_value_for": "Using fallback value for ",
    "error_handling_error_recovery.template.using_cached_value_for": "Using cached value for ",
    "error_handling_error_recovery.template.using_degraded_functionality_f": "Using degraded functionality for ",
    "error_handling_error_recovery.template.trying_alternative_service": "Trying alternative service /",
    "error_handling_error_recovery.template.alternative_service_failed": "Alternative service  failed: ",
    "error_handling_error_recovery.template.registered_recovery_handler": "Registered recovery handler: ",
    "error_handling_error_recovery.template.unregistered_recovery_handler": "Unregistered recovery handler: ",
    "error_handling_error_recovery.template.attempting_recovery_with_handl": "Attempting recovery with handler: ",
    "error_handling_error_recovery.template.recovery_successful_with_handl": "Recovery successful with handler: ",
    "error_handling_error_recovery.template.recovery_failed_with_handler": "Recovery failed with handler : ",
    "error_handling_error_recovery.template.recovery_handler_raised_unexp": "Recovery handler  raised unexpected exception: ",
    "error_handling_error_recovery.template.all_recovery_attempts_failed_f": "All recovery attempts failed for exception: ",
    "error_handling_circuit_breaker.template.circuit_breaker_opened_due": "Circuit breaker '' opened due to  failures",
    "error_handling_circuit_breaker.template.circuit_breaker_transitione": "Circuit breaker '' transitioned to half-open for testing",
    "error_handling_circuit_breaker.template.circuit_breaker_closed_afte": "Circuit breaker '' closed after successful recovery",
    "error_handling_circuit_breaker.template.circuit_breaker_recorded_fa": "Circuit breaker '' recorded failure : ",
    "error_handling_circuit_breaker.template.circuit_breaker_successful": "Circuit breaker '' successful call in s",
    "error_handling_circuit_breaker.template.circuit_breaker_failed_call": "Circuit breaker '' failed call in s: ",
    "error_handling_circuit_breaker.template.circuit_breaker_manually_re": "Circuit breaker '' manually reset",
    "error_handling_circuit_breaker.template.circuit_breaker_manually_op": "Circuit breaker '' manually opened",
    "error_handling_circuit_breaker.template.created_circuit_breaker": "Created circuit breaker: ",
    "error_handling_examples.template.operation_succeeded": "Operation succeeded: ",
    "error_handling_examples.template.error_handled_id": "Error handled - ID: ",
    "error_handling_examples.template.category": "Category: ",
    "error_handling_examples.template.severity": "Severity: ",
    "error_handling_examples.template.user_message": "User message: ",
    "error_handling_examples.template.payment_service_unavailable_c": "Payment service unavailable (call #)",
    "error_handling_examples.template.payment_succeeded": "Payment  succeeded: ",
    "error_handling_examples.template.payment_blocked_by_circuit_br": "Payment  blocked by circuit breaker: ",
    "error_handling_examples.template.payment_failed": "Payment  failed: ",
    "error_handling_examples.template.circuit_breaker_stats": "\nCircuit Breaker Stats:",
    "error_handling_examples.template.state": "State: ",
    "error_handling_examples.template.total_requests": "Total requests: ",
    "error_handling_examples.template.failed_requests": "Failed requests: ",
    "error_handling_examples.template.success_rate": "Success rate: %",
    "error_handling_examples.template.database_connection_timeout_q": "Database connection timeout (query #)",
    "error_handling_examples.template.user": "User ",
    "error_handling_examples.template.user_example_com": "user@example.com",
    "error_handling_examples.template.attempting_to_query_user": "  Attempting to query user ...",
    "error_handling_examples.template.attempting_to_query_user_1": "  Attempting to query user ...",
    "error_handling_examples.template.success": "Success: ",
    "error_handling_examples.template.all_retries_failed": "All retries failed: ",
    "error_handling_examples.template.success_1": "Success: ",
    "error_handling_examples.template.all_retries_failed_1": "All retries failed: ",
    "error_handling_examples.template.database_connection_failed": "Database connection failed #",
    "error_handling_examples.template.database_query_timeout": "Database query timeout #",
    "error_handling_examples.template.current_metrics": "\nCurrent metrics:",
    "error_handling_examples.template.total_errors": "Total errors: ",
    "error_handling_examples.template.error_rate_min": "Error rate: /min",
    "error_handling_examples.template.errors_by_category": "Errors by category: ",
    "error_handling_examples.template.alerts_triggered": "\nAlerts triggered: ",
    "error_handling_examples.template.": "  - : ",
    "error_handling_examples.template.testing": "\nTesting: ",
    "error_handling_examples.template.en": "EN: ",
    "error_handling_examples.template.actions": "    Actions: ...",
    "error_handling_examples.template.es": "ES: ",
    "error_handling_examples.template.acciones": "    Acciones: ...",
    "error_handling_examples.template.user_1": "User ",
    "error_handling_examples.template.https_example_com_avatars_j": "https://example.com/avatars/.jpg",
    "error_handling_examples.template.attempting_to_get_profile_fo": "  Attempting to get profile for user ",
    "error_handling_examples.template.attempting_to_get_profile_fo_1": "  Attempting to get profile for user ",
    "error_handling_examples.template.using_basic_profile_fallback": "  Using basic profile fallback for user ",
    "error_handling_examples.template.user_2": "User ",
    "error_handling_examples.template.attempting_to_get_profile_fo_2": "  Attempting to get profile for user ",
    "error_handling_examples.template.got_profile": "Got profile: ",
    "error_handling_examples.template.recovery_failed": "Recovery failed: ",
    "error_handling_examples.template.got_profile_1": "Got profile: ",
    "error_handling_examples.template.recovery_failed_1": "Recovery failed: ",
    "error_handling_examples.template.first_call_succeeded": "First call succeeded: ",
    "error_handling_examples.template.first_call_failed": "First call failed: ",
    "error_handling_examples.template.second_call_with_cache_fallbac": "Second call with cache fallback: ",
    "error_handling_examples.template.cache_fallback_failed": "Cache fallback failed: ",
    "error_handling_examples.template.async_api_call_to": "  Async API call # to ",
    "error_handling_examples.template.api_call_failed_attempt": "API call failed (attempt #)",
    "error_handling_examples.template.async_call_succeeded": "Async call succeeded: ",
    "error_handling_examples.template.all_async_retries_failed": "All async retries failed: ",
    "error_handling_examples.template.configuration_issues_found": "Configuration issues found: ",
    "error_handling_examples.template.current_configuration": "\nCurrent configuration:",
    "error_handling_examples.template.circuit_breaker_failure_thresh": "Circuit Breaker failure threshold: ",
    "error_handling_examples.template.retry_max_attempts": "Retry max attempts: ",
    "error_handling_examples.template.monitoring_error_rate_threshol": "Monitoring error rate threshold: ",
    "error_handling_examples.template.configuration_exported_json": "\nConfiguration exported (JSON):  characters",
    "error_handling_examples.template.example_execution_failed": "\n❌ Example execution failed: ",
    "error_handling_exceptions.template.circuit_breaker_is_open_for_se": "Circuit breaker is open for service: ",
    "error_handling_exceptions.template.failures": " (failures: )",
    "error_handling_exceptions.template.retry_exhausted_for_operation": "Retry exhausted for operation '' after  attempts",
    "error_handling_exceptions.template.recovery_strategy_failed": "Recovery strategy '' failed",
    "error_handling_exceptions.template.monitoring_error_in": "Monitoring error in ",
    "error_handling_exceptions.template.invalid_configuration_for": "Invalid configuration for ''",
    "error_handling_exceptions.template.fallback_failed": "Fallback '' failed",
    "error_handling_exceptions.template.failed_to_send_alert": "Failed to send  alert",
    "error_handling_exceptions.template.to": " to ",
    "error_handling_error_monitor.template.alert": "ALERT []: ",
    "error_handling_error_monitor.template.registered_alert_handler_for_c": "Registered alert handler for channel: ",
    "error_handling_error_monitor.template.added_alert_rule": "Added alert rule: ",
    "error_handling_error_monitor.template.removed_alert_rule": "Removed alert rule: ",
    "error_handling_error_monitor.template.error_evaluating_alert_rule": "Error evaluating alert rule '': ",
    "error_handling_error_monitor.template.alert_1": "Alert: ",
    "error_handling_error_monitor.template.no_handler_registered_for_aler": "No handler registered for alert channel: ",
    "error_handling_error_monitor.template.failed_to_send_alert_via": "Failed to send alert via : ",
    "error_handling_error_monitor.template.error_recording_error_for_moni": "Error recording error for monitoring: ",
    "error_handling_error_monitor.template.unsupported_export_format": "Unsupported export format: ",
    "error_handling_middleware.template.failed_to_record_error_for_mon": "Failed to record error for monitoring: ",
    "error_handling_middleware.template.failed_to_record_error_for_mon_1": "Failed to record error for monitoring: ",
    "error_handling_middleware.template.error_handling_system_failure": "Error handling system failure: ",
    "security_rate_limiting.template.redis_connection_failed_using": "Redis connection failed, using memory store: ",
    "security_rate_limiting.template.rate_limit": "rate_limit:::",
    "security_rate_limiting.template.burst": ":burst",
    "security_rate_limiting.template.redis_rate_limit_error": "Redis rate limit error: ",
    "security_rate_limiting.template.rate_limit_exceeded_for_on": "Rate limit exceeded for  on : / requests",
    "security_rate_limiting.template.blocked_ip_due_to_repeated_vi": "Blocked IP  due to repeated violations",
    "security_rate_limiting.template.blocked_ip": "blocked_ip:",
    "security_rate_limiting.template.pattern": "pattern::",
    "security_rate_limiting.template.pattern_tracking_error": "Pattern tracking error: ",
    "security_rate_limiting.template.blocked_ip_1": "blocked_ip:",
    "security_password_policy.template.password_must_be_at_least_cha": "Password must be at least  characters long",
    "security_password_policy.template.password_must_be_no_more_than": "Password must be no more than  characters long",
    "security_password_policy.template.password_must_contain_at_least": "Password must contain at least one special character ()",
    "security_password_policy.template.password_must_contain_at_least_1": "Password must contain at least  unique characters",
    "security_password_policy.template.password_cannot_contain_more_t": "Password cannot contain more than  consecutive identical characters",
    "security_password_policy.template.password_cannot_contain_more_t_1": "Password cannot contain more than  consecutive sequential characters",
    "security_password_policy.template.password_complexity_score_i": "Password complexity score () is below required threshold ()",
    "security_password_policy.template.error_checking_pwned_passwords": "Error checking pwned passwords: ",
    "security_password_policy.template.https_api_pwnedpasswords_com": "https://api.pwnedpasswords.com/range/",
    "security_password_policy.template.pwned_password_api_request_fai": "Pwned password API request failed: ",
    "security_password_policy.template.increase_length_to_at_least_c": "Increase length to at least  characters",
    "security_encryption_service.template.decryption_failed": "Decryption failed: ",
    "security_encryption_service.template.password_hashing_failed": "Password hashing failed: ",
    "security_encryption_service.template.file_encryption_failed": "File encryption failed: ",
    "security_encryption_service.template.file_decryption_failed": "File decryption failed: ",
    "security_encryption_service.template.unsupported_hash_algorithm": "Unsupported hash algorithm: ",
    "security_security_headers.template.suspicious_header_detected": "Suspicious header detected: ",
    "security_security_headers.template.unexpected_content_type": "Unexpected Content-Type: ",
    "security_security_headers.template.request_too_large_bytes": "Request too large:  bytes",
    "security_security_headers.template.suspicious_url_pattern": "Suspicious URL pattern: ",
    "security_security_headers.template.script_src_self_nonce_htt": "script-src 'self' 'nonce-' https://cdn.jsdelivr.net",
    "security_security_headers.template.max_age": "max-age=",
    "security_security_headers.template.report_uri": "; report-uri ",
    "security_csrf_protection.template.csrf_protection_error": "CSRF protection error: ",
    "security_audit_logger.template.request_exception": "Request exception: ",
    "security_audit_logger.template.authentication_event_for_use": "Authentication event:  for user ",
    "security_audit_logger.template.data_access_on": "Data access:  on  ",
    "security_audit_logger.template.admin_action_on": "Admin action:  on ",
    "security_audit_logger.template.suspicious_activity_detected": "Suspicious activity detected: ",
    "security_audit_logger.template.starting_operation_on": "Starting operation:  on ",
    "security_audit_logger.template.completed_operation_on": "Completed operation:  on ",
    "security_audit_logger.template.failed_operation_on": "Failed operation:  on ",
    "security_audit_logger.template.to": " to ",
    "security_security_config.template.missing_required_environment_v": "Missing required environment variable: ",
    "security_input_validator.template.potentially_malicious_content": "Potentially malicious content detected: ",
    "security_input_validator.template.url_scheme_must_be_one_of": "URL scheme must be one of: ",
    "security_input_validator.template.potentially_malicious_sql_cont": "Potentially malicious SQL content detected",
    "security_input_validator.template.potentially_malicious_command": "Potentially malicious command content detected",
    "security_input_validator.template.file_type_not_allowed": "File type not allowed: ",
    "refactored_appointment_resources.template.fetching_appointments_for_user": "Fetching appointments for user  with filters: page=, per_page=, start_date=, end_date=, status=",
    "refactored_appointment_resources.template.error_fetching_appointments": "Error fetching appointments: ",
    "refactored_appointment_resources.template.creating_appointment_for_user": "Creating appointment for user ",
    "refactored_appointment_resources.template.error_creating_appointment": "Error creating appointment: ",
    "refactored_appointment_resources.template.fetching_appointment_for_user": "Fetching appointment  for user ",
    "refactored_appointment_resources.template.error_fetching_appointment": "Error fetching appointment: ",
    "refactored_appointment_resources.template.updating_appointment_for_user": "Updating appointment  for user ",
    "refactored_appointment_resources.template.error_updating_appointment": "Error updating appointment: ",
    "refactored_appointment_resources.template.deleting_appointment_for_user": "Deleting appointment  for user ",
    "refactored_appointment_resources.template.error_deleting_appointment": "Error deleting appointment: ",
    "refactored_appointment_resources.template.syncing_appointment_to_calend": "Syncing appointment  to calendar for user ",
    "refactored_appointment_resources.template.error_syncing_appointment": "Error syncing appointment: ",
    "refactored_appointment_resources.template.error_unsyncing_appointment": "Error unsyncing appointment: ",
    "utils_content_processing.template.file_not_found": "File not found: ",
    "utils_content_processing.template.unsupported_file_format": "Unsupported file format: ",
    "utils_content_processing.template.content_extraction_failed": "Content extraction failed: ",
    "utils_content_processing.template.page": "\n--- Page  ---\n\n",
    "utils_content_processing.template.failed_to_extract_page": "Failed to extract page : ",
    "utils_content_processing.template.pdf_extraction_failed": "PDF extraction failed: ",
    "utils_content_processing.template.docx_extraction_failed": "DOCX extraction failed: ",
    "utils_content_processing.template.text_extraction_failed": "Text extraction failed: ",
    "utils_content_processing.template.audio_extraction_failed": "Audio extraction failed: ",
    "utils_content_processing.template.video_extraction_failed": "Video extraction failed: ",
    "utils_content_processing.template.failed_to_fetch_url": "Failed to fetch URL: ",
    "utils_content_processing.template.web_content_extraction_failed": "Web content extraction failed: ",
    "utils_content_processing.template.text_analysis_failed": "Text analysis failed: ",
    "utils_content_processing.template.readability_analysis_failed": "Readability analysis failed: ",
    "utils_content_processing.template.spacy_keyword_extraction_faile": "SpaCy keyword extraction failed: ",
    "utils_content_processing.template.difficulty_calculation_failed": "Difficulty calculation failed: ",
    "utils_content_processing.template.content_too_short_words_mi": "Content too short ( words). Minimum: ",
    "utils_content_processing.template.content_very_long_words_ma": "Content very long ( words). May affect processing time.",
    "utils_content_processing.template.too_few_sentences_minimum": "Too few sentences (). Minimum: ",
    "utils_content_processing.template.validation_failed": "Validation failed: ",
    "utils_rate_limiting.template.user": "user:",
    "utils_rate_limiting.template.rate_limit_exceeded": "Rate limit exceeded: ",
    "utils_rate_limiting.template.limiter": "LIMITER//",
    "utils_rate_limiting.template.error_getting_rate_limit_statu": "Error getting rate limit status: ",
    "utils_file_upload_security.template.file_type_not_allowed": "File type '' not allowed",
    "utils_file_upload_security.template.file_too_large_maximum_size": "File too large. Maximum size: MB",
    "utils_file_upload_security.template.invalid_file_content_detected": "Invalid file content. Detected type: ",
    "utils_file_upload_security.template.could_not_validate_file_type": "Could not validate file type: ",
    "utils_file_upload_security.template.failed_to_save_file": "Failed to save file: ",
    "utils_file_upload_security.template.error_deleting_file": "Error deleting file : ",
    "utils_pdf_generator.template.generated_by_bdc": "Generated by BDC - ",
    "utils_pdf_generator.template.page": "Page ",
    "utils_pdf_generator.template.evaluation_report": "Evaluation Report -  ",
    "utils_pdf_generator.template.evaluation_report_1": "Evaluation Report",
    "utils_pdf_generator.template.b_name_b": "<b>Name:</b>  ",
    "utils_pdf_generator.template.b_email_b": "<b>Email:</b> ",
    "utils_pdf_generator.template.b_status_b": "<b>Status:</b> ",
    "utils_pdf_generator.template.b_title_b": "<b>Title:</b> ",
    "utils_pdf_generator.template.b_date_b": "<b>Date:</b> ",
    "utils_pdf_generator.template.b_status_b_1": "<b>Status:</b> ",
    "utils_pdf_generator.template.b_score_b": "<b>Score:</b> %",
    "utils_pdf_generator.template.question": "Question : ",
    "utils_pdf_generator.template.b_answer_b": "<b>Answer:</b> ",
    "utils_pdf_generator.template.b_score_b_1": "<b>Score:</b> ",
    "utils_pdf_generator.template.report_generated_by": "Report generated by:  ",
    "utils_pdf_generator.template.date": "Date: ",
    "utils_pdf_generator.template.beneficiary_report": "Beneficiary Report -  ",
    "utils_pdf_generator.template.beneficiary_progress_report": "Beneficiary Progress Report",
    "utils_pdf_generator.template.b_name_b_1": "<b>Name:</b>  ",
    "utils_pdf_generator.template.b_email_b_1": "<b>Email:</b> ",
    "utils_pdf_generator.template.b_status_b_2": "<b>Status:</b> ",
    "utils_pdf_generator.template.b_name_b_2": "<b>Name:</b>  ",
    "utils_pdf_generator.template.b_email_b_2": "<b>Email:</b> ",
    "utils_pdf_generator.template.b_overall_progress_b_eva": "<b>Overall Progress:</b> / evaluations completed",
    "utils_pdf_generator.template.b_average_score_b": "<b>Average Score:</b> %",
    "utils_pdf_generator.template.report_generated_by_1": "Report generated by:  ",
    "utils_pdf_generator.template.date_1": "Date: ",
    "utils_pdf_generator.template.b_generated_at_b": "<b>Generated At:</b> ",
    "utils_pdf_generator.template.b_generated_by_b": "<b>Generated By:</b> ",
    "utils_pdf_generator.template.b_report_type_b": "<b>Report Type:</b> ",
    "utils_pdf_generator.template.i_total_records_i": "<i>Total Records: </i>",
    "utils_ai.template.question_answer_score": "Question: \nAnswer: \nScore: ",
    "utils_ai.template.question_answer": "Question: \nAnswer: ",
    "utils_ai.template.as_an_ai_assistant_analy": "\n    As an AI assistant, analyze the following evaluation responses and provide insights. \n    Identify strengths, areas for improvement, and recommendations.\n    \n    Evaluation: \n    \n    Responses:\n    \n    \n    Provide the analysis in the following JSON format:\n    {\n        \"strengths\": [\"strength 1\", \"strength 2\", ...],\n        \"areas_to_improve\": [\"area 1\", \"area 2\", ...],\n        \"recommendations\": [\"recommendation 1\", \"recommendation 2\", ...],\n        \"summary\": \"A brief summary paragraph of the overall performance.\"\n    }\n    \n    Keep the response concise and focused on the most important insights.\n    ",
    "utils_ai.template.failed_to_parse_ai_response_as": "Failed to parse AI response as JSON: ",
    "utils_ai.template.error_calling_openai_api": "Error calling OpenAI API: ",
    "utils_ai.template.ai_analysis_failed": "AI analysis failed: ",
    "utils_ai.template.as_an_educational_expert": "\n    As an educational expert, generate a comprehensive report for a beneficiary based on their evaluation results.\n    \n    Beneficiary Information:\n    Name:  \n    Status: \n    \n    Evaluation Results:\n    \n    \n    Generate a report with the following sections in JSON format:\n    {\n        \"executive_summary\": \"A concise summary of the overall performance and key findings\",\n        \"strengths\": [\"strength 1\", \"strength 2\", ...],\n        \"areas_for_development\": [\"area 1\", \"area 2\", ...],\n        \"recommendations\": [\"recommendation 1\", \"recommendation 2\", ...],\n        \"conclusion\": \"A concluding paragraph with next steps and encouragement\"\n    }\n    \n    Make the report professional, constructive, and actionable.\n    ",
    "utils_ai.template.failed_to_parse_ai_response_as_1": "Failed to parse AI response as JSON: ",
    "utils_ai.template.error_calling_openai_api_1": "Error calling OpenAI API: ",
    "utils_ai.template.ai_report_generation_failed": "AI report generation failed: ",
    "utils_data_encryption.template.decryption_failed": "Decryption failed: ",
    "utils_data_encryption.template.failed_to_decrypt_field": "Failed to decrypt field: ",
    "utils_cache.template.cache_hit_for_key": "Cache hit for key: ",
    "utils_cache.template.cached_response_with_key_ti": "Cached response with key: , timeout: ",
    "utils_cache.template.invalidated_cache_entries_wit": "Invalidated  cache entries with pattern: ",
    "utils_cache.template.cannot_access_redis_client_cl": "Cannot access Redis client, clearing entire cache instead of pattern: ",
    "utils_cache.template.error_invalidating_cache_for_p": "Error invalidating cache for pattern : ",
    "utils_cache.template.user_id": "*:user_id:*",
    "utils_backup_manager.template.generated_backup_encryption_ke": "Generated backup encryption key:  - Store this securely!",
    "utils_backup_manager.template.bdc_db_backup_sql": "bdc_db_backup_.sql",
    "utils_backup_manager.template.unsupported_database_type": "Unsupported database type: ",
    "utils_backup_manager.template.database_backups": "database_backups/",
    "utils_backup_manager.template.s3": "s3:///",
    "utils_backup_manager.template.database_backup_created": "Database backup created: ",
    "utils_backup_manager.template.database_backup_failed": "Database backup failed: ",
    "utils_backup_manager.template.bdc_files_backup_tar_gz": "bdc_files_backup_.tar.gz",
    "utils_backup_manager.template.files_backups": "files_backups/",
    "utils_backup_manager.template.s3_1": "s3:///",
    "utils_backup_manager.template.files_backup_created": "Files backup created: ",
    "utils_backup_manager.template.files_backup_failed": "Files backup failed: ",
    "utils_backup_manager.template.unsupported_database_type_1": "Unsupported database type: ",
    "utils_backup_manager.template.database_restore_failed": "Database restore failed: ",
    "utils_backup_manager.template.s3_2": "s3:///",
    "utils_backup_manager.template.failed_to_list_s3_backups": "Failed to list S3 backups: ",
    "utils_backup_manager.template.cleaned_up_old_backups": "Cleaned up  old backups",
    "utils_backup_manager.template.backup_cleanup_failed": "Backup cleanup failed: ",
    "utils_backup_manager.template.s3_3": "s3:///",
    "utils_backup_manager.template.backup_manifest_json": "backup_manifest_.json",
    "utils_backup_manager.template.manifests": "manifests/",
    "utils_backup_manager.template.tb": " TB",
    "utils_backup_manager.template.backup_scheduler_configured": "Backup scheduler configured: ",
    "utils_datetime_utils.template.unable_to_parse_datetime": "Unable to parse datetime: ",
    "utils_health_checker.template.health_check_failed": "Health check failed: ",
    "utils_health_checker.template.database_responding_slowly_ms": "Database responding slowly: ms",
    "utils_health_checker.template.database_connection_failed": "Database connection failed: ",
    "utils_health_checker.template.redis_connection_failed": "Redis connection failed: ",
    "utils_health_checker.template.critical_only_disk_space_re": "Critical: Only % disk space remaining",
    "utils_health_checker.template.warning_only_disk_space_rem": "Warning: Only % disk space remaining",
    "utils_health_checker.template.sufficient_disk_space_avail": "Sufficient disk space: % available",
    "utils_health_checker.template.disk_space_check_failed": "Disk space check failed: ",
    "utils_health_checker.template.critical_memory_usage": "Critical: % memory usage",
    "utils_health_checker.template.warning_memory_usage": "Warning: % memory usage",
    "utils_health_checker.template.normal_memory_usage": "Normal memory usage: %",
    "utils_health_checker.template.memory_check_failed": "Memory check failed: ",
    "utils_health_checker.template.critical_cpu_usage": "Critical: % CPU usage",
    "utils_health_checker.template.warning_cpu_usage": "Warning: % CPU usage",
    "utils_health_checker.template.normal_cpu_usage": "Normal CPU usage: %",
    "utils_health_checker.template.cpu_check_failed": "CPU check failed: ",
    "utils_health_checker.template.missing_required_environment_v": "Missing required environment variable: ",
    "utils_health_checker.template.cannot_create_upload_directory": "Cannot create upload directory: ",
    "utils_health_checker.template.upload_directory_not_writable": "Upload directory not writable: ",
    "utils_health_checker.template.dependency_check_failed": "Dependency check failed: ",
    "utils_health_checker.template.is_not_healthy": " is not healthy",
    "utils_notifications.template.email_sent_successfully_to": "Email sent successfully to ",
    "utils_notifications.template.failed_to_send_email_to": "Failed to send email to : ",
    "utils_notifications.template.failed_to_send_slack_message": "Failed to send Slack message: ",
    "utils_notifications.template.sms_sent_successfully_to": "SMS sent successfully to : ",
    "utils_notifications.template.failed_to_send_sms_to": "Failed to send SMS to : ",
    "utils_notifications.template.no_device_tokens_found_for_use": "No device tokens found for user ",
    "utils_notifications.template.key": "key=",
    "utils_notifications.template.push_notification_sent_to_user": "Push notification sent to user ",
    "utils_notifications.template.failed_to_send_push_notificati": "Failed to send push notification: ",
    "utils_notifications.template.failed_to_send_push_notificati_1": "Failed to send push notification: ",
    "utils_notifications.template.failed_to_store_notification_i": "Failed to store notification in database: ",
    "utils_notifications.template.notification_scheduled_for_use": "Notification scheduled for user  at ",
    "utils_notifications.template.failed_to_schedule_notificatio": "Failed to schedule notification: ",
    "utils_error_handler.template.application_error": "Application error: ",
    "utils_error_handler.template.server_error": "Server error: ",
    "utils_adaptive_test_setup.template.started_adaptive_session": "Started adaptive session ",
    "utils_adaptive_test_setup.template.initial_ability": "Initial ability: ",
    "utils_adaptive_test_setup.template.question": "\nQuestion : ",
    "utils_adaptive_test_setup.template.difficulty": "Difficulty: ",
    "utils_adaptive_test_setup.template.answer_correct": "Answer correct: ",
    "utils_adaptive_test_setup.template.new_ability_se": "New ability:  (SE: )",
    "utils_adaptive_test_setup.template.stopping": "\nStopping: ",
    "utils_adaptive_test_setup.template.session_completed": "\nSession completed!",
    "utils_adaptive_test_setup.template.final_ability": "Final ability: ",
    "utils_adaptive_test_setup.template.confidence_interval": "Confidence interval: [, ]",
    "utils_adaptive_test_setup.template.performance_level": "\nPerformance Level: ",
    "utils_adaptive_test_setup.template.percentile": "Percentile: %",
    "utils_adaptive_test_setup.template.strengths": "Strengths: ",
    "utils_adaptive_test_setup.template.weaknesses": "Weaknesses: ",
    "utils_decorators.template.required_permission": "Required permission: ",
    "database_indexing_strategy.template.error_analyzing_query_patterns": "Error analyzing query patterns: ",
    "database_indexing_strategy.template.error_analyzing_query_patterns_1": "Error analyzing query patterns: ",
    "database_indexing_strategy.template.foreign_key_to_without_index": "Foreign key to  without index",
    "database_indexing_strategy.template.could_save_ms_per_query": "Could save ms per query",
    "database_indexing_strategy.template.high_cardinality_column_with_p": "High cardinality column with poor correlation",
    "database_indexing_strategy.template.error_analyzing_join_patterns": "Error analyzing join patterns: ",
    "database_indexing_strategy.template.used_in_order_by_with_rows": "Used in ORDER BY with  rows",
    "database_indexing_strategy.template.error_finding_unused_indexes": "Error finding unused indexes: ",
    "database_indexing_strategy.template.gb": " GB",
    "database_indexing_strategy.template.mb": " MB",
    "database_indexing_strategy.template.kb": " KB",
    "database_indexing_strategy.template.": "  - .: ",
    "database_indexing_strategy.template._1": "  - .",
    "database_indexing_strategy.template.summary": "\nSummary: ",
    "database_backup.template.unsupported_database_type": "Unsupported database type: ",
    "database_backup.template.backup_created": "Backup created: ",
    "database_backup.template.backup_failed": "Backup failed: ",
    "database_backup.template.host": "--host=",
    "database_backup.template.port": "--port=",
    "database_backup.template.user": "--user=",
    "database_backup.template.password": "--password=",
    "database_backup.template.backup_restored": "Backup restored: ",
    "database_backup.template.restore_failed": "Restore failed: ",
    "database_backup.template.host_1": "--host=",
    "database_backup.template.port_1": "--port=",
    "database_backup.template.user_1": "--user=",
    "database_backup.template.password_1": "--password=",
    "database_backup.template.removed_old_backup": "Removed old backup: ",
    "database_backup.template.error_removing_backup": "Error removing backup : ",
    "database_backup.template.cleaned_up_old_backups": "Cleaned up  old backups",
    "database_backup.template.backup_verification_failed": "Backup verification failed: ",
    "database_backup.template.cd_python_m_backup_create": "cd  && python -m backup create",
    "database_backup.template.scheduled_backup": "Scheduled backup: ",
    "database_backup.template.failed_to_schedule_backup": "Failed to schedule backup: ",
    "database_backup.template.backup_created_1": "Backup created: ",
    "database_backup.template.backup_restored_1": "Backup restored: ",
    "database_backup.template.bytes": " -  -  bytes",
    "database_backup.template.removed_old_backups": "Removed  old backups",
    "database_optimization.template.created_index": "Created index: ",
    "database_optimization.template.error_creating_index": "Error creating index: ",
    "database_optimization.template.vacuum_analyze": "VACUUM ANALYZE ",
    "database_optimization.template.optimize_table": "OPTIMIZE TABLE ",
    "database_optimization.template.optimized_table": "Optimized table: ",
    "database_optimization.template.error_optimizing_table": "Error optimizing table : ",
    "database_optimization.template.error_creating_partitions": "Error creating partitions: ",
    "database_optimization.template.explain_analyze": "EXPLAIN ANALYZE ",
    "database_optimization.template.explain": "EXPLAIN ",
    "database_optimization.template.error_generating_execution_pla": "Error generating execution plan: ",
    "database_optimization.template.created_materialized_view": "Created materialized view",
    "database_optimization.template.error_creating_materialized_vi": "Error creating materialized view: ",
    "database_optimization.template.analyze_table": "ANALYZE TABLE ",
    "database_optimization.template.set_global": "SET GLOBAL  = ''",
    "database_optimization.template.set": "Set  = ",
    "database_optimization.template.error_setting": "Error setting : ",
    "database_optimization.template.slow_query_mean_time_ms": "Slow query: ... (Mean time: ms)",
    "database_optimization.template.query": "Query: ...",
    "database_optimization.template.plan": "Plan: ",
    "database_migrations.template.error_initializing_migrations": "Error initializing migrations: ",
    "database_migrations.template.created_migration": "Created migration: ",
    "database_migrations.template.error_creating_migration": "Error creating migration: ",
    "database_migrations.template.error_running_migrations": "Error running migrations: ",
    "database_migrations.template.rolled_back_migration_s": "Rolled back  migration(s)",
    "database_migrations.template.error_rolling_back_migrations": "Error rolling back migrations: ",
    "database_migrations.template.error_getting_migration_histor": "Error getting migration history: ",
    "database_migrations.template.invalid_migration_filename": "Invalid migration filename: ",
    "database_migrations.template.backup_sql": "backup_.sql",
    "database_migrations.template.pg_dump": "pg_dump  > ",
    "database_migrations.template.mysqldump": "mysqldump  > ",
    "database_migrations.template.created_backup": "Created backup: ",
    "database_migrations.template.error_creating_backup": "Error creating backup: ",
    "database_migrations.template.error_in_data_migration": "Error in data migration : ",
    "database_migrations.template.duplicate_migration": "Duplicate migration: ",
    "database_migrations.template.error_generating_report": "Error generating report: ",
    "database_migrations.template.current_revision": "Current revision: ",
    "database_migrations.template.migration_report": "Migration report: ",
    "monitoring_performance_metrics.template.metrics_requests": "metrics:requests:",
    "monitoring_performance_metrics.template.failed_to_store_metrics_in_red": "Failed to store metrics in Redis: ",
    "monitoring_performance_metrics.template.metrics_counts": "metrics:counts:",
    "monitoring_performance_metrics.template.metrics_response_times": "metrics:response_times:",
    "monitoring_performance_metrics.template.metrics_errors": "metrics:errors:",
    "monitoring_performance_metrics.template.metrics": "metrics::",
    "monitoring_performance_metrics.template.slow_request_detected_took_m": "Slow request detected:  took ms",
    "monitoring_performance_metrics.template.metrics_operations": "metrics:operations:",
    "monitoring_performance_metrics.template.metrics_operations_1": "metrics:operations:",
    "monitoring_performance_metrics.template.failed_to_collect_system_metri": "Failed to collect system metrics: ",
    "monitoring_performance_metrics.template.failed_to_collect_process_metr": "Failed to collect process metrics: ",
    "monitoring_performance_metrics.template.metrics_system": "metrics:system:",
    "monitoring_performance_metrics.template.failed_to_store_system_metrics": "Failed to store system metrics in Redis: ",
    "monitoring_performance_metrics.template.metrics_process": "metrics:process:",
    "monitoring_performance_metrics.template.failed_to_store_process_metric": "Failed to store process metrics in Redis: ",
    "monitoring_performance_metrics.template.cpu_usage_is": "CPU usage is %",
    "monitoring_performance_metrics.template.memory_usage_is": "Memory usage is %",
    "monitoring_performance_metrics.template.performance_alert": "Performance alert:  - ",
    "monitoring_performance_metrics.template.error_in_monitoring_loop": "Error in monitoring loop: ",
    "monitoring_error_tracking.template.unhandled_exception": "Unhandled exception: ",
    "monitoring_error_tracking.template.error_tracked": "Error tracked:  - ",
    "monitoring_error_tracking.template.error_in_error_tracking": "Error in error tracking: ",
    "monitoring_error_tracking.template.failed_to_store_error_in_datab": "Failed to store error in database: ",
    "monitoring_error_tracking.template.errors": "errors:",
    "monitoring_error_tracking.template.error_count": "error_count:",
    "monitoring_error_tracking.template.failed_to_store_error_in_redis": "Failed to store error in Redis: ",
    "monitoring_error_tracking.template.alert_level_error_type_cou": "Alert Level: \nError Type: \nCount:  errors in  seconds\nThreshold:  errors",
    "monitoring_error_tracking.template.error_alert_triggered": "Error alert triggered: ",
    "monitoring_error_tracking.template.bdc_error_alert": "BDC Error Alert: ",
    "monitoring_error_tracking.template.alert": "alert::",
    "monitoring_error_tracking.template.cleaned_up_old_error_records": "Cleaned up  old error records",
    "monitoring_error_tracking.template.type_gauge": "# TYPE  gauge",
    "monitoring_error_tracking.template.cleaned_up_old_error_records_1": "Cleaned up  old error records",
    "monitoring_alarm_system.template.failed_to_save_alarm_rule": "Failed to save alarm rule: ",
    "monitoring_alarm_system.template.failed_to_remove_alarm_rule": "Failed to remove alarm rule: ",
    "monitoring_alarm_system.template.no_evaluator_for_metric_type": "No evaluator for metric type: ",
    "monitoring_alarm_system.template.error_evaluating_metric": "Error evaluating metric : ",
    "monitoring_alarm_system.template.alarm": "alarm:",
    "monitoring_alarm_system.template.failed_to_send_notification": "Failed to send  notification: ",
    "monitoring_alarm_system.template.failed_to_send_resolution_noti": "Failed to send resolution notification: ",
    "monitoring_alarm_system.template.alarm_cooldown": "alarm:cooldown:",
    "monitoring_alarm_system.template.alarm_cooldown_1": "alarm:cooldown:",
    "monitoring_alarm_system.template.alarm_history": "alarm:history:",
    "monitoring_alarm_system.template.failed_to_store_alarm_history": "Failed to store alarm history: ",
    "monitoring_alarm_system.template.bdc_alert": "BDC Alert: ",
    "monitoring_alarm_system.template.alert_details": "\n            Alert Details:\n            \n            Type: \n            Severity: \n            Description: \n            Metric Value: \n            Threshold: \n            Time: \n            \n            Additional Information:\n            \n            ",
    "monitoring_alarm_system.template.pre_pre": "<pre></pre>",
    "monitoring_alarm_system.template.email_notifications_sent_to_r": "Email notifications sent to  recipients",
    "monitoring_alarm_system.template.failed_to_send_email_notificat": "Failed to send email notification: ",
    "monitoring_alarm_system.template.bdc_alert_1": "BDC Alert: ",
    "monitoring_alarm_system.template.failed_to_send_slack_notificat": "Failed to send Slack notification: ",
    "monitoring_alarm_system.template.webhook_notification_sent_to": "Webhook notification sent to ",
    "monitoring_alarm_system.template.failed_to_send_webhook_notific": "Failed to send webhook notification: ",
    "monitoring_alarm_system.template.bdc_alert_severity_value": "BDC Alert: \nSeverity: \nValue: \nThreshold: \n",
    "monitoring_alarm_system.template.sms_notification_sent_to": "SMS notification sent to ",
    "monitoring_alarm_system.template.failed_to_send_sms_to": "Failed to send SMS to : ",
    "monitoring_alarm_system.template.failed_to_send_sms_notificatio": "Failed to send SMS notification: ",
    "monitoring_alarm_system.template.alarm_1": "alarm:",
    "monitoring_alarm_system.template.alarm_silence": "alarm:silence:",
    "monitoring_alarm_system.template.alarm_2": "alarm:",
    "monitoring_alarm_system.template.error_in_alarm_monitoring_loop": "Error in alarm monitoring loop: ",
    "monitoring_app_monitoring.template.request_started": "Request started:   []",
    "monitoring_app_monitoring.template.request_completed_s": "Request completed:   [] [s] []",
    "monitoring_app_monitoring.template.error_in_request": "Error in request  : ",
    "monitoring_app_monitoring.template.error_getting_health_status": "Error getting health status: ",
    "monitoring_app_monitoring.template.database_check_failed": "Database check failed: ",
    "monitoring_app_monitoring.template.cache_check_failed": "Cache check failed: ",
    "monitoring_app_monitoring.template.completed_in_s": " completed in s",
    "monitoring_app_monitoring.template.failed_after_s": " failed after s: ",
    "monitoring_app_monitoring.template.timeline": ":timeline",
    "monitoring_app_monitoring.template.timeline_1": ":timeline",
    "v2_beneficiary_repository.template.cancellation_reason": "\nCancellation reason: ",
    "v2_beneficiary_repository.template.cancellation_reason_1": "Cancellation reason: ",
    "models_assessment.template.assessmenttemplate": "<AssessmentTemplate >",
    "models_assessment.template.assessmentsection": "<AssessmentSection >",
    "models_assessment.template.assessmentquestion": "<AssessmentQuestion >",
    "models_assessment.template.assessment": "<Assessment  - >",
    "models_assessment.template.assessmentresponse": "<AssessmentResponse >",
    "models_document_version.template.documentversion_document_v": "<DocumentVersion : Document  v>",
    "models_user.template.user": "<User >",
    "models_video_conference.template.videoconference": "<VideoConference  >",
    "models_video_conference.template.videoconferenceparticipant": "<VideoConferenceParticipant  >",
    "models_video_conference.template.videoconferencerecording": "<VideoConferenceRecording  >",
    "models_video_conference.template.videoconferenceinvitation": "<VideoConferenceInvitation  >",
    "models_video_conference.template.videoconferenceanalytics_con": "<VideoConferenceAnalytics  Conference:>",
    "models_beneficiary.template.beneficiary": "<Beneficiary  >",
    "models_permission.template.permission": "<Permission >",
    "models_permission.template.role": "<Role >",
    "models_notification.template.notification": "<Notification : >",
    "models_notification.template.messagethread": "<MessageThread : >",
    "models_profile.template.userprofile_user_id": "<UserProfile user_id=>",
    "models_sms_message.template.smsmessage": "<SMSMessage :  - >",
    "models_sms_message.template.": "{{}}",
    "models_sms_message.template.smstemplate": "<SMSTemplate : >",
    "models_sms_message.template.smscampaign": "<SMSCampaign : >",
    "models___init__.template.module_has_no_attribute": "module '' has no attribute ''",
    "models_integration.template.userintegration_user_id_prov": "<UserIntegration user_id= provider=>",
    "models_document.template.document": "<Document >",
    "models_settings.template.generalsettings": "<GeneralSettings >",
    "models_settings.template.appearancesettings": "<AppearanceSettings :>",
    "models_settings.template.notificationsettings": "<NotificationSettings >",
    "models_user_activity.template.useractivity_by_user": "<UserActivity  by user >",
    "models_appointment.template.appointment": "<Appointment  >",
    "models_availability.template.availabilityschedule": "<AvailabilitySchedule : >",
    "models_availability.template.availabilityslot": "<AvailabilitySlot :  ->",
    "models_availability.template.availabilityexception": "<AvailabilityException :  ->",
    "models_availability.template.availabilityexception_all": "<AvailabilityException :  All Day>",
    "models_document_permission.template.documentpermission_document": "<DocumentPermission document= user=>",
    "models_document_permission.template.documentpermission_document_1": "<DocumentPermission document= role=>",
    "models_chat_conversation.template.chatconversation": "<ChatConversation : >",
    "models_chat_conversation.template.chatmessage": "<ChatMessage : >",
    "models_chat_conversation.template.chatratelimit_user": "<ChatRateLimit : User >",
    "models_chat_conversation.template.conversationtemplate": "<ConversationTemplate : >",
    "cli_i18n_commands.template.created_language": "  ✨ Created language:  ()",
    "cli_i18n_commands.template.language_initialization_com": "\n🎉 Language initialization completed!",
    "cli_i18n_commands.template.created_languages": "   Created:  languages",
    "cli_i18n_commands.template.error_initializing_languages": "Error initializing languages: ",
    "cli_i18n_commands.template.error": "❌ Error: ",
    "cli_i18n_commands.template.translation_coverage_report": "\n📊 Translation Coverage Report",
    "cli_i18n_commands.template.reference_language": "   Reference language: ",
    "cli_i18n_commands.template.total_translation_keys": "   Total translation keys: ",
    "cli_i18n_commands.template.": "  ()",
    "cli_i18n_commands.template.coverage": "   Coverage: ",
    "cli_i18n_commands.template.missing_keys": "   Missing keys: ",
    "cli_i18n_commands.template.sample_missing": "   Sample missing: ",
    "cli_i18n_commands.template.error_checking_translations": "Error checking translations: ",
    "cli_i18n_commands.template.error_1": "❌ Error: ",
    "cli_i18n_commands.template.updating_translation_for": "🔄 Updating translation for ...",
    "cli_i18n_commands.template.error_updating_translation": "Error updating translation: ",
    "cli_i18n_commands.template.error_2": "❌ Error: ",
    "cli_i18n_commands.template.exporting_language_data_for": "📤 Exporting language data for ...",
    "cli_i18n_commands.template.error_3": "❌ Error: ",
    "cli_i18n_commands.template.language_export_json": "language_export__.json",
    "cli_i18n_commands.template.language_data_exported_to": "✅ Language data exported to: ",
    "cli_i18n_commands.template.ui_translations_keys": "   UI translations:  keys",
    "cli_i18n_commands.template.content_items_items": "   Content items:  items",
    "cli_i18n_commands.template.error_exporting_language": "Error exporting language: ",
    "cli_i18n_commands.template.error_4": "❌ Error: ",
    "cli_i18n_commands.template.importing_language_data_for": "📥 Importing language data for ...",
    "cli_i18n_commands.template.imported_ui_translation_key": "✅ Imported  UI translation keys",
    "cli_i18n_commands.template.language_import_completed_fo": "🎉 Language import completed for ",
    "cli_i18n_commands.template.file_not_found": "❌ File not found: ",
    "cli_i18n_commands.template.invalid_json_file": "❌ Invalid JSON file: ",
    "cli_i18n_commands.template.error_importing_language": "Error importing language: ",
    "cli_i18n_commands.template.error_5": "❌ Error: ",
    "cli_i18n_commands.template.overview": "📈 Overview:",
    "cli_i18n_commands.template.active_languages": "   Active languages: ",
    "cli_i18n_commands.template.content_items": "   Content items: ",
    "cli_i18n_commands.template.user_preferences": "   User preferences: ",
    "cli_i18n_commands.template.last_30_days": "\n📅 Last 30 Days:",
    "cli_i18n_commands.template.recent_translations": "   Recent translations: ",
    "cli_i18n_commands.template.language_usage": "\n🌐 Language Usage:",
    "cli_i18n_commands.template._1": "   : ",
    "cli_i18n_commands.template.translation_methods": "\n🔧 Translation Methods:",
    "cli_i18n_commands.template._2": "   : ",
    "cli_i18n_commands.template.average_quality_score": "\n⭐ Average Quality Score: ",
    "cli_i18n_commands.template.language_coverage": "\n🎯 Language Coverage:",
    "cli_i18n_commands.template.total_entities": "   Total entities: ",
    "cli_i18n_commands.template.complete_entities": "   Complete entities: ",
    "cli_i18n_commands.template.overall_coverage": "   Overall coverage: %",
    "cli_i18n_commands.template.error_generating_analytics": "Error generating analytics: ",
    "cli_i18n_commands.template.error_6": "❌ Error: ",
    "cli_i18n_commands.template.cleaning_up_translations_old": "🧹 Cleaning up translations older than  days...",
    "cli_i18n_commands.template.error_7": "❌ Error: ",
    "cli_i18n_commands.template.cleanup_completed": "✅ Cleanup completed:",
    "cli_i18n_commands.template.removed_versions": "   Removed versions: ",
    "cli_i18n_commands.template.removed_tm_entries": "   Removed TM entries: ",
    "cli_i18n_commands.template.cleanup_date": "   Cleanup date: ",
    "cli_i18n_commands.template.error_during_cleanup": "Error during cleanup: ",
    "cli_i18n_commands.template.error_8": "❌ Error: ",
    "cli_i18n_commands.template.error_9": "❌ Error: ",
    "cli_i18n_commands.template.translation_completed": "✅ Translation completed:",
    "cli_i18n_commands.template.success": "   Success: ",
    "cli_i18n_commands.template.errors": "   Errors: ",
    "cli_i18n_commands.template.created_translations": "   Created  translations",
    "cli_i18n_commands.template.error_translating_entity": "Error translating entity: ",
    "cli_i18n_commands.template.error_10": "❌ Error: ",
    "cli_i18n_commands.template.database_tables_missing_or_cor": "Database tables missing or corrupted: ",
    "cli_i18n_commands.template.empty_translation_file_for": "Empty translation file for ",
    "cli_i18n_commands.template.error_loading_translations_for": "Error loading translations for : ",
    "cli_i18n_commands.template.languages_in_service_but_not_i": "Languages in service but not in DB: ",
    "cli_i18n_commands.template.languages_in_db_but_not_in_ser": "Languages in DB but not in service: ",
    "cli_i18n_commands.template._3": "   • ",
    "cli_i18n_commands.template._4": "   • ",
    "cli_i18n_commands.template.validation_summary": "\n📊 Validation Summary:",
    "cli_i18n_commands.template.errors_1": "   Errors: ",
    "cli_i18n_commands.template.warnings": "   Warnings: ",
    "cli_i18n_commands.template.error_during_validation": "Error during validation: ",
    "cli_i18n_commands.template.validation_failed": "❌ Validation failed: ",
    "schemas_adaptive_test.template.achieved_level_with_th_percen": "Achieved  level with th percentile",
    "schemas_adaptive_test.template.strong_in": "Strong in: ",
    "schemas_adaptive_test.template.focus_on": "Focus on: ",
    "schemas_adaptive_test.template.accuracy_across_questions": "% accuracy across  questions",
    "realtime___init__.template.user_connected": "User  connected",
    "realtime___init__.template.authentication_failed": "Authentication failed: ",
    "realtime___init__.template.connection_error": "Connection error: ",
    "realtime___init__.template.user_disconnected": "User  disconnected",
    "realtime___init__.template.user_joined_room": "User  joined room ",
    "realtime___init__.template.user_left_room": "User  left room ",
    "integrations_config.template.failed_to_load_config_file": "Failed to load config file : ",
    "integrations_config.template.added_config_for_integration": "Added config for integration: ",
    "integrations_config.template.saved_configs_to": "Saved  configs to ",
    "integrations_config.template.failed_to_save_configs": "Failed to save configs: ",
    "integrations_config.template.failed_to_save_configs_1": "Failed to save configs: ",
    "integrations_config.template.registered_integration_instanc": "Registered integration instance: ",
    "integrations_registry.template.registered_integration_class": "Registered integration class: ",
    "integrations_registry.template.no_integration_class_registere": "No integration class registered for: ",
    "integrations_registry.template.created_integration_instance": "Created integration instance: ",
    "integrations_registry.template.removed_integration_instance": "Removed integration instance: ",
    "integrations_examples.template.found_calendars": "Found  calendars",
    "integrations_examples.template.primary_calendar": "Primary calendar: ",
    "integrations_examples.template.created_event_id": "Created event:  (ID: )",
    "integrations_examples.template.found_available_slots_next_we": "Found  available slots next week",
    "integrations_examples.template.calendar_example_failed": "Calendar example failed: ",
    "integrations_examples.template.created_customer_id": "Created customer:  (ID: )",
    "integrations_examples.template.created_payment_intent_for": "Created payment intent:  for $",
    "integrations_examples.template.customer_has_payment_methods": "Customer has  payment methods",
    "integrations_examples.template.found_transactions_for_custom": "Found  transactions for customer",
    "integrations_examples.template.payment_example_failed": "Payment example failed: ",
    "integrations_examples.template.created_meeting_id": "Created meeting:  (ID: )",
    "integrations_examples.template.join_url": "Join URL: ",
    "integrations_examples.template.created_instant_meeting": "Created instant meeting: ",
    "integrations_examples.template.found_upcoming_meetings": "Found  upcoming meetings",
    "integrations_examples.template.created_recurring_meeting": "Created recurring meeting: ",
    "integrations_examples.template.video_example_failed": "Video example failed: ",
    "integrations_examples.template.sent_welcome_email_id": "Sent welcome email (ID: )",
    "integrations_examples.template.sent_notification_email_id": "Sent notification email (ID: )",
    "integrations_examples.template.created_email_template_id": "Created email template (ID: )",
    "integrations_examples.template.sent_template_email_id": "Sent template email (ID: )",
    "integrations_examples.template.email_stats_sent_delivere": "Email stats - Sent: , Delivered: , Opened: ",
    "integrations_examples.template.email_example_failed": "Email example failed: ",
    "integrations_examples.template.registered_integration_classes": "Registered integration classes: ",
    "integrations_examples.template.registry_info": "Registry info: ",
    "integrations_examples.template.created_integration_instance": "Created  integration instance",
    "integrations_examples.template.failed_to_create": "Failed to create : ",
    "integrations_examples.template.successfully_created_integrat": "Successfully created  integration instances",
    "integrations_examples.template.calendar_integrations": "Calendar integrations: ",
    "integrations_examples.template.payment_integrations": "Payment integrations: ",
    "integrations_examples.template.video_integrations": "Video integrations: ",
    "integrations_examples.template.email_integrations": "Email integrations: ",
    "integrations_examples.template.stripe_webhook_processed": "Stripe webhook processed: ",
    "integrations_examples.template.sendgrid_webhook_processed_ev": "SendGrid webhook processed  events",
    "integrations_testing.template.test_suite_not_found": "Test suite '' not found",
    "integrations_testing.template.running_test_suite": "Running test suite: ",
    "integrations_testing.template.failed_to_run_test_suite": "Failed to run test suite : ",
    "integrations_testing.template.missing_required_configuration": "Missing required configurations: ",
    "integrations_testing.template.test_method_not_found": "Test method '' not found",
    "integrations_testing.template.test_timed_out_after_seconds": "Test timed out after  seconds",
    "integrations_testing.template.assertion_failed": "Assertion failed: ",
    "integrations_testing.template.test_error": "Test error: ",
    "integrations_testing.template.test_setup_error": "Test setup error: ",
    "integrations_testing.template.failed_to_create": "Failed to create : ",
    "integrations_testing.template.config_is_none": "Config  is None",
    "integrations_testing.template.config_name_mismatch": "Config name mismatch:  != ",
    "integrations_testing.template.calendar_connection_test_faile": "Calendar connection test failed for : ",
    "integrations_testing.template.payment_connection_test_failed": "Payment connection test failed for : ",
    "integrations_testing.template.overall_results": "Overall Results:",
    "integrations_testing.template.total_tests": "  Total Tests: ",
    "integrations_testing.template.passed": "  Passed: ",
    "integrations_testing.template.failed": "  Failed: ",
    "integrations_testing.template.skipped": "  Skipped: ",
    "integrations_testing.template.errors": "  Errors: ",
    "integrations_testing.template.success_rate": "  Success Rate: %",
    "integrations_testing.template.test_suite": "Test Suite: ",
    "integrations_testing.template.tests": "  Tests: ",
    "integrations_testing.template.passed_1": "  Passed: ",
    "integrations_testing.template.failed_1": "  Failed: ",
    "integrations_testing.template.skipped_1": "  Skipped: ",
    "integrations_testing.template.errors_1": "  Errors: ",
    "integrations_testing.template.success_rate_1": "  Success Rate: %",
    "integrations_testing.template.duration_s": "  Duration: s",
    "integrations_testing.template.s": "      (s)",
    "integrations_base.template.authentication_failed": "Authentication failed: ",
    "integrations_base.template.authentication_failed_1": "Authentication failed: ",
    "integrations_base.template.received_webhook_for": "Received webhook for : ",
    "video_base_video.template.meeting_not_found_or_has_no_j": "Meeting  not found or has no join URL",
    "video_base_video.template.uname": "uname=",
    "video_base_video.template.pwd": "pwd=",
    "video_base_video.template.sending_invitation_for_meeting": "Sending invitation for meeting  to  recipients",
    "video_meet_integration.template.failed_to_refresh_token": "Failed to refresh token: ",
    "video_meet_integration.template.failed_to_connect_to_google_me": "Failed to connect to Google Meet: ",
    "video_meet_integration.template.connection_test_failed": "Connection test failed: ",
    "video_meet_integration.template.failed_to_create_google_meet_m": "Failed to create Google Meet meeting: ",
    "video_meet_integration.template.failed_to_create_meeting": "Failed to create meeting: ",
    "video_meet_integration.template.failed_to_get_google_meet_meet": "Failed to get Google Meet meeting: ",
    "video_meet_integration.template.failed_to_get_meeting": "Failed to get meeting: ",
    "video_meet_integration.template.failed_to_list_google_meet_mee": "Failed to list Google Meet meetings: ",
    "video_meet_integration.template.failed_to_list_meetings": "Failed to list meetings: ",
    "video_meet_integration.template.failed_to_add_participant": "Failed to add participant: ",
    "video_meet_integration.template.failed_to_remove_participant": "Failed to remove participant: ",
    "video_meet_integration.template.meet": "meet-",
    "video_teams_integration.template.token_exchange_failed": "Token exchange failed: ",
    "video_teams_integration.template.failed_to_refresh_token": "Failed to refresh token: ",
    "video_teams_integration.template.failed_to_connect_to_teams": "Failed to connect to Teams: ",
    "video_teams_integration.template.connection_test_failed": "Connection test failed: ",
    "video_teams_integration.template.failed_to_create_teams_meeting": "Failed to create Teams meeting: ",
    "video_teams_integration.template.failed_to_create_teams_meeting_1": "Failed to create Teams meeting: ",
    "video_teams_integration.template.failed_to_create_meeting": "Failed to create meeting: ",
    "video_teams_integration.template.failed_to_get_teams_meeting": "Failed to get Teams meeting: ",
    "video_teams_integration.template.failed_to_get_teams_meeting_1": "Failed to get Teams meeting: ",
    "video_teams_integration.template.failed_to_get_meeting": "Failed to get meeting: ",
    "video_teams_integration.template.failed_to_list_teams_meetings": "Failed to list Teams meetings: ",
    "video_teams_integration.template.failed_to_list_teams_meetings_1": "Failed to list Teams meetings: ",
    "video_teams_integration.template.failed_to_list_meetings": "Failed to list meetings: ",
    "video_zoom_integration.template.token_exchange_failed": "Token exchange failed: ",
    "video_zoom_integration.template.failed_to_refresh_token": "Failed to refresh token: ",
    "video_zoom_integration.template.failed_to_connect_to_zoom": "Failed to connect to Zoom: ",
    "video_zoom_integration.template.connection_test_failed": "Connection test failed: ",
    "video_zoom_integration.template.failed_to_create_zoom_meeting": "Failed to create Zoom meeting: ",
    "video_zoom_integration.template.failed_to_create_zoom_meeting_1": "Failed to create Zoom meeting: ",
    "video_zoom_integration.template.failed_to_create_meeting": "Failed to create meeting: ",
    "video_zoom_integration.template.failed_to_get_zoom_meeting": "Failed to get Zoom meeting: ",
    "video_zoom_integration.template.failed_to_get_zoom_meeting_1": "Failed to get Zoom meeting: ",
    "video_zoom_integration.template.failed_to_get_meeting": "Failed to get meeting: ",
    "video_zoom_integration.template.failed_to_list_zoom_meetings": "Failed to list Zoom meetings: ",
    "video_zoom_integration.template.failed_to_list_zoom_meetings_1": "Failed to list Zoom meetings: ",
    "video_zoom_integration.template.failed_to_list_meetings": "Failed to list meetings: ",
    "video_zoom_integration.template.failed_to_start_zoom_meeting": "Failed to start Zoom meeting: ",
    "video_zoom_integration.template.failed_to_end_zoom_meeting": "Failed to end Zoom meeting: ",
    "video_zoom_integration.template.failed_to_get_participants": "Failed to get participants: ",
    "video_zoom_integration.template.failed_to_get_zoom_meeting_par": "Failed to get Zoom meeting participants: ",
    "video_zoom_integration.template.failed_to_remove_participant": "Failed to remove participant: ",
    "video_zoom_integration.template.failed_to_mute_participant": "Failed to mute participant: ",
    "video_zoom_integration.template.failed_to_unmute_participant": "Failed to unmute participant: ",
    "video_zoom_integration.template.failed_to_start_recording": "Failed to start recording: ",
    "video_zoom_integration.template.failed_to_stop_recording": "Failed to stop recording: ",
    "video_zoom_integration.template.failed_to_get_recordings": "Failed to get recordings: ",
    "video_zoom_integration.template.failed_to_get_zoom_recordings": "Failed to get Zoom recordings: ",
    "payments_stripe_integration.template.failed_to_connect_to_stripe": "Failed to connect to Stripe: ",
    "payments_stripe_integration.template.stripe_connection_test_failed": "Stripe connection test failed: ",
    "payments_stripe_integration.template.failed_to_create_stripe_custom": "Failed to create Stripe customer: ",
    "payments_stripe_integration.template.failed_to_create_customer": "Failed to create customer: ",
    "payments_stripe_integration.template.failed_to_get_stripe_customer": "Failed to get Stripe customer: ",
    "payments_stripe_integration.template.failed_to_get_customer": "Failed to get customer: ",
    "payments_stripe_integration.template.failed_to_create_stripe_paymen": "Failed to create Stripe payment method: ",
    "payments_stripe_integration.template.failed_to_create_payment_metho": "Failed to create payment method: ",
    "payments_stripe_integration.template.failed_to_get_stripe_payment_m": "Failed to get Stripe payment method: ",
    "payments_stripe_integration.template.failed_to_get_payment_method": "Failed to get payment method: ",
    "payments_stripe_integration.template.failed_to_list_stripe_payment": "Failed to list Stripe payment methods: ",
    "payments_stripe_integration.template.failed_to_list_payment_methods": "Failed to list payment methods: ",
    "payments_stripe_integration.template.failed_to_detach_stripe_paymen": "Failed to detach Stripe payment method: ",
    "payments_stripe_integration.template.failed_to_create_stripe_paymen_1": "Failed to create Stripe payment intent: ",
    "payments_stripe_integration.template.failed_to_create_payment_inten": "Failed to create payment intent: ",
    "payments_stripe_integration.template.failed_to_get_stripe_payment_i": "Failed to get Stripe payment intent: ",
    "payments_stripe_integration.template.failed_to_get_payment_intent": "Failed to get payment intent: ",
    "payments_stripe_integration.template.failed_to_confirm_stripe_payme": "Failed to confirm Stripe payment intent: ",
    "payments_stripe_integration.template.failed_to_confirm_payment_inte": "Failed to confirm payment intent: ",
    "payments_stripe_integration.template.failed_to_cancel_stripe_paymen": "Failed to cancel Stripe payment intent: ",
    "payments_stripe_integration.template.failed_to_cancel_payment_inten": "Failed to cancel payment intent: ",
    "payments_stripe_integration.template.failed_to_capture_stripe_payme": "Failed to capture Stripe payment intent: ",
    "payments_stripe_integration.template.failed_to_capture_payment_inte": "Failed to capture payment intent: ",
    "payments_stripe_integration.template.failed_to_get_stripe_transacti": "Failed to get Stripe transaction: ",
    "payments_stripe_integration.template.failed_to_get_transaction": "Failed to get transaction: ",
    "payments_stripe_integration.template.failed_to_list_stripe_transact": "Failed to list Stripe transactions: ",
    "payments_stripe_integration.template.failed_to_list_transactions": "Failed to list transactions: ",
    "payments_stripe_integration.template.failed_to_create_stripe_refund": "Failed to create Stripe refund: ",
    "payments_stripe_integration.template.failed_to_create_refund": "Failed to create refund: ",
    "payments_stripe_integration.template.failed_to_get_stripe_refund": "Failed to get Stripe refund: ",
    "payments_stripe_integration.template.failed_to_get_refund": "Failed to get refund: ",
    "payments_stripe_integration.template.failed_to_list_stripe_refunds": "Failed to list Stripe refunds: ",
    "payments_stripe_integration.template.failed_to_list_refunds": "Failed to list refunds: ",
    "payments_paypal_integration.template.paypal_auth_failed": "PayPal auth failed: ",
    "payments_paypal_integration.template.paypal_authentication_failed": "PayPal authentication failed: ",
    "payments_paypal_integration.template.failed_to_connect_to_paypal": "Failed to connect to PayPal: ",
    "payments_paypal_integration.template.paypal_connection_test_failed": "PayPal connection test failed: ",
    "payments_paypal_integration.template.failed_to_create_paypal_order": "Failed to create PayPal order: ",
    "payments_paypal_integration.template.failed_to_create_paypal_order_1": "Failed to create PayPal order: ",
    "payments_paypal_integration.template.failed_to_create_payment_inten": "Failed to create payment intent: ",
    "payments_paypal_integration.template.failed_to_get_paypal_order": "Failed to get PayPal order: ",
    "payments_paypal_integration.template.failed_to_get_paypal_order_1": "Failed to get PayPal order: ",
    "payments_paypal_integration.template.failed_to_get_payment_intent": "Failed to get payment intent: ",
    "payments_paypal_integration.template.failed_to_capture_paypal_order": "Failed to capture PayPal order: ",
    "payments_paypal_integration.template.failed_to_capture_paypal_order_1": "Failed to capture PayPal order: ",
    "payments_paypal_integration.template.failed_to_confirm_payment_inte": "Failed to confirm payment intent: ",
    "payments_paypal_integration.template.failed_to_get_paypal_capture": "Failed to get PayPal capture: ",
    "payments_paypal_integration.template.failed_to_get_paypal_capture_1": "Failed to get PayPal capture: ",
    "payments_paypal_integration.template.failed_to_get_transaction": "Failed to get transaction: ",
    "payments_paypal_integration.template.failed_to_create_paypal_refund": "Failed to create PayPal refund: ",
    "payments_paypal_integration.template.failed_to_create_paypal_refund_1": "Failed to create PayPal refund: ",
    "payments_paypal_integration.template.failed_to_create_refund": "Failed to create refund: ",
    "payments_paypal_integration.template.failed_to_get_paypal_refund": "Failed to get PayPal refund: ",
    "payments_paypal_integration.template.failed_to_get_paypal_refund_1": "Failed to get PayPal refund: ",
    "payments_paypal_integration.template.failed_to_get_refund": "Failed to get refund: ",
    "calendar_outlook_calendar.template.token_exchange_failed": "Token exchange failed: ",
    "calendar_outlook_calendar.template.failed_to_refresh_token": "Failed to refresh token: ",
    "calendar_outlook_calendar.template.failed_to_connect_to_outlook_c": "Failed to connect to Outlook Calendar: ",
    "calendar_outlook_calendar.template.connection_test_failed": "Connection test failed: ",
    "calendar_outlook_calendar.template.failed_to_get_calendars": "Failed to get calendars: ",
    "calendar_outlook_calendar.template.failed_to_get_calendars_1": "Failed to get calendars: ",
    "calendar_outlook_calendar.template.failed_to_get_calendars_2": "Failed to get calendars: ",
    "calendar_outlook_calendar.template.failed_to_create_event": "Failed to create event: ",
    "calendar_outlook_calendar.template.failed_to_create_event_1": "Failed to create event: ",
    "calendar_outlook_calendar.template.failed_to_create_event_2": "Failed to create event: ",
    "calendar_outlook_calendar.template.failed_to_get_event": "Failed to get event: ",
    "calendar_outlook_calendar.template.failed_to_get_event_1": "Failed to get event: ",
    "calendar_outlook_calendar.template.failed_to_get_event_2": "Failed to get event: ",
    "calendar_outlook_calendar.template.start_datetime_ge": "start/dateTime ge ''",
    "calendar_outlook_calendar.template.end_datetime_le": "end/dateTime le ''",
    "calendar_outlook_calendar.template.failed_to_list_events": "Failed to list events: ",
    "calendar_outlook_calendar.template.failed_to_list_events_1": "Failed to list events: ",
    "calendar_outlook_calendar.template.failed_to_list_events_2": "Failed to list events: ",
    "calendar_outlook_calendar.template.failed_to_search_events": "Failed to search events: ",
    "calendar_outlook_calendar.template.failed_to_search_events_1": "Failed to search events: ",
    "calendar_outlook_calendar.template.failed_to_search_events_2": "Failed to search events: ",
    "calendar_ical_calendar.template.caldav_authentication_failed": "CalDAV authentication failed: ",
    "calendar_ical_calendar.template.connection_test_failed": "Connection test failed: ",
    "calendar_ical_calendar.template.failed_to_get_calendars": "Failed to get calendars: ",
    "calendar_ical_calendar.template.failed_to_get_calendars_1": "Failed to get calendars: ",
    "calendar_ical_calendar.template.calendar_not_found": "Calendar not found: ",
    "calendar_ical_calendar.template.failed_to_create_event": "Failed to create event: ",
    "calendar_ical_calendar.template.failed_to_create_event_1": "Failed to create event: ",
    "calendar_ical_calendar.template.failed_to_get_event": "Failed to get event: ",
    "calendar_ical_calendar.template.calendar_not_found_1": "Calendar not found: ",
    "calendar_ical_calendar.template.event_not_found": "Event not found: ",
    "calendar_ical_calendar.template.calendar_not_found_2": "Calendar not found: ",
    "calendar_ical_calendar.template.failed_to_convert_event": "Failed to convert event: ",
    "calendar_ical_calendar.template.failed_to_list_events": "Failed to list events: ",
    "calendar_ical_calendar.template.failed_to_list_events_1": "Failed to list events: ",
    "calendar_ical_calendar.template.failed_to_get_calendar": "Failed to get calendar: ",
    "calendar_ical_calendar.template.mailto": "mailto:",
    "calendar_google_calendar.template.failed_to_refresh_token": "Failed to refresh token: ",
    "calendar_google_calendar.template.failed_to_connect_to_google_ca": "Failed to connect to Google Calendar: ",
    "calendar_google_calendar.template.connection_test_failed": "Connection test failed: ",
    "calendar_google_calendar.template.failed_to_get_calendars": "Failed to get calendars: ",
    "calendar_google_calendar.template.failed_to_get_calendars_1": "Failed to get calendars: ",
    "calendar_google_calendar.template.failed_to_create_event": "Failed to create event: ",
    "calendar_google_calendar.template.failed_to_create_event_1": "Failed to create event: ",
    "calendar_google_calendar.template.failed_to_get_event": "Failed to get event: ",
    "calendar_google_calendar.template.failed_to_get_event_1": "Failed to get event: ",
    "calendar_google_calendar.template.failed_to_list_events": "Failed to list events: ",
    "calendar_google_calendar.template.failed_to_list_events_1": "Failed to list events: ",
    "calendar_google_calendar.template.failed_to_search_events": "Failed to search events: ",
    "calendar_google_calendar.template.failed_to_search_events_1": "Failed to search events: ",
    "email_base_email.template.hello": "\n        Hello,\n        \n        You have requested to reset your password. Please click the link below to reset your password:\n        \n        \n        \n        This link will expire in 24 hours.\n        \n        If you did not request this password reset, please ignore this email.\n        \n        Best regards,\n        The BDC Team\n        ",
    "email_base_email.template.html_body": "\n        <html>\n        <body>\n            <h2>Password Reset Request</h2>\n            <p>Hello,</p>\n            <p>You have requested to reset your password. Please click the button below to reset your password:</p>\n            <p><a href=\"\" style=\"background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">Reset Password</a></p>\n            <p>This link will expire in 24 hours.</p>\n            <p>If you did not request this password reset, please ignore this email.</p>\n            <p>Best regards,<br>The BDC Team</p>\n        </body>\n        </html>\n        ",
    "email_base_email.template.welcome_to_bdc": "Welcome to BDC, !",
    "email_base_email.template.hello_1": "\n        Hello ,\n        \n        Welcome to BDC! We're excited to have you on board.\n        \n        \n        \n        If you have any questions, please don't hesitate to contact our support team.\n        \n        Best regards,\n        The BDC Team\n        ",
    "email_base_email.template.html_body_1": "\n        <html>\n        <body>\n            <h2>Welcome to BDC!</h2>\n            <p>Hello ,</p>\n            <p>Welcome to BDC! We're excited to have you on board.</p>\n            \n            <p>If you have any questions, please don't hesitate to contact our support team.</p>\n            <p>Best regards,<br>The BDC Team</p>\n        </body>\n        </html>\n        ",
    "email_base_email.template.p_a_href_style_backgroun": "<p><a href=\"\" style=\"background-color: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">Login to Your Account</a></p>",
    "email_base_email.template.invalid_email_address": "Invalid email address: ",
    "email_sendgrid_integration.template.failed_to_connect_to_sendgrid": "Failed to connect to SendGrid: ",
    "email_sendgrid_integration.template.sendgrid_connection_test_faile": "SendGrid connection test failed: ",
    "email_sendgrid_integration.template.sendgrid_send_failed": "SendGrid send failed: ",
    "email_sendgrid_integration.template.failed_to_send_email_via_sendg": "Failed to send email via SendGrid: ",
    "email_sendgrid_integration.template.failed_to_send_email": "Failed to send email: ",
    "email_sendgrid_integration.template.failed_to_send_bulk_email": "Failed to send bulk email: ",
    "email_sendgrid_integration.template.failed_to_get_email_status": "Failed to get email status: ",
    "email_sendgrid_integration.template.failed_to_get_email_stats": "Failed to get email stats: ",
    "email_sendgrid_integration.template.failed_to_create_template": "Failed to create template: ",
    "email_sendgrid_integration.template.failed_to_create_template_1": "Failed to create template: ",
    "email_sendgrid_integration.template.failed_to_get_template": "Failed to get template: ",
    "email_sendgrid_integration.template.failed_to_list_templates": "Failed to list templates: ",
    "email_sendgrid_integration.template.template_send_failed": "Template send failed: ",
    "email_sendgrid_integration.template.failed_to_send_template_email": "Failed to send template email: ",
    "email_sendgrid_integration.template.failed_to_send_template_email_1": "Failed to send template email: ",
    "email_sendgrid_integration.template.failed_to_add_to_suppression_l": "Failed to add to suppression list: ",
    "email_sendgrid_integration.template.failed_to_check_suppression_li": "Failed to check suppression list: ",
    "email_sendgrid_integration.template.failed_to_parse_sendgrid_event": "Failed to parse SendGrid event: ",
    "api_auth.template.login_error": "Login error: ",
    "api_auth.template.registration_error": "Registration error: ",
    "api_auth.template.token_refresh_error": "Token refresh error: ",
    "api_auth.template.logout_error": "Logout error: ",
    "api_auth.template.change_password_error": "Change password error: ",
    "api_auth.template.reset_password_error": "Reset password error: ",
    "api_assessment.template.is_required": " is required",
    "api_gamification_v2.template.error_getting_gamification_das": "Error getting gamification dashboard: ",
    "api_gamification_v2.template.error_getting_gamification_sum": "Error getting gamification summary: ",
    "api_gamification_v2.template.error_triggering_gamification": "Error triggering gamification event: ",
    "api_gamification_v2.template.error_awarding_xp": "Error awarding XP: ",
    "api_gamification_v2.template.error_getting_xp_history": "Error getting XP history: ",
    "api_gamification_v2.template.error_getting_xp_statistics": "Error getting XP statistics: ",
    "api_gamification_v2.template.error_getting_level_progress": "Error getting level progress: ",
    "api_gamification_v2.template.error_creating_badge": "Error creating badge: ",
    "api_gamification_v2.template.error_awarding_badge": "Error awarding badge: ",
    "api_gamification_v2.template.error_getting_user_badges": "Error getting user badges: ",
    "api_gamification_v2.template.error_getting_badge_showcase": "Error getting badge showcase: ",
    "api_gamification_v2.template.error_getting_available_badges": "Error getting available badges: ",
    "api_gamification_v2.template.error_creating_achievement": "Error creating achievement: ",
    "api_gamification_v2.template.error_getting_user_achievement": "Error getting user achievements: ",
    "api_gamification_v2.template.error_getting_available_achiev": "Error getting available achievements: ",
    "api_gamification_v2.template.error_creating_leaderboard": "Error creating leaderboard: ",
    "api_gamification_v2.template.error_getting_leaderboard": "Error getting leaderboard: ",
    "api_gamification_v2.template.error_getting_leaderboard_by_t": "Error getting leaderboard by type: ",
    "api_gamification_v2.template.error_getting_global_leaderboa": "Error getting global leaderboards: ",
    "api_gamification_v2.template.error_getting_user_rankings": "Error getting user rankings: ",
    "api_gamification_v2.template.error_creating_team": "Error creating team: ",
    "api_gamification_v2.template.error_joining_team": "Error joining team: ",
    "api_gamification_v2.template.error_getting_user_teams": "Error getting user teams: ",
    "api_gamification_v2.template.error_getting_social_feed": "Error getting social feed: ",
    "api_gamification_v2.template.error_creating_learning_path": "Error creating learning path: ",
    "api_gamification_v2.template.error_getting_user_learning_pa": "Error getting user learning paths: ",
    "api_gamification_v2.template.error_getting_recommended_lear": "Error getting recommended learning paths: ",
    "api_gamification_v2.template.error_getting_learning_path_pr": "Error getting learning path progress: ",
    "api_gamification_v2.template.error_getting_user_progress": "Error getting user progress: ",
    "api_gamification_v2.template.error_getting_progress_dashboa": "Error getting progress dashboard: ",
    "api_gamification_v2.template.error_getting_global_stats": "Error getting global stats: ",
    "api_settings_routes.template.missing_required_field": "Missing required field: ",
    "api_settings_routes.template.successfully_connected_to": "Successfully connected to ",
    "api_portal.template.an_error_occurred": "An error occurred: ",
    "api_portal.template.an_error_occurred_1": "An error occurred: ",
    "api_portal.template.an_error_occurred_2": "An error occurred: ",
    "api_portal.template.completed": "Completed ",
    "api_portal.template.successfully_completed_the_pr": "Successfully completed the  program",
    "api_portal.template.excellence_in": "Excellence in ",
    "api_portal.template.scored_in": "Scored % in ",
    "api_portal.template.perfect_attendance": "Perfect Attendance - ",
    "api_portal.template.an_error_occurred_3": "An error occurred: ",
    "api_portal.template.an_error_occurred_4": "An error occurred: ",
    "api_portal.template.an_error_occurred_5": "An error occurred: ",
    "api_portal.template.an_error_occurred_6": "An error occurred: ",
    "api_portal.template.an_error_occurred_7": "An error occurred: ",
    "api_question_randomization.template.get_randomization_config_error": "Get randomization config error: ",
    "api_question_randomization.template.generate_question_order_error": "Generate question order error: ",
    "api_question_randomization.template.analyze_question_exposure_erro": "Analyze question exposure error: ",
    "api_question_randomization.template.preview_randomization_error": "Preview randomization error: ",
    "api_users.template.get_current_user_error": "Get current user error: ",
    "api_users.template.get_users_error": "Get users error: ",
    "api_users.template.upload_profile_picture_error": "Upload profile picture error: ",
    "api_users.template.get_user_profile_error": "Get user profile error: ",
    "api_users.template.get_user_error": "Get user error: ",
    "api_users.template.create_user_error": "Create user error: ",
    "api_users.template.error": "Error: ",
    "api_users.template.get_user_profile_error_1": "Get user profile error: ",
    "api_health.template.database_connection_failed": "Database connection failed: ",
    "api_health.template.redis_connection_failed": "Redis connection failed: ",
    "api_health.template.disk_space_ok_free": "Disk space OK (% free)",
    "api_health.template.disk_space_low_free": "Disk space low (% free)",
    "api_health.template.disk_space_critical_free": "Disk space critical (% free)",
    "api_health.template.could_not_check_disk_space": "Could not check disk space: ",
    "api_health.template.memory_usage_ok": "Memory usage OK (%)",
    "api_health.template.memory_usage_high": "Memory usage high (%)",
    "api_health.template.memory_usage_critical": "Memory usage critical (%)",
    "api_health.template.could_not_check_memory": "Could not check memory: ",
    "api_health.template.bdc_users_total": "bdc_users_total ",
    "api_health.template.bdc_programs_total": "bdc_programs_total ",
    "api_health.template.bdc_beneficiaries_total": "bdc_beneficiaries_total ",
    "api_health.template.bdc_memory_usage_percent": "bdc_memory_usage_percent ",
    "api_health.template.bdc_memory_used_bytes": "bdc_memory_used_bytes ",
    "api_health.template.bdc_memory_total_bytes": "bdc_memory_total_bytes ",
    "api_health.template.bdc_cpu_usage_percent": "bdc_cpu_usage_percent ",
    "api_health.template.bdc_disk_usage_percent": "bdc_disk_usage_percent ",
    "api_health.template.bdc_disk_free_bytes": "bdc_disk_free_bytes ",
    "api_health.template.bdc_disk_total_bytes": "bdc_disk_total_bytes ",
    "api_health.template.bdc_app_info_version_1_0_0_s": "bdc_app_info{version=\"1.0.0\",service=\"bdc-backend\"} 1",
    "api_health.template.bdc_app_uptime_seconds": "bdc_app_uptime_seconds ",
    "api_health.template.error_generating_metrics": "# Error generating metrics: \n",
    "api_webrtc.template.error_creating_webrtc_room": "Error creating WebRTC room: ",
    "api_webrtc.template.error_getting_webrtc_room_info": "Error getting WebRTC room info: ",
    "api_webrtc.template.error_joining_webrtc_room": "Error joining WebRTC room: ",
    "api_webrtc.template.error_getting_room_participant": "Error getting room participants: ",
    "api_webrtc.template.error_getting_webrtc_config": "Error getting WebRTC config: ",
    "api_webrtc.template.error_getting_room_stats": "Error getting room stats: ",
    "api_webrtc.template.error_getting_user_active_sess": "Error getting user active sessions: ",
    "api_documents.template.error_updating_document": "Error updating document: ",
    "api_documents.template.error_deleting_file": "Error deleting file: ",
    "api_documents.template.error_deleting_document": "Error deleting document: ",
    "api_documents.template.has_shared_with_you": "  has shared \"\" with you",
    "api_documents.template.error_sharing_document": "Error sharing document: ",
    "api_documents.template.evaluation_report_pdf": "evaluation_report__.pdf",
    "api_documents.template.beneficiary_report_pdf": "beneficiary_report__.pdf",
    "api_documents.template.only_files_are_allowed": "Only  files are allowed",
    "api_documents.template.error_creating_document_versio": "Error creating document version: ",
    "api_documents.template.error_restoring_document_versi": "Error restoring document version: ",
    "api_documents.template.error_comparing_document_versi": "Error comparing document versions: ",
    "api_documents.template.error_enabling_document_versio": "Error enabling document versioning: ",
    "api_appointments.template.error_getting_appointments": "Error getting appointments: ",
    "api_appointments.template.error_creating_appointment": "Error creating appointment: ",
    "api_appointments.template.error_updating_appointment": "Error updating appointment: ",
    "api_appointments.template.error_deleting_appointment": "Error deleting appointment: ",
    "api_appointments.template.error_syncing_appointment": "Error syncing appointment: ",
    "api_appointments.template.error_unsyncing_appointment": "Error unsyncing appointment: ",
    "api_video_conferences.template.missing_required_field": "Missing required field: ",
    "api_video_conferences.template.error_creating_video_conferenc": "Error creating video conference: ",
    "api_video_conferences.template.error_getting_video_conference": "Error getting video conference: ",
    "api_video_conferences.template.error_updating_video_conferenc": "Error updating video conference: ",
    "api_video_conferences.template.error_cancelling_video_confere": "Error cancelling video conference: ",
    "api_video_conferences.template.error_starting_video_conferenc": "Error starting video conference: ",
    "api_video_conferences.template.error_ending_video_conference": "Error ending video conference: ",
    "api_video_conferences.template.missing_required_field_1": "Missing required field: ",
    "api_video_conferences.template.error_adding_participant": "Error adding participant: ",
    "api_video_conferences.template.error_getting_participants": "Error getting participants: ",
    "api_video_conferences.template.missing_required_field_2": "Missing required field: ",
    "api_video_conferences.template.error_sending_invitation": "Error sending invitation: ",
    "api_video_conferences.template.error_starting_recording": "Error starting recording: ",
    "api_video_conferences.template.error_stopping_recording": "Error stopping recording: ",
    "api_video_conferences.template.error_getting_recordings": "Error getting recordings: ",
    "api_video_conferences.template.error_getting_analytics": "Error getting analytics: ",
    "api_video_conferences.template.error_getting_user_conferences": "Error getting user conferences: ",
    "api_video_conferences.template.video_conferencing": " video conferencing",
    "api_video_conferences.template.error_getting_providers": "Error getting providers: ",
    "api_video_conferences.template.error_getting_dashboard": "Error getting dashboard: ",
    "api_evaluations.template.student_user_id_email": "Student user ID: , Email: ",
    "api_evaluations.template.beneficiary_found": "Beneficiary found: ",
    "api_evaluations.template.beneficiary_id_user_id": "Beneficiary ID: , User ID: ",
    "api_evaluations.template.get_evaluations_error": "Get evaluations error: ",
    "api_evaluations.template.get_evaluation_error": "Get evaluation error: ",
    "api_evaluations.template.create_evaluation_error": "Create evaluation error: ",
    "api_evaluations.template.get_questions_error": "Get questions error: ",
    "api_evaluations.template.create_question_error": "Create question error: ",
    "api_evaluations.template.get_sessions_error": "Get sessions error: ",
    "api_evaluations.template.submit_evaluation_error": "Submit evaluation error: ",
    "api_evaluations.template.get_evaluation_results_error": "Get evaluation results error: ",
    "api_evaluations.template.analyze_evaluation_error": "Analyze evaluation error: ",
    "api_performance_monitoring.template.performance_dashboard_error": "Performance dashboard error: ",
    "api_performance_monitoring.template.system_metrics_error": "System metrics error: ",
    "api_performance_monitoring.template.database_metrics_error": "Database metrics error: ",
    "api_performance_monitoring.template.slow_queries_error": "Slow queries error: ",
    "api_performance_monitoring.template.query_analysis_error": "Query analysis error: ",
    "api_performance_monitoring.template.cache_metrics_error": "Cache metrics error: ",
    "api_performance_monitoring.template.cache_clear_error": "Cache clear error: ",
    "api_performance_monitoring.template.memory_metrics_error": "Memory metrics error: ",
    "api_performance_monitoring.template.memory_optimization_error": "Memory optimization error: ",
    "api_performance_monitoring.template.api_metrics_error": "API metrics error: ",
    "api_performance_monitoring.template.celery_metrics_error": "Celery metrics error: ",
    "api_performance_monitoring.template.index_optimization_error": "Index optimization error: ",
    "api_performance_monitoring.template.performance_alerts_error": "Performance alerts error: ",
    "api_performance_monitoring.template.database_connection_failed": "Database connection failed: ",
    "api_performance_monitoring.template.cache_connection_failed": "Cache connection failed: ",
    "api_performance_monitoring.template.memory_usage_critical": "Memory usage critical: %",
    "api_performance_monitoring.template.memory_usage_high": "Memory usage high: %",
    "api_performance_monitoring.template.memory_usage_normal": "Memory usage normal: %",
    "api_performance_monitoring.template.health_check_error": "Health check error: ",
    "api_performance_monitoring.template.system_overview_error": "System overview error: ",
    "api_performance_monitoring.template.database_performance_error": "Database performance error: ",
    "api_performance_monitoring.template.cache_performance_error": "Cache performance error: ",
    "api_performance_monitoring.template.memory_usage_error": "Memory usage error: ",
    "api_performance_monitoring.template.api_performance_error": "API performance error: ",
    "api_performance_monitoring.template.celery_performance_error": "Celery performance error: ",
    "api_performance_monitoring.template.memory_usage_critical_1": "Memory usage critical: %",
    "api_performance_monitoring.template.memory_usage_high_1": "Memory usage high: %",
    "api_performance_monitoring.template.cpu_usage_critical": "CPU usage critical: %",
    "api_performance_monitoring.template.cpu_usage_high": "CPU usage high: %",
    "api_performance_monitoring.template.high_number_of_slow_queries": "High number of slow queries: ",
    "api_performance_monitoring.template.low_cache_hit_rate": "Low cache hit rate: %",
    "api_performance_monitoring.template.high_slow_request_rate": "High slow request rate: %",
    "api_performance_monitoring.template.performance_alerts_error_1": "Performance alerts error: ",
    "api_tests_simple.template.get_tests_error": "Get tests error: ",
    "api_tests_simple.template.get_test_error": "Get test error: ",
    "api_calendar.template.calendar_error": "Calendar error: ",
    "api_calendar.template.is_required": " is required",
    "api_programs.template.new_program_has_been_create": "New program \"\" has been created",
    "api_programs.template.failed_to_emit_program_created": "Failed to emit program_created event: ",
    "api_chat.template.attachment_filename_conversat": "attachment; filename=conversation_.txt",
    "api_chat.template.is_required": " is required",
    "api_recurring_appointments.template.missing_required_field": "Missing required field: ",
    "api_recurring_appointments.template.missing_required_field_1": "Missing required field: ",
    "api_recurring_appointments.template.missing_required_field_2": "Missing required field: ",
    "api_recurring_appointments.template.successfully_cancelled_appoin": "Successfully cancelled  appointments",
    "api_recurring_appointments.template.successfully_generated_new_ap": "Successfully generated  new appointments",
    "api_recurring_appointments.template.missing_required_field_3": "Missing required field: ",
    "api_two_factor_auth.template.2fa_setup_error": "2FA setup error: ",
    "api_two_factor_auth.template.2fa_verification_error": "2FA verification error: ",
    "api_two_factor_auth.template.2fa_verify_error": "2FA verify error: ",
    "api_two_factor_auth.template.2fa_disable_error": "2FA disable error: ",
    "api_two_factor_auth.template.backup_code_regeneration_error": "Backup code regeneration error: ",
    "api_two_factor_auth.template.2fa_status_error": "2FA status error: ",
    "api_two_factor_auth.template.qr_code_generation_error": "QR code generation error: ",
    "api_ai_question_generation.template.error_getting_content_types": "Error getting content types: ",
    "api_ai_question_generation.template.file_too_large_maximum_size_i": "File too large. Maximum size is MB",
    "api_ai_question_generation.template.error_creating_source_content": "Error creating source content: ",
    "api_ai_question_generation.template.error_getting_source_content": "Error getting source content: ",
    "api_ai_question_generation.template.error_getting_source_content_d": "Error getting source content detail: ",
    "api_ai_question_generation.template.error_processing_source_conten": "Error processing source content: ",
    "api_ai_question_generation.template.error_getting_question_types": "Error getting question types: ",
    "api_ai_question_generation.template.error_getting_bloom_s_taxonomy": "Error getting Bloom's taxonomy: ",
    "api_ai_question_generation.template.error_getting_learning_objecti": "Error getting learning objectives: ",
    "api_ai_question_generation.template.error_creating_learning_object": "Error creating learning objective: ",
    "api_ai_question_generation.template.question_generation_started_g": "Question generation started. Generated  questions.",
    "api_ai_question_generation.template.error_generating_questions": "Error generating questions: ",
    "api_ai_question_generation.template.error_getting_generation_statu": "Error getting generation status: ",
    "api_ai_question_generation.template.error_getting_generated_questi": "Error getting generated questions: ",
    "api_ai_question_generation.template.error_getting_question_detail": "Error getting question detail: ",
    "api_ai_question_generation.template.error_approving_question": "Error approving question: ",
    "api_ai_question_generation.template.error_rejecting_question": "Error rejecting question: ",
    "api_ai_question_generation.template.error_getting_question_banks": "Error getting question banks: ",
    "api_ai_question_generation.template.error_creating_question_bank": "Error creating question bank: ",
    "api_ai_question_generation.template.error_adding_question_to_bank": "Error adding question to bank: ",
    "api_ai_question_generation.template.error_getting_bank_questions": "Error getting bank questions: ",
    "api_ai_question_generation.template.error_getting_analytics": "Error getting analytics: ",
    "api_ai_question_generation.template.error_getting_analytics_summar": "Error getting analytics summary: ",
    "api_ai_question_generation.template.error_getting_duplicates": "Error getting duplicates: ",
    "api_ai_question_generation.template.error_resolving_duplicate": "Error resolving duplicate: ",
    "api_ai_question_generation.template.error_exporting_questions": "Error exporting questions: ",
    "api_ai_question_generation.template.error_initializing_system": "Error initializing system: ",
    "api_ai_question_generation.template.file_too_large_maximum_size_i_1": "File too large. Maximum size is MB",
    "api_ai_question_generation.template.internal_server_error": "Internal server error: ",
    "api_ai_reports.template.invalid_report_type_must_be_o": "Invalid report type. Must be one of: ",
    "api_ai_reports.template.invalid_time_period_must_be_o": "Invalid time period. Must be one of: ",
    "api_ai_reports.template.invalid_time_period_must_be_o_1": "Invalid time period. Must be one of: ",
    "api_ai_reports.template.invalid_metrics_valid_metri": "Invalid metrics: . Valid metrics are: ",
    "api_ai_reports.template.invalid_sources_valid_sourc": "Invalid sources: . Valid sources are: ",
    "api_ai_reports.template.invalid_format_must_be_one_of": "Invalid format. Must be one of: ",
    "api_ai_reports.template.report_ready_for_export_in_fo": "Report ready for export in  format",
    "api_messages.template.threads_archived_successfully": " threads archived successfully",
    "api_messages.template.threads_unarchived_successful": " threads unarchived successfully",
    "api_reports.template.pdf": "_.pdf",
    "api_reports.template.report_xlsx": "report__.xlsx",
    "api_reports.template.report_csv": "report__.csv",
    "api_reports.template.report_pdf": "report__.pdf",
    "api_reports.template.user_bdc_com": "user@bdc.com",
    "api_notifications.template.notifications_marked_as_read": " notifications marked as read",
    "api_notifications.template.broadcast_sent_to_users": "Broadcast sent to  users",
    "api_notifications.template.notifications_created": " notifications created",
    "api_notifications.template.notifications_created_for_s": " notifications created for s",
    "api_i18n.template.error_getting_languages": "Error getting languages: ",
    "api_i18n.template.error_creating_language": "Error creating language: ",
    "api_i18n.template.error_updating_language": "Error updating language: ",
    "api_i18n.template.error_detecting_language": "Error detecting language: ",
    "api_i18n.template.error_getting_language_info": "Error getting language info: ",
    "api_i18n.template.error_translating_text": "Error translating text: ",
    "api_i18n.template.error_getting_translation": "Error getting translation: ",
    "api_i18n.template.error_getting_translations": "Error getting translations: ",
    "api_i18n.template.error_creating_multilingual_co": "Error creating multilingual content: ",
    "api_i18n.template.error_getting_multilingual_con": "Error getting multilingual content: ",
    "api_i18n.template.error_updating_multilingual_co": "Error updating multilingual content: ",
    "api_i18n.template.error_getting_user_language_pr": "Error getting user language preferences: ",
    "api_i18n.template.error_updating_user_language_p": "Error updating user language preferences: ",
    "api_i18n.template.error_formatting_locale_data": "Error formatting locale data: ",
    "api_i18n.template.error_getting_translation_stat": "Error getting translation stats: ",
    "api_i18n.template.error_in_bulk_translate": "Error in bulk translate: ",
    "api_i18n.template.error_exporting_translations": "Error exporting translations: ",
    "api_i18n.template.error_importing_translations": "Error importing translations: ",
    "api_tests.template.missing_required_field": "Missing required field: ",
    "api_tenants.template.example_com": "@example.com",
    "api_sms.template.is_required": " is required",
    "beneficiaries_v2_list_routes.template.get_beneficiaries_error": "Get beneficiaries error: ",
    "beneficiaries_v2_list_routes.template.create_beneficiary_error": "Create beneficiary error: ",
    "beneficiaries_v2_evaluations_routes.template.evaluation": "Evaluation #",
    "beneficiaries_v2_evaluations_routes.template.beneficiary_report_pdf": "beneficiary_report_.pdf",
    "beneficiaries_v2_documents_routes.template.profile_pictures": "profile_pictures/",
    "beneficiaries_v2_documents_routes.template.profile_pictures_1": "profile_pictures/",
    "v2_cached_endpoints.template.api_response_user_specific": "api_response:user_specific::",
    "v2_cached_endpoints.template.cache_cleared_for_beneficiary": "Cache cleared for beneficiary ",
    "v2_cached_endpoints.template.cache_cleared_for_user": "Cache cleared for user ",
    "v2_beneficiaries.template.beneficiary_pdf": "beneficiary_.pdf",
    "v2_beneficiaries.template.beneficiary_csv": "beneficiary_.csv",
    "programs_v2_module_routes.template.failed_to_emit_program_module": "Failed to emit program_module_created event: ",
    "programs_v2_module_routes.template.failed_to_emit_program_modules": "Failed to emit program_modules_reordered event: ",
    "routes_alerts.template.error_getting_alert_stats": "Error getting alert stats: ",
    "routes_alerts.template.invalid_severity_must_be_one": "Invalid severity. Must be one of: ",
    "routes_alerts.template.invalid_channel_must_be_one": "Invalid channel: . Must be one of: ",
    "routes_alerts.template.this_is_a_test_alert_sent_by": "This is a test alert sent by  to verify the alert system is working correctly.",
    "routes_alerts.template.error_sending_test_alert": "Error sending test alert: ",
    "routes_alerts.template.missing_required_field": "Missing required field: ",
    "routes_alerts.template.invalid_severity_must_be_one_1": "Invalid severity. Must be one of: ",
    "routes_alerts.template.error_sending_manual_alert": "Error sending manual alert: ",
    "routes_alerts.template.error_getting_alert_history": "Error getting alert history: ",
    "routes_alerts.template.error_getting_alert_config": "Error getting alert config: ",
    "routes_alerts.template.missing_required_field_1": "Missing required field: ",
    "routes_alerts.template.invalid_severity_must_be_one_2": "Invalid severity. Must be one of: ",
    "routes_alerts.template.error_processing_webhook_alert": "Error processing webhook alert: ",
    "routes_alerts.template.error_checking_alert_system_he": "Error checking alert system health: ",
    "routes_alerts.template.internal_error_in_alerts_api": "Internal error in alerts API: ",
    "routes_analytics.template.error_getting_log_insights": "Error getting log insights: ",
    "routes_analytics.template.invalid_analysis_type": "Invalid analysis type: ",
    "routes_analytics.template.error_analyzing_log_patterns": "Error analyzing log patterns: ",
    "routes_analytics.template.invalid_log_level": "Invalid log level: ",
    "routes_analytics.template.to": " to ",
    "routes_analytics.template.error_searching_logs": "Error searching logs: ",
    "routes_analytics.template.error_getting_log_trends": "Error getting log trends: ",
    "routes_analytics.template.to_1": " to ",
    "routes_analytics.template.error_exporting_logs": "Error exporting logs: ",
    "routes_analytics.template.error_getting_analytics_status": "Error getting analytics status: ",
    "routes_analytics.template.internal_error_in_analytics_ap": "Internal error in analytics API: ",
    "monitoring_performance_monitor.template.slow_request_detected_took": "Slow request detected:   took s (DB: s)",
    "monitoring_performance_monitor.template.high_cpu_usage": "High CPU usage: %",
    "monitoring_performance_monitor.template.high_memory_usage": "High memory usage: %",
    "monitoring_performance_monitor.template.system_monitoring_error": "System monitoring error: ",
    "monitoring_performance_monitor.template.slow_query_s": "Slow query (s): ...",
    "monitoring_metrics_exporter.template.error_setting_up_connections": "Error setting up connections: ",
    "monitoring_metrics_exporter.template.error_collecting_metrics": "Error collecting metrics: ",
    "monitoring_metrics_exporter.template.error_collecting_database_metr": "Error collecting database metrics: ",
    "monitoring_metrics_exporter.template.error_collecting_redis_metrics": "Error collecting Redis metrics: ",
    "monitoring_metrics_exporter.template.error_collecting_system_metric": "Error collecting system metrics: ",
    "monitoring_metrics_exporter.template.error_collecting_application_m": "Error collecting application metrics: ",
    "monitoring_metrics_exporter.template.error_calculating_health_score": "Error calculating health score: ",
    "monitoring_metrics_exporter.template.starting_bdc_metrics_exporter": "Starting BDC Metrics Exporter on :",
    "database_query_optimizer.template.query_optimization_rule_failed": "Query optimization rule failed: ",
    "database_query_optimizer.template.consider_converting_exists": "-- Consider converting EXISTS to JOIN: ...",
    "database_query_optimizer.template.consider_adding_indexes_on": "-- Consider adding indexes on: ",
    "database_query_optimizer.template.ensure_index_exists_for_ord": "-- Ensure index exists for ORDER BY: ",
    "database_query_optimizer.template.consider_composite_index_fo": "-- Consider composite index for GROUP BY columns\n",
    "database_query_optimizer.template.warning_leading_wildcard_l": "-- Warning: Leading wildcard LIKE query detected - consider full-text search\n",
    "database_query_optimizer.template.query_execution_measurement_fa": "Query execution measurement failed: ",
    "database_query_optimizer.template.potential_table_scans_detected": "Potential table scans detected on: ",
    "database_query_optimizer.template.pattern_detected": "Pattern detected: ",
    "database_query_optimizer.template.create_index_idx_on_table_nam": "CREATE INDEX idx_ ON table_name ()",
    "database_query_optimizer.template.create_index_idx_on_table_nam_1": "CREATE INDEX idx_ ON table_name ()",
    "database_index_manager.template.created_index_on": "Created index on ()",
    "database_index_manager.template.failed_to_create_index_on": "Failed to create index on : ",
    "database_index_manager.template.drop_index": "DROP INDEX ",
    "database_index_manager.template.dropped_redundant_index": "Dropped redundant index: ",
    "database_index_manager.template.failed_to_drop_index": "Failed to drop index : ",
    "database_index_manager.template.create_suggested_indexes": "Create  suggested indexes",
    "database_index_manager.template.drop_redundant_indexes": "Drop  redundant indexes",
    "database_index_manager.template.failed_to_load_existing_indexe": "Failed to load existing indexes: ",
    "database_index_manager.template.kb": "~KB",
    "database_index_manager.template.kb_1": "~KB",
    "database_index_manager.template.composite_index_for_frequent_c": "Composite index for frequent column combination ( times)",
    "database_index_manager.template.": " = ?",
    "database_index_manager.template.kb_2": "~KB",
    "database_index_manager.template.create_index_on": "CREATE INDEX  ON  ()",
    "core_optimizer.template.found_slow_queries_requiring": "Found  slow queries requiring optimization",
    "core_optimizer.template.found_index_suggestions": "Found  index suggestions",
    "core_optimizer.template.warming_up_cache_for_endpoint": "Warming up cache for endpoint: ",
    "config_performance_config.template.configuration_file_not_found": "Configuration file not found: ",
    "config_performance_config.template.unsupported_configuration_file": "Unsupported configuration file format: ",
    "config_performance_config.template.unsupported_format": "Unsupported format: ",
    "testing_load_tester.template.load_tester_initialized_for": "Load tester initialized for ",
    "testing_load_tester.template.added_scenario": "Added scenario: ",
    "testing_load_tester.template.starting_load_test": "Starting load test: ",
    "testing_load_tester.template.load_test_completed": "Load test completed: ",
    "testing_load_tester.template.load_test_failed": "Load test failed: ",
    "testing_load_tester.template.starting_stress_test_up_to_us": "Starting stress test up to  users",
    "testing_load_tester.template.stress_test_users": "Stress Test -  users",
    "testing_load_tester.template.performance_degradation_detect": "Performance degradation detected at  users",
    "testing_load_tester.template.stress_test_failed_at_users": "Stress test failed at  users: ",
    "testing_load_tester.template.stress_test_completed_with_st": "Stress test completed with  steps",
    "testing_load_tester.template.starting_spike_test_user": "Starting spike test:  ->  users",
    "testing_load_tester.template.load_test_report_html": "load_test_report_.html",
    "testing_load_tester.template.report_generated": "Report generated: ",
    "testing_load_tester.template.user_cancelled": "User  cancelled",
    "testing_load_tester.template.user_error": "User  error: ",
    "testing_load_tester.template.http": "HTTP ",
    "testing_load_tester.template.http_1": "HTTP ",
    "testing_load_tester.template.div_class_summa": "\n            <div class=\"summary\">\n                <h2></h2>\n                <div class=\"metric\">\n                    <div class=\"metric-value\"></div>\n                    <div class=\"metric-label\">Total Requests</div>\n                </div>\n                <div class=\"metric\">\n                    <div class=\"metric-value\"></div>\n                    <div class=\"metric-label\">Requests/sec</div>\n                </div>\n                <div class=\"metric\">\n                    <div class=\"metric-value\">ms</div>\n                    <div class=\"metric-label\">Avg Response Time</div>\n                </div>\n                <div class=\"metric\">\n                    <div class=\"metric-value\">%</div>\n                    <div class=\"metric-label\">Error Rate</div>\n                </div>\n            </div>\n            ",
    "testing_benchmark_runner.template.registered_custom_benchmark": "Registered custom benchmark: ",
    "testing_benchmark_runner.template.starting_benchmark": "Starting benchmark: ",
    "testing_benchmark_runner.template.warmup_phase_seconds": "Warmup phase:  seconds",
    "testing_benchmark_runner.template.running_iteration": "Running iteration /",
    "testing_benchmark_runner.template.benchmark_completed": "Benchmark completed: ",
    "testing_benchmark_runner.template.benchmark_failed": "Benchmark failed:  - ",
    "testing_benchmark_runner.template.running_benchmark_suite_with": "Running benchmark suite with  benchmarks",
    "testing_benchmark_runner.template.benchmark_suite_error": "Benchmark suite error: ",
    "testing_benchmark_runner.template.benchmark_suite_completed_s": "Benchmark suite completed: / successful",
    "testing_benchmark_runner.template.api_benchmark": "API Benchmark - ",
    "testing_benchmark_runner.template.query_failed": "Query  failed: ",
    "testing_benchmark_runner.template.baseline_not_found": "Baseline '' not found",
    "testing_benchmark_runner.template.set_baseline": "Set baseline: ",
    "testing_benchmark_runner.template.unsupported_format": "Unsupported format: ",
    "testing_benchmark_runner.template.results_exported_to": "Results exported to ",
    "testing_benchmark_runner.template.custom_benchmark_not_found": "Custom benchmark not found: ",
    "testing_benchmark_runner.template.best_improvement": "Best improvement:  (+%)",
    "testing_benchmark_runner.template.worst_regression": "Worst regression:  (-%)",
    "testing_benchmark_runner.template.csv_export_completed": "CSV export completed: ",
    "api_pagination_optimizer.template.failed_to_parse_cursor": "Failed to parse cursor: ",
    "api_pagination_optimizer.template.count_estimation_failed": "Count estimation failed: ",
    "api_pagination_optimizer.template.invalid_sort_column": "Invalid sort column: ",
    "api_response_optimizer.template.response_optimization_failed": "Response optimization failed: ",
    "api_response_optimizer.template.page_per_page": "?page=&per_page=",
    "api_response_optimizer.template.page_per_page_1": "?page=&per_page=",
    "api_response_optimizer.template.page_1_per_page": "?page=1&per_page=",
    "api_response_optimizer.template.page_per_page_2": "?page=&per_page=",
    "api_response_optimizer.template.public_max_age": "public, max-age=",
    "api_response_optimizer.template.public_max_age_1": "public, max-age=",
    "api_response_optimizer.template.response_compression_failed": "Response compression failed: ",
    "api_response_optimizer.template.page_per_page_3": ":page=:per_page=",
    "api_compression_manager.template.compression_failed_with": "Compression failed with : ",
    "api_compression_manager.template.unsupported_compression_type": "Unsupported compression type: ",
    "api_compression_manager.template.benchmark_failed_for": "Benchmark failed for : ",
    "api_compression_manager.template.optimization_benchmark_failed": "Optimization benchmark failed for : ",
    "monitoring_performance_monitor.template.monitoring_loop_error": "Monitoring loop error: ",
    "monitoring_performance_monitor.template.system_metrics_collection_fail": "System metrics collection failed: ",
    "monitoring_performance_monitor.template.metric_exceeded_threshold": "Metric  exceeded threshold:  > ",
    "monitoring_performance_monitor.template.alert_callback_failed": "Alert callback failed: ",
    "monitoring_performance_monitor.template.alert_callback_failed_1": "Alert callback failed: ",
    "monitoring_performance_monitor.template.performance_alert_triggered": "Performance alert triggered: ",
    "monitoring_performance_monitor.template.slow_endpoints_detected": "Slow endpoints detected: ",
    "monitoring_profiler.template.slow_function_detected_took": "Slow function detected:  took s",
    "monitoring_profiler.template.function_memory_usage_mb": "Function  memory usage: MB",
    "monitoring_profiler.template.1f": "+.1f",
    "monitoring_profiler.template.continuous_profiling_error": "Continuous profiling error: ",
    "monitoring_profiler.template.continuous_profiling_started": "Continuous profiling started (interval: s)",
    "monitoring_profiler.template.unsupported_export_format": "Unsupported export format: ",
    "monitoring_profiler.template.performance_snapshot_memory": "Performance snapshot - Memory: MB, Function time: s, Active profilers: ",
    "monitoring_profiler.template.performance_snapshot_collectio": "Performance snapshot collection failed: ",
    "monitoring_profiler.template.optimize_consuming_s_total": "Optimize  - consuming s total execution time",
    "monitoring_profiler.template.high_memory_usage_mb_consi": "High memory usage (MB) - consider memory optimization",
    "monitoring_profiler.template.critical_hotspot_impact_sc": "Critical hotspot:  - impact score ",
    "caching_cache_manager.template.redis_cache_initialization_fai": "Redis cache initialization failed: ",
    "caching_cache_manager.template.cache_warmed_for_key": "Cache warmed for key: ",
    "caching_cache_manager.template.cache_warming_failed_for_key": "Cache warming failed for key : ",
    "caching_cache_manager.template.cleared_cache_level": "Cleared cache level: ",
    "caching_cache_manager.template.failed_to_clear_cache_level": "Failed to clear cache level : ",
    "caching_cache_manager.template.error_setting_in": "Error setting in : ",
    "caching_redis_optimizer.template.redis_optimizer_initialization": "Redis optimizer initialization failed: ",
    "caching_redis_optimizer.template.optimized_set_failed_for_key": "Optimized SET failed for key : ",
    "caching_redis_optimizer.template.optimized_get_failed_for_key": "Optimized GET failed for key : ",
    "caching_redis_optimizer.template.batch_set_failed": "Batch SET failed: ",
    "caching_redis_optimizer.template.batch_get_failed": "Batch GET failed: ",
    "caching_redis_optimizer.template.processed_keys_matching_patte": "Processed  keys matching pattern: ",
    "caching_redis_optimizer.template.scan_and_process_failed": "Scan and process failed: ",
    "caching_redis_optimizer.template.memory_optimization_failed": "Memory optimization failed: ",
    "caching_redis_optimizer.template.failed_to_get_redis_info": "Failed to get Redis info: ",
    "caching_redis_optimizer.template.decompression_failed": "Decompression failed: ",
    "caching_redis_optimizer.template.deserialization_failed": "Deserialization failed: ",
    "caching_redis_optimizer.template.memory_config_analysis_failed": "Memory config analysis failed: ",
    "assets_cdn_manager.template.registered_cdn_endpoint": "Registered CDN endpoint: ",
    "assets_cdn_manager.template.asset_not_found": "Asset not found: ",
    "assets_cdn_manager.template.cdn_provider_not_configured": "CDN provider not configured: ",
    "assets_cdn_manager.template.uploaded_to": "Uploaded  to ",
    "assets_cdn_manager.template.failed_to_upload_to": "Failed to upload to : ",
    "assets_cdn_manager.template.purge_failed_for": "Purge failed for ",
    "assets_cdn_manager.template.purge_error_for": "Purge error for : ",
    "assets_cdn_manager.template.preload_failed_for": "Preload failed for : ",
    "assets_cdn_manager.template.uploading_to_cloudflare": "Uploading  to Cloudflare",
    "assets_cdn_manager.template.uploading_to_aws_cloudfront": "Uploading  to AWS CloudFront",
    "assets_cdn_manager.template.uploading_to": "Uploading  to ",
    "assets_cdn_manager.template.preloading_to": "Preloading  to ",
    "assets_cdn_manager.template.high_response_time_for_cons": "High response time for  - consider provider optimization",
    "assets_image_optimizer.template.image_not_found": "Image not found: ",
    "assets_image_optimizer.template.optimized_bytes_reduc": "Optimized :  ->  bytes ( reduction)",
    "assets_image_optimizer.template.invalid_directory": "Invalid directory: ",
    "assets_image_optimizer.template.failed_to_optimize": "Failed to optimize : ",
    "assets_image_optimizer.template.optimized_images_in": "Optimized  images in ",
    "assets_image_optimizer.template.failed_to_convert_to": "Failed to convert to : ",
    "assets_image_optimizer.template.source_srcset_type_imag": "  <source srcset=\"\" type=\"image/\">\n",
    "assets_image_optimizer.template.source_srcset_type_imag_1": "  <source srcset=\"\" type=\"image/webp\">\n",
    "assets_image_optimizer.template.class": "class=\"\"",
    "assets_image_optimizer.template.img_src_alt": "  <img src=\"\" alt=\"\"  >\n",
    "assets_image_optimizer.template.auto_orient_failed": "Auto-orient failed: ",
    "assets_image_optimizer.template.w": "_w.",
    "assets_image_optimizer.template.opt": "_opt.",
    "assets_image_optimizer.template.auto_orientation_failed": "Auto-orientation failed: ",
    "assets_image_optimizer.template.02x": "02x",
    "assets_image_optimizer.template.02x_1": "02x",
    "assets_image_optimizer.template.02x_2": "02x",
    "i18n_locale_manager.template.failed_to_parse_locale": "Failed to parse locale : ",
    "i18n_locale_manager.template.error_formatting_date": "Error formatting date: ",
    "i18n_locale_manager.template.error_formatting_time": "Error formatting time: ",
    "i18n_locale_manager.template.error_formatting_datetime": "Error formatting datetime: ",
    "i18n_locale_manager.template.error_formatting_timedelta": "Error formatting timedelta: ",
    "i18n_locale_manager.template.error_formatting_number": "Error formatting number: ",
    "i18n_locale_manager.template.error_formatting_currency": "Error formatting currency: ",
    "i18n_locale_manager.template.error_parsing_number": "Error parsing number: ",
    "i18n_locale_manager.template.error_parsing_decimal": "Error parsing decimal: ",
    "i18n_locale_manager.template.error_getting_calendar_info": "Error getting calendar info: ",
    "i18n_locale_manager.template.error_getting_number_symbols": "Error getting number symbols: ",
    "i18n_locale_manager.template.error_formatting_file_size": "Error formatting file size: ",
    "i18n_locale_manager.template.mi": " mi",
    "i18n_locale_manager.template.ft": " ft",
    "i18n_locale_manager.template.km": " km",
    "i18n_locale_manager.template.error_formatting_distance": "Error formatting distance: ",
    "i18n_content_manager.template.content": ":content",
    "i18n_content_manager.template.error_getting_translation": "Error getting translation: ",
    "i18n_content_manager.template.error_getting_translations": "Error getting translations: ",
    "i18n_content_manager.template.error_saving_translation": "Error saving translation: ",
    "i18n_content_manager.template.error_in_batch_save": "Error in batch save: ",
    "i18n_content_manager.template.error_deleting_translation": "Error deleting translation: ",
    "i18n_content_manager.template.error_copying_translations": "Error copying translations: ",
    "i18n_content_manager.template.error_getting_translation_cove": "Error getting translation coverage: ",
    "i18n_content_manager.template.": "::::",
    "i18n_rtl_support.template.translatex": "translateX()",
    "i18n_rtl_support.template.rtl": "-rtl",
    "i18n_rtl_support.template.ltr": "-ltr",
    "i18n_translator.template.error_evaluating_plural_rule_f": "Error evaluating plural rule for : ",
    "i18n_translator.template.common": "common.",
    "i18n_translator.template.": ",  ",
    "i18n_manager.template.failed_to_load_translations_fo": "Failed to load translations for : ",
    "i18n_manager.template.translations": ":translations:",
    "i18n_manager.template.translations_1": ":translations:*",
    "i18n_manager.template.unsupported_export_format": "Unsupported export format: ",
    "i18n_manager.template.unsupported_import_format": "Unsupported import format: ",
    "i18n_manager.template.failed_to_import_translations": "Failed to import translations: ",
    "infrastructure_query_optimizer.template.slow_query_detected_s": "Slow query detected (s): ...",
    "infrastructure_query_optimizer.template.query_count": "query_count:",
    "infrastructure_query_optimizer.template.slow_query_took_s": "Slow query '' took s",
    "infrastructure_cache_config.template.redis_connection_failed_fal": "Redis connection failed: . Falling back to simple cache.",
    "infrastructure_cache_config.template.cache_get_error": "Cache get error: ",
    "infrastructure_cache_config.template.cache_set_error": "Cache set error: ",
    "infrastructure_cache_config.template.cache_increment_error": "Cache increment error: ",
    "infrastructure_cache_config.template.cache_get_many_error": "Cache get_many error: ",
    "infrastructure_cache_config.template.cache_set_many_error": "Cache set_many error: ",
    "services_appointment_service.template.user_not_found": "User  not found",
    "services_appointment_service.template.user_not_found_1": "User  not found",
    "services_appointment_service.template.missing_required_field": "Missing required field: ",
    "services_appointment_service.template.user_not_found_2": "User  not found",
    "services_appointment_service.template.appointment_not_found": "Appointment  not found",
    "services_appointment_service.template.user_not_found_3": "User  not found",
    "services_appointment_service.template.appointment_not_found_1": "Appointment  not found",
    "services_appointment_service.template.user_not_found_4": "User  not found",
    "services_appointment_service.template.appointment_not_found_2": "Appointment  not found",
    "services_appointment_service.template.meeting_with": "Meeting with  ",
    "services_appointment_service.template.scheduled_appointment_with": "Scheduled appointment with  ",
    "services_appointment_service.template.appointment_with": "Appointment with  ",
    "services_appointment_service.template.you_have_a_scheduled_appointme": "You have a scheduled appointment with   on .",
    "services_appointment_service.template.user_not_found_5": "User  not found",
    "services_appointment_service.template.appointment_not_found_3": "Appointment  not found",
    "services_auth_service.template.failed_to_log_activity": "Failed to log activity: ",
    "services_ai_verification.template.i_in_do_rulama_bekliyor": " için doğrulama bekliyor",
    "services_sms_service.template.error_initializing_sms_templat": "Error initializing SMS templates: ",
    "services_sms_service.template.error_sending_sms": "Error sending SMS: ",
    "services_sms_service.template.twilio_error": "Twilio error: ",
    "services_sms_service.template.aws_sns_error": "AWS SNS error: ",
    "services_sms_service.template.provider_error": "Provider error: ",
    "services_sms_service.template.error_sending_templated_sms": "Error sending templated SMS: ",
    "services_sms_service.template.error_sending_bulk_sms": "Error sending bulk SMS: ",
    "services_sms_service.template.error_scheduling_sms": "Error scheduling SMS: ",
    "services_sms_service.template.error_cancelling_sms": "Error cancelling SMS: ",
    "services_sms_service.template.error_getting_sms_status": "Error getting SMS status: ",
    "services_sms_service.template.error_updating_delivery_status": "Error updating delivery status: ",
    "services_sms_service.template.error_getting_sms_history": "Error getting SMS history: ",
    "services_sms_service.template.error_getting_sms_stats": "Error getting SMS stats: ",
    "services_sms_service.template.error_validating_phone_number": "Error validating phone number: ",
    "services_sms_service.template.error_sending_appointment_remi": "Error sending appointment reminder: ",
    "services_sms_service.template.error_sending_assessment_notif": "Error sending assessment notification: ",
    "services_sms_service.template.password_reset": "password_reset:",
    "services_sms_service.template.error_sending_password_reset_c": "Error sending password reset code: ",
    "services_sms_service.template.2fa_code": "2fa_code:",
    "services_sms_service.template.error_sending_2fa_code": "Error sending 2FA code: ",
    "services_sms_service.template.error_creating_sms_campaign": "Error creating SMS campaign: ",
    "services_sms_service.template.error_executing_sms_campaign": "Error executing SMS campaign: ",
    "services_sms_service.template.error_getting_campaign_status": "Error getting campaign status: ",
    "services_document_service.template.document_not_found": "Document  not found",
    "services_document_service.template.you_have_been_granted_access_t": "You have been granted access to \"\"",
    "services_document_service.template.error_granting_permission": "Error granting permission: ",
    "services_document_service.template.error_revoking_permission": "Error revoking permission: ",
    "services_document_service.template.error_getting_document_permiss": "Error getting document permissions: ",
    "services_document_service.template.error_getting_user_document_pe": "Error getting user document permissions: ",
    "services_ai_chat_service.template.conversation": " Conversation",
    "services_ai_chat_service.template.error_creating_conversation": "Error creating conversation: ",
    "services_ai_chat_service.template.error_sending_message": "Error sending message: ",
    "services_ai_chat_service.template.error_generating_response": "Error generating response: ",
    "services_ai_chat_service.template.context": "\n\nContext: ",
    "services_ai_chat_service.template.beneficiary_info": "\n\nBeneficiary Info: ",
    "services_ai_chat_service.template.current_time": "\n\n[Current time: ]",
    "services_ai_chat_service.template.progress_context": "\n\n[Progress Context: ]",
    "services_ai_chat_service.template.error_handling_function_call": "Error handling function call : ",
    "services_ai_chat_service.template.error_getting_conversation_his": "Error getting conversation history: ",
    "services_ai_chat_service.template.conversation_1": "Conversation: \n",
    "services_ai_chat_service.template.date": "Date: \n",
    "services_ai_chat_service.template.language": "Language: \n",
    "services_ai_chat_service.template.": ": \n",
    "services_ai_chat_service.template.time": "Time: \n",
    "services_ai_chat_service.template.error_exporting_conversation": "Error exporting conversation: ",
    "services_ai_chat_service.template.your_conversation_has_been_fla": "Your conversation has been flagged for review: ",
    "services_ai_chat_service.template.error_flagging_conversation": "Error flagging conversation: ",
    "services_ai_chat_service.template.error_getting_conversation_ana": "Error getting conversation analytics: ",
    "services_ai_chat_service.template.error_updating_conversation_su": "Error updating conversation summary: ",
    "services_ai_chat_service.template.appointment_on_with": "Appointment on  with ",
    "services_ai_chat_service.template.program": "Program:  - ",
    "services_ai_chat_service.template.assessment": "Assessment: ",
    "services_ai_chat_service.template.error_getting_entity_context": "Error getting entity context: ",
    "services_ai_chat_service.template.name_status": "Name: , Status: ",
    "services_ai_chat_service.template.error_getting_beneficiary_cont": "Error getting beneficiary context: ",
    "services_ai_chat_service.template.complete": ": % complete",
    "services_ai_chat_service.template.error_getting_beneficiary_prog": "Error getting beneficiary progress: ",
    "services_ai_chat_service.template.tarihinde_u_saatler_m_sait": " tarihinde şu saatler müsait: ",
    "services_ai_chat_service.template.available_slots_on": "Available slots on : ",
    "services_ai_chat_service.template.randevunuz_ba_ar_yla_olu_turul": "Randevunuz başarıyla oluşturuldu. Randevu numarası: ",
    "services_ai_chat_service.template.your_appointment_has_been_book": "Your appointment has been booked successfully. Appointment ID: ",
    "services_ai_chat_service.template.d_neminde_ilerlemeniz_tam": " döneminde ilerlemeniz: %. Tamamlanan oturumlar: , Yaklaşan oturumlar: ",
    "services_ai_chat_service.template.your_progress_for_complet": "Your progress for : %. Completed sessions: , Upcoming sessions: ",
    "services_ai_chat_service.template.s_re": "-  (Süre: )\n",
    "services_ai_chat_service.template.duration": "-  (Duration: )\n",
    "services_calendar_service.template.client_secrets_file_not_found": "Client secrets file not found at ",
    "services_calendar_service.template.error_getting_authorization_ur": "Error getting authorization URL: ",
    "services_calendar_service.template.no_integration_found_for_user": "No integration found for user ",
    "services_calendar_service.template.state_mismatch_for_user": "State mismatch for user ",
    "services_calendar_service.template.error_handling_callback": "Error handling callback: ",
    "services_calendar_service.template.error_getting_credentials": "Error getting credentials: ",
    "services_calendar_service.template.error_creating_calendar_event": "Error creating calendar event: ",
    "services_calendar_service.template.error_creating_calendar_event_1": "Error creating calendar event: ",
    "services_calendar_service.template.error_updating_calendar_event": "Error updating calendar event: ",
    "services_calendar_service.template.error_updating_calendar_event_1": "Error updating calendar event: ",
    "services_calendar_service.template.error_deleting_calendar_event": "Error deleting calendar event: ",
    "services_calendar_service.template.error_deleting_calendar_event_1": "Error deleting calendar event: ",
    "services_calendar_service.template.error_getting_calendar_events": "Error getting calendar events: ",
    "services_calendar_service.template.error_getting_calendar_events_1": "Error getting calendar events: ",
    "services_question_randomization_service.template.unknown_randomization_strategy": "Unknown randomization strategy: . Using simple random.",
    "services_question_randomization_service.template.invalid_template_using_mixe": "Invalid template: . Using MIXED_DIFFICULTY.",
    "services_question_randomization_service.template.total_sessions": ":total_sessions",
    "services_log_analytics_service.template.failed_to_initialize_log_analy": "Failed to initialize log analytics service: ",
    "services_log_analytics_service.template.error_in_background_analysis": "Error in background analysis: ",
    "services_log_analytics_service.template.error_retrieving_logs": "Error retrieving logs: ",
    "services_log_analytics_service.template.error_clustering_error_message": "Error clustering error messages: ",
    "services_log_analytics_service.template.recurring_error_pattern_detect": "Recurring Error Pattern Detected",
    "services_log_analytics_service.template.found_similar_errors": "Found  similar errors: ...",
    "services_log_analytics_service.template.average_response_time_ms_p95": "Average response time: ms, P95: ms",
    "services_log_analytics_service.template.database_error_rate": "Database error rate: %",
    "services_log_analytics_service.template.cache_miss_rate": "Cache miss rate: %",
    "services_log_analytics_service.template.detected_authentication_failu": "Detected  authentication failures",
    "services_log_analytics_service.template.detected_suspicious_activitie": "Detected  suspicious activities",
    "services_log_analytics_service.template.peak_activity_at_hour_with_e": "Peak activity at hour  with  events",
    "services_log_analytics_service.template.analyzed_api_requests_across": "Analyzed  API requests across  endpoints",
    "services_log_analytics_service.template.detected_time_intervals_with": "Detected  time intervals with anomalous log volumes",
    "services_log_analytics_service.template.unusual_concentration_of_logs": "Unusual concentration of logs in topic: ",
    "services_log_analytics_service.template.error_in_pattern_anomaly_detec": "Error in pattern anomaly detection: ",
    "services_log_analytics_service.template.periodic_analysis_completed_f": "Periodic analysis completed. Found  insights",
    "services_log_analytics_service.template.error_in_periodic_analysis": "Error in periodic analysis: ",
    "services_log_analytics_service.template.failed_to_send_analysis_alert": "Failed to send analysis alert: ",
    "services_log_analytics_service.template.log_analysis": "log_analysis:",
    "services_log_analytics_service.template.failed_to_cache_analysis_resul": "Failed to cache analysis results: ",
    "services_log_analytics_service.template.failed_to_get_analysis_history": "Failed to get analysis history: ",
    "services_notification_service.template.error_creating_notification": "Error creating notification: ",
    "services_notification_service.template.error_creating_role_notificati": "Error creating role notification: ",
    "services_notification_service.template.error_creating_tenant_notifica": "Error creating tenant notification: ",
    "services_notification_service.template.error_marking_notification_as": "Error marking notification as read: ",
    "services_notification_service.template.error_marking_all_notification": "Error marking all notifications as read: ",
    "services_notification_service.template.error_deleting_notification": "Error deleting notification: ",
    "services_notification_service.template.error_getting_user_notificatio": "Error getting user notifications: ",
    "services_notification_service.template.error_getting_unread_count": "Error getting unread count: ",
    "services_video_conference_service_updated.template.appointment_not_found": "Appointment  not found",
    "services_video_conference_service_updated.template.host_user_not_found": "Host user  not found",
    "services_video_conference_service_updated.template.video_conference_for_appointme": "Video conference for appointment: ",
    "services_video_conference_service_updated.template.conference_not_found": "Conference  not found",
    "services_video_conference_service_updated.template.conference_not_found_1": "Conference  not found",
    "services_video_conference_service_updated.template.conference_not_found_2": "Conference  not found",
    "services_video_conference_service_updated.template.conference_not_found_3": "Conference  not found",
    "services_video_conference_service_updated.template.conference_not_found_4": "Conference  not found",
    "services_video_conference_service_updated.template.conference_not_found_5": "Conference  not found",
    "services_video_conference_service_updated.template.video_conference_invitation": "Video Conference Invitation: ",
    "services_video_conference_service_updated.template.conference_not_found_6": "Conference  not found",
    "services_video_conference_service_updated.template.recording": "Recording: ",
    "services_video_conference_service_updated.template.recording_not_found": "Recording  not found",
    "services_video_conference_service_updated.template.conference_not_found_7": "Conference  not found",
    "services_video_conference_service_updated.template.video_conference": "Video Conference ",
    "services_video_conference_service_updated.template.your_video_conference_has_b": "Your video conference '' has been .",
    "services_video_conference_service_updated.template.join_at": " Join at: ",
    "services_video_conference_service_updated.template.you_are_invited_to_join_the_v": "\nYou are invited to join the video conference: \n\nDate & Time: \nDuration:  minutes\n\nJoin URL: \n\n\nHost:  \n\nPlease join a few minutes before the scheduled time.\n        ",
    "services_video_conference_service_updated.template.meeting_password": "Meeting Password: ",
    "services_video_conference_service_updated.template.error_sending_email_invitation": "Error sending email invitation: ",
    "services_video_conference_service_updated.template.video_conference_1": "Video Conference: \n",
    "services_video_conference_service_updated.template.time": "Time: \n",
    "services_video_conference_service_updated.template.join": "Join: ",
    "services_video_conference_service_updated.template.error_sending_sms_invitation": "Error sending SMS invitation: ",
    "services_program_service.template.failed_to_emit_program_created": "Failed to emit program_created event: ",
    "services_ai_question_generator_service.template.unsupported_file_format": "Unsupported file format: ",
    "services_ai_question_generator_service.template.error_processing_content": "Error processing content: ",
    "services_ai_question_generator_service.template.pdf_processing_failed": "PDF processing failed: ",
    "services_ai_question_generator_service.template.docx_processing_failed": "DOCX processing failed: ",
    "services_ai_question_generator_service.template.txt_processing_failed": "TXT processing failed: ",
    "services_ai_question_generator_service.template.audio_processing_failed": "Audio processing failed: ",
    "services_ai_question_generator_service.template.url_processing_failed": "URL processing failed: ",
    "services_ai_question_generator_service.template.text_processing_failed": "Text processing failed: ",
    "services_ai_question_generator_service.template.nlp_enhancement_failed": "NLP enhancement failed: ",
    "services_ai_question_generator_service.template.question_generation_failed": "Question generation failed: ",
    "services_ai_question_generator_service.template.no_prompt_template_for_questio": "No prompt template for question type: ",
    "services_ai_question_generator_service.template.error_generating_questions": "Error generating  questions: ",
    "services_ai_question_generator_service.template.openai_api_call_failed": "OpenAI API call failed: ",
    "services_ai_question_generator_service.template.generated_for_request": "Generated for request ",
    "services_ai_question_generator_service.template.error_creating_question_object": "Error creating question object: ",
    "services_ai_question_generator_service.template.error_saving_questions": "Error saving questions: ",
    "services_ai_question_generator_service.template.generate_high_quality_multip": "\nGenerate  high-quality multiple choice questions based on the following content:\n\nCONTENT:\n\n\nREQUIREMENTS:\n- Difficulty level: \n- Focus on topics: \n- Language: \n- Each question should have 4 options (A, B, C, D)\n- Only one correct answer per question\n- Include explanations for correct answers\n- Vary difficulty across questions\n- Ensure questions test understanding, not just memorization\n\n\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Question text here?\",\n    \"options\": {\n      \"A\": \"First option\",\n      \"B\": \"Second option\", \n      \"C\": \"Third option\",\n      \"D\": \"Fourth option\"\n    },\n    \"correct_answer\": \"A\",\n    \"explanation\": \"Explanation of why A is correct\",\n    \"difficulty\": 5.5,\n    \"blooms_level\": \"understand\",\n    \"keywords\": [\"keyword1\", \"keyword2\"],\n    \"topics\": [\"topic1\"],\n    \"confidence\": 0.9\n  }\n]\n",
    "services_ai_question_generator_service.template.generate_true_false_question": "\nGenerate  true/false questions based on the following content:\n\nCONTENT:\n\n\nREQUIREMENTS:\n- Difficulty level: \n- Clear, unambiguous statements\n- Mix of true and false answers\n- Include explanations\n- Avoid trick questions\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Statement to evaluate\",\n    \"correct_answer\": true,\n    \"explanation\": \"Explanation of why this is true/false\",\n    \"difficulty\": 4.0,\n    \"blooms_level\": \"remember\",\n    \"keywords\": [\"keyword1\"],\n    \"confidence\": 0.85\n  }\n]\n",
    "services_ai_question_generator_service.template.generate_fill_in_the_blank_q": "\nGenerate  fill-in-the-blank questions based on the following content:\n\nCONTENT:\n\n\nREQUIREMENTS:\n- Use underscores (____) for blanks\n- Provide clear context clues\n- Include correct answers\n- Vary the difficulty\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"The ____ is responsible for ____.\",\n    \"correct_answer\": [\"brain\", \"thinking\"],\n    \"explanation\": \"The brain is the organ responsible for thinking and cognitive functions.\",\n    \"difficulty\": 5.0,\n    \"keywords\": [\"brain\", \"thinking\"]\n  }\n]\n",
    "services_ai_question_generator_service.template.generate_short_answer_questi": "\nGenerate  short answer questions based on the following content:\n\nCONTENT:\n\n\nREQUIREMENTS:\n- Questions should require 2-3 sentence answers\n- Test comprehension and application\n- Include sample answers\n- Focus on key concepts\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Explain the main concept discussed in the passage.\",\n    \"correct_answer\": \"Sample answer showing expected response length and content.\",\n    \"explanation\": \"Key points that should be covered in the answer.\",\n    \"difficulty\": 6.0,\n    \"blooms_level\": \"understand\"\n  }\n]\n",
    "services_ai_question_generator_service.template.generate_essay_questions_bas": "\nGenerate  essay questions based on the following content:\n\nCONTENT:\n\n\nREQUIREMENTS:\n- Questions should require detailed, multi-paragraph responses\n- Encourage critical thinking and analysis\n- Include grading criteria\n- Test higher-order thinking skills\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Analyze and discuss the implications of...\",\n    \"correct_answer\": \"Essay should include: 1) Introduction with thesis, 2) Analysis of key points, 3) Examples and evidence, 4) Conclusion with synthesis\",\n    \"explanation\": \"Grading criteria and key points to address\",\n    \"difficulty\": 8.0,\n    \"blooms_level\": \"analyze\"\n  }\n]\n",
    "services_ai_question_generator_service.template.generate_matching_questions": "\nGenerate  matching questions based on the following content:\n\nCONTENT:\n\n\nREQUIREMENTS:\n- Create pairs of related items\n- Include at least 5 pairs per question\n- Ensure clear relationships\n- Avoid ambiguous matches\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Match the following terms with their definitions:\",\n    \"options\": {\n      \"terms\": [\"Term 1\", \"Term 2\", \"Term 3\"],\n      \"definitions\": [\"Definition A\", \"Definition B\", \"Definition C\"]\n    },\n    \"correct_answer\": {\"Term 1\": \"Definition A\", \"Term 2\": \"Definition B\", \"Term 3\": \"Definition C\"},\n    \"difficulty\": 5.5\n  }\n]\n",
    "services_ai_question_generator_service.template.generate_ordering_sequencing": "\nGenerate  ordering/sequencing questions based on the following content:\n\nCONTENT:\n\n\nREQUIREMENTS:\n- Create logical sequences (steps, chronological order, etc.)\n- Include 4-6 items to order\n- Ensure clear correct sequence\n- Test understanding of processes or relationships\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Arrange the following steps in the correct order:\",\n    \"options\": [\"Step A\", \"Step B\", \"Step C\", \"Step D\"],\n    \"correct_answer\": [\"Step C\", \"Step A\", \"Step D\", \"Step B\"],\n    \"explanation\": \"The correct sequence is based on...\",\n    \"difficulty\": 6.0\n  }\n]\n",
    "services_ai_question_generator_service.template.semantic_similarity_detection": "Semantic similarity detection failed: ",
    "services_ai_question_generator_service.template.content_type": "Content type: ",
    "services_ai_question_generator_service.template.content_processing_failed": "Content processing failed: ",
    "services_gamification_integration.template.gamification_login_error_for_u": "Gamification login error for user : ",
    "services_gamification_integration.template.gamification_logout_error_for": "Gamification logout error for user : ",
    "services_gamification_integration.template.gamification_evaluation_start": "Gamification evaluation start error: ",
    "services_gamification_integration.template.gamification_evaluation_comple": "Gamification evaluation completion error: ",
    "services_gamification_integration.template.gamification_evaluation_review": "Gamification evaluation review error: ",
    "services_gamification_integration.template.gamification_program_enrollmen": "Gamification program enrollment error: ",
    "services_gamification_integration.template.gamification_module_completion": "Gamification module completion error: ",
    "services_gamification_integration.template.gamification_program_completio": "Gamification program completion error: ",
    "services_gamification_integration.template.gamification_appointment_sched": "Gamification appointment scheduling error: ",
    "services_gamification_integration.template.gamification_appointment_atten": "Gamification appointment attendance error: ",
    "services_gamification_integration.template.gamification_document_upload_e": "Gamification document upload error: ",
    "services_gamification_integration.template.gamification_document_sharing": "Gamification document sharing error: ",
    "services_gamification_integration.template.gamification_message_sending_e": "Gamification message sending error: ",
    "services_gamification_integration.template.gamification_help_request_erro": "Gamification help request error: ",
    "services_gamification_integration.template.gamification_help_provision_er": "Gamification help provision error: ",
    "services_gamification_integration.template.gamification_custom_achievemen": "Gamification custom achievement error: ",
    "services_gamification_integration.template.unknown_activity_type": "Unknown activity type: ",
    "services_gamification_integration.template.error_updating_evaluation_chal": "Error updating evaluation challenges: ",
    "services_gamification_integration.template.error_updating_program_challen": "Error updating program challenges: ",
    "services_gamification_integration.template.error_checking_improvement_ach": "Error checking improvement achievements: ",
    "services_gamification_integration.template.error_getting_engagement_summa": "Error getting engagement summary: ",
    "services_availability_service.template.error_updating_availability_sc": "Error updating availability schedule: ",
    "services_availability_service.template.invalid_date_format": "Invalid date format: ",
    "services_availability_service.template.error_adding_availability_exce": "Error adding availability exception: ",
    "services_availability_service.template.error_deleting_availability_ex": "Error deleting availability exception: ",
    "services_availability_service.template.02d": "02d",
    "services_availability_service.template.02d_1": "02d",
    "services_availability_service.template.02d_2": "02d",
    "services_availability_service.template.02d_3": "02d",
    "services_webrtc_service.template.participant_joined_room": "Participant  joined room ",
    "services_webrtc_service.template.participant_left_room": "Participant  left room ",
    "services_webrtc_service.template.created_webrtc_room": "Created WebRTC room ",
    "services_webrtc_service.template.room_not_found": "Room  not found",
    "services_webrtc_service.template.user_not_found": "User  not found",
    "services_webrtc_service.template.cleaned_up_empty_room": "Cleaned up empty room ",
    "services_webrtc_service.template.room_not_found_1": "Room  not found",
    "services_webrtc_service.template.error_updating_conference_part": "Error updating conference participant: ",
    "services_webrtc_service.template.error_joining_webrtc_room": "Error joining WebRTC room: ",
    "services_webrtc_service.template.error_handling_webrtc_signal": "Error handling WebRTC signal: ",
    "services_webrtc_service.template.error_sending_chat_message": "Error sending chat message: ",
    "services_webrtc_service.template.error_starting_recording": "Error starting recording: ",
    "services_webrtc_service.template.error_stopping_recording": "Error stopping recording: ",
    "services_webrtc_service.template.error_handling_disconnect": "Error handling disconnect: ",
    "services_two_factor_service.template.two_factor_authentication_has": "Two-factor authentication has been successfully enabled for your account.",
    "services_two_factor_service.template.hi_for_enhanced_security_w": "Hi ,\n\nFor enhanced security, we recommend enabling two-factor authentication on your account. This adds an extra layer of protection.\n\nYou can enable 2FA in your account security settings.",
    "services_email_service.template.email_sending_error": "Email sending error: ",
    "services_email_service.template.dear_to_reset": "\n    Dear  ,\n    \n    To reset your password, please click on the following link:\n    \n    \n    \n    If you did not request a password reset, please ignore this email.\n    \n    The link will expire in 1 hour.\n    \n    Best regards,\n    BDC Team\n    ",
    "services_email_service.template.p_dear_p_p_to": "\n    <p>Dear  ,</p>\n    <p>To reset your password, please click on the following link:</p>\n    <p><a href=\"\">Reset Your Password</a></p>\n    <p>If you did not request a password reset, please ignore this email.</p>\n    <p>The link will expire in 1 hour.</p>\n    <p>Best regards,<br>BDC Team</p>\n    ",
    "services_email_service.template.dear_welcome": "\n    Dear  ,\n    \n    Welcome to BDC! We're excited to have you on board.\n    \n    Your account has been created successfully.\n    \n    Best regards,\n    BDC Team\n    ",
    "services_email_service.template.p_dear_p_p_wel": "\n    <p>Dear  ,</p>\n    <p>Welcome to BDC! We're excited to have you on board.</p>\n    <p>Your account has been created successfully.</p>\n    <p>Best regards,<br>BDC Team</p>\n    ",
    "services_email_service.template.dear": "\n    Dear  ,\n    \n    \n    \n    Best regards,\n    BDC Team\n    ",
    "services_email_service.template.p_dear_p_p_p": "\n    <p>Dear  ,</p>\n    <p></p>\n    <p>Best regards,<br>BDC Team</p>\n    ",
    "services_email_service.template.recurring_appointment_created": "Recurring Appointment Created: ",
    "services_email_service.template.dear_a_recurring_appointme": "\nDear ,\n\nA recurring appointment series has been created for you:\n\nTitle: \nTrainer: \nFrequency: \nStarting: \nNumber of appointments: \n\nPlease log in to your account to view the full schedule.\n\nBest regards,\nBDC Team\n        ",
    "services_email_service.template.h2_recurring_appointment_cre": "\n<h2>Recurring Appointment Created</h2>\n<p>Dear ,</p>\n<p>A recurring appointment series has been created for you:</p>\n<ul>\n    <li><strong>Title:</strong> </li>\n    <li><strong>Trainer:</strong> </li>\n    <li><strong>Frequency:</strong> </li>\n    <li><strong>Starting:</strong> </li>\n    <li><strong>Number of appointments:</strong> </li>\n</ul>\n<p>Please log in to your account to view the full schedule.</p>\n<p>Best regards,<br>BDC Team</p>\n        ",
    "services_email_service.template.recurring_appointments_cancell": "Recurring Appointments Cancelled: ",
    "services_email_service.template.dear_your_recurring_appoin": "\nDear ,\n\nYour recurring appointment series has been cancelled:\n\nTitle: \nNumber of cancelled appointments: \nReason: \n\nIf you have any questions, please contact your trainer.\n\nBest regards,\nBDC Team\n        ",
    "services_email_service.template.h2_recurring_appointments_ca": "\n<h2>Recurring Appointments Cancelled</h2>\n<p>Dear ,</p>\n<p>Your recurring appointment series has been cancelled:</p>\n<ul>\n    <li><strong>Title:</strong> </li>\n    <li><strong>Number of cancelled appointments:</strong> </li>\n    <li><strong>Reason:</strong> </li>\n</ul>\n<p>If you have any questions, please contact your trainer.</p>\n<p>Best regards,<br>BDC Team</p>\n        ",
    "services_recurring_appointment_service.template.error_creating_recurring_appoi": "Error creating recurring appointment: ",
    "services_recurring_appointment_service.template.error_updating_series": "Error updating series: ",
    "services_recurring_appointment_service.template.error_updating_pattern": "Error updating pattern: ",
    "services_recurring_appointment_service.template.error_adding_exception": "Error adding exception: ",
    "services_recurring_appointment_service.template.error_removing_exception": "Error removing exception: ",
    "services_recurring_appointment_service.template.error_updating_appointment": "Error updating appointment: ",
    "services_recurring_appointment_service.template.cancelled": "Cancelled: ",
    "services_recurring_appointment_service.template.cancelled_1": "\nCancelled: ",
    "services_recurring_appointment_service.template.error_cancelling_series": "Error cancelling series: ",
    "services_recurring_appointment_service.template.error_generating_occurrences": "Error generating occurrences: ",
    "services_video_conference_service.template.error_getting_zoom_access_toke": "Error getting Zoom access token: ",
    "services_video_conference_service.template.zoom_api_request_failed": "Zoom API request failed: ",
    "services_video_conference_service.template.zoom_api_error": "Zoom API error: ",
    "services_video_conference_service.template.error_deleting_zoom_meeting": "Error deleting Zoom meeting: ",
    "services_video_conference_service.template.error_starting_zoom_recording": "Error starting Zoom recording: ",
    "services_video_conference_service.template.error_stopping_zoom_recording": "Error stopping Zoom recording: ",
    "services_video_conference_service.template.error_getting_zoom_recordings": "Error getting Zoom recordings: ",
    "services_video_conference_service.template.meet": "meet-",
    "services_video_conference_service.template.https_meet_google_com": "https://meet.google.com/",
    "services_video_conference_service.template.teams": "teams-",
    "services_video_conference_service.template.https_teams_microsoft_com_l": "https://teams.microsoft.com/l/meetup-join/",
    "services_video_conference_service.template.appointment_not_found": "Appointment  not found",
    "services_video_conference_service.template.host_user_not_found": "Host user  not found",
    "services_video_conference_service.template.video_conference_for_appointme": "Video conference for appointment: ",
    "services_video_conference_service.template.conference_not_found": "Conference  not found",
    "services_video_conference_service.template.conference_not_found_1": "Conference  not found",
    "services_video_conference_service.template.conference_not_found_2": "Conference  not found",
    "services_video_conference_service.template.conference_not_found_3": "Conference  not found",
    "services_video_conference_service.template.conference_not_found_4": "Conference  not found",
    "services_video_conference_service.template.conference_not_found_5": "Conference  not found",
    "services_video_conference_service.template.video_conference_invitation": "Video Conference Invitation: ",
    "services_video_conference_service.template.conference_not_found_6": "Conference  not found",
    "services_video_conference_service.template.recording": "Recording: ",
    "services_video_conference_service.template.recording_not_found": "Recording  not found",
    "services_video_conference_service.template.conference_not_found_7": "Conference  not found",
    "services_video_conference_service.template.video_conference": "Video Conference ",
    "services_video_conference_service.template.your_video_conference_has_b": "Your video conference '' has been .",
    "services_video_conference_service.template.join_at": " Join at: ",
    "services_video_conference_service.template.you_are_invited_to_join_the_v": "\nYou are invited to join the video conference: \n\nDate & Time: \nDuration:  minutes\n\nJoin URL: \n\n\nHost:  \n\nPlease join a few minutes before the scheduled time.\n        ",
    "services_video_conference_service.template.meeting_password": "Meeting Password: ",
    "services_video_conference_service.template.error_sending_email_invitation": "Error sending email invitation: ",
    "services_video_conference_service.template.video_conference_1": "Video Conference: \n",
    "services_video_conference_service.template.time": "Time: \n",
    "services_video_conference_service.template.join": "Join: ",
    "services_video_conference_service.template.error_sending_sms_invitation": "Error sending SMS invitation: ",
    "services_tracing_service.template.distributed_tracing_initialize": "Distributed tracing initialized for ",
    "services_tracing_service.template.failed_to_initialize_tracing": "Failed to initialize tracing: ",
    "services_tracing_service.template.failed_to_initialize_metrics": "Failed to initialize metrics: ",
    "services_tracing_service.template.auto_instrumentation_failed": "Auto-instrumentation failed: ",
    "services_tracing_service.template.failed_to_record_request_metri": "Failed to record request metrics: ",
    "services_tracing_service.template.failed_to_record_database_metr": "Failed to record database metrics: ",
    "services_tracing_service.template.db": "db.",
    "services_alert_service.template.alert_service_initialized_with": "Alert service initialized with channels: ",
    "services_alert_service.template.alert_rate_limited": "Alert rate limited: ",
    "services_alert_service.template.alert_sent_via": "Alert sent via : ",
    "services_alert_service.template.failed_to_send_alert_via": "Failed to send alert via : ",
    "services_alert_service.template.error_sending_alert_via": "Error sending alert via : ",
    "services_alert_service.template.unsupported_alert_channel": "Unsupported alert channel: ",
    "services_alert_service.template.error_sending_to": "Error sending to : ",
    "services_alert_service.template.alert": "Alert: ",
    "services_alert_service.template.bdc_alert": "[BDC Alert - ] ",
    "services_alert_service.template.html": "\n            <html>\n            <body>\n                <h2 style=\"color: ;\">\n                    🚨 BDC Alert - \n                </h2>\n                <h3></h3>\n                <p><strong>Message:</strong> </p>\n                <p><strong>Source:</strong> </p>\n                <p><strong>Event Type:</strong> </p>\n                <p><strong>Timestamp:</strong> </p>\n                \n                \n                <h4>Metadata:</h4>\n                <pre></pre>\n                \n                <hr>\n                <p><small>This alert was generated by the BDC Alert System</small></p>\n            </body>\n            </html>\n            ",
    "services_alert_service.template.p_strong_correlation_id_st": "<p><strong>Correlation ID:</strong> </p>",
    "services_alert_service.template.bdc_alert_1": "\n            BDC Alert - \n            \n            Title: \n            Message: \n            Source: \n            Event Type: \n            Timestamp: \n            \n            \n            Metadata:\n            \n            \n            ---\n            This alert was generated by the BDC Alert System\n            ",
    "services_alert_service.template.correlation_id": "Correlation ID: ",
    "services_alert_service.template.failed_to_send_email_alert": "Failed to send email alert: ",
    "services_alert_service.template.webhook_alert_failed": "Webhook alert failed: ",
    "services_alert_service.template.bdc_alert_2": "BDC Alert: ",
    "services_alert_service.template.bdc_alert_3": "🚨 BDC Alert - ",
    "services_alert_service.template.teams_alert_failed": "Teams alert failed: ",
    "services_alert_service.template.discord_alert_failed": "Discord alert failed: ",
    "services_user_service.template.user_with_email_already_exist": "User with email  already exists",
    "services_adaptive_test_service.template.focus_on_improving": "Focus on improving: ",
    "services_evaluation_service.template.created_evaluation": "Created evaluation ",
    "services_evaluation_service.template.error_creating_evaluation": "Error creating evaluation: ",
    "services_evaluation_service.template.error_getting_evaluation": "Error getting evaluation : ",
    "services_evaluation_service.template.error_getting_evaluations": "Error getting evaluations: ",
    "services_evaluation_service.template.error_updating_evaluation": "Error updating evaluation : ",
    "services_evaluation_service.template.submitted_responses_for_evalua": "Submitted responses for evaluation ",
    "services_evaluation_service.template.error_submitting_responses": "Error submitting responses: ",
    "services_evaluation_service.template.error_deleting_evaluation": "Error deleting evaluation : ",
    "services_evaluation_service.template.error_getting_beneficiary_eval": "Error getting beneficiary evaluations: ",
    "services_evaluation_service.template.error_getting_evaluation_stati": "Error getting evaluation statistics: ",
    "services_gamification_service.template.badge_earned": "🏆 Badge Earned: ",
    "services_gamification_service.template.congratulations_you_ve_earned": "Congratulations! You've earned the  badge.",
    "services_gamification_service.template.challenge_completed": "🎉 Challenge Completed: ",
    "services_gamification_service.template.congratulations_you_ve_comple": "Congratulations! You've completed the  challenge.",
    "services_gamification_service.template.reward_redeemed": "🎁 Reward Redeemed: ",
    "services_gamification_service.template.you_ve_successfully_redeemed": "You've successfully redeemed  for  points.",
    "services_performance_prediction_service.template.beneficiary_not_found": "Beneficiary  not found",
    "services_performance_prediction_service.template.training_score_prediction_mode": "Training score prediction model for tenant ",
    "services_performance_prediction_service.template.score_predictor_pkl": "score_predictor__.pkl",
    "services_performance_prediction_service.template.score_scaler_pkl": "score_scaler__.pkl",
    "services_performance_prediction_service.template.score_predictor_v": "Score Predictor v",
    "services_performance_prediction_service.template.training_pass_fail_classifier": "Training pass/fail classifier for tenant ",
    "services_performance_prediction_service.template.pass_fail_classifier_pkl": "pass_fail_classifier__.pkl",
    "services_performance_prediction_service.template.classifier_scaler_pkl": "classifier_scaler__.pkl",
    "services_performance_prediction_service.template.pass_fail_classifier_v": "Pass/Fail Classifier v",
    "services_performance_prediction_service.template.training_attendance_time_serie": "Training attendance time series model for tenant ",
    "services_performance_prediction_service.template.attendance_timeseries_pkl": "attendance_timeseries__.pkl",
    "services_performance_prediction_service.template.attendance_time_series_v": "Attendance Time Series v",
    "services_performance_prediction_service.template.error_training_time_series_mod": "Error training time series model: ",
    "services_performance_prediction_service.template.failed_to_train_time_series_mo": "Failed to train time series model: ",
    "services_performance_prediction_service.template.beneficiary_not_found_1": "Beneficiary  not found",
    "services_performance_prediction_service.template.predicted_score_of_indicates": "Predicted score of % indicates significant learning challenges. Immediate intervention recommended.",
    "services_performance_prediction_service.template.predicted_score_of_suggests": "Predicted score of % suggests need for supplementary materials.",
    "services_performance_prediction_service.template.only_chance_of_completion_u": "Only % chance of completion. Urgent intervention required.",
    "services_performance_prediction_service.template.completion_probability_of_in": "Completion probability of % indicates significant risk.",
    "services_performance_prediction_service.template.predicted_attendance_rate_of": "Predicted attendance rate of % requires immediate action.",
    "services_performance_prediction_service.template.predicted_attendance_of_is_b": "Predicted attendance of % is below minimum requirements.",
    "services_performance_prediction_service.template.high_risk_alert": "High Risk Alert:  ",
    "services_performance_prediction_service.template.performance_predictions_indica": "Performance predictions indicate  risk level. Immediate attention required.",
    "services_performance_prediction_service.template.at_risk_student_alert": "At-Risk Student Alert",
    "services_performance_prediction_service.template.in_needs_intervention": "  in  needs intervention.",
    "services_performance_prediction_service.template.model_not_found": "Model  not found",
    "services_beneficiary_service.template.beneficiary_with_email_alread": "Beneficiary with email  already exists",
    "services_beneficiary_service.template.beneficiary_with_national_id": "Beneficiary with national ID  already exists",
    "services_beneficiary_service.template.beneficiary_not_found": "Beneficiary  not found",
    "services_beneficiary_service.template.unsupported_export_format": "Unsupported export format: ",
    "services_beneficiary_service.template.unsupported_export_format_1": "Unsupported export format: ",
    "services_beneficiary_service.template.beneficiary_profile": "Beneficiary Profile:  ",
    "services_beneficiary_service.template.name": "Name:  ",
    "services_beneficiary_service.template.email": "Email: ",
    "services_beneficiary_service.template.phone": "Phone: ",
    "services_beneficiary_service.template.national_id": "National ID: ",
    "services_beneficiary_service.template.date_of_birth": "Date of Birth: ",
    "services_beneficiary_service.template.city": "City: ",
    "services_beneficiary_service.template.status": "Status: ",
    "services_beneficiary_service.template.": ": ...",
    "services_beneficiary_service.template._1": " - ",
    "services_storage_service.template.invalid_file_type_for": "Invalid file type for ",
    "services_storage_service.template.s3": "s3:///",
    "services_storage_service.template.s3_upload_failed": "S3 upload failed: ",
    "services_storage_service.template.error_processing_image": "Error processing image: ",
    "services_storage_service.template.documents": "documents/",
    "services_ai_report_service.template.ai_report": "ai_report:::",
    "services_ai_report_service.template.unknown_report_type": "Unknown report type: ",
    "services_ai_report_service.template.error_generating_beneficiary_r": "Error generating beneficiary report: ",
    "services_ai_report_service.template.error_generating_report": "Error generating report: ",
    "services_ai_report_service.template.error_generating_program_repor": "Error generating program report: ",
    "services_ai_report_service.template.error_generating_report_1": "Error generating report: ",
    "services_ai_report_service.template.error_generating_comparative_r": "Error generating comparative report: ",
    "services_ai_report_service.template.error_generating_report_2": "Error generating report: ",
    "services_ai_report_service.template.error_synthesizing_multi_sourc": "Error synthesizing multi-source data: ",
    "services_ai_report_service.template.error_synthesizing_data": "Error synthesizing data: ",
    "services_ai_report_service.template.beneficiary_profile": "\n        Beneficiary Profile:\n        - Name:  \n        - Enrollment Date: \n        - Status: \n        \n        Assessment Performance:\n        - Total Assessments: \n        - Average Score: %\n        - Score Trend: \n        \n        Attendance and Engagement:\n        - Attendance Rate: %\n        - Completed Appointments: \n        - Cancelled Appointments: \n        \n        Progress Metrics:\n        - Overall Improvement: %\n        - Active Programs: \n        \n        Recent Activity:\n        - Documents Uploaded: \n        - Notes Added: \n        ",
    "services_ai_report_service.template.openai_api_error": "OpenAI API error: ",
    "services_ai_report_service.template.based_on_the_foll": "\n            Based on the following beneficiary data, generate a comprehensive analysis report:\n            \n            \n            \n            Please provide:\n            1. An executive summary (2-3 sentences)\n            2. 3-5 key findings\n            3. Analysis of strengths and areas for improvement\n            4. 3-5 specific, actionable recommendations\n            5. Priority action items\n            \n            Format the response as a structured analysis with clear sections.\n            ",
    "services_ai_report_service.template.analyze_the_follo": "\n            Analyze the following progress data and provide insights:\n            \n            \n            \n            Focus on:\n            1. Progress trends and patterns\n            2. Performance trajectory\n            3. Specific areas of improvement or concern\n            4. Recommendations for maintaining or improving progress\n            ",
    "services_ai_report_service.template.analyze_the_follo_1": "\n            Analyze the following data and provide insights:\n            \n            \n            \n            Provide a structured analysis with key findings and recommendations.\n            ",
    "services_ai_report_service.template.program_has_active_beneficiar": "Program has  active beneficiaries",
    "services_ai_report_service.template.average_performance_score": "Average performance score: %",
    "services_ai_report_service.template.average_attendance_rate": "Average attendance rate: %",
    "services_ai_report_service.template.program_completion_rate": "Program completion rate: %",
    "services_ai_report_service.template.address_risk": "Address risk: ",
    "services_ai_report_service.template.low_attendance_rate": "Low attendance rate: %",
    "services_ai_report_service.template.low_average_score": "Low average score: %",
    "services_ai_report_service.template.beneficiary": "Beneficiary:  ",
    "services_ai_report_service.template.status": "Status: ",
    "services_ai_report_service.template.assessment_data": "Assessment Data:",
    "services_ai_report_service.template.total": "- Total: ",
    "services_ai_report_service.template.average_score": "- Average Score: %",
    "services_ai_report_service.template.trend": "- Trend: ",
    "services_ai_report_service.template.appointment_data": "Appointment Data:",
    "services_ai_report_service.template.attendance_rate": "- Attendance Rate: %",
    "services_ai_report_service.template.total_1": "- Total: ",
    "services_ai_report_service.template.document_data": "Document Data:",
    "services_ai_report_service.template.total_documents": "- Total Documents: ",
    "services_ai_report_service.template.types": "- Types: ",
    "services_ai_report_service.template.notes_data": "Notes Data:",
    "services_ai_report_service.template.total_notes": "- Total Notes: ",
    "services_ai_report_service.template.program_data": "Program Data:",
    "services_ai_report_service.template.active_programs": "- Active Programs: ",
    "services_ai_report_service.template.average_score_1": "% average score",
    "services_ai_report_service.template.assessments": " assessments",
    "services_ai_report_service.template.attendance": "% attendance",
    "services_ai_report_service.template.appointments": " appointments",
    "services_ai_report_service.template.documents": " documents",
    "services_ai_report_service.template.notes": " notes",
    "services_document_version_service.template.document_not_found": "Document  not found",
    "services_document_version_service.template.a_new_version_of_has_been_u": "A new version of \"\" has been uploaded",
    "services_document_version_service.template.error_creating_document_versio": "Error creating document version: ",
    "services_document_version_service.template.error_restoring_document_versi": "Error restoring document version: ",
    "services_document_version_service.template.error_comparing_document_versi": "Error comparing document versions: ",
    "services_document_version_service.template.document_not_found_1": "Document  not found",
    "services_document_version_service.template.error_enabling_document_versio": "Error enabling document versioning: ",
    "reporting_realtime_service.template.unsupported_subscription_type": "Unsupported subscription type: ",
    "reporting_realtime_service.template.invalid_subscription_type": "Invalid subscription type: ",
    "reporting_realtime_service.template.error_in_periodic_scheduler": "Error in periodic scheduler: ",
    "reporting_realtime_service.template.error_emitting_to_client": "Error emitting to client : ",
    "reporting_visualization_service.template.unsupported_chart_type": "Unsupported chart type: ",
    "reporting_visualization_service.template.chart_type_not_implemented": "Chart type  not implemented",
    "reporting_visualization_service.template.unsupported_map_type": "Unsupported map type: ",
    "reporting_visualization_service.template.lat_lng": "Lat: , Lng: ",
    "reporting_visualization_service.template.lat_lng_1": "Lat: , Lng: ",
    "reporting_visualization_service.template.lat_lng_2": "Lat: , Lng: ",
    "reporting_visualization_service.template.lat_lng_3": "Lat: , Lng: ",
    "reporting_visualization_service.template.invalid_chart_type": "Invalid chart type: ",
    "reporting_visualization_service.template.chart_type_requires_at_least": "Chart type  requires at least  dimensions",
    "reporting_visualization_service.template.column_not_found_in_data": "Column '' not found in data",
    "reporting_visualization_service.template.large_dataset_rows_may_impa": "Large dataset ( rows) may impact performance",
    "reporting_report_builder_service.template.template_with_id_not_found": "Template with ID  not found",
    "reporting_report_builder_service.template.large_number_of_fields_may": "Large number of fields () may impact performance",
    "reporting_report_builder_service.template.large_number_of_filters_may": "Large number of filters () may impact performance",
    "reporting_dashboard_service.template.dashboard_with_id_not_found": "Dashboard with ID  not found",
    "reporting_dashboard_service.template.dashboard_with_id_not_found_1": "Dashboard with ID  not found",
    "reporting_dashboard_service.template.invalid_widget_configuration": "Invalid widget configuration: ",
    "reporting_dashboard_service.template.invalid_widget_configuration_1": "Invalid widget configuration: ",
    "reporting_dashboard_service.template.widget_with_id_not_found": "Widget with ID  not found",
    "reporting_dashboard_service.template.widget_with_id_not_found_1": "Widget with ID  not found",
    "reporting_dashboard_service.template.invalid_widget_type": "Invalid widget type: ",
    "reporting_dashboard_service.template.required_field_is_missing": "Required field '' is missing",
    "reporting_dashboard_service.template.field_must_be_a_number": "Field '' must be a number",
    "reporting_dashboard_service.template.field_must_be_a_boolean": "Field '' must be a boolean",
    "reporting_dashboard_service.template.field_has_invalid_value": "Field '' has invalid value: ",
    "reporting_export_service.template.unsupported_export_format": "Unsupported export format: ",
    "reporting_export_service.template.export_format_not_implemented": "Export format  not implemented",
    "reporting_export_service.template.report_pdf": "report_.pdf",
    "reporting_export_service.template.generated_br": "Generated: <br/>",
    "reporting_export_service.template.records_br": "Records: <br/>",
    "reporting_export_service.template.filters_applied_br": "Filters Applied: <br/>",
    "reporting_export_service.template.i_note_only_first_rows_show": "<i>Note: Only first  rows shown</i>",
    "reporting_export_service.template.chart_png": "chart_.png",
    "reporting_export_service.template.report_xlsx": "report_.xlsx",
    "reporting_export_service.template.chart": "Chart ",
    "reporting_export_service.template.chart_1": "Chart ",
    "reporting_export_service.template.chart_2": "Chart ",
    "reporting_export_service.template.report_csv": "report_.csv",
    "reporting_export_service.template.report_pptx": "report_.pptx",
    "reporting_export_service.template.generated_on_records": "Generated on \n records",
    "reporting_export_service.template.total_records": "Total Records: ",
    "reporting_export_service.template.data_sources": "Data Sources: ",
    "reporting_export_service.template.filters_applied": "Filters Applied: ",
    "reporting_export_service.template.chart_png_1": "chart_.png",
    "reporting_export_service.template.report_docx": "report_.docx",
    "reporting_export_service.template.generated": "Generated: ",
    "reporting_export_service.template.records": "Records: ",
    "reporting_export_service.template.filters_applied_1": "Filters Applied: ",
    "reporting_export_service.template.data_sources_1": "Data Sources: ",
    "reporting_export_service.template.note_only_first_rows_shown": "Note: Only first  rows shown",
    "reporting_export_service.template.chart_png_2": "chart_.png",
    "reporting_export_service.template.report_json": "report_.json",
    "reporting_export_service.template.report_xml": "report_.xml",
    "reporting_export_service.template.unsupported_export_format_1": "Unsupported export format: ",
    "reporting_export_service.template.encoding_may_not_be_support": "Encoding '' may not be supported",
    "reporting_export_service.template.large_number_of_rows_may_im": "Large number of rows () may impact PDF generation performance",
    "reporting_scheduler_service.template.invalid_schedule_configuration": "Invalid schedule configuration: ",
    "reporting_scheduler_service.template.scheduled_report_with_id_not": "Scheduled report with ID  not found",
    "reporting_scheduler_service.template.scheduled_report_with_id_not_1": "Scheduled report with ID  not found",
    "reporting_scheduler_service.template.scheduled_report_with_id_not_2": "Scheduled report with ID  not found",
    "reporting_scheduler_service.template.unsupported_delivery_method": "Unsupported delivery method: ",
    "reporting_scheduler_service.template.unsupported_http_method": "Unsupported HTTP method: ",
    "reporting_scheduler_service.template.stor": "STOR ",
    "reporting_scheduler_service.template.invalid_schedule_type": "Invalid schedule type: ",
    "reporting_scheduler_service.template.invalid_delivery_method": "Invalid delivery method: ",
    "file_upload_image_processor.template.error_processing_image": "Error processing image : ",
    "file_upload_image_processor.template.image_processing_failed": "Image processing failed: ",
    "file_upload_image_processor.template.failed_to_open_image": "Failed to open image: ",
    "file_upload_image_processor.template.thumb_jpg": "_thumb_.jpg",
    "file_upload_image_processor.template.error_adding_watermark": "Error adding watermark: ",
    "file_upload_image_processor.template.failed_to_add_watermark": "Failed to add watermark: ",
    "file_upload_image_processor.template.error_blurring_image": "Error blurring image: ",
    "file_upload_image_processor.template.failed_to_blur_image": "Failed to blur image: ",
    "file_upload_file_scanner.template.file_not_found": "File not found: ",
    "file_upload_file_scanner.template.file_size_exceeds_maximum_all": "File size  exceeds maximum allowed size ",
    "file_upload_file_scanner.template.error_scanning_file": "Error scanning file : ",
    "file_upload_file_scanner.template.file_scan_failed": "File scan failed: ",
    "file_upload_file_scanner.template.error_detecting_mime_type": "Error detecting MIME type: ",
    "file_upload_file_scanner.template.failed_to_detect_mime_type": "Failed to detect MIME type: ",
    "file_upload_file_scanner.template.error_getting_file_description": "Error getting file description: ",
    "file_upload_file_scanner.template.file_extension_is_blocked_for": "File extension  is blocked for security reasons",
    "file_upload_file_scanner.template.file_type_is_not_allowed": "File type  is not allowed",
    "file_upload_file_scanner.template.virus_detected": "Virus detected: ",
    "file_upload_file_scanner.template.clamav_connection_failed": "ClamAV connection failed: ",
    "file_upload_file_scanner.template.virus_scan_error": "Virus scan error: ",
    "file_upload_file_scanner.template.file_quarantined_reason": "File quarantined:  -> . Reason: ",
    "file_upload_file_scanner.template.failed_to_quarantine_file": "Failed to quarantine file: ",
    "file_upload_file_scanner.template.failed_to_quarantine_file_1": "Failed to quarantine file: ",
    "file_upload_storage_manager.template.failed_to_initialize_s3_client": "Failed to initialize S3 client: ",
    "file_upload_storage_manager.template.error_storing_file": "Error storing file: ",
    "file_upload_storage_manager.template.failed_to_store_file": "Failed to store file: ",
    "file_upload_storage_manager.template.error_retrieving_file": "Error retrieving file: ",
    "file_upload_storage_manager.template.failed_to_retrieve_file": "Failed to retrieve file: ",
    "file_upload_storage_manager.template.error_deleting_file": "Error deleting file: ",
    "file_upload_storage_manager.template.failed_to_encrypt_file": "Failed to encrypt file: ",
    "file_upload_storage_manager.template.failed_to_decrypt_file": "Failed to decrypt file: ",
    "file_upload_storage_manager.template.inline_filename": "inline; filename=\"\"",
    "file_upload_storage_manager.template.https_s3_amazonaws_com": "https://.s3..amazonaws.com/",
    "file_upload_storage_manager.template.failed_to_upload_to_s3": "Failed to upload to S3: ",
    "file_upload_storage_manager.template.failed_to_create_signed_url": "Failed to create signed URL: ",
    "file_upload_storage_manager.template.failed_to_create_signed_url_1": "Failed to create signed URL: ",
    "file_upload_file_upload_service.template.file_size_exceeds_maximum": "File size  exceeds maximum ",
    "file_upload_file_upload_service.template.unexpected_error_during_file_u": "Unexpected error during file upload: ",
    "file_upload_file_upload_service.template.upload_failed": "Upload failed: ",
    "file_upload_file_upload_service.template.error_downloading_file": "Error downloading file : ",
    "file_upload_file_upload_service.template.download_failed": "Download failed: ",
    "file_upload_file_upload_service.template.error_deleting_file": "Error deleting file : ",
    "file_upload_file_upload_service.template.deletion_failed": "Deletion failed: ",
    "file_upload_file_upload_service.template.error_updating_file": "Error updating file : ",
    "file_upload_file_upload_service.template.failed_to_save_temporary_file": "Failed to save temporary file: ",
    "file_upload_file_upload_service.template.error_cleaning_temp_files": "Error cleaning temp files: ",
    "file_upload_api_example.template.unexpected_error_in_file_uploa": "Unexpected error in file upload: ",
    "file_upload_api_example.template.unexpected_error_in_file_downl": "Unexpected error in file download: ",
    "file_upload_api_example.template.unexpected_error_in_file_delet": "Unexpected error in file deletion: ",
    "file_upload_api_example.template.unexpected_error_getting_file": "Unexpected error getting file history: ",
    "file_upload_api_example.template.unexpected_error_getting_user": "Unexpected error getting user stats: ",
    "file_upload_api_example.template.unexpected_error_creating_sign": "Unexpected error creating signed URL: ",
    "file_upload_audit_logger.template.file_upload_logged_by_user": "File upload logged:  by user ",
    "file_upload_audit_logger.template.failed_to_log_file_upload": "Failed to log file upload: ",
    "file_upload_audit_logger.template.file_not_found_for_download_lo": "File not found for download logging: ",
    "file_upload_audit_logger.template.failed_to_log_file_download": "Failed to log file download: ",
    "file_upload_audit_logger.template.file_not_found_for_deletion_lo": "File not found for deletion logging: ",
    "file_upload_audit_logger.template.failed_to_log_file_deletion": "Failed to log file deletion: ",
    "file_upload_audit_logger.template.file_not_found": "File not found: ",
    "file_upload_audit_logger.template.failed_to_add_file_version": "Failed to add file version: ",
    "file_upload_audit_logger.template.failed_to_get_file_history": "Failed to get file history: ",
    "file_upload_audit_logger.template.cleaned_up_old_audit_entries": "Cleaned up  old audit entries",
    "file_upload_audit_logger.template.failed_to_cleanup_old_audits": "Failed to cleanup old audits: ",
    "file_upload_audit_logger.template.failed_to_get_user_upload_stat": "Failed to get user upload stats: ",
    "core_service_container.template.registered_service_singleto": "Registered service:  (singleton=)",
    "core_service_container.template.created_alias": "Created alias:  -> ",
    "core_service_container.template.service_is_not_registered": "Service '' is not registered",
    "core_service_container.template.circular_dependency_detected": "Circular dependency detected: ",
    "core_service_container.template.resolved_service": "Resolved service: ",
    "core_service_container.template.unregistered_service": "Unregistered service: ",
    "core_base_service.template.created_entity": "Created  entity: ",
    "core_base_service.template.database_error_in_create": "Database error in .create: ",
    "core_base_service.template.error_in_create": "Error in .create: ",
    "core_base_service.template.cache_hit_for_id": "Cache hit for  ID: ",
    "core_base_service.template.clearing_cache_for_pattern": "Clearing cache for pattern: ",
    "core_service_config.template.missing_required_services": "Missing required services: ",
    "core_service_factory.template.servicefactory": "ServiceFactory[]",
    "core_service_factory.template.creating_with_dependencies": "Creating  with dependencies: ",
    "core_service_factory.template.created_instance": "Created  instance",
    "core_service_factory.template.failed_to_create": "Failed to create : ",
    "core_service_factory.template.resolved_dependency_by_type": "Resolved dependency '' by type ''",
    "core_service_factory.template.registered_in_container": "Registered  in container",
    "core_service_factory.template.registered_factory": "Registered factory: ",
    "core_service_factory.template.no_factory_registered_for_serv": "No factory registered for service: ",
    "core_user_service_example.template.invalid_role_must_be_one_of": "Invalid role. Must be one of: ",
    "core_user_service_example.template.validation_errors": "Validation errors: ",
    "core_user_service_example.template.invalid_password_attempt_for_u": "Invalid password attempt for user ",
    "core_user_service_example.template.failed_to_create_profile_for_u": "Failed to create profile for user : ",
    "core_user_service_example.template.failed_to_log_activity": "Failed to log activity: ",
    "core_user_service_example.template.would_send_welcome_email_to": "Would send welcome email to ",
    "core_user_service_example.template.revoking_sessions_for_user": "Revoking sessions for user ",
    "core_decorators.template.service_not_found_in_contai": "Service '' not found in container",
    "core_decorators.template.service_not_found_in_contai_1": "Service '' not found in container",
    "core_decorators.template.registered_service_class": "Registered service class: ",
    "core_decorators.template.transaction_committed_for": "Transaction committed for ",
    "core_decorators.template.transaction_rolled_back_for": "Transaction rolled back for : ",
    "core_decorators.template.database_error_in": "Database error in : ",
    "core_decorators.template.cache_hit_for": "Cache hit for ",
    "core_decorators.template.cached_result_for": "Cached result for ",
    "core_decorators.template.rate_limit": "rate_limit::",
    "core_decorators.template.rate_limit_exceeded_for_by": "Rate limit exceeded for  by ",
    "core_decorators.template.rate_limit_exceeded_calls_pe": "Rate limit exceeded:  calls per  seconds",
    "core_decorators.template.invalid_type_for_expected": "Invalid type for : expected ",
    "core_decorators.template.role_required": "Role '' required",
    "core_decorators.template.role_required_1": "Role '' required",
    "core_decorators.template.queuing_async_task_on_queue": "Queuing async task:  on queue: ",
    "gamification_achievement_service.template.created_achievement": "Created achievement: ",
    "gamification_achievement_service.template.error_creating_achievement": "Error creating achievement: ",
    "gamification_achievement_service.template.user_already_has_achievement": "User  already has achievement ",
    "gamification_achievement_service.template.awarded_achievement_to_user": "Awarded achievement  to user ",
    "gamification_achievement_service.template.error_awarding_achievement": "Error awarding achievement: ",
    "gamification_achievement_service.template.error_checking_achievements_fo": "Error checking achievements for user : ",
    "gamification_achievement_service.template.error_getting_user_achievement": "Error getting user achievements: ",
    "gamification_achievement_service.template.error_getting_achievement_prog": "Error getting achievement progress: ",
    "gamification_achievement_service.template.error_getting_available_achiev": "Error getting available achievements: ",
    "gamification_achievement_service.template.error_checking_achievement_eli": "Error checking achievement eligibility: ",
    "gamification_achievement_service.template.error_calculating_achievement": "Error calculating achievement progress: ",
    "gamification_achievement_service.template.complete_evaluations": "Complete / evaluations",
    "gamification_learning_path_service.template.created_learning_path": "Created learning path: ",
    "gamification_learning_path_service.template.error_creating_learning_path": "Error creating learning path: ",
    "gamification_learning_path_service.template.added_node_to_learning_path": "Added node to learning path : ",
    "gamification_learning_path_service.template.error_adding_path_node": "Error adding path node: ",
    "gamification_learning_path_service.template.unknown_path_generation_type": "Unknown path generation type: ",
    "gamification_learning_path_service.template.error_generating_personalized": "Error generating personalized path: ",
    "gamification_learning_path_service.template.assigned_path_to_user": "Assigned path  to user ",
    "gamification_learning_path_service.template.error_assigning_path_to_user": "Error assigning path to user: ",
    "gamification_learning_path_service.template.started_learning_path_for_use": "Started learning path  for user ",
    "gamification_learning_path_service.template.error_starting_learning_path": "Error starting learning path: ",
    "gamification_learning_path_service.template.completed_node_for_user_in_p": "Completed node  for user  in path ",
    "gamification_learning_path_service.template.error_completing_node": "Error completing node: ",
    "gamification_learning_path_service.template.error_getting_user_learning_pa": "Error getting user learning paths: ",
    "gamification_learning_path_service.template.error_getting_path_progress": "Error getting path progress: ",
    "gamification_learning_path_service.template.error_getting_recommended_path": "Error getting recommended paths: ",
    "gamification_learning_path_service.template.adaptive_path": "Adaptive Path: ",
    "gamification_learning_path_service.template.personalized_learning_path_to": "Personalized learning path to achieve: ",
    "gamification_learning_path_service.template.error_creating_adaptive_path": "Error creating adaptive path: ",
    "gamification_learning_path_service.template.skill_development": "Skill Development: ",
    "gamification_learning_path_service.template.develop_skills_in": "Develop skills in: ",
    "gamification_learning_path_service.template.goal_oriented": "Goal-Oriented: ",
    "gamification_learning_path_service.template.achieve_your_goal": "Achieve your goal: ",
    "gamification_learning_path_service.template.competency_development": "Competency Development",
    "gamification_learning_path_service.template.develop_competencies_in": "Develop competencies in: ",
    "gamification_learning_path_service.template.error_calculating_estimated_co": "Error calculating estimated completion: ",
    "gamification_learning_path_service.template.error_getting_next_available_n": "Error getting next available node: ",
    "gamification_learning_path_service.template.error_checking_node_availabili": "Error checking node availability: ",
    "gamification_learning_path_service.template.error_checking_if_node_is_mand": "Error checking if node is mandatory: ",
    "gamification_learning_path_service.template.error_getting_user_learning_pr": "Error getting user learning profile: ",
    "gamification_learning_path_service.template.error_calculating_path_relevan": "Error calculating path relevance score: ",
    "gamification_learning_path_service.template.learn": "Learn ",
    "gamification_learning_path_service.template.step_1_foundation_for": "Step 1: Foundation for ",
    "gamification_learning_path_service.template.develop": "Develop ",
    "gamification_gamification_manager.template.triggering_gamification_event": "Triggering gamification event:  for user ",
    "gamification_gamification_manager.template.no_handler_for_event_type": "No handler for event type: ",
    "gamification_gamification_manager.template.gamification_event_processed_s": "Gamification event processed successfully: ",
    "gamification_gamification_manager.template.error_processing_gamification": "Error processing gamification event : ",
    "gamification_gamification_manager.template.error_getting_user_gamificatio": "Error getting user gamification summary: ",
    "gamification_gamification_manager.template.error_getting_gamification_das": "Error getting gamification dashboard: ",
    "gamification_gamification_manager.template.error_creating_gamification_ch": "Error creating gamification challenge: ",
    "gamification_gamification_manager.template.error_in_bulk_reward_awarding": "Error in bulk reward awarding: ",
    "gamification_gamification_manager.template.error_handling_evaluation_comp": "Error handling evaluation completed event: ",
    "gamification_gamification_manager.template.error_handling_program_complet": "Error handling program completed event: ",
    "gamification_gamification_manager.template.error_handling_daily_login_eve": "Error handling daily login event: ",
    "gamification_gamification_manager.template.error_handling_perfect_score_e": "Error handling perfect score event: ",
    "gamification_gamification_manager.template.error_handling_first_evaluatio": "Error handling first evaluation event: ",
    "gamification_gamification_manager.template.error_handling_streak_mileston": "Error handling streak milestone event: ",
    "gamification_gamification_manager.template.error_handling_social_interact": "Error handling social interaction event: ",
    "gamification_gamification_manager.template.error_handling_learning_path_n": "Error handling learning path node completed event: ",
    "gamification_gamification_manager.template.error_handling_team_challenge": "Error handling team challenge completed event: ",
    "gamification_gamification_manager.template.updating_leaderboards_for_user": "Updating leaderboards for user ",
    "gamification_gamification_manager.template.error_updating_leaderboards": "Error updating leaderboards: ",
    "gamification_gamification_manager.template.error_calculating_overall_gami": "Error calculating overall gamification score: ",
    "gamification_xp_service.template.error_awarding_xp": "Error awarding XP: ",
    "gamification_xp_service.template.unknown_activity_type": "Unknown activity type: ",
    "gamification_xp_service.template.error_awarding_activity_xp": "Error awarding activity XP: ",
    "gamification_xp_service.template.error_getting_xp_history": "Error getting XP history: ",
    "gamification_xp_service.template.error_getting_xp_statistics": "Error getting XP statistics: ",
    "gamification_xp_service.template.error_getting_xp_leaderboard": "Error getting XP leaderboard: ",
    "gamification_xp_service.template.created_xp_multiplier": "Created XP multiplier: ",
    "gamification_xp_service.template.error_creating_xp_multiplier": "Error creating XP multiplier: ",
    "gamification_xp_service.template.error_calculating_total_multip": "Error calculating total multiplier: ",
    "gamification_xp_service.template.error_calculating_activity_bon": "Error calculating activity bonus: ",
    "gamification_xp_service.template.error_checking_multiplier_appl": "Error checking multiplier applicability: ",
    "gamification_xp_service.template.error_getting_time_based_multi": "Error getting time-based multiplier: ",
    "gamification_xp_service.template.error_getting_streak_multiplie": "Error getting streak multiplier: ",
    "gamification_xp_service.template.error_calculating_current_stre": "Error calculating current streak: ",
    "gamification_progress_service.template.created_progress_tracker_for_u": "Created progress tracker for user : ",
    "gamification_progress_service.template.error_creating_progress_tracke": "Error creating progress tracker: ",
    "gamification_progress_service.template.error_updating_progress": "Error updating progress: ",
    "gamification_progress_service.template.error_getting_user_progress": "Error getting user progress: ",
    "gamification_progress_service.template.created_milestone": "Created milestone: ",
    "gamification_progress_service.template.error_creating_milestone": "Error creating milestone: ",
    "gamification_progress_service.template.unknown_milestone_template": "Unknown milestone template: ",
    "gamification_progress_service.template.error_checking_milestones": "Error checking milestones: ",
    "gamification_progress_service.template.awarded_milestone_to_user": "Awarded milestone  to user ",
    "gamification_progress_service.template.error_awarding_milestone": "Error awarding milestone: ",
    "gamification_progress_service.template.error_getting_user_milestones": "Error getting user milestones: ",
    "gamification_progress_service.template.error_getting_progress_dashboa": "Error getting progress dashboard: ",
    "gamification_progress_service.template.created_progress_goal": "Created progress goal: ",
    "gamification_progress_service.template.error_creating_progress_goal": "Error creating progress goal: ",
    "gamification_progress_service.template.error_tracking_program_complet": "Error tracking program completion: ",
    "gamification_progress_service.template.error_tracking_skill_developme": "Error tracking skill development: ",
    "gamification_progress_service.template.error_tracking_evaluation_perf": "Error tracking evaluation performance: ",
    "gamification_progress_service.template.error_tracking_learning_streak": "Error tracking learning streak: ",
    "gamification_progress_service.template.error_tracking_participation": "Error tracking participation: ",
    "gamification_progress_service.template.error_tracking_custom_objectiv": "Error tracking custom objective: ",
    "gamification_progress_service.template.error_checking_milestone_eligi": "Error checking milestone eligibility: ",
    "gamification_progress_service.template.error_processing_milestone_rew": "Error processing milestone rewards: ",
    "gamification_progress_service.template.error_calculating_overall_prog": "Error calculating overall progress: ",
    "gamification_progress_service.template.error_getting_next_milestones": "Error getting next milestones: ",
    "gamification_progress_service.template.error_calculating_milestone_pr": "Error calculating milestone progress: ",
    "gamification_progress_service.template.error_calculating_learning_str": "Error calculating learning streak: ",
    "gamification_progress_service.template.error_creating_milestone_achie": "Error creating milestone achievement: ",
    "gamification_social_service.template.created_team_by_user": "Created team:  by user ",
    "gamification_social_service.template.error_creating_team": "Error creating team: ",
    "gamification_social_service.template.user_joined_team": "User  joined team ",
    "gamification_social_service.template.error_joining_team": "Error joining team: ",
    "gamification_social_service.template.user_left_team": "User  left team ",
    "gamification_social_service.template.error_leaving_team": "Error leaving team: ",
    "gamification_social_service.template.error_getting_user_teams": "Error getting user teams: ",
    "gamification_social_service.template.error_getting_team_details": "Error getting team details: ",
    "gamification_social_service.template.created_team_challenge": "Created team challenge: ",
    "gamification_social_service.template.error_creating_team_challenge": "Error creating team challenge: ",
    "gamification_social_service.template.started_team_challenge": "Started team challenge ",
    "gamification_social_service.template.error_starting_team_challenge": "Error starting team challenge: ",
    "gamification_social_service.template.error_getting_team_challenges": "Error getting team challenges: ",
    "gamification_social_service.template.created_social_share_by_user": "Created social share by user ",
    "gamification_social_service.template.error_creating_social_share": "Error creating social share: ",
    "gamification_social_service.template.error_getting_social_feed": "Error getting social feed: ",
    "gamification_social_service.template.user_reacted_to_share_with": "User  reacted to share  with ",
    "gamification_social_service.template.error_reacting_to_share": "Error reacting to share: ",
    "gamification_social_service.template.created_collaboration": "Created collaboration: ",
    "gamification_social_service.template.error_creating_collaboration": "Error creating collaboration: ",
    "gamification_social_service.template.error_getting_team_leaderboard": "Error getting team leaderboard: ",
    "gamification_social_service.template.error_getting_team_statistics": "Error getting team statistics: ",
    "gamification_level_service.template.error_updating_user_level": "Error updating user level: ",
    "gamification_level_service.template.error_getting_level_progress": "Error getting level progress: ",
    "gamification_level_service.template.error_getting_level_title": "Error getting level title: ",
    "gamification_level_service.template.level_master": "Level  Master",
    "gamification_level_service.template.reached_level": "Reached level ",
    "gamification_level_service.template.unlocked_new_title": "Unlocked new title",
    "gamification_level_service.template.error_getting_level_rewards": "Error getting level rewards: ",
    "gamification_level_service.template.error_getting_level_leaderboar": "Error getting level leaderboard: ",
    "gamification_level_service.template.error_getting_level_statistics": "Error getting level statistics: ",
    "gamification_level_service.template.created_custom_level_system": "Created custom level system: ",
    "gamification_level_service.template.error_creating_custom_level_sy": "Error creating custom level system: ",
    "gamification_level_service.template.error_previewing_level_progres": "Error previewing level progression: ",
    "gamification_level_service.template.error_getting_xp_for_level": "Error getting XP for level: ",
    "gamification_level_service.template.missing_required_field": "Missing required field: ",
    "gamification_level_service.template.unknown_formula": "Unknown formula: ",
    "gamification_level_service.template.error_validating_level_system": "Error validating level system: ",
    "gamification_badge_service.template.created_badge": "Created badge: ",
    "gamification_badge_service.template.error_creating_badge": "Error creating badge: ",
    "gamification_badge_service.template.unknown_badge_template": "Unknown badge template: ",
    "gamification_badge_service.template.user_already_has_badge": "User  already has badge ",
    "gamification_badge_service.template.awarded_badge_to_user": "Awarded badge  to user ",
    "gamification_badge_service.template.error_awarding_badge": "Error awarding badge: ",
    "gamification_badge_service.template.error_getting_user_badges": "Error getting user badges: ",
    "gamification_badge_service.template.error_getting_badge_showcase": "Error getting badge showcase: ",
    "gamification_badge_service.template.error_getting_available_badges": "Error getting available badges: ",
    "gamification_badge_service.template.error_getting_badge_statistics": "Error getting badge statistics: ",
    "gamification_badge_service.template.error_creating_custom_badge_de": "Error creating custom badge design: ",
    "gamification_badge_service.template.badge": "badge-",
    "gamification_badge_service.template.display_inline_flex": "\n. {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    background: ;\n    border: ;\n    color: ;\n    font-family: ;\n    font-size: ;\n    padding: ;\n    box-shadow: ;\n    position: relative;\n    overflow: hidden;\n}\n",
    "gamification_badge_service.template.error_generating_badge_css": "Error generating badge CSS: ",
    "gamification_badge_service.template.error_calculating_completion_r": "Error calculating completion rate: ",
    "gamification_badge_service.template.error_getting_most_earned_badg": "Error getting most earned badges: ",
    "gamification_badge_service.template.error_getting_rarest_badges": "Error getting rarest badges: ",
    "gamification_leaderboard_service.template.created_leaderboard": "Created leaderboard: ",
    "gamification_leaderboard_service.template.error_creating_leaderboard": "Error creating leaderboard: ",
    "gamification_leaderboard_service.template.error_getting_leaderboard": "Error getting leaderboard: ",
    "gamification_leaderboard_service.template.error_getting_leaderboard_by_t": "Error getting leaderboard by type: ",
    "gamification_leaderboard_service.template.error_updating_leaderboard": "Error updating leaderboard: ",
    "gamification_leaderboard_service.template.error_getting_user_rankings": "Error getting user rankings: ",
    "gamification_leaderboard_service.template.created_competition": "Created competition: ",
    "gamification_leaderboard_service.template.error_creating_competition": "Error creating competition: ",
    "gamification_leaderboard_service.template.error_getting_active_competiti": "Error getting active competitions: ",
    "gamification_leaderboard_service.template.error_getting_global_leaderboa": "Error getting global leaderboards: ",
    "gamification_leaderboard_service.template.error_calculating_xp_leaderboa": "Error calculating XP leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_level_leader": "Error calculating level leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_badges_leade": "Error calculating badges leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_achievements": "Error calculating achievements leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_evaluation_s": "Error calculating evaluation score leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_completion_r": "Error calculating completion rate leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_streak_leade": "Error calculating streak leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_program_prog": "Error calculating program progress leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_participatio": "Error calculating participation leaderboard: ",
    "gamification_leaderboard_service.template.error_calculating_overall_rank": "Error calculating overall ranking score: ",
    "optimization_query_optimizer.template.performance_took_ms": "Performance:  took ms",
    "optimization_query_optimizer.template.cache_hit_for_query": "Cache hit for query: ",
    "optimization_query_optimizer.template.query": "query:",
    "optimization_query_optimizer.template.foreign_key_column_should_hav": "Foreign key column  should have an index",
    "optimization_query_optimizer.template.explain_analyze": "EXPLAIN ANALYZE ",
    "optimization_api_optimizer.template.performance_took_ms": "Performance:  took ms",
    "optimization_api_optimizer.template.batch_size_exceeds_maximum_of": "Batch size exceeds maximum of ",
    "optimization_api_optimizer.template.response_hash": "response:hash:",
    "optimization_api_optimizer.template.slow_api_request_took_ms": "Slow API request:  took ms",
    "optimization_api_optimizer.template.user": "user:",
    "optimization_api_optimizer.template.rate_limit": "rate_limit::",
    "optimization_cache_strategy.template.performance_took_ms": "Performance:  took ms",
    "optimization_cache_strategy.template.metadata": ":metadata",
    "optimization_cache_strategy.template.invalidated_cache_entries_mat": "Invalidated  cache entries matching pattern: ",
    "optimization_cache_strategy.template.failed_to_warm_cache_for_key": "Failed to warm cache for key : ",
    "optimization_cache_strategy.template.warmed_cache_entries": "Warmed  cache entries",
    "optimization_cache_strategy.template.failed_to_write_to_data_sourc": "Failed to write  to data source: ",
    "optimization_cache_strategy.template.id": "id:",
    "optimization_cache_strategy.template.id_1": ":id:",
    "optimization_cache_strategy.template.hash": ":hash:",
    "optimization_cache_strategy.template.low_cache_hit_rate": "Low cache hit rate: %",
    "optimization_cache_strategy.template.high_eviction_rate_evictions": "High eviction rate:  evictions",
    "optimization_cache_strategy.template.configured_cache_clustering_wi": "Configured cache clustering with  nodes",
    "optimization_cache_strategy.template.partition": "partition::",
    "optimization_db_indexing.template.performance_took_ms": "Performance:  took ms",
    "optimization_db_indexing.template.create_index_if": "\n            CREATE  INDEX IF NOT EXISTS \n            ON  ()\n            ",
    "optimization_db_indexing.template.created_index_on": "Created index  on ()",
    "optimization_db_indexing.template.failed_to_create_index": "Failed to create index : ",
    "optimization_db_indexing.template.drop_index_if_exists": "DROP INDEX IF EXISTS ",
    "optimization_db_indexing.template.dropped_unused_index": "Dropped unused index ",
    "optimization_db_indexing.template.failed_to_drop_index": "Failed to drop index : ",
    "optimization_db_indexing.template.explain_analyze": "EXPLAIN ANALYZE ",
    "optimization_db_indexing.template.high_cost_operation_detected": "High cost operation detected (cost=) - optimize query or add indexes",
    "optimization_db_indexing.template.create_index_on": "\n            CREATE INDEX  ON  ()\n            INCLUDE ()\n            ",
    "optimization_db_indexing.template.created_covering_index": "Created covering index ",
    "optimization_db_indexing.template.failed_to_create_covering_inde": "Failed to create covering index: ",
    "optimization_db_indexing.template.created_partial_index": "Created partial index ",
    "optimization_db_indexing.template.failed_to_create_partial_index": "Failed to create partial index: ",
    "video_conference_providers_webrtc_provider.template.password": "?password=",
    "video_conference_providers_webrtc_provider.template.error_creating_webrtc_meeting": "Error creating WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.template.failed_to_create_webrtc_meetin": "Failed to create WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.template.webrtc_room_not_found": "WebRTC room  not found",
    "video_conference_providers_webrtc_provider.template.error_updating_webrtc_meeting": "Error updating WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.template.error_deleting_webrtc_meeting": "Error deleting WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.template.webrtc_room_not_found_1": "WebRTC room  not found",
    "video_conference_providers_webrtc_provider.template.error_getting_webrtc_meeting_i": "Error getting WebRTC meeting info: ",
    "video_conference_providers_webrtc_provider.template.failed_to_get_webrtc_meeting_i": "Failed to get WebRTC meeting info: ",
    "video_conference_providers_webrtc_provider.template.recording_not_allowed_for_room": "Recording not allowed for room ",
    "video_conference_providers_webrtc_provider.template.started_recording_for_webrtc_r": "Started recording for WebRTC room ",
    "video_conference_providers_webrtc_provider.template.error_starting_webrtc_recordin": "Error starting WebRTC recording: ",
    "video_conference_providers_webrtc_provider.template.no_active_recording_for_room": "No active recording for room ",
    "video_conference_providers_webrtc_provider.template.stopped_recording_for_webrtc_r": "Stopped recording for WebRTC room ",
    "video_conference_providers_webrtc_provider.template.error_stopping_webrtc_recordin": "Error stopping WebRTC recording: ",
    "video_conference_providers_webrtc_provider.template.error_getting_webrtc_recording": "Error getting WebRTC recordings: ",
    "video_conference_providers_webrtc_provider.template.room_capacity_exceeded": "Room  capacity exceeded",
    "video_conference_providers_webrtc_provider.template.error_adding_participants_to_w": "Error adding participants to WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.template.error_getting_webrtc_meeting_p": "Error getting WebRTC meeting participants: ",
    "video_conference_providers_webrtc_provider.template.password_1": "?password=",
    "video_conference_providers_webrtc_provider.template.invitations_prepared_for_webrt": "Invitations prepared for WebRTC room ",
    "video_conference_providers_webrtc_provider.template.error_sending_webrtc_invitatio": "Error sending WebRTC invitations: ",
    "video_conference_providers_webrtc_provider.template.error_getting_webrtc_meeting_a": "Error getting WebRTC meeting analytics: ",
    "video_conference_providers_webrtc_provider.template.error_getting_active_webrtc_ro": "Error getting active WebRTC rooms: ",
    "video_conference_providers_webrtc_provider.template.cleaned_up_expired_webrtc_roo": "Cleaned up  expired WebRTC rooms",
    "video_conference_providers_webrtc_provider.template.error_cleaning_up_webrtc_rooms": "Error cleaning up WebRTC rooms: ",
    "video_conference_providers_google_meet_provider.template.missing_google_meet_configurat": "Missing Google Meet configuration: ",
    "video_conference_providers_google_meet_provider.template.error_setting_up_google_creden": "Error setting up Google credentials: ",
    "video_conference_providers_google_meet_provider.template.failed_to_authenticate_with_go": "Failed to authenticate with Google: ",
    "video_conference_providers_google_meet_provider.template.error_getting_google_calendar": "Error getting Google Calendar service: ",
    "video_conference_providers_google_meet_provider.template.failed_to_get_google_calendar": "Failed to get Google Calendar service: ",
    "video_conference_providers_google_meet_provider.template.meet": "meet-",
    "video_conference_providers_google_meet_provider.template.google_api_error_creating_meet": "Google API error creating meeting: ",
    "video_conference_providers_google_meet_provider.template.google_meet_api_error": "Google Meet API error: ",
    "video_conference_providers_google_meet_provider.template.error_creating_google_meet_mee": "Error creating Google Meet meeting: ",
    "video_conference_providers_google_meet_provider.template.failed_to_create_google_meet_m": "Failed to create Google Meet meeting: ",
    "video_conference_providers_google_meet_provider.template.google_api_error_updating_meet": "Google API error updating meeting: ",
    "video_conference_providers_google_meet_provider.template.google_meet_api_error_1": "Google Meet API error: ",
    "video_conference_providers_google_meet_provider.template.error_updating_google_meet_mee": "Error updating Google Meet meeting: ",
    "video_conference_providers_google_meet_provider.template.google_api_error_deleting_meet": "Google API error deleting meeting: ",
    "video_conference_providers_google_meet_provider.template.error_deleting_google_meet_mee": "Error deleting Google Meet meeting: ",
    "video_conference_providers_google_meet_provider.template.google_api_error_getting_meeti": "Google API error getting meeting info: ",
    "video_conference_providers_google_meet_provider.template.google_meet_api_error_2": "Google Meet API error: ",
    "video_conference_providers_google_meet_provider.template.error_getting_google_meet_meet": "Error getting Google Meet meeting info: ",
    "video_conference_providers_google_meet_provider.template.failed_to_get_google_meet_meet": "Failed to get Google Meet meeting info: ",
    "video_conference_providers_google_meet_provider.template.error_adding_participants_to_g": "Error adding participants to Google Meet: ",
    "video_conference_providers_google_meet_provider.template.error_sending_google_meet_invi": "Error sending Google Meet invitations: ",
    "video_conference_providers_google_meet_provider.template.error_getting_google_meet_anal": "Error getting Google Meet analytics: ",
    "video_conference_providers_google_meet_provider.template.error_getting_google_meet_part": "Error getting Google Meet participants: ",
    "video_conference_providers_zoom_provider.template.missing_zoom_configuration": "Missing Zoom configuration: ",
    "video_conference_providers_zoom_provider.template.error_getting_zoom_access_toke": "Error getting Zoom access token: ",
    "video_conference_providers_zoom_provider.template.failed_to_authenticate_with_zo": "Failed to authenticate with Zoom: ",
    "video_conference_providers_zoom_provider.template.unsupported_http_method": "Unsupported HTTP method: ",
    "video_conference_providers_zoom_provider.template.zoom_api_request_failed": "Zoom API request failed: ",
    "video_conference_providers_zoom_provider.template.zoom_api_error": "Zoom API error: ",
    "video_conference_providers_zoom_provider.template.error_creating_zoom_meeting": "Error creating Zoom meeting: ",
    "video_conference_providers_zoom_provider.template.failed_to_create_zoom_meeting": "Failed to create Zoom meeting: ",
    "video_conference_providers_zoom_provider.template.error_updating_zoom_meeting": "Error updating Zoom meeting: ",
    "video_conference_providers_zoom_provider.template.error_deleting_zoom_meeting": "Error deleting Zoom meeting: ",
    "video_conference_providers_zoom_provider.template.error_getting_zoom_meeting_inf": "Error getting Zoom meeting info: ",
    "video_conference_providers_zoom_provider.template.failed_to_get_zoom_meeting_inf": "Failed to get Zoom meeting info: ",
    "video_conference_providers_zoom_provider.template.error_starting_zoom_recording": "Error starting Zoom recording: ",
    "video_conference_providers_zoom_provider.template.error_stopping_zoom_recording": "Error stopping Zoom recording: ",
    "video_conference_providers_zoom_provider.template.error_getting_zoom_recordings": "Error getting Zoom recordings: ",
    "video_conference_providers_zoom_provider.template.error_adding_participants_to_z": "Error adding participants to Zoom meeting: ",
    "video_conference_providers_zoom_provider.template.error_getting_zoom_meeting_par": "Error getting Zoom meeting participants: ",
    "video_conference_providers_zoom_provider.template.failed_to_register_participant": "Failed to register participant : ",
    "video_conference_providers_zoom_provider.template.error_sending_zoom_invitations": "Error sending Zoom invitations: ",
    "video_conference_providers_zoom_provider.template.error_getting_zoom_meeting_ana": "Error getting Zoom meeting analytics: ",
    "video_conference_providers_microsoft_teams_provider.template.missing_teams_configuration": "Missing Teams configuration: ",
    "video_conference_providers_microsoft_teams_provider.template.https_login_microsoftonline": "https://login.microsoftonline.com//oauth2/v2.0/token",
    "video_conference_providers_microsoft_teams_provider.template.error_getting_teams_access_tok": "Error getting Teams access token: ",
    "video_conference_providers_microsoft_teams_provider.template.failed_to_authenticate_with_mi": "Failed to authenticate with Microsoft Teams: ",
    "video_conference_providers_microsoft_teams_provider.template.unsupported_http_method": "Unsupported HTTP method: ",
    "video_conference_providers_microsoft_teams_provider.template.teams_api_request_failed": "Teams API request failed: ",
    "video_conference_providers_microsoft_teams_provider.template.microsoft_teams_api_error": "Microsoft Teams API error: ",
    "video_conference_providers_microsoft_teams_provider.template.error_creating_teams_meeting": "Error creating Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.template.failed_to_create_teams_meeting": "Failed to create Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.template.error_updating_teams_meeting": "Error updating Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.template.error_deleting_teams_meeting": "Error deleting Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.template.error_getting_teams_meeting_in": "Error getting Teams meeting info: ",
    "video_conference_providers_microsoft_teams_provider.template.failed_to_get_teams_meeting_in": "Failed to get Teams meeting info: ",
    "video_conference_providers_microsoft_teams_provider.template.error_starting_teams_recording": "Error starting Teams recording: ",
    "video_conference_providers_microsoft_teams_provider.template.error_stopping_teams_recording": "Error stopping Teams recording: ",
    "video_conference_providers_microsoft_teams_provider.template.error_getting_teams_recordings": "Error getting Teams recordings: ",
    "video_conference_providers_microsoft_teams_provider.template.error_adding_participants_to_t": "Error adding participants to Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.template.failed_to_send_invitation_to": "Failed to send invitation to : ",
    "video_conference_providers_microsoft_teams_provider.template.error_sending_teams_invitation": "Error sending Teams invitations: ",
    "video_conference_providers_microsoft_teams_provider.template.error_getting_teams_meeting_pa": "Error getting Teams meeting participants: ",
    "video_conference_providers_microsoft_teams_provider.template.error_getting_teams_meeting_an": "Error getting Teams meeting analytics: ",
    "v2_auth_service.template.login_attempt_with_non_existen": "Login attempt with non-existent email: ",
    "v2_auth_service.template.login_attempt_for_inactive_use": "Login attempt for inactive user: ",
    "v2_auth_service.template.account_locked_due_to_failed_a": "Account locked due to failed attempts: ",
    "v2_auth_service.template.login_error_for": "Login error for : ",
    "v2_auth_service.template.registration_attempt_with_exis": "Registration attempt with existing email: ",
    "v2_auth_service.template.registration_error_for": "Registration error for : ",
    "v2_auth_service.template.token_refresh_error_for_user": "Token refresh error for user : ",
    "v2_auth_service.template.logout_error": "Logout error: ",
    "v2_auth_service.template.change_password_error_for_user": "Change password error for user : ",
    "v2_auth_service.template.password_reset_error_for": "Password reset error for : ",
    "v2_auth_service.template.failed_to_log_activity": "Failed to log activity: ",
    "v2_user_service.template.error_getting_users": "Error getting users: ",
    "v2_user_service.template.error_getting_user": "Error getting user : ",
    "v2_user_service.template.error_getting_user_by_email": "Error getting user by email : ",
    "v2_user_service.template.user_with_email_already_exist": "User with email  already exists",
    "v2_user_service.template.created_user": "Created user: ",
    "v2_user_service.template.error_creating_user": "Error creating user: ",
    "v2_user_service.template.error_updating_user": "Error updating user : ",
    "v2_user_service.template.deactivated_user": "Deactivated user: ",
    "v2_user_service.template.error_deleting_user": "Error deleting user : ",
    "v2_user_service.template.activated_user": "Activated user: ",
    "v2_user_service.template.error_activating_user": "Error activating user : ",
    "v2_user_service.template.deactivated_user_1": "Deactivated user: ",
    "v2_user_service.template.error_deactivating_user": "Error deactivating user : ",
    "v2_user_service.template.invalid_role": "Invalid role: ",
    "v2_user_service.template.changed_user_role_to": "Changed user  role to ",
    "v2_user_service.template.error_changing_user_role": "Error changing user role: ",
    "v2_user_service.template.error_getting_users_by_role": "Error getting users by role : ",
    "v2_beneficiary_service.template.error_getting_beneficiaries": "Error getting beneficiaries: ",
    "v2_beneficiary_service.template.error_getting_beneficiary": "Error getting beneficiary : ",
    "v2_beneficiary_service.template.beneficiary_with_email_alread": "Beneficiary with email  already exists",
    "v2_beneficiary_service.template.created_beneficiary": "Created beneficiary: ",
    "v2_beneficiary_service.template.error_creating_beneficiary": "Error creating beneficiary: ",
    "v2_beneficiary_service.template.error_updating_beneficiary": "Error updating beneficiary : ",
    "v2_beneficiary_service.template.error_deleting_beneficiary": "Error deleting beneficiary : ",
    "v2_beneficiary_service.template.error_searching_beneficiaries": "Error searching beneficiaries: ",
    "v2_beneficiary_service.template.error_getting_beneficiary_prog": "Error getting beneficiary programs: ",
    "v2_beneficiary_service.template.error_getting_beneficiary_eval": "Error getting beneficiary evaluations: ",
    "ai_human_review_workflow.template.notification_created_for_use": "Notification created:  for user ",
    "ai_human_review_workflow.template.exception_captured": "Exception captured: ",
    "ai_human_review_workflow.template.error_creating_review_workflow": "Error creating review workflow: ",
    "ai_human_review_workflow.template.workflow_not_found": "Workflow  not found",
    "ai_human_review_workflow.template.workflow_is_not_available_for": "Workflow  is not available for review",
    "ai_human_review_workflow.template.error_starting_review": "Error starting review: ",
    "ai_human_review_workflow.template.workflow_not_found_or_not_ass": "Workflow  not found or not assigned to reviewer",
    "ai_human_review_workflow.template.workflow_is_not_in_review": "Workflow  is not in review",
    "ai_human_review_workflow.template.invalid_action": "Invalid action: ",
    "ai_human_review_workflow.template.error_completing_review": "Error completing review: ",
    "ai_human_review_workflow.template.workflow_not_found_1": "Workflow  not found",
    "ai_human_review_workflow.template.workflow_is_not_pending_revis": "Workflow  is not pending revision",
    "ai_human_review_workflow.template.error_revising_content": "Error revising content: ",
    "ai_human_review_workflow.template.workflow_not_found_2": "Workflow  not found",
    "ai_human_review_workflow.template.your_has_been_auto_approved": "Your  has been auto-approved",
    "ai_human_review_workflow.template.error_auto_approving_workflow": "Error auto-approving workflow: ",
    "ai_human_review_workflow.template.error_getting_pending_reviews": "Error getting pending reviews: ",
    "ai_human_review_workflow.template.error_getting_review_statistic": "Error getting review statistics: ",
    "ai_human_review_workflow.template.new_requires_review": "New  requires review",
    "ai_human_review_workflow.template.your_has_been_approved": "Your  has been approved",
    "ai_human_review_workflow.template.your_has_been_rejected": "Your  has been rejected",
    "ai_human_review_workflow.template.your_requires_revision": "Your  requires revision",
    "ai_human_review_workflow.template.revised_ready_for_review": "Revised  ready for review",
    "ai_human_review_workflow.template.unknown_service_type": "Unknown service type: ",
    "ai_human_review_workflow.template.error_integrating_with_ai_serv": "Error integrating with AI services: ",
    "ai_note_analysis.template.note_analysis": "note_analysis::",
    "ai_note_analysis.template.note_not_found": "Note  not found",
    "ai_recommendations.template.recommendations": "recommendations::",
    "ai_recommendations.template.beneficiary_not_found": "Beneficiary  not found",
    "ai_content_recommendations.template.exception_captured": "Exception captured: ",
    "ai_content_recommendations.template.content_rec": "content_rec:::",
    "ai_content_recommendations.template.beneficiary_not_found": "Beneficiary  not found",
    "ai_content_recommendations.template.error_generating_content_recom": "Error generating content recommendations: ",
    "ai_content_recommendations.template.error_generating_structure_sug": "Error generating structure suggestions: ",
    "ai_content_recommendations.template.ai_recommendation_generation_f": "AI recommendation generation failed: ",
    "ai_content_recommendations.template.generate_personalized": "\n        Generate personalized content recommendations based on the following learner profile:\n        \n        Context Type: \n        Specific Need: \n        \n        Skill Gaps: \n        Recent Topics of Interest: \n        Performance Trend: \n        \n        Recent Assessment Scores:\n        \n        \n        Learning Preferences:\n        \n        ",
    "ai_content_recommendations.template.generate_detailed_str": "\n        Generate detailed structure suggestions for creating  content.\n        ",
    "ai_content_recommendations.template.curr": "\n            \n            Current content to improve:\n            \n            ",
    "ai_content_recommendations.template.spec": "\n            \n            Specific requirements:\n            \n            ",
    "ai_report_synthesis.template.exception_captured": "Exception captured: ",
    "ai_report_synthesis.template.ai_report": "ai_report:::",
    "ai_report_synthesis.template.beneficiary_not_found": "Beneficiary  not found",
    "ai_report_synthesis.template.error_generating_report": "Error generating report: ",
    "orchestration_tasks.template.starting_task_type": "Starting task:  (type: )",
    "orchestration_tasks.template.unknown_task_type": "Unknown task type: ",
    "orchestration_tasks.template.task_completed_execution_ti": "Task completed:  (execution time: s)",
    "orchestration_tasks.template.task_failed": "Task failed:  - ",
    "orchestration_tasks.template.retrying_task_attempt": "Retrying task:  (attempt /)",
    "orchestration_monitoring.template.error_in_metric_collection": "Error in metric collection: ",
    "orchestration_monitoring.template.error_in_alert_checking": "Error in alert checking: ",
    "orchestration_monitoring.template.error_in_cleanup": "Error in cleanup: ",
    "orchestration_monitoring.template.monitor_pipelines": "monitor:pipelines",
    "orchestration_monitoring.template.registered_pipeline_for_monito": "Registered pipeline for monitoring: ",
    "orchestration_monitoring.template.execution_data_not_found": "Execution data not found: ",
    "orchestration_monitoring.template.added_alert_rule_for_pipeli": "Added alert rule '' for pipeline: ",
    "orchestration_monitoring.template.alert_acknowledged_by": "Alert  acknowledged by ",
    "orchestration_monitoring.template.error_in_alert_handler": "Error in alert handler: ",
    "orchestration_monitoring.template.alert_triggered": "Alert triggered: ",
    "orchestration_monitoring.template.error_during_cleanup": "Error during cleanup: ",
    "orchestration_cache.template.error_in_periodic_cleanup": "Error in periodic cleanup: ",
    "orchestration_cache.template.error_updating_stats": "Error updating stats: ",
    "orchestration_cache.template.entry_size_exceeds_max_size": "Entry size () exceeds max size ()",
    "orchestration_cache.template.cached_value_with_key": "Cached value with key: ",
    "orchestration_cache.template.error_setting_cache_value": "Error setting cache value: ",
    "orchestration_cache.template.error_getting_cache_value": "Error getting cache value: ",
    "orchestration_cache.template.error_deleting_cache_value": "Error deleting cache value: ",
    "orchestration_cache.template.error_deleting_by_tags": "Error deleting by tags: ",
    "orchestration_cache.template.error_clearing_cache": "Error clearing cache: ",
    "orchestration_cache.template.cleaned_up_expired_cache_entr": "Cleaned up  expired cache entries",
    "orchestration_cache.template.error_during_cleanup": "Error during cleanup: ",
    "orchestration_cache.template.error_during_lru_eviction": "Error during LRU eviction: ",
    "orchestration_cache.template.error_updating_access_stats": "Error updating access stats: ",
    "orchestration_cache.template.error_updating_cache_stats": "Error updating cache stats: ",
    "orchestration_cache.template.cache_optimization_completed": "Cache optimization completed: ",
    "orchestration_cache.template.error_during_cache_optimizatio": "Error during cache optimization: ",
    "orchestration_cache.template.error_calculating_total_size": "Error calculating total size: ",
    "orchestration_human_loop.template.created_review_request_for_t": "Created review request:  for task: ",
    "orchestration_human_loop.template.assigned_review_to_reviewer": "Assigned review  to reviewer ",
    "orchestration_human_loop.template.completed_review_by_reviewer": "Completed review  by reviewer ",
    "orchestration_human_loop.template.rejected_review_by_reviewer": "Rejected review  by reviewer : ",
    "orchestration_human_loop.template.cancelled_review": "Cancelled review ",
    "orchestration_human_loop.template.registered_reviewer": "Registered reviewer:  ()",
    "orchestration_pipeline.template.unsupported_configuration_file": "Unsupported configuration file format: ",
    "orchestration_pipeline.template.task_has_unknown_dependency": "Task '' has unknown dependency ''",
    "orchestration_pipeline.template.dependency_not_found_in_pip": "Dependency '' not found in pipeline",
    "orchestration_pipeline.template.task_with_name_already_exis": "Task with name '' already exists",
    "orchestration_pipeline.template.cannot_remove_task_task": "Cannot remove task '': task '' depends on it",
    "orchestration_pipeline.template.task_not_found": "Task '' not found",
    "orchestration_pipeline.template.pipeline_v": "Pipeline:  (v)",
    "orchestration_pipeline.template.description": "Description: ",
    "orchestration_pipeline.template.stage": "Stage :",
    "orchestration_pipeline.template.": " <- ",
    "orchestration_pipeline.template._1": "  -  ()",
    "orchestration_orchestrator.template.registered_pipeline": "Registered pipeline: ",
    "orchestration_orchestrator.template.pipeline_not_found": "Pipeline not found: ",
    "orchestration_orchestrator.template.started_pipeline_execution": "Started pipeline execution: ",
    "orchestration_orchestrator.template.executing_stage_with_tasks": "Executing stage  with  tasks",
    "orchestration_orchestrator.template.task_failed": "Task '' failed: ",
    "orchestration_orchestrator.template.completed_stage": "Completed stage /",
    "orchestration_orchestrator.template.pipeline_execution_completed": "Pipeline execution completed: ",
    "orchestration_orchestrator.template.pipeline_execution_failed": "Pipeline execution failed:  - ",
    "orchestration_orchestrator.template.using_cached_result_for_task": "Using cached result for task: ",
    "orchestration_orchestrator.template.task_execution_failed": "Task execution failed:  - ",
    "orchestration_orchestrator.template.created_human_review_request": "Created human review request:  for task: ",
    "orchestration_orchestrator.template.human_review_rejected": "Human review rejected: ",
    "orchestration_orchestrator.template.pipeline": "pipeline::",
    "orchestration_orchestrator.template.task": "task::",
    "orchestration_orchestrator.template.paused_pipeline_execution": "Paused pipeline execution: ",
    "orchestration_orchestrator.template.resumed_pipeline_execution": "Resumed pipeline execution: ",
    "orchestration_orchestrator.template.cancelled_pipeline_execution": "Cancelled pipeline execution: ",
    "orchestration_orchestrator.template.error_in_completion_callback": "Error in completion callback: ",
    "orchestration_orchestrator.template.error_in_error_callback": "Error in error callback: ",
    "orchestration_orchestrator.template.error_in_progress_callback": "Error in progress callback: ",
    "orchestration_versioning.template.failed_to_load_registry": "Failed to load registry: ",
    "orchestration_versioning.template.model_file_not_found": "Model file not found: ",
    "orchestration_versioning.template.version_already_exists_for_mo": "Version  already exists for model ",
    "orchestration_versioning.template.registered_model_v": "Registered model:  v",
    "orchestration_versioning.template.set_default_version_for": "Set default version for : ",
    "orchestration_versioning.template.deactivated_model_version_v": "Deactivated model version:  v",
    "orchestration_examples.template.mock_model_data_for": "Mock model data for ",
    "orchestration_examples.template.registered_v": "  ✅ Registered  v",
    "orchestration_examples.template.failed_to_register": "  ❌ Failed to register : ",
    "orchestration_examples.template.total_models_registered": "  📋 Total models registered: ",
    "orchestration_examples.template.registered_reviewer": "  ✅ Registered reviewer:  ()",
    "orchestration_examples.template.total_reviewers_registered": "  👥 Total reviewers registered: ",
    "orchestration_examples.template.registered_pipeline": "  ✅ Registered pipeline: ",
    "orchestration_examples.template.tasks": "     Tasks: ",
    "orchestration_examples.template.execution_order_stages": "     Execution order:  stages",
    "orchestration_examples.template.registered_pipeline_1": "  ✅ Registered pipeline: ",
    "orchestration_examples.template.tasks_1": "     Tasks: ",
    "orchestration_examples.template.registered_pipeline_2": "  ✅ Registered pipeline: ",
    "orchestration_examples.template.total_pipelines_registered": "  📊 Total pipelines registered: 3",
    "orchestration_examples.template.added_alert_rule": "  ✅ Added alert rule: ",
    "orchestration_examples.template.alert": "  🚨 ALERT: ",
    "orchestration_examples.template.added_alert_event_handler": "  📢 Added alert event handler",
    "orchestration_examples.template.started_document_processin": "  ⏳ Started document processing: ",
    "orchestration_examples.template.started_content_generation": "  ⏳ Started content generation: ",
    "orchestration_examples.template.started_data_analysis": "  ⏳ Started data analysis: ",
    "orchestration_examples.template.": "    : ",
    "orchestration_examples.template.not_found": "    : Not found",
    "orchestration_examples.template.created_review_request": "  📝 Created review request: ",
    "orchestration_examples.template.pending_reviews": "  📋 Pending reviews: ",
    "orchestration_examples.template.assigned_review_to_reviewe": "  ✅ Assigned review to reviewer_001",
    "orchestration_examples.template.review_completed_successfu": "  ✅ Review completed successfully",
    "orchestration_examples.template.reviewer_workload_active": "  👥 Reviewer workload:  active reviews",
    "orchestration_examples.template.cached_data": "  💾 Cached data: ",
    "orchestration_examples.template.cache_stats": "  📊 Cache stats:",
    "orchestration_examples.template.hit_rate": "    Hit rate: ",
    "orchestration_examples.template.total_entries": "    Total entries: ",
    "orchestration_examples.template.total_size_bytes": "    Total size:  bytes",
    "orchestration_examples.template.cache_optimization": "  🔧 Cache optimization:",
    "orchestration_examples.template.cleaned_expired": "    Cleaned expired: ",
    "orchestration_examples.template.total_entries_1": "    Total entries: ",
    "orchestration_examples.template.system_health": "  🏥 System Health:",
    "orchestration_examples.template.total_pipelines": "    Total pipelines: ",
    "orchestration_examples.template.active_pipelines": "    Active pipelines: ",
    "orchestration_examples.template.total_executions": "    Total executions: ",
    "orchestration_examples.template.success_rate": "    Success rate: ",
    "orchestration_examples.template.active_alerts": "    Active alerts: ",
    "orchestration_examples.template.pipeline_metrics": "\n  📊 Pipeline Metrics:",
    "orchestration_examples.template._1": "    :",
    "orchestration_examples.template.executions": "      Executions: ",
    "orchestration_examples.template.success_rate_1": "      Success rate: ",
    "orchestration_examples.template.avg_execution_time_s": "      Avg execution time: s",
    "orchestration_examples.template.active_alerts_1": "\n  🚨 Active Alerts ():",
    "orchestration_examples.template._2": "    : ",
    "orchestration_examples.template.no_active_alerts": "\n  ✅ No active alerts",
    "orchestration_examples.template.recent_executions": "\n  📝 Recent Executions ():",
    "orchestration_examples.template._3": "      - ",
    "orchestration_examples.template.error_running_example": "❌ Error running example: ",
    "sync_offline_handler.template.queued_operation_of_type": "Queued operation  of type ",
    "sync_offline_handler.template.cancelled_operation": "Cancelled operation ",
    "sync_offline_handler.template.error_in_state_change_handler": "Error in state change handler: ",
    "sync_offline_handler.template.connectivity_monitoring_error": "Connectivity monitoring error: ",
    "sync_offline_handler.template.queue_processing_error": "Queue processing error: ",
    "sync_offline_handler.template.executing_operation_of_type": "Executing operation  of type ",
    "sync_offline_handler.template.no_handler_for_operation_type": "No handler for operation type ",
    "sync_offline_handler.template.error_in_operation_callback": "Error in operation callback: ",
    "sync_offline_handler.template.successfully_executed_operatio": "Successfully executed operation ",
    "sync_offline_handler.template.failed_to_execute_operation": "Failed to execute operation : ",
    "sync_offline_handler.template.error_in_operation_error_callb": "Error in operation error callback: ",
    "sync_offline_handler.template.scheduled_retry_for_operatio": "Scheduled retry / for operation  in  seconds",
    "sync_offline_handler.template.completed_operations": "Completed operations: ",
    "sync_offline_handler.template.failed_operations": "Failed operations: ",
    "sync_offline_handler.template.cleanup_task_error": "Cleanup task error: ",
    "sync_offline_handler.template.error_saving_queue": "Error saving queue: ",
    "sync_offline_handler.template.error_loading_queue": "Error loading queue: ",
    "sync_conflict_resolver.template.detected_conflicts_for": "Detected  conflicts for :",
    "sync_conflict_resolver.template.error_resolving_conflict": "Error resolving conflict : ",
    "sync_conflict_resolver.template.no_handler_for_strategy": "No handler for strategy: ",
    "sync_conflict_resolver.template.resolving_conflict_using_stra": "Resolving conflict  using strategy ",
    "sync_conflict_resolver.template.unresolved_conflict_at_used": "Unresolved conflict at , used last write wins",
    "sync_conflict_resolver.template.no_custom_rules_for_entity_typ": "No custom rules for entity type: ",
    "sync_conflict_resolver.template.custom_rule_failed": "Custom rule failed: ",
    "sync_conflict_resolver.template.user_decision_callback_error": "User decision callback error: ",
    "sync_config.template.config_file_not_found": "Config file not found: ",
    "sync_config.template.error_loading_config_file": "Error loading config file : ",
    "sync_config.template.invalid_value_for": "Invalid value for :  ()",
    "sync_config.template.invalid_enum_value_for": "Invalid enum value for .: ",
    "sync_config.template.unknown_config_key": "Unknown config key: .",
    "sync_config.template.unsupported_storage_backend": "Unsupported storage backend: ",
    "sync_config.template.cannot_create_offline_storage": "Cannot create offline storage path: ",
    "sync_config.template.": "  - ",
    "sync_config.template.unknown_configuration_section": "Unknown configuration section: ",
    "sync_config.template.unknown_configuration_key": "Unknown configuration key: .",
    "sync_config.template.invalid_enum_value_for_1": "Invalid enum value for .: ",
    "sync_config.template.configuration_saved_to": "Configuration saved to: ",
    "sync_config.template.error_saving_configuration_to": "Error saving configuration to : ",
    "sync_config.template.syncconfig_websocket_offline": "SyncConfig(websocket=, offline=, ...)",
    "sync_config.template.syncconfig": "SyncConfig()",
    "sync_version_manager.template.created_version_for": "Created version  for :",
    "sync_version_manager.template.source_version_not_found": "Source version  not found",
    "sync_version_manager.template.target_version_not_found": "Target version  not found",
    "sync_version_manager.template.unsupported_merge_type": "Unsupported merge type: ",
    "sync_version_manager.template.merge_operation_completed_wit": "Merge operation  completed with success=",
    "sync_version_manager.template.merge_operation_failed": "Merge operation  failed: ",
    "sync_version_manager.template.branch_already_exists": "Branch  already exists",
    "sync_version_manager.template.created_branch_for": "Created branch  for :",
    "sync_version_manager.template.error_in_change_listener": "Error in change listener: ",
    "sync_version_manager.template.cleaned_up_old_versions": "Cleaned up  old versions",
    "sync_event_sourcing.template.event_integrity_verification_f": "Event integrity verification failed for event ",
    "sync_event_sourcing.template.appended_event_to_store": "Appended event  to store",
    "sync_event_sourcing.template.failed_to_append_event": "Failed to append event : ",
    "sync_event_sourcing.template.created_snapshot_for_at_vers": "Created snapshot for : at version ",
    "sync_event_sourcing.template.event_handler_error": "Event handler error: ",
    "sync_event_sourcing.template.event_subscriber_error": "Event subscriber error: ",
    "sync_event_sourcing.template.error_replaying_event": "Error replaying event : ",
    "sync_event_sourcing.template.replayed_events": "Replayed  events",
    "sync_event_sourcing.template.created_projection": "Created projection: ",
    "sync_event_sourcing.template.projection_handler_error_for": "Projection handler error for : ",
    "sync_event_sourcing.template.projection_processing_error": "Projection processing error: ",
    "sync_sync_service.template.failed_to_initialize_sync_serv": "Failed to initialize sync service: ",
    "sync_sync_service.template.failed_to_start_sync_service": "Failed to start sync service: ",
    "sync_sync_service.template.error_stopping_sync_service": "Error stopping sync service: ",
    "sync_sync_service.template.no_handler_for_operation": "No handler for operation: ",
    "sync_sync_service.template.error_processing_sync_request": "Error processing sync request : ",
    "sync_sync_service.template.entity_not_found": "Entity : not found",
    "sync_sync_service.template.version_created_for": "Version created:  for :",
    "sync_sync_service.template.error_handling_websocket_sync": "Error handling WebSocket sync request: ",
    "sync_sync_service.template.unhealthy_components": "Unhealthy components: ",
    "sync_sync_service.template.health_monitor_error": "Health monitor error: ",
    "sync_sync_service.template.sync_metrics": "Sync metrics: ",
    "sync_sync_service.template.metrics_collector_error": "Metrics collector error: ",
    "sync_utils.template.unsupported_hash_algorithm": "Unsupported hash algorithm: ",
    "sync_utils.template.unsupported_compression_method": "Unsupported compression method: ",
    "sync_utils.template.unsupported_compression_method_1": "Unsupported compression method: ",
    "sync_utils.template.attempt_failed_retrying_in_s": "Attempt  failed, retrying in s: ",
    "sync_utils.template.pb": " PB",
    "sync_device_sync.template.registered_device_for_user": "Registered device  for user ",
    "sync_device_sync.template.unregistered_device": "Unregistered device ",
    "sync_device_sync.template.source_device_not_found": "Source device  not found",
    "sync_device_sync.template.sync_scheduler_error": "Sync scheduler error: ",
    "sync_device_sync.template.executing_sync_operation": "Executing sync operation ",
    "sync_device_sync.template.failed_to_sync_to_device": "Failed to sync to device : ",
    "sync_device_sync.template.completed_sync_operation_suc": "Completed sync operation  (success: /)",
    "sync_device_sync.template.error_executing_sync_operation": "Error executing sync operation : ",
    "sync_device_sync.template.device_not_found": "Device  not found",
    "sync_device_sync.template.failed_to_send_sync_message_to": "Failed to send sync message to device : ",
    "sync_device_sync.template.marked_device_as_offline_sta": "Marked device  as offline (stale)",
    "sync_device_sync.template.device_monitor_error": "Device monitor error: ",
    "sync_device_sync.template.user": "user:",
    "sync_device_sync.template.device_type": "device_type:",
    "sync_device_sync.template.category": "category:",
    "sync_websocket_manager.template.new_websocket_connection": "New WebSocket connection: ",
    "sync_websocket_manager.template.error_handling_connection": "Error handling connection : ",
    "sync_websocket_manager.template.connection_lifecycle_error_for": "Connection lifecycle error for : ",
    "sync_websocket_manager.template.no_handler_for_message_type": "No handler for message type: ",
    "sync_websocket_manager.template.connection_authenticated_for": "Connection  authenticated for user ",
    "sync_websocket_manager.template.invalid_token_for_connection": "Invalid token for connection ",
    "sync_websocket_manager.template.authentication_error_for": "Authentication error for : ",
    "sync_websocket_manager.template.connection_subscribed_to_chan": "Connection  subscribed to channels: ",
    "sync_websocket_manager.template.error_sending_message_to": "Error sending message to : ",
    "sync_websocket_manager.template.cleaning_up_stale_connection": "Cleaning up stale connection: ",
    "sync_websocket_manager.template.heartbeat_monitor_error": "Heartbeat monitor error: ",
    "sync_websocket_manager.template.active_connections": "Active connections: ",
    "sync_websocket_manager.template.cleanup_task_error": "Cleanup task error: ",
    "sync_websocket_manager.template.cleaned_up_connection": "Cleaned up connection: ",
    "i18n_language_detection_service.template.error_in_detect_best_language": "Error in detect_best_language: ",
    "i18n_i18n_manager.template.error_getting_active_languages": "Error getting active languages: ",
    "i18n_i18n_manager.template.error_creating_language": "Error creating language: ",
    "i18n_i18n_manager.template.error_updating_language": "Error updating language: ",
    "i18n_i18n_manager.template.error_creating_multilingual_co": "Error creating multilingual content: ",
    "i18n_i18n_manager.template.error_getting_multilingual_con": "Error getting multilingual content: ",
    "i18n_i18n_manager.template.error_translating_field_to": "Error translating field  to : ",
    "i18n_i18n_manager.template.error_translating_entity_conte": "Error translating entity content: ",
    "i18n_i18n_manager.template.error_getting_user_language_pr": "Error getting user language preferences: ",
    "i18n_i18n_manager.template.error_updating_user_language_p": "Error updating user language preferences: ",
    "i18n_i18n_manager.template.error_detecting_user_language": "Error detecting user language: ",
    "i18n_i18n_manager.template.error_creating_translation_pro": "Error creating translation project: ",
    "i18n_i18n_manager.template.error_calculating_project_scop": "Error calculating project scope: ",
    "i18n_i18n_manager.template.error_getting_translation_proj": "Error getting translation project status: ",
    "i18n_i18n_manager.template.error_getting_translation_anal": "Error getting translation analytics: ",
    "i18n_i18n_manager.template.error_getting_language_coverag": "Error getting language coverage report: ",
    "i18n_i18n_manager.template.error_cleaning_up_old_translat": "Error cleaning up old translations: ",
    "i18n_i18n_manager.template.error_exporting_language_data": "Error exporting language data: ",
    "i18n_translation_service.template.error_loading_translations": "Error loading translations: ",
    "i18n_translation_service.template.error_loading_translation_file": "Error loading translation file for : ",
    "i18n_translation_service.template.created_default_translation_fi": "Created default translation file for ",
    "i18n_translation_service.template.error_creating_default_transla": "Error creating default translation file for : ",
    "i18n_translation_service.template.error_formatting_translation": "Error formatting translation : ",
    "i18n_translation_service.template.error_translating_key_to": "Error translating key  to : ",
    "i18n_translation_service.template.error_getting_translation_dict": "Error getting translation dict for : ",
    "i18n_translation_service.template.error_updating_translation_fo": "Error updating translation  for : ",
    "i18n_translation_service.template.error_saving_translation_file": "Error saving translation file for : ",
    "i18n_translation_service.template.error_getting_missing_translat": "Error getting missing translations: ",
    "i18n_translation_service.template.error_calculating_translation": "Error calculating translation coverage: ",
    "i18n_locale_service.template.error_getting_locale_for": "Error getting locale for : ",
    "i18n_locale_service.template.error_formatting_date": "Error formatting date: ",
    "i18n_locale_service.template.error_formatting_datetime": "Error formatting datetime: ",
    "i18n_locale_service.template.error_formatting_time": "Error formatting time: ",
    "i18n_locale_service.template.error_formatting_currency": "Error formatting currency: ",
    "i18n_locale_service.template.0": "#,##0.",
    "i18n_locale_service.template.error_formatting_number": "Error formatting number: ",
    "i18n_locale_service.template.0_1": "#,##0.%",
    "i18n_locale_service.template.error_formatting_percent": "Error formatting percent: ",
    "i18n_locale_service.template.error_formatting_relative_time": "Error formatting relative time: ",
    "i18n_locale_service.template.error_getting_weekday_names": "Error getting weekday names: ",
    "i18n_locale_service.template.error_getting_month_names": "Error getting month names: ",
    "i18n_locale_service.template.error_getting_locale_info": "Error getting locale info: ",
    "i18n_locale_service.template.error_getting_first_day_of_wee": "Error getting first day of week: ",
    "i18n_locale_service.template.error_parsing_date": "Error parsing date: ",
    "i18n_locale_service.template.error_getting_calendar_data": "Error getting calendar data: ",
    "i18n_content_translation_service.template.error_translating_content": "Error translating content: ",
    "i18n_content_translation_service.template.context": " Context: ",
    "i18n_content_translation_service.template.error_in_ai_translation": "Error in AI translation: ",
    "i18n_content_translation_service.template.error_calculating_ai_confidenc": "Error calculating AI confidence: ",
    "i18n_content_translation_service.template.error_checking_translation_mem": "Error checking translation memory: ",
    "i18n_content_translation_service.template.error_calculating_text_similar": "Error calculating text similarity: ",
    "i18n_content_translation_service.template.error_storing_in_translation_m": "Error storing in translation memory: ",
    "i18n_content_translation_service.template.error_storing_content_translat": "Error storing content translation: ",
    "i18n_content_translation_service.template.error_getting_content_translat": "Error getting content translations: ",
    "i18n_content_translation_service.template.error_getting_translation_stat": "Error getting translation stats: ",
    "i18n_content_translation_service.template.failed_to_store_translation_fo": "Failed to store translation for ",
    "i18n_content_translation_service.template.error_translating": "Error translating : ",
    "i18n_content_translation_service.template.error_in_bulk_translate": "Error in bulk translate: ",
    "analytics_real_time_dashboard.template.error_in_real_time_monitoring": "Error in real-time monitoring: ",
    "analytics_real_time_dashboard.template.unsupported_chart_type": "Unsupported chart type: ",
    "analytics_real_time_dashboard.template.over_time": " Over Time",
    "analytics_real_time_dashboard.template.by_hour": " by Hour",
    "analytics_real_time_dashboard.template.distribution": " Distribution",
    "analytics_real_time_dashboard.template.gauge": " Gauge",
    "analytics_performance_metrics.template.error_getting_performance_dash": "Error getting performance dashboard: ",
    "analytics_performance_metrics.template.error_getting_business_metrics": "Error getting business metrics: ",
    "analytics_performance_metrics.template.error_getting_operational_metr": "Error getting operational metrics: ",
    "analytics_performance_metrics.template.error_getting_technical_metric": "Error getting technical metrics: ",
    "analytics_performance_metrics.template.error_getting_user_experience": "Error getting user experience metrics: ",
    "analytics_performance_metrics.template.is_critically": " is critically : ",
    "analytics_performance_metrics.template.is_approaching_threshold": " is approaching threshold: ",
    "analytics_performance_metrics.template.error_getting_metric_history": "Error getting metric history: ",
    "analytics_performance_metrics.template.error_getting_comparative_anal": "Error getting comparative analysis: ",
    "analytics_performance_metrics.template.shows_steady_improvement_with": " shows steady improvement with low volatility",
    "analytics_performance_metrics.template.shows_high_volatility_inves": " shows high volatility - investigate underlying causes",
    "analytics_performance_metrics.template.is_currently_below_historical": " is currently below historical average - attention needed",
    "analytics_performance_metrics.template.error_exporting_metrics_report": "Error exporting metrics report: ",
    "analytics_performance_metrics.template.immediate_attention_required_f": "Immediate attention required for  critical metrics",
    "analytics_performance_metrics.template.monitor_at_risk_metrics_close": "Monitor  at-risk metrics closely",
    "analytics_performance_metrics.template.technical_issue_detected_e": "Technical issue detected:  - escalate to engineering team",
    "analytics_performance_metrics.template.business_impact_review_bus": "Business impact:  - review business processes",
    "analytics_performance_metrics.template.operational_efficiency_opt": "Operational efficiency:  - optimize workflows",
    "analytics_user_behavior_analytics.template.error_performing_cohort_analys": "Error performing cohort analysis: ",
    "analytics_user_behavior_analytics.template.error_analyzing_user_journeys": "Error analyzing user journeys: ",
    "analytics_user_behavior_analytics.template.error_calculating_engagement_m": "Error calculating engagement metrics: ",
    "analytics_user_behavior_analytics.template.error_segmenting_users_by_beha": "Error segmenting users by behavior: ",
    "analytics_user_behavior_analytics.template.error_analyzing_feature_usage": "Error analyzing feature usage: ",
    "analytics_user_behavior_analytics.template.error_calculating_feature_corr": "Error calculating feature correlation: ",
    "analytics_user_behavior_analytics.template.error_identifying_usage_patter": "Error identifying usage patterns: ",
    "analytics_user_behavior_analytics.template.error_analyzing_temporal_patte": "Error analyzing temporal patterns: ",
    "analytics_user_behavior_analytics.template.error_analyzing_sequence_patte": "Error analyzing sequence patterns: ",
    "analytics_user_behavior_analytics.template.error_analyzing_session_patter": "Error analyzing session patterns: ",
    "analytics_user_behavior_analytics.template.user_not_found": "User  not found",
    "analytics_user_behavior_analytics.template.error_getting_user_behavior_su": "Error getting user behavior summary: ",
    "analytics_data_export.template.starting_data_export": "Starting data export: ",
    "analytics_data_export.template.export_completed": "Export completed: ",
    "analytics_data_export.template.error_during_data_export": "Error during data export: ",
    "analytics_data_export.template.unknown_data_source": "Unknown data source: ",
    "analytics_data_export.template.error_collecting_data": "Error collecting data: ",
    "analytics_data_export.template.error_applying_filters": "Error applying filters: ",
    "analytics_data_export.template.error_converting_to_dataframe": "Error converting to DataFrame: ",
    "analytics_data_export.template.error_optimizing_dataframe": "Error optimizing DataFrame: ",
    "analytics_data_export.template.error_preparing_data_for_expor": "Error preparing data for export: ",
    "analytics_data_export.template.error_cleaning_dataframe": "Error cleaning DataFrame: ",
    "analytics_data_export.template.error_applying_transformations": "Error applying transformations: ",
    "analytics_data_export.template.unsupported_export_format": "Unsupported export format: ",
    "analytics_data_export.template.error_exporting_to_format": "Error exporting to format: ",
    "analytics_data_export.template.csv": "__.csv",
    "analytics_data_export.template.zip": "_.zip",
    "analytics_data_export.template.json": "_.json",
    "analytics_data_export.template.xlsx": "_.xlsx",
    "analytics_data_export.template.parquet": "__.parquet",
    "analytics_data_export.template.xml": "_.xml",
    "analytics_data_export.template.metadata": "  <metadata>\n",
    "analytics_data_export.template.export_id_export_id": "    <export_id></export_id>\n",
    "analytics_data_export.template.timestamp_timestamp": "    <timestamp></timestamp>\n",
    "analytics_data_export.template.metadata_1": "  </metadata>\n",
    "analytics_data_export.template.": "  <>\n",
    "analytics_data_export.template._1": "  </>\n",
    "analytics_data_export.template.yaml": "_.yaml",
    "analytics_data_export.template.no_data_available_for_visualiz": "No data available for visualization: ",
    "analytics_data_export.template.unsupported_chart_type": "Unsupported chart type: ",
    "analytics_data_export.template.viz_html": "viz__.html",
    "analytics_data_export.template.error_creating_visualization": "Error creating visualization: ",
    "analytics_data_export.template.error_deleting_export": "Error deleting export: ",
    "analytics_report_generator.template.template_not_found": "Template  not found",
    "analytics_report_generator.template.report_generated_successfully": "Report generated successfully: ",
    "analytics_report_generator.template.error_generating_report": "Error generating report: ",
    "analytics_report_generator.template.error_generating_executive_sum": "Error generating executive summary: ",
    "analytics_report_generator.template.error_generating_operational_a": "Error generating operational analytics: ",
    "analytics_report_generator.template.error_generating_user_behavior": "Error generating user behavior report: ",
    "analytics_report_generator.template.error_generating_performance_m": "Error generating performance metrics report: ",
    "analytics_report_generator.template.error_generating_custom_report": "Error generating custom report: ",
    "analytics_report_generator.template.error_generating_section_conte": "Error generating section content: ",
    "analytics_report_generator.template.error_generating_automated_ins": "Error generating automated insights: ",
    "analytics_report_generator.template.error_exporting_report": "Error exporting report: ",
    "analytics_report_generator.template.h3_h3": "<h3></h3>",
    "analytics_report_generator.template.tr_td_strong_strong_td": "<tr><td><strong></strong></td><td></td></tr>",
    "analytics_report_generator.template.li_li": "<li></li>",
    "analytics_report_generator.template.p_p": "<p></p>",
    "analytics_report_generator.template.address_critical_alerts_immed": "Address  critical alerts immediately",
    "analytics_report_generator.template.report_generated_timestamp": "Report Generated,,timestamp",
    "analytics_report_generator.template.template_text": "Template,,text",
    "analytics_examples.template.system_health_score": "✓ System health score: %",
    "analytics_examples.template.active_workflows": "✓ Active workflows: ",
    "analytics_examples.template.recent_insights": "✓ Recent insights: ",
    "analytics_examples.template.active_users": "✓ Active users: ",
    "analytics_examples.template.new_registrations": "✓ New registrations: ",
    "analytics_examples.template.total_users": "✓ Total users: ",
    "analytics_examples.template.generated_chart_with_data": "✓ Generated  chart with  data points",
    "analytics_examples.template.dashboard_tracking_metrics": "✓ Dashboard tracking  metrics",
    "analytics_examples.template.active_connections": "✓ Active connections: ",
    "analytics_examples.template.accuracy_f1": "  - : Accuracy , F1 ",
    "analytics_examples.template.appointment_no_show_predicti": "✓ Appointment no-show prediction:  (confidence: )",
    "analytics_examples.template.user_churn_prediction_prob": "✓ User churn prediction:  probability",
    "analytics_examples.template.generated_capacity_forecasts": "✓ Generated capacity forecasts for  days",
    "analytics_examples.template.note_prediction_examples_skip": "Note: Prediction examples skipped due to insufficient data: ",
    "analytics_examples.template.analyzed_cohorts": "✓ Analyzed  cohorts",
    "analytics_examples.template.average_retention_rate": "✓ Average retention rate: %",
    "analytics_examples.template.note_cohort_analysis_skipped": "Note: Cohort analysis skipped: ",
    "analytics_examples.template.analyzed_users": "✓ Analyzed  users",
    "analytics_examples.template.average_engagement_score": "✓ Average engagement score: ",
    "analytics_examples.template.high_engagement_users": "✓ High engagement users: ",
    "analytics_examples.template.note_engagement_analysis_skip": "Note: Engagement analysis skipped: ",
    "analytics_examples.template.users_engagement": "  - :  users ( engagement)",
    "analytics_examples.template.note_user_segmentation_skippe": "Note: User segmentation skipped: ",
    "analytics_examples.template.adoption": "  - : % adoption",
    "analytics_examples.template.note_feature_usage_analysis_s": "Note: Feature usage analysis skipped: ",
    "analytics_examples.template.overall_health_score": "✓ Overall health score: %",
    "analytics_examples.template.business_metrics": "✓ Business metrics: ",
    "analytics_examples.template.operational_metrics": "✓ Operational metrics: ",
    "analytics_examples.template.technical_metrics": "✓ Technical metrics: ",
    "analytics_examples.template.user_experience_metrics": "✓ User experience metrics: ",
    "analytics_examples.template.": "  - :    (%)",
    "analytics_examples.template.1f": "+.1f",
    "analytics_examples.template.active_alerts": "⚠️  Active alerts: ",
    "analytics_examples.template._1": "  - : ",
    "analytics_examples.template.retrieved_historical_data_p": "✓ Retrieved  historical data points",
    "analytics_examples.template.note_history_retrieval_skippe": "Note: History retrieval skipped: ",
    "analytics_examples.template.generated_report": "✓ Generated report: ",
    "analytics_examples.template.report_id": "✓ Report ID: ",
    "analytics_examples.template.generated_insights": "✓ Generated insights: ",
    "analytics_examples.template._2": "  - ",
    "analytics_examples.template.note_report_generation_skippe": "Note: Report generation skipped: ",
    "analytics_examples.template.generated_operational_report": "✓ Generated operational report: ",
    "analytics_examples.template.report_saved_to": "✓ Report saved to: ",
    "analytics_examples.template.note_operational_report_skipp": "Note: Operational report skipped: ",
    "analytics_examples.template.export_completed": "✓ Export completed: ",
    "analytics_examples.template.file_size_kb": "✓ File size:  KB",
    "analytics_examples.template.record_count": "✓ Record count: ",
    "analytics_examples.template.file_path": "✓ File path: ",
    "analytics_examples.template.note_data_export_skipped": "Note: Data export skipped: ",
    "analytics_examples.template.visualization_created": "✓ Visualization created: ",
    "analytics_examples.template.note_visualization_creation_s": "Note: Visualization creation skipped: ",
    "analytics_examples.template.workflow_execution": "✓ Workflow execution: ",
    "analytics_examples.template.status": "✓ Status: ",
    "analytics_examples.template.components_executed": "✓ Components executed: ",
    "analytics_examples.template.errors_encountered": "⚠️  Errors encountered: ",
    "analytics_examples.template.generated_insights_1": "✓ Generated  insights",
    "analytics_examples.template.note_workflow_execution_skipp": "Note: Workflow execution skipped: ",
    "analytics_examples.template.custom_workflow_created": "✓ Custom workflow created: ",
    "analytics_examples.template.components": "✓ Components: ",
    "analytics_examples.template.note_custom_workflow_creation": "Note: Custom workflow creation skipped: ",
    "analytics_examples.template.workflow_active": "✓ Workflow active: ",
    "analytics_examples.template.currently_running": "✓ Currently running: ",
    "analytics_examples.template.total_executions": "✓ Total executions: ",
    "analytics_examples.template.note_workflow_status_check_sk": "Note: Workflow status check skipped: ",
    "analytics_examples.template.retrieved_insights": "✓ Retrieved  insights",
    "analytics_examples.template.insights": "  - :  insights",
    "analytics_examples.template._3": "  - : ",
    "analytics_examples.template.note_insights_retrieval_skipp": "Note: Insights retrieval skipped: ",
    "analytics_examples.template.critical_insights_found": "⚠️  Critical insights found: ",
    "analytics_examples.template._4": "  - ",
    "analytics_examples.template.recommendations": "    Recommendations: ",
    "analytics_examples.template.note_critical_insights_check": "Note: Critical insights check skipped: ",
    "analytics_examples.template.environment": "✓ Environment: ",
    "analytics_examples.template.predictive_auto_retrain": "✓ Predictive auto-retrain: ",
    "analytics_examples.template.security_anonymization": "✓ Security anonymization: ",
    "analytics_examples.template.estimators": "  - Estimators: ",
    "analytics_examples.template.max_depth": "  - Max depth: ",
    "analytics_examples.template.class_weight": "  - Class weight: ",
    "analytics_examples.template.width": "  - Width: ",
    "analytics_examples.template.height": "  - Height: ",
    "analytics_examples.template.theme": "  - Theme: ",
    "analytics_examples.template.configuration_sections": "✓ Configuration sections: ",
    "analytics_examples.template.cohort_analysis_failed_gra": "⚠️  Cohort analysis failed gracefully: ",
    "analytics_examples.template.prediction_failed_graceful": "⚠️  Prediction failed gracefully: ",
    "analytics_examples.template.system_remains_operational": "✓ System remains operational (health: %)",
    "analytics_examples.template.example_failed": "❌ Example failed:  - ",
    "analytics_analytics_orchestrator.template.error_starting_orchestrator": "Error starting orchestrator: ",
    "analytics_analytics_orchestrator.template.error_initializing_services": "Error initializing services: ",
    "analytics_analytics_orchestrator.template.error_starting_scheduled_workf": "Error starting scheduled workflows: ",
    "analytics_analytics_orchestrator.template.error_in_continuous_monitoring": "Error in continuous monitoring: ",
    "analytics_analytics_orchestrator.template.workflow_not_found": "Workflow  not found",
    "analytics_analytics_orchestrator.template.starting_workflow_execution": "Starting workflow execution: ",
    "analytics_analytics_orchestrator.template.error_in_component": "Error in component : ",
    "analytics_analytics_orchestrator.template.workflow_execution_completed": "Workflow execution completed: ",
    "analytics_analytics_orchestrator.template.error_executing_workflow": "Error executing workflow: ",
    "analytics_analytics_orchestrator.template.unknown_component": "Unknown component: ",
    "analytics_analytics_orchestrator.template.error_executing_component": "Error executing component : ",
    "analytics_analytics_orchestrator.template.error_generating_workflow_insi": "Error generating workflow insights: ",
    "analytics_analytics_orchestrator.template.overall_system_health_score_is": "Overall system health score is %, below acceptable threshold",
    "analytics_analytics_orchestrator.template.average_user_engagement_score": "Average user engagement score is %, indicating strong platform adoption",
    "analytics_analytics_orchestrator.template.critical_performance_alerts_r": " critical performance alerts require immediate attention",
    "analytics_analytics_orchestrator.template.users_identified_as_at_risk_f": " users identified as at-risk for churn",
    "analytics_analytics_orchestrator.template.error_checking_system_alerts": "Error checking system alerts: ",
    "analytics_analytics_orchestrator.template.critical_alerts_detected": "Critical alerts detected: ",
    "analytics_analytics_orchestrator.template.critical_alerts_require_immed": " critical alerts require immediate attention",
    "analytics_analytics_orchestrator.template.error_handling_alerts": "Error handling alerts: ",
    "analytics_analytics_orchestrator.template.error_in_continuous_workflow": "Error in continuous workflow : ",
    "analytics_analytics_orchestrator.template.error_in_scheduled_workflow": "Error in scheduled workflow : ",
    "analytics_analytics_orchestrator.template.error_getting_analytics_summar": "Error getting analytics summary: ",
    "analytics_analytics_orchestrator.template.error_creating_custom_workflow": "Error creating custom workflow: ",
    "analytics_analytics_orchestrator.template.workflow_not_found_1": "Workflow  not found",
    "analytics_predictive_analytics.template.error_initializing_models": "Error initializing models: ",
    "analytics_predictive_analytics.template.appointment_no_show_model_trai": "Appointment no-show model trained. Accuracy: ",
    "analytics_predictive_analytics.template.error_training_appointment_no": "Error training appointment no-show model: ",
    "analytics_predictive_analytics.template.user_churn_model_trained_r_s": "User churn model trained. R² Score: ",
    "analytics_predictive_analytics.template.error_training_user_churn_mode": "Error training user churn model: ",
    "analytics_predictive_analytics.template.evaluation_outcome_model_train": "Evaluation outcome model trained. R² Score: ",
    "analytics_predictive_analytics.template.error_training_evaluation_outc": "Error training evaluation outcome model: ",
    "analytics_predictive_analytics.template.engagement_prediction_model_tr": "Engagement prediction model trained. Accuracy: ",
    "analytics_predictive_analytics.template.error_training_engagement_pred": "Error training engagement prediction model: ",
    "analytics_predictive_analytics.template.capacity_forecasting_model_tra": "Capacity forecasting model trained. R² Score: ",
    "analytics_predictive_analytics.template.error_training_capacity_foreca": "Error training capacity forecasting model: ",
    "analytics_predictive_analytics.template.model_not_found_please_train": "Model  not found. Please train the model first.",
    "analytics_predictive_analytics.template.predicted_with_confidence": "Predicted  with  confidence",
    "analytics_predictive_analytics.template.error_predicting_appointment_n": "Error predicting appointment no-show: ",
    "analytics_predictive_analytics.template.model_not_found_please_train_1": "Model  not found. Please train the model first.",
    "analytics_predictive_analytics.template.churn_probability": "Churn probability: ",
    "analytics_predictive_analytics.template.error_predicting_user_churn": "Error predicting user churn: ",
    "analytics_predictive_analytics.template.model_not_found_please_train_2": "Model  not found. Please train the model first.",
    "analytics_predictive_analytics.template.predicted_evaluation_score": "Predicted evaluation score: ",
    "analytics_predictive_analytics.template.error_predicting_evaluation_ou": "Error predicting evaluation outcome: ",
    "analytics_predictive_analytics.template.model_not_found_please_train_3": "Model  not found. Please train the model first.",
    "analytics_predictive_analytics.template.predicted_active_users_for": "Predicted  active users for ",
    "analytics_predictive_analytics.template.error_forecasting_capacity_nee": "Error forecasting capacity needs: ",
    "analytics_predictive_analytics.template.retraining_model": "Retraining model: "
  },
  "label": {
    "realtime.label.emitted": "Emitted ",
    "realtime.label.emitted_1": "Emitted ",
    "realtime.label.emitted_2": "Emitted ",
    "realtime.label.broadcast": "Broadcast ",
    "__init__.label.content_type": "Content-Type",
    "__init__.label.authorization": "Authorization",
    "__init__.label.slow_request_detected": "Slow request detected: ",
    "__init__.label.x_request_id": "X-Request-ID",
    "__init__.label.x_response_time": "X-Response-Time",
    "__init__.label.resource_not_found": "Resource not found",
    "__init__.label.rate_limit_exceeded": "Rate limit exceeded: ",
    "__init__.label.rate_limit_exceeded_1": "Rate limit exceeded",
    "__init__.label.performance_optimization_repor": "PERFORMANCE OPTIMIZATION REPORT",
    "__init__.label.no_description": "No description",
    "container.label.dependency_injection_container": "Dependency injection container.",
    "container.label.initialize_the_container": "Initialize the container.",
    "container.label.service": "Service '",
    "container.label.create_request_scoped_services": "Create request-scoped services.",
    "cli.label.create_database_tables": "Create database tables",
    "cli.label.creating_test_data": "Creating test data...",
    "cli.label.run_database_migrations": "Run database migrations.",
    "cli.label.running_migration": "Running migration: ",
    "cli.label.running_all_migrations": "Running all migrations...",
    "cli.label.migration_summary": "Migration summary: ",
    "cli.label.list_available_migrations": "List available migrations.",
    "cli.label.available_migrations": "Available migrations:",
    "cli.label.no_migrations_available": "No migrations available.",
    "cli.label.checking_extension_status": "Checking extension status...",
    "cli.label.auth_service": "Auth Service",
    "cli.label.user_repository": "User Repository",
    "cli.label.document_service": "Document Service",
    "cli.label.evaluation_service": "Evaluation Service",
    "socketio_basic.label.handle_incoming_messages": "Handle incoming messages.",
    "socketio_basic.label.received_message": "Received message: ",
    "websocket_notifications.label.websocket_notifications_handle": "WebSocket notifications handler.",
    "websocket_notifications.label.authorization": "Authorization",
    "websocket_notifications.label.user": "User ",
    "websocket_notifications.label.user_1": "User ",
    "websocket_notifications.label.authorization_1": "Authorization",
    "websocket_notifications.label.user_2": "User ",
    "websocket_notifications.label.user_3": "User ",
    "websocket_notifications.label.new_message": "New Message",
    "websocket_notifications.label.handle_typing_indicator": "Handle typing indicator.",
    "exceptions.label.application_exceptions_module": "Application exceptions module.",
    "exceptions.label.initialize_the_exception": "Initialize the exception.",
    "socketio_events.label.connected_anonymously": "Connected anonymously",
    "socketio_events.label.user": "User ",
    "socketio_events.label.connected_anonymously_1": "Connected anonymously",
    "socketio_events.label.handle_client_disconnection": "Handle client disconnection.",
    "socketio_events.label.user_1": "User ",
    "socketio_events.label.anonymous_client": "Anonymous client ",
    "socketio_events.label.thread_not_found": "Thread not found",
    "socketio_events.label.user_2": "User ",
    "socketio_events.label.new_message": "New message",
    "socketio_events.label.user_3": "User ",
    "socketio_events.label.marked": "Marked ",
    "socketio_events.label.marked_thread": "Marked thread ",
    "socketio_events.label.user_4": "User ",
    "socketio_events.label.broadcast": "Broadcast ",
    "socketio_events.label.broadcast_1": "Broadcast ",
    "middleware_alert_middleware.label.alert_middleware_initialized": "Alert middleware initialized",
    "middleware_alert_middleware.label.critical_endpoint_accessed": "Critical endpoint accessed: ",
    "middleware_alert_middleware.label.endpoint": "Endpoint ",
    "middleware_alert_middleware.label.endpoint_1": "Endpoint ",
    "middleware_alert_middleware.label.potential_security_probe": "Potential security probe: ",
    "middleware_alert_middleware.label.not_found": "Not found",
    "middleware_alert_middleware.label.forbidden_access_attempt": "Forbidden Access Attempt",
    "middleware_alert_middleware.label.forbidden": "Forbidden",
    "middleware_alert_middleware.label.unauthorized": "Unauthorized",
    "middleware_alert_middleware.label.unhandled_exception": "Unhandled exception: ",
    "middleware_alert_middleware.label.exception_in": "Exception in ",
    "middleware_alert_middleware.label.function": "Function ",
    "middleware_alert_middleware.label.custom_condition": "Custom condition",
    "middleware_alert_middleware.label.critical_performance_alert": "Critical Performance Alert: ",
    "middleware_alert_middleware.label.function_1": "Function ",
    "middleware_alert_middleware.label.performance_warning": "Performance Warning: ",
    "middleware_alert_middleware.label.function_2": "Function ",
    "middleware_alert_middleware.label.function_3": "Function ",
    "middleware_cors_middleware.label.origin": "Origin: ",
    "middleware_cors_middleware.label.origin_1": "Origin",
    "middleware_cors_middleware.label.access_control_request_method": "Access-Control-Request-Method: ",
    "middleware_cors_middleware.label.access_control_request_method_1": "Access-Control-Request-Method",
    "middleware_cors_middleware.label.access_control_request_headers": "Access-Control-Request-Headers: ",
    "middleware_cors_middleware.label.access_control_request_headers_1": "Access-Control-Request-Headers",
    "middleware_cors_middleware.label.origin_2": "Origin",
    "middleware_cors_middleware.label.response_status": "Response status: ",
    "middleware_cors_middleware.label.access_control_allow_origin": "Access-Control-Allow-Origin",
    "middleware_cors_middleware.label.access_control_allow_methods": "Access-Control-Allow-Methods",
    "middleware_cors_middleware.label.access_control_allow_headers": "Access-Control-Allow-Headers",
    "middleware_cors_middleware.label.content_type_authorization_x": "Content-Type, Authorization, X-Requested-With",
    "middleware_cors_middleware.label.access_control_allow_credentia": "Access-Control-Allow-Credentials",
    "middleware_cors_middleware.label.access_control_max_age": "Access-Control-Max-Age",
    "middleware_cors_middleware.label.origin_3": "Origin ",
    "middleware_i18n_middleware.label.initialize_i18n_middleware": "Initialize i18n middleware.",
    "middleware_i18n_middleware.label.detected_language": "Detected language: ",
    "middleware_i18n_middleware.label.content_language": "Content-Language",
    "middleware_i18n_middleware.label.x_user_language": "X-User-Language",
    "middleware_i18n_middleware.label.x_text_direction": "X-Text-Direction",
    "middleware_i18n_middleware.label.x_text_direction_1": "X-Text-Direction",
    "middleware_i18n_middleware.label.access_control_allow_headers": "Access-Control-Allow-Headers",
    "middleware_i18n_middleware.label.x_language": "X-Language",
    "middleware_i18n_middleware.label.x_user_language_1": "X-User-Language",
    "middleware_i18n_middleware.label.accept_language": "Accept-Language",
    "middleware_i18n_middleware.label.cf_ipcountry": "CF-IPCountry",
    "middleware_i18n_middleware.label.x_country_code": "X-Country-Code",
    "middleware_i18n_middleware.label.x_forwarded_country": "X-Forwarded-Country",
    "middleware_i18n_middleware.label.content_length": "Content-Length",
    "middleware_i18n_middleware.label.content_length_1": "Content-Length",
    "middleware_request_context.label.request_context_middleware": "Request context middleware.",
    "middleware_request_context.label.initialize_request_context": "Initialize request context.",
    "middleware_request_context.label.insufficient_permissions": "Insufficient permissions",
    "middleware_rate_limiter.label.x_forwarded_for": "X-Forwarded-For",
    "middleware_rate_limiter.label.x_forwarded_for_1": "X-Forwarded-For",
    "middleware_rate_limiter.label.x_api_key": "X-API-Key",
    "middleware_rate_limiter.label.rate_limit_exceeded": "Rate limit exceeded",
    "middleware_cache_middleware.label.initialize_cache_middleware": "Initialize cache middleware.",
    "middleware_cache_middleware.label.if_none_match": "If-None-Match",
    "middleware_cache_middleware.label.etag": "ETag",
    "middleware_cache_middleware.label.cache_control": "Cache-Control",
    "middleware_cache_middleware.label.etag_1": "ETag",
    "middleware_cache_middleware.label.cache_control_1": "Cache-Control",
    "middleware_cache_middleware.label.cache_control_2": "Cache-Control",
    "middleware_cache_middleware.label.cache_control_3": "Cache-Control",
    "middleware_cache_middleware.label.cache_control_4": "Cache-Control",
    "middleware_cache_middleware.label.authorization": "Authorization",
    "middleware_cache_middleware.label.vary": "Vary",
    "middleware_cache_middleware.label.authorization_1": "Authorization",
    "middleware_cache_middleware.label.cache_control_5": "Cache-Control",
    "middleware_cache_middleware.label.if_none_match_1": "If-None-Match",
    "middleware_cache_middleware.label.etag_2": "ETag",
    "middleware_cache_middleware.label.vary_1": "Vary",
    "middleware_cache_middleware.label.if_none_match_2": "If-None-Match",
    "middleware_cache_middleware.label.if_modified_since": "If-Modified-Since",
    "middleware_ip_whitelist.label.x_forwarded_for": "X-Forwarded-For",
    "middleware_ip_whitelist.label.x_forwarded_for_1": "X-Forwarded-For",
    "middleware_security_middleware.label.untrusted_host": "Untrusted host",
    "middleware_security_middleware.label.rate_limit_exceeded": "Rate limit exceeded",
    "middleware_security_middleware.label.suspicious_request_detected": "Suspicious request detected",
    "middleware_security_middleware.label.slow_request": "Slow request: ",
    "middleware_security_middleware.label.host": "Host",
    "middleware_security_middleware.label.suspicious_request_detected_1": "Suspicious request detected: ",
    "middleware_security_middleware.label.suspicious_header_detected": "Suspicious header detected: ",
    "middleware_security_middleware.label.x_forwarded_for": "X-Forwarded-For",
    "middleware_security_middleware.label.x_real_ip": "X-Real-IP",
    "middleware_security_middleware.label.content_security_policy": "Content-Security-Policy",
    "middleware_security_middleware.label.x_frame_options": "X-Frame-Options",
    "middleware_security_middleware.label.x_content_type_options": "X-Content-Type-Options",
    "middleware_security_middleware.label.x_xss_protection": "X-XSS-Protection",
    "middleware_security_middleware.label.referrer_policy": "Referrer-Policy",
    "middleware_security_middleware.label.strict_transport_security": "Strict-Transport-Security",
    "middleware_security_middleware.label.x_permitted_cross_domain_polic": "X-Permitted-Cross-Domain-Policies",
    "middleware_security_middleware.label.x_download_options": "X-Download-Options",
    "middleware_security_middleware.label.x_dns_prefetch_control": "X-DNS-Prefetch-Control",
    "middleware_security_middleware.label.x_api_key": "X-API-Key",
    "middleware_security_middleware.label.csrf_protection_middleware": "CSRF protection middleware.",
    "middleware_security_middleware.label.initialize_csrf_protection": "Initialize CSRF protection.",
    "middleware_security_middleware.label.x_csrf_token": "X-CSRF-Token",
    "middleware_tracing_middleware.label.tracing_middleware_initialized": "Tracing middleware initialized",
    "middleware_tracing_middleware.label.request_started": "Request started: ",
    "middleware_tracing_middleware.label.x_correlation_id": "X-Correlation-ID",
    "middleware_tracing_middleware.label.x_request_id": "X-Request-ID",
    "middleware_tracing_middleware.label.x_trace_id": "X-Trace-ID",
    "middleware_tracing_middleware.label.x_response_time": "X-Response-Time",
    "middleware_tracing_middleware.label.x_correlation_id_1": "X-Correlation-ID",
    "middleware_tracing_middleware.label.correlation_id": "Correlation-ID",
    "middleware_tracing_middleware.label.x_request_id_1": "X-Request-ID",
    "middleware_tracing_middleware.label.request_id": "Request-ID",
    "middleware_tracing_middleware.label.http": "HTTP ",
    "middleware_tracing_middleware.label.record_request_metrics": "Record request metrics",
    "middleware_tracing_middleware.label.http_1": "HTTP ",
    "middleware_tracing_middleware.label.http_2": "HTTP ",
    "middleware_performance_middleware.label.compress_response_data": "Compress response data",
    "middleware_performance_middleware.label.content_encoding": "Content-Encoding",
    "middleware_performance_middleware.label.content_length": "Content-Length",
    "middleware_performance_middleware.label.vary": "Vary",
    "middleware_performance_middleware.label.accept_encoding": "Accept-Encoding",
    "middleware_performance_middleware.label.parse_pagination_parameters": "Parse pagination parameters",
    "middleware_performance_middleware.label.start_timing_request": "Start timing request",
    "middleware_performance_middleware.label.log_performance_metrics": "Log performance metrics",
    "middleware_performance_middleware.label.slow_request": "Slow request: ",
    "middleware_performance_middleware.label.x_response_time": "X-Response-Time",
    "middleware_performance_middleware.label.x_request_id": "X-Request-ID",
    "middleware_performance_middleware.label.get_performance_metrics": "Get performance metrics",
    "middleware_performance_middleware.label.transfer_encoding": "Transfer-Encoding",
    "middleware_performance_middleware.label.performance_middleware_initial": "Performance middleware initialized",
    "validation_schema_validator.label.secure_email_field": "Secure email field.",
    "validation_schema_validator.label.secure_name_field": "Secure name field.",
    "validation_schema_validator.label.secure_phone_field": "Secure phone field.",
    "validation_schema_validator.label.secure_url_field": "Secure URL field.",
    "validation_schema_validator.label.positive_integer_field": "Positive integer field.",
    "validation_validators.label.email_domain": "Email domain '",
    "validation_validators.label.email_domain_1": "Email domain '",
    "validation_validators.label.strong_password": "Strong password",
    "validation_validators.label.excellent_password_strength": "Excellent password strength",
    "validation_validators.label.domain": "Domain '",
    "validation_validators.label.domain_1": "Domain '",
    "validation_validators.label.windows_executable": "Windows executable",
    "validation_validators.label.linux_executable": "Linux executable",
    "validation_validators.label.shell_script": "Shell script",
    "validation_validators.label.php_script": "PHP script",
    "validation_validators.label.server_side_script": "Server-side script",
    "validation_validators.label.no_file_provided": "No file provided",
    "validation_validators.label.file_type": "File type '.",
    "validation_validators.label.mime_type": "MIME type '",
    "validation___init__.label.inputsanitizer": "InputSanitizer",
    "validation_schemas.label.enhanced_login_schema": "Enhanced login schema.",
    "validation_schemas.label.enhanced_registration_schema": "Enhanced registration schema.",
    "validation_schemas.label.password_reset_schema": "Password reset schema.",
    "validation_schemas.label.user_profile_schema": "User profile schema.",
    "validation_schemas.label.user_settings_schema": "User settings schema.",
    "validation_schemas.label.beneficiary_creation_schema": "Beneficiary creation schema.",
    "validation_schemas.label.program_creation_schema": "Program creation schema.",
    "validation_schemas.label.appointment_creation_schema": "Appointment creation schema.",
    "validation_schemas.label.evaluation_creation_schema": "Evaluation creation schema.",
    "validation_schemas.label.evaluation_submission_schema": "Evaluation submission schema.",
    "validation_schemas.label.document_upload_schema": "Document upload schema.",
    "validation_schemas.label.message_chat_schema": "Message/Chat schema.",
    "validation_schemas.label.report_generation_schema": "Report generation schema.",
    "validation_schemas.label.general_search_schema": "General search schema.",
    "validation_validation_middleware.label.incoming_request": "Incoming request: ",
    "validation_validation_middleware.label.bad_request": "Bad request: ",
    "validation_validation_middleware.label.bad_request_1": "Bad request",
    "validation_validation_middleware.label.no": "No ",
    "validation_validation_middleware.label.x_api_key": "X-API-Key",
    "validation_validation_middleware.label.rate_limit_exceeded": "Rate limit exceeded",
    "validation_validation_middleware.label.rate_limit_exceeded_1": "Rate limit exceeded",
    "validation_business_validators.label.appointment_not_found": "Appointment not found",
    "validation_business_validators.label.session_not_found": "Session not found",
    "validation_business_validators.label.username_already_taken": "Username already taken",
    "validation_decorators.label.no_file_provided": "No file provided",
    "tasks_maintenance.label.maintenance_related_celery_tas": "Maintenance-related Celery tasks.",
    "tasks_maintenance.label.marked": "Marked ",
    "tasks_maintenance.label.vacuum_analyze": "VACUUM ANALYZE",
    "tasks_maintenance.label.show_tables": "SHOW TABLES",
    "tasks_maintenance.label.optimize_table": "OPTIMIZE TABLE ",
    "tasks_maintenance.label.storage_usage_alert": "Storage Usage Alert",
    "tasks_maintenance.label.mb_current_usage": "MB. Current usage: ",
    "tasks_maintenance.label.mb_used": "MB used, ",
    "tasks___init__.label.celery_tasks_module": "Celery tasks module.",
    "tasks_evaluations.label.evaluation_related_celery_task": "Evaluation-related Celery tasks.",
    "tasks_evaluations.label.overdue_evaluation": "Overdue Evaluation",
    "tasks_evaluations.label.your_evaluation": "Your evaluation \"",
    "tasks_evaluations.label.evaluation_overdue": "Evaluation Overdue",
    "tasks_evaluations.label.the_evaluation": "The evaluation \"",
    "tasks_evaluations.label.processed": "Processed ",
    "tasks_evaluations.label.test_session": "Test session ",
    "tasks_evaluations.label.evaluation": "Evaluation ",
    "tasks_evaluations.label.evaluation_reminder": "Evaluation Reminder",
    "tasks_evaluations.label.your_evaluation_1": "Your evaluation \"",
    "tasks_email.label.email_related_celery_tasks": "Email-related Celery tasks.",
    "tasks_email.label.send_email_asynchronously": "Send email asynchronously.",
    "tasks_email.label.email_sent_to": "Email sent to ",
    "tasks_email.label.user": "User ",
    "tasks_email.label.user_1": "User ",
    "tasks_email.label.test_session": "Test session ",
    "tasks_reports.label.weekly_report": "Weekly Report - ",
    "tasks_reports.label.generated": "Generated ",
    "tasks_reports.label.monthly_analytics": "Monthly Analytics - ",
    "tasks_reports.label.generated_1": "Generated ",
    "tasks_reports.label.beneficiary": "Beneficiary ",
    "tasks_reports.label.progress_report": "Progress Report - ",
    "tasks_notifications.label.notification_related_celery_ta": "Notification-related Celery tasks.",
    "tasks_notifications.label.appointment_reminder": "Appointment Reminder",
    "tasks_notifications.label.sent": "Sent ",
    "tasks_notifications.label.sent_1": "Sent ",
    "tasks_notifications.label.sent_2": "Sent ",
    "tasks_sms.label.sms_message": "SMS message ",
    "tasks_sms.label.sms_message_1": "SMS message ",
    "tasks_sms.label.campaign": "Campaign ",
    "core_app_factory.label.initialize_application_factory": "Initialize application factory.",
    "core_app_factory.label.configure_the_application": "Configure the application.",
    "core_app_factory.label.configure_application_logging": "Configure application logging.",
    "core_app_factory.label.register_authentication_bluepr": "Register authentication blueprints.",
    "core_app_factory.label.registered_blueprint": "Registered blueprint: ",
    "core_app_factory.label.registered_blueprint_1": "Registered blueprint: ",
    "core_app_factory.label.handle_http_exceptions": "Handle HTTP exceptions.",
    "core_app_factory.label.handle_generic_exceptions": "Handle generic exceptions.",
    "core_app_factory.label.register_application_middlewar": "Register application middleware.",
    "core_app_factory.label.register_response_middleware": "Register response middleware.",
    "core_app_factory.label.origin": "Origin",
    "core_app_factory.label.access_control_allow_origin": "Access-Control-Allow-Origin",
    "core_app_factory.label.access_control_allow_methods": "Access-Control-Allow-Methods",
    "core_app_factory.label.access_control_allow_headers": "Access-Control-Allow-Headers",
    "core_app_factory.label.access_control_allow_credentia": "Access-Control-Allow-Credentials",
    "core_app_factory.label.access_control_max_age": "Access-Control-Max-Age",
    "core_app_factory.label.x_content_type_options": "X-Content-Type-Options",
    "core_app_factory.label.x_frame_options": "X-Frame-Options",
    "core_app_factory.label.x_xss_protection": "X-XSS-Protection",
    "core_app_factory.label.strict_transport_security": "Strict-Transport-Security",
    "core_app_factory.label.origin_1": "Origin",
    "core_app_factory.label.access_control_allow_origin_1": "Access-Control-Allow-Origin",
    "core_app_factory.label.access_control_allow_headers_1": "Access-Control-Allow-Headers",
    "core_app_factory.label.access_control_allow_methods_1": "Access-Control-Allow-Methods",
    "core_app_factory.label.access_control_allow_credentia_1": "Access-Control-Allow-Credentials",
    "core_app_factory.label.access_control_max_age_1": "Access-Control-Max-Age",
    "core_app_factory.label.register_cli_commands": "Register CLI commands.",
    "core_app_factory.label.backup_manager_initialized": "Backup manager initialized",
    "core_app_factory.label.request": "Request: ",
    "core_app_factory.label.response": "Response: ",
    "core_app_factory.label.test_cors_endpoint": "Test CORS endpoint.",
    "core_query_cache.label.cache_hit": "Cache hit: ",
    "core_query_cache.label.cache_set": "Cache set: ",
    "core_query_cache.label.warmed_cache_for": "Warmed cache for: ",
    "core_query_cache.label.cleaned_up": "Cleaned up ",
    "core_query_cache.label.user": "User",
    "core_query_cache.label.beneficiary": "Beneficiary",
    "core_query_cache.label.appointment": "Appointment",
    "core_query_cache.label.evaluation": "Evaluation",
    "core_query_cache.label.program": "Program",
    "core_config_manager.label.initialize_configuration_manag": "Initialize configuration manager.",
    "core_config_manager.label.apply_environment_specific_def": "Apply environment-specific defaults.",
    "core_config_manager.label.lax": "Lax",
    "core_config_manager.label.config_warning": "Config warning: ",
    "core_extension_manager.label.extension_initialization_prior": "Extension initialization priorities.",
    "core_extension_manager.label.initializes_database_extension": "Initializes database extensions.",
    "core_extension_manager.label.initialize_database_extensions": "Initialize database extensions.",
    "core_extension_manager.label.initializes_authentication_ext": "Initializes authentication extensions.",
    "core_extension_manager.label.initialize_authentication_exte": "Initialize authentication extensions.",
    "core_extension_manager.label.register_jwt_callbacks": "Register JWT callbacks.",
    "core_extension_manager.label.handle_expired_token": "Handle expired token.",
    "core_extension_manager.label.handle_missing_token": "Handle missing token.",
    "core_extension_manager.label.initializes_cors_extensions": "Initializes CORS extensions.",
    "core_extension_manager.label.initialize_cors_extensions": "Initialize CORS extensions.",
    "core_extension_manager.label.content_type": "Content-Type",
    "core_extension_manager.label.authorization": "Authorization",
    "core_extension_manager.label.x_requested_with": "X-Requested-With",
    "core_extension_manager.label.accept": "Accept",
    "core_extension_manager.label.content_type_1": "Content-Type",
    "core_extension_manager.label.authorization_1": "Authorization",
    "core_extension_manager.label.initializes_caching_extensions": "Initializes caching extensions.",
    "core_extension_manager.label.initialize_caching_extensions": "Initialize caching extensions.",
    "core_extension_manager.label.initializes_mail_extensions": "Initializes mail extensions.",
    "core_extension_manager.label.initialize_mail_extensions": "Initialize mail extensions.",
    "core_extension_manager.label.initializes_socketio_extension": "Initializes SocketIO extensions.",
    "core_extension_manager.label.initialize_socketio_extensions": "Initialize SocketIO extensions.",
    "core_extension_manager.label.initialize_extension_manager": "Initialize extension manager.",
    "core_extension_manager.label.registered_extension_initializ": "Registered extension initializer: ",
    "core_extension_manager.label.starting_extension_initializat": "Starting extension initialization",
    "core_extension_manager.label.extension": "Extension ",
    "core_extension_manager.label.initializing_extension": "Initializing extension: ",
    "core_performance_init.label.initializing_performance_optim": "Initializing performance optimization...",
    "core_performance_init.label.running_first_request_optimiza": "Running first-request optimizations...",
    "core_performance_init.label.request_cleanup": "Request cleanup",
    "core_performance_init.label.creating_performance_indexes": "Creating performance indexes...",
    "core_performance_init.label.index_optimization_result": "Index optimization result: ",
    "core_performance_init.label.updating_table_statistics": "Updating table statistics...",
    "core_performance_init.label.initializing_object_pools": "Initializing object pools...",
    "core_cache_manager.label.initialize_cache_manager": "Initialize cache manager.",
    "core_cache_manager.label.x_cache": "X-Cache",
    "core_cache_manager.label.x_cache_1": "X-Cache",
    "core_cache_manager.label.cache_control": "Cache-Control",
    "core_cache_manager.label.cache_control_1": "Cache-Control",
    "core_database_manager.label.migration_execution_status": "Migration execution status.",
    "core_database_manager.label.get_migration_name": "Get migration name.",
    "core_database_manager.label.get_migration_version": "Get migration version.",
    "core_database_manager.label.execute_the_migration": "Execute the migration.",
    "core_database_manager.label.rollback_the_migration": "Rollback the migration.",
    "core_database_manager.label.initialize_database_initialize": "Initialize database initializer.",
    "core_database_manager.label.create_database_tables": "Create database tables.",
    "core_database_manager.label.default": "Default",
    "core_database_manager.label.create_test_users": "Create test users.",
    "core_database_manager.label.admin": "Admin",
    "core_database_manager.label.user": "User",
    "core_database_manager.label.tenant": "Tenant",
    "core_database_manager.label.admin_1": "Admin",
    "core_database_manager.label.trainer": "Trainer",
    "core_database_manager.label.user_1": "User",
    "core_database_manager.label.student": "Student",
    "core_database_manager.label.user_2": "User",
    "core_database_manager.label.execute_the_migration_1": "Execute the migration.",
    "core_database_manager.label.default_1": "Default",
    "core_database_manager.label.rollback_the_migration_1": "Rollback the migration.",
    "core_database_manager.label.execute_the_migration_2": "Execute the migration.",
    "core_database_manager.label.admin_2": "Admin",
    "core_database_manager.label.user_3": "User",
    "core_database_manager.label.rollback_the_migration_2": "Rollback the migration.",
    "core_database_manager.label.manages_database_migrations": "Manages database migrations.",
    "core_database_manager.label.initialize_migration_manager": "Initialize migration manager.",
    "core_database_manager.label.register_default_migrations": "Register default migrations.",
    "core_database_manager.label.register_a_migration": "Register a migration.",
    "core_database_manager.label.registered_migration": "Registered migration: ",
    "core_database_manager.label.migration": "Migration ",
    "core_database_manager.label.migration_1": "Migration ",
    "core_database_manager.label.running_migration": "Running migration: ",
    "core_database_manager.label.migration_2": "Migration ",
    "core_database_manager.label.migration_3": "Migration ",
    "core_database_manager.label.running_all_migrations": "Running all migrations",
    "core_database_manager.label.migration_summary": "Migration summary: ",
    "core_database_performance.label.configure_session_level_optimi": "Configure session-level optimizations",
    "core_database_performance.label.slow_query_detected": "Slow query detected: ",
    "core_database_performance.label.query_cached": "Query cached: ",
    "core_database_performance.label.explain_analyze": "EXPLAIN ANALYZE ",
    "core_database_performance.label.explain_query_plan": "EXPLAIN QUERY PLAN ",
    "core_database_performance.label.sequential_scan_detected": "Sequential scan detected",
    "core_database_performance.label.external_sort_operation": "External sort operation",
    "core_database_performance.label.analyze": "ANALYZE ",
    "core_database_performance.label.analyze_1": "ANALYZE ",
    "core_database_performance.label.create_performance_critical_in": "Create performance-critical indexes",
    "core_database_performance.label.database_indexes_optimized": "Database indexes optimized: ",
    "core_database_performance.label.query_cache_cleared": "Query cache cleared",
    "core_database_performance.label.db_operation": "DB Operation '",
    "core_database_performance.label.db_operation_1": "DB Operation '",
    "core_cdn_config.label.cdn_configuration_initialized": "CDN configuration initialized: ",
    "core_cdn_config.label.local_serving": "Local serving",
    "core_cdn_config.label.cache_control": "Cache-Control",
    "core_cdn_config.label.vary": "Vary",
    "core_cdn_config.label.accept_encoding": "Accept-Encoding",
    "core_cdn_config.label.access_control_allow_origin": "Access-Control-Allow-Origin",
    "core_cdn_config.label.access_control_allow_methods": "Access-Control-Allow-Methods",
    "core_cdn_config.label.access_control_allow_headers": "Access-Control-Allow-Headers",
    "core_cdn_config.label.content_type": "Content-Type",
    "core_cdn_config.label.x_content_type_options": "X-Content-Type-Options",
    "core_cdn_config.label.x_frame_options": "X-Frame-Options",
    "core_cdn_config.label.content_type_1": "Content-Type",
    "core_cdn_config.label.found": "Found ",
    "core_cdn_config.label.found_1": "Found ",
    "core_cdn_config.label.content_type_2": "Content-Type",
    "core_cdn_config.label.cache_control_1": "Cache-Control",
    "core_cdn_config.label.vary_1": "Vary",
    "core_cdn_config.label.accept_encoding_1": "Accept-Encoding",
    "core_cdn_config.label.x_content_type_options_1": "X-Content-Type-Options",
    "core_cdn_config.label.cdn_configuration_initialized_1": "CDN configuration initialized",
    "core_celery_optimizer.label.record_task_start": "Record task start",
    "core_celery_optimizer.label.record_task_completion": "Record task completion",
    "core_celery_optimizer.label.get_task_statistics": "Get task statistics",
    "core_celery_optimizer.label.create_priority_based_queues": "Create priority-based queues",
    "core_celery_optimizer.label.get_queue_statistics": "Get queue statistics",
    "core_celery_optimizer.label.processed_batch": "Processed batch '",
    "core_celery_optimizer.label.task_starting": "Task starting: ",
    "core_celery_optimizer.label.generate_optimization_recommen": "Generate optimization recommendations",
    "core_celery_optimizer.label.consider_optimizing": "Consider optimizing ",
    "core_celery_optimizer.label.initialize_celery_optimization": "Initialize Celery optimization",
    "core_celery_optimizer.label.celery_optimization_initialize": "Celery optimization initialized",
    "core_tenant_isolation.label.access_denied_to": "Access denied to ",
    "core_tenant_isolation.label.x_tenant_id": "X-Tenant-ID",
    "core_tenant_isolation.label.no_authenticated_user": "No authenticated user",
    "core_tenant_isolation.label.tenantcontextmanager": "TenantContextManager",
    "core_tenant_isolation.label.tenantmixin": "TenantMixin",
    "core_tenant_isolation.label.tenantquery": "TenantQuery",
    "core_container.label.dependency_injection_container": "Dependency injection container.",
    "core_container.label.initialize_the_container": "Initialize the container.",
    "core_container.label.configure_service_bindings": "Configure service bindings.",
    "core_container.label.clear_request_scoped_instances": "Clear request-scoped instances.",
    "core_initialization.label.application_initialization_uti": "Application initialization utilities.",
    "core_initialization.label.default": "Default",
    "core_initialization.label.admin123": "Admin123!",
    "core_initialization.label.admin": "Admin",
    "core_initialization.label.user": "User",
    "core_initialization.label.tenant123": "Tenant123!",
    "core_initialization.label.tenant": "Tenant",
    "core_initialization.label.admin_1": "Admin",
    "core_initialization.label.trainer123": "Trainer123!",
    "core_initialization.label.trainer": "Trainer",
    "core_initialization.label.user_1": "User",
    "core_initialization.label.student123": "Student123!",
    "core_initialization.label.student": "Student",
    "core_initialization.label.user_2": "User",
    "core_cache_config.label.different_caching_strategies": "Different caching strategies.",
    "core_cache_config.label.write_through_caching_pattern": "Write-through caching pattern.",
    "core_cache_config.label.refresh_ahead_caching_pattern": "Refresh-ahead caching pattern.",
    "core_cache_config.label.cache_warmed_for": "Cache warmed for ",
    "core_session_cache.label.redis_backed_session_implement": "Redis-backed session implementation",
    "core_session_cache.label.cleaned_up": "Cleaned up ",
    "core_session_cache.label.track_session_activity": "Track session activity",
    "core_session_cache.label.user_agent": "User-Agent",
    "core_memory_optimizer.label.get_pool_statistics": "Get pool statistics",
    "core_memory_optimizer.label.memory_baseline_set": "Memory baseline set: ",
    "core_memory_optimizer.label.garbage_collection": "Garbage collection: ",
    "core_memory_optimizer.label.file_streamed_to": "File streamed to ",
    "core_memory_optimizer.label.main_monitoring_loop": "Main monitoring loop",
    "core_memory_optimizer.label.object_type": "Object type '",
    "core_memory_optimizer.label.memory_optimization_initialize": "Memory optimization initialized",
    "core_tenant_isolation_example.label.forbidden": "Forbidden",
    "core_tenant_isolation_example.label.forbidden_1": "Forbidden",
    "error_handling_user_messages.label.user_friendly_message_structur": "User-friendly message structure.",
    "error_handling_user_messages.label.refresh_the_page": "Refresh the page",
    "error_handling_user_messages.label.actualice_la_p_gina": "Actualice la página",
    "error_handling_user_messages.label.refresh_the_page_1": "Refresh the page",
    "error_handling_user_messages.label.actualice_la_p_gina_1": "Actualice la página",
    "error_handling_user_messages.label.added_message_mapping": "Added message mapping: ",
    "error_handling_user_messages.label.loaded": "Loaded ",
    "error_handling_config.label.configuration_source_types": "Configuration source types.",
    "error_handling_config.label.circuit_breaker_configuration": "Circuit breaker configuration.",
    "error_handling_config.label.retry_configuration": "Retry configuration.",
    "error_handling_config.label.alert_configuration": "Alert configuration.",
    "error_handling_config.label.user_messages_configuration": "User messages configuration.",
    "error_handling_config.label.middleware_configuration": "Middleware configuration.",
    "error_handling_config.label.load_default_configuration": "Load default configuration.",
    "error_handling_config.label.configmanager": "ConfigManager",
    "error_handling_config.label.configmanager_1": "ConfigManager",
    "error_handling_config.label.configmanager_2": "ConfigManager",
    "error_handling_config.label.configmanager_3": "ConfigManager",
    "error_handling_config.label.get_retry_configuration": "Get retry configuration.",
    "error_handling_config.label.get_monitoring_configuration": "Get monitoring configuration.",
    "error_handling_config.label.get_alert_configuration": "Get alert configuration.",
    "error_handling_config.label.get_recovery_configuration": "Get recovery configuration.",
    "error_handling_config.label.get_middleware_configuration": "Get middleware configuration.",
    "error_handling_retry_manager.label.backoff_strategy_types": "Backoff strategy types.",
    "error_handling_retry_manager.label.operation": "Operation '",
    "error_handling_retry_manager.label.operation_1": "Operation '",
    "error_handling_retry_manager.label.operation_2": "Operation '",
    "error_handling_retry_manager.label.waiting": "Waiting ",
    "error_handling_retry_manager.label.async_operation": "Async operation '",
    "error_handling_retry_manager.label.async_operation_1": "Async operation '",
    "error_handling_retry_manager.label.async_operation_2": "Async operation '",
    "error_handling_retry_manager.label.waiting_1": "Waiting ",
    "error_handling___init__.label.circuitbreaker": "CircuitBreaker",
    "error_handling___init__.label.retrymanager": "RetryManager",
    "error_handling_error_recovery.label.retry_attempt": "Retry attempt ",
    "error_handling_error_recovery.label.retry_attempt_1": "Retry attempt ",
    "error_handling_error_recovery.label.trying_alternative_service": "Trying alternative service ",
    "error_handling_error_recovery.label.alternative_service": "Alternative service ",
    "error_handling_error_recovery.label.registered_recovery_handler": "Registered recovery handler: ",
    "error_handling_error_recovery.label.unregistered_recovery_handler": "Unregistered recovery handler: ",
    "error_handling_error_recovery.label.recovery_handler": "Recovery handler ",
    "error_handling_error_recovery.label.get_recovery_statistics": "Get recovery statistics.",
    "error_handling_error_recovery.label.reset_recovery_statistics": "Reset recovery statistics.",
    "error_handling_circuit_breaker.label.circuit_breaker_states": "Circuit breaker states.",
    "error_handling_circuit_breaker.label.circuit_breaker_configuration": "Circuit breaker configuration.",
    "error_handling_circuit_breaker.label.circuit_breaker_statistics": "Circuit breaker statistics.",
    "error_handling_circuit_breaker.label.circuit_breaker": "Circuit breaker '",
    "error_handling_circuit_breaker.label.circuit_breaker_1": "Circuit breaker '",
    "error_handling_circuit_breaker.label.circuit_breaker_2": "Circuit breaker '",
    "error_handling_circuit_breaker.label.circuit_breaker_3": "Circuit breaker '",
    "error_handling_circuit_breaker.label.circuit_breaker_4": "Circuit breaker '",
    "error_handling_circuit_breaker.label.circuit_breaker_5": "Circuit breaker '",
    "error_handling_circuit_breaker.label.circuit_breaker_6": "Circuit breaker '",
    "error_handling_circuit_breaker.label.circuit_breaker_7": "Circuit breaker '",
    "error_handling_examples.label.operation_succeeded": "Operation succeeded: ",
    "error_handling_examples.label.category": "Category: ",
    "error_handling_examples.label.severity": "Severity: ",
    "error_handling_examples.label.user_message": "User message: ",
    "error_handling_examples.label.payment": "Payment ",
    "error_handling_examples.label.payment_1": "Payment ",
    "error_handling_examples.label.payment_2": "Payment ",
    "error_handling_examples.label.state": "State: ",
    "error_handling_examples.label.total_requests": "Total requests: ",
    "error_handling_examples.label.user": "User ",
    "error_handling_examples.label.access_denied": "Access denied",
    "error_handling_examples.label.payment_declined": "Payment declined",
    "error_handling_examples.label.en": "EN: ",
    "error_handling_examples.label.es": "ES: ",
    "error_handling_examples.label.user_1": "User ",
    "error_handling_examples.label.guest_user": "Guest User",
    "error_handling_examples.label.user_2": "User ",
    "error_handling_examples.label.got_profile": "Got profile: ",
    "error_handling_examples.label.got_profile_1": "Got profile: ",
    "error_handling_examples.label.first_call_succeeded": "First call succeeded: ",
    "error_handling_examples.label.async_call_succeeded": "Async call succeeded: ",
    "error_handling_examples.label.resource_not_found": "Resource not found",
    "error_handling_examples.label.health_check_endpoint": "Health check endpoint.",
    "error_handling_examples.label.example_endpoints": "Example endpoints:",
    "error_handling_examples.label.configuration_issues_found": "Configuration issues found: ",
    "error_handling_examples.label.retry_max_attempts": "Retry max attempts: ",
    "error_handling_exceptions.label.recovery_strategy": "Recovery strategy '",
    "error_handling_exceptions.label.fallback": "Fallback '",
    "error_handling_error_monitor.label.alert_severity_levels": "Alert severity levels.",
    "error_handling_error_monitor.label.alert_delivery_channels": "Alert delivery channels.",
    "error_handling_error_monitor.label.an_alert_instance": "An alert instance.",
    "error_handling_error_monitor.label.alert": "ALERT [",
    "error_handling_error_monitor.label.added_alert_rule": "Added alert rule: ",
    "error_handling_error_monitor.label.removed_alert_rule": "Removed alert rule: ",
    "error_handling_error_monitor.label.alert_1": "Alert: ",
    "error_handling_error_monitor.label.get_alert_history": "Get alert history.",
    "error_handling_error_monitor.label.reset_all_metrics": "Reset all metrics.",
    "error_handling_middleware.label.handle_http_exceptions": "Handle HTTP exceptions.",
    "error_handling_middleware.label.handle_application_specific_ex": "Handle application-specific exceptions.",
    "error_handling_middleware.label.user_agent": "User-Agent",
    "error_handling_middleware.label.x_response_time": "X-Response-Time",
    "error_handling_middleware.label.x_request_id": "X-Request-ID",
    "error_handling_middleware.label.handle_general_exceptions": "Handle general exceptions.",
    "error_handling_middleware.label.handle_http_exceptions_1": "Handle HTTP exceptions.",
    "error_handling_middleware.label.handle_application_specific_ex_1": "Handle application-specific exceptions.",
    "error_handling_middleware.label.x_forwarded_for": "X-Forwarded-For",
    "error_handling_middleware.label.x_real_ip": "X-Real-IP",
    "error_handling_middleware.label.accept_language": "Accept-Language",
    "security_rate_limiting.label.rate_limit_configuration": "Rate limit configuration.",
    "security_rate_limiting.label.x_forwarded_for": "X-Forwarded-For",
    "security_rate_limiting.label.x_real_ip": "X-Real-IP",
    "security_rate_limiting.label.rate_limit_exceeded": "Rate limit exceeded",
    "security_rate_limiting.label.blocked_ip": "Blocked IP ",
    "security_rate_limiting.label.rate_limit_exceeded_1": "Rate limit exceeded",
    "security_password_policy.label.password_policy_configuration": "Password policy configuration.",
    "security_password_policy.label.calculate_password_entropy": "Calculate password entropy.",
    "security_password_policy.label.user_agent": "User-Agent",
    "security_password_policy.label.bdc_security_check": "BDC-Security-Check",
    "security_password_policy.label.very_strong": "Very Strong",
    "security_password_policy.label.strong": "Strong",
    "security_password_policy.label.medium": "Medium",
    "security_password_policy.label.weak": "Weak",
    "security_password_policy.label.very_weak": "Very Weak",
    "security_password_policy.label.add_uppercase_letters": "Add uppercase letters",
    "security_password_policy.label.add_lowercase_letters": "Add lowercase letters",
    "security_password_policy.label.add_numbers": "Add numbers",
    "security_password_policy.label.add_special_characters": "Add special characters",
    "security_password_policy.label.avoid_keyboard_patterns": "Avoid keyboard patterns",
    "security_password_policy.label.avoid_common_passwords": "Avoid common passwords",
    "security_encryption_service.label.encrypt_a_file": "Encrypt a file.",
    "security_encryption_service.label.decrypt_a_file": "Decrypt a file.",
    "security_encryption_service.label.unsupported_hash_algorithm": "Unsupported hash algorithm: ",
    "security_security_headers.label.content_type": "Content-Type",
    "security_security_headers.label.x_content_type_options": "X-Content-Type-Options",
    "security_security_headers.label.cache_control": "Cache-Control",
    "security_security_headers.label.pragma": "Pragma",
    "security_security_headers.label.expires": "Expires",
    "security_security_headers.label.strict_transport_security": "Strict-Transport-Security",
    "security_security_headers.label.server": "Server",
    "security_security_headers.label.x_forwarded_host": "X-Forwarded-Host",
    "security_security_headers.label.x_original_host": "X-Original-Host",
    "security_security_headers.label.x_rewrite_url": "X-Rewrite-URL",
    "security_security_headers.label.x_original_url": "X-Original-URL",
    "security_security_headers.label.suspicious_header_detected": "Suspicious header detected: ",
    "security_security_headers.label.content_type_1": "Content-Type",
    "security_security_headers.label.missing_content_type_header": "Missing Content-Type header",
    "security_security_headers.label.unexpected_content_type": "Unexpected Content-Type: ",
    "security_security_headers.label.request_too_large": "Request too large: ",
    "security_security_headers.label.user_agent": "User-Agent",
    "security_security_headers.label.suspicious_url_pattern": "Suspicious URL pattern: ",
    "security_security_headers.label.strict_transport_security_1": "Strict-Transport-Security",
    "security_security_headers.label.x_forwarded_proto": "X-Forwarded-Proto",
    "security_security_headers.label.x_forwarded_ssl": "X-Forwarded-SSL",
    "security_csrf_protection.label.initialize_csrf_protection": "Initialize CSRF protection.",
    "security_csrf_protection.label.csrf_protection_middleware": "CSRF protection middleware.",
    "security_csrf_protection.label.csrf_token_missing": "CSRF token missing",
    "security_csrf_protection.label.x_csrf_token": "X-CSRF-Token",
    "security_csrf_protection.label.x_csrftoken": "X-CSRFToken",
    "security_csrf_protection.label.accept": "Accept",
    "security_csrf_protection.label.content_type": "Content-Type",
    "security_csrf_protection.label.authorization": "Authorization",
    "security_csrf_protection.label.x_api_key": "X-API-Key",
    "security___init__.label.securityconfig": "SecurityConfig",
    "security___init__.label.encryptionservice": "EncryptionService",
    "security___init__.label.securityheaders": "SecurityHeaders",
    "security___init__.label.csrfprotection": "CSRFProtection",
    "security___init__.label.ratelimitingservice": "RateLimitingService",
    "security___init__.label.auditlogger": "AuditLogger",
    "security___init__.label.passwordpolicy": "PasswordPolicy",
    "security_audit_logger.label.initialize_audit_logger": "Initialize audit logger.",
    "security_audit_logger.label.log_request_completion": "Log request completion.",
    "security_audit_logger.label.request_exception": "Request exception: ",
    "security_audit_logger.label.user_agent": "User-Agent",
    "security_audit_logger.label.unknown": "Unknown",
    "security_audit_logger.label.log_authentication_related_eve": "Log authentication-related events.",
    "security_audit_logger.label.authentication_event": "Authentication event: ",
    "security_audit_logger.label.data_access": "Data access: ",
    "security_audit_logger.label.log_administrative_actions": "Log administrative actions.",
    "security_audit_logger.label.admin_action": "Admin action: ",
    "security_audit_logger.label.suspicious_activity_detected": "Suspicious activity detected: ",
    "security_audit_logger.label.log_compliance_related_events": "Log compliance-related events.",
    "security_audit_logger.label.user_agent_1": "User-Agent",
    "security_audit_logger.label.log_request_completion_1": "Log request completion.",
    "security_audit_logger.label.get_session_id": "Get session ID.",
    "security_audit_logger.label.x_forwarded_for": "X-Forwarded-For",
    "security_audit_logger.label.starting_operation": "Starting operation: ",
    "security_security_config.label.strict": "Strict",
    "security_security_config.label.rs256": "RS256",
    "security_security_config.label.strict_transport_security": "Strict-Transport-Security",
    "security_security_config.label.x_content_type_options": "X-Content-Type-Options",
    "security_security_config.label.x_frame_options": "X-Frame-Options",
    "security_security_config.label.x_xss_protection": "X-XSS-Protection",
    "security_security_config.label.referrer_policy": "Referrer-Policy",
    "security_security_config.label.permissions_policy": "Permissions-Policy",
    "security_security_config.label.content_security_policy": "Content-Security-Policy",
    "security_input_validator.label.no_file_provided": "No file provided",
    "security_input_validator.label.file_too_large": "File too large",
    "refactored_appointment_resources.label.get_paginated_appointments": "Get paginated appointments.",
    "refactored_appointment_resources.label.fetching_appointment": "Fetching appointment ",
    "refactored_appointment_resources.label.appointment_not_found": "Appointment not found",
    "refactored_appointment_resources.label.updating_appointment": "Updating appointment ",
    "refactored_appointment_resources.label.deleting_appointment": "Deleting appointment ",
    "refactored_appointment_resources.label.syncing_appointment": "Syncing appointment ",
    "refactored_appointment_resources.label.unsyncing_appointment": "Unsyncing appointment ",
    "utils_content_processing.label.file_not_found": "File not found: ",
    "utils_content_processing.label.file_is_empty": "File is empty",
    "utils_content_processing.label.user_agent": "User-Agent",
    "utils_content_processing.label.analyze_text_readability": "Analyze text readability.",
    "utils_content_processing.label.analyze_text_complexity": "Analyze text complexity.",
    "utils_content_processing.label.analyze_language_features": "Analyze language features.",
    "utils_content_processing.label.analyze_text_structure": "Analyze text structure.",
    "utils_content_processing.label.easy_6th_grade": "Easy (6th grade)",
    "utils_content_processing.label.standard_8th_9th_grade": "Standard (8th-9th grade)",
    "utils_content_processing.label.difficult_college_level": "Difficult (College level)",
    "utils_content_processing.label.content_is_empty": "Content is empty",
    "utils_content_processing.label.file_not_found_1": "File not found",
    "utils_rate_limiting.label.rate_limit_exceeded": "Rate limit exceeded: ",
    "utils_rate_limiting.label.limiter": "LIMITER/",
    "utils_file_upload_security.label.no_file_provided": "No file provided",
    "utils_file_upload_security.label.no_filename_provided": "No filename provided",
    "utils_file_upload_security.label.file_type": "File type '",
    "utils_pdf_generator.label.bdc_system": "BDC System",
    "utils_pdf_generator.label.heading1": "Heading1",
    "utils_pdf_generator.label.heading1_1": "Heading1",
    "utils_pdf_generator.label.heading2": "Heading2",
    "utils_pdf_generator.label.heading2_1": "Heading2",
    "utils_pdf_generator.label.heading2_2": "Heading2",
    "utils_pdf_generator.label.heading3": "Heading3",
    "utils_pdf_generator.label.heading3_1": "Heading3",
    "utils_pdf_generator.label.heading3_2": "Heading3",
    "utils_pdf_generator.label.normal": "Normal",
    "utils_pdf_generator.label.normal_1": "Normal",
    "utils_pdf_generator.label.italic": "Italic",
    "utils_pdf_generator.label.italic_1": "Italic",
    "utils_pdf_generator.label.bold": "Bold",
    "utils_pdf_generator.label.normal_2": "Normal",
    "utils_pdf_generator.label.helvetica_bold": "Helvetica-Bold",
    "utils_pdf_generator.label.heading1_2": "Heading1",
    "utils_pdf_generator.label.heading2_3": "Heading2",
    "utils_pdf_generator.label.heading3_3": "Heading3",
    "utils_pdf_generator.label.normal_3": "Normal",
    "utils_pdf_generator.label.bold_1": "Bold",
    "utils_pdf_generator.label.italic_2": "Italic",
    "utils_pdf_generator.label.helvetica_bold_1": "Helvetica-Bold",
    "utils_pdf_generator.label.helvetica": "Helvetica",
    "utils_pdf_generator.label.page": "Page ",
    "utils_pdf_generator.label.evaluation_report": "Evaluation Report - ",
    "utils_pdf_generator.label.evaluation_report_1": "Evaluation Report",
    "utils_pdf_generator.label.evaluation_details": "Evaluation Details",
    "utils_pdf_generator.label.responses": "Responses",
    "utils_pdf_generator.label.question": "Question ",
    "utils_pdf_generator.label.no_answer_provided": "No answer provided",
    "utils_pdf_generator.label.summary": "Summary",
    "utils_pdf_generator.label.recommendations": "Recommendations",
    "utils_pdf_generator.label.report_generated_by": "Report generated by: ",
    "utils_pdf_generator.label.date": "Date: ",
    "utils_pdf_generator.label.beneficiary_report": "Beneficiary Report - ",
    "utils_pdf_generator.label.beneficiary_progress_report": "Beneficiary Progress Report",
    "utils_pdf_generator.label.evaluations_summary": "Evaluations Summary",
    "utils_pdf_generator.label.title": "Title",
    "utils_pdf_generator.label.date_1": "Date",
    "utils_pdf_generator.label.status": "Status",
    "utils_pdf_generator.label.score": "Score",
    "utils_pdf_generator.label.n_a": "N/A",
    "utils_pdf_generator.label.no_evaluations_available": "No evaluations available.",
    "utils_pdf_generator.label.summary_1": "Summary",
    "utils_pdf_generator.label.recommendations_1": "Recommendations",
    "utils_pdf_generator.label.report_generated_by_1": "Report generated by: ",
    "utils_pdf_generator.label.date_2": "Date: ",
    "utils_pdf_generator.label.report": "Report",
    "utils_pdf_generator.label.report_1": "Report",
    "utils_pdf_generator.label.system": "System",
    "utils_pdf_generator.label.general": "General",
    "utils_pdf_generator.label.report_data": "Report Data",
    "utils_ai.label.no_answer_provided": "No answer provided",
    "utils_ai.label.question": "Question: ",
    "utils_ai.label.question_1": "Question: ",
    "utils_ai.label.evaluation": "Evaluation",
    "utils_ai.label.not_available": "Not available",
    "utils_ai.label.not_available_1": "Not available",
    "utils_ai.label.conclusion_not_available": "Conclusion not available.",
    "utils_data_encryption.label.get_encryptor_instance": "Get encryptor instance.",
    "utils_cache.label.cache_utility_module": "Cache utility module.",
    "utils___init__.label.utilities_package": "Utilities package.",
    "utils___init__.label.pdfgenerator": "PDFGenerator",
    "utils_logger.label.logging_utility_module": "Logging utility module.",
    "utils_backup_manager.label.aws_s3_region": "AWS_S3_REGION",
    "utils_backup_manager.label.unsupported_database_type": "Unsupported database type: ",
    "utils_backup_manager.label.backup_s3_bucket": "BACKUP_S3_BUCKET",
    "utils_backup_manager.label.backup_s3_bucket_1": "BACKUP_S3_BUCKET",
    "utils_backup_manager.label.unsupported_database_type_1": "Unsupported database type: ",
    "utils_backup_manager.label.list_available_backups": "List available backups.",
    "utils_backup_manager.label.backup_s3_bucket_2": "BACKUP_S3_BUCKET",
    "utils_backup_manager.label.contents": "Contents",
    "utils_backup_manager.label.key": "Key",
    "utils_backup_manager.label.size": "Size",
    "utils_backup_manager.label.lastmodified": "LastModified",
    "utils_backup_manager.label.key_1": "Key",
    "utils_backup_manager.label.backup_s3_bucket_3": "BACKUP_S3_BUCKET",
    "utils_backup_manager.label.contents_1": "Contents",
    "utils_backup_manager.label.lastmodified_1": "LastModified",
    "utils_backup_manager.label.key_2": "Key",
    "utils_backup_manager.label.cleaned_up": "Cleaned up ",
    "utils_backup_manager.label.create_sqlite_backup": "Create SQLite backup.",
    "utils_backup_manager.label.restore_sqlite_backup": "Restore SQLite backup.",
    "utils_backup_manager.label.encrypt_a_file": "Encrypt a file.",
    "utils_backup_manager.label.decrypt_a_file": "Decrypt a file.",
    "utils_backup_manager.label.backup_s3_bucket_4": "BACKUP_S3_BUCKET",
    "utils_backup_manager.label.backup_s3_bucket_5": "BACKUP_S3_BUCKET",
    "utils_backup_manager.label.backup_s3_bucket_6": "BACKUP_S3_BUCKET",
    "utils_backup_manager.label.save_backup_manifest": "Save backup manifest.",
    "utils_backup_manager.label.backup_scheduler_configured": "Backup scheduler configured: ",
    "utils_datetime_utils.label.datetime_utility_functions": "DateTime utility functions.",
    "utils_health_checker.label.database_responding_slowly": "Database responding slowly: ",
    "utils_health_checker.label.database_is_responsive": "Database is responsive",
    "utils_health_checker.label.redis_not_configured": "Redis not configured",
    "utils_health_checker.label.redis_is_responsive": "Redis is responsive",
    "utils_health_checker.label.critical_only": "Critical: Only ",
    "utils_health_checker.label.warning_only": "Warning: Only ",
    "utils_health_checker.label.sufficient_disk_space": "Sufficient disk space: ",
    "utils_health_checker.label.critical": "Critical: ",
    "utils_health_checker.label.warning": "Warning: ",
    "utils_health_checker.label.normal_memory_usage": "Normal memory usage: ",
    "utils_health_checker.label.check_cpu_usage": "Check CPU usage.",
    "utils_health_checker.label.critical_1": "Critical: ",
    "utils_health_checker.label.warning_1": "Warning: ",
    "utils_health_checker.label.normal_cpu_usage": "Normal CPU usage: ",
    "utils_health_checker.label.application_is_alive": "Application is alive",
    "utils_notifications.label.send_email_notification": "Send email notification",
    "utils_notifications.label.subject": "Subject",
    "utils_notifications.label.authorization": "Authorization",
    "utils_notifications.label.content_type": "Content-Type",
    "utils_error_handler.label.insufficient_permissions": "Insufficient permissions",
    "utils_error_handler.label.resource_not_found": "Resource not found",
    "utils_error_handler.label.resource_conflict": "Resource conflict",
    "utils_error_handler.label.rate_limit_exceeded": "Rate limit exceeded",
    "utils_error_handler.label.user_agent": "User-Agent",
    "utils_error_handler.label.handle_all_exceptions": "Handle all exceptions.",
    "utils_error_handler.label.resource_already_exists": "Resource already exists",
    "utils_error_handler.label.database_constraint_violation": "Database constraint violation",
    "utils_multi_tenancy.label.no_tenant_context": "No tenant context",
    "utils_sentry.label.notfound": "NotFound",
    "utils_sentry.label.x_request_id": "X-Request-ID",
    "utils_sentry.label.user_agent": "User-Agent",
    "utils_sentry.label.x_request_id_1": "X-Request-ID",
    "utils_sentry.label.x_api_version": "X-API-Version",
    "utils_adaptive_test_setup.label.mathematics": "Mathematics",
    "utils_adaptive_test_setup.label.high_school": "High School",
    "utils_adaptive_test_setup.label.arithmetic": "Arithmetic",
    "utils_adaptive_test_setup.label.addition": "Addition",
    "utils_adaptive_test_setup.label.arithmetic_1": "Arithmetic",
    "utils_adaptive_test_setup.label.multiplication": "Multiplication",
    "utils_adaptive_test_setup.label.algebra": "Algebra",
    "utils_adaptive_test_setup.label.linear_equations": "Linear Equations",
    "utils_adaptive_test_setup.label.geometry": "Geometry",
    "utils_adaptive_test_setup.label.area": "Area",
    "utils_adaptive_test_setup.label.algebra_1": "Algebra",
    "utils_adaptive_test_setup.label.functions": "Functions",
    "utils_adaptive_test_setup.label.calculus": "Calculus",
    "utils_adaptive_test_setup.label.derivatives": "Derivatives",
    "utils_adaptive_test_setup.label.calculus_1": "Calculus",
    "utils_adaptive_test_setup.label.limits": "Limits",
    "utils_adaptive_test_setup.label.geometry_1": "Geometry",
    "utils_adaptive_test_setup.label.angles": "Angles",
    "utils_adaptive_test_setup.label.number_theory": "Number Theory",
    "utils_adaptive_test_setup.label.prime_numbers": "Prime Numbers",
    "utils_adaptive_test_setup.label.advanced_mathematics": "Advanced Mathematics",
    "utils_adaptive_test_setup.label.college": "College",
    "utils_adaptive_test_setup.label.calculus_2": "Calculus",
    "utils_adaptive_test_setup.label.integration_by_parts": "Integration by Parts",
    "utils_adaptive_test_setup.label.linear_algebra": "Linear Algebra",
    "utils_adaptive_test_setup.label.eigenvalues": "Eigenvalues",
    "utils_adaptive_test_setup.label.started_adaptive_session": "Started adaptive session ",
    "utils_adaptive_test_setup.label.initial_ability": "Initial ability: ",
    "utils_adaptive_test_setup.label.difficulty": "Difficulty: ",
    "utils_adaptive_test_setup.label.sample_answer": "Sample answer",
    "utils_adaptive_test_setup.label.answer_correct": "Answer correct: ",
    "utils_adaptive_test_setup.label.new_ability": "New ability: ",
    "utils_adaptive_test_setup.label.final_ability": "Final ability: ",
    "utils_adaptive_test_setup.label.confidence_interval": "Confidence interval: [",
    "utils_adaptive_test_setup.label.percentile": "Percentile: ",
    "utils_adaptive_test_setup.label.strengths": "Strengths: ",
    "utils_adaptive_test_setup.label.weaknesses": "Weaknesses: ",
    "utils_decorators.label.permission_denied": "Permission denied",
    "database_indexing_strategy.label.detect_database_type": "Detect database type",
    "database_indexing_strategy.label.foreign_key_to": "Foreign key to ",
    "database_indexing_strategy.label.could_save": "Could save ",
    "database_indexing_strategy.label.order_s_by_s_w_w": "ORDER\\s+BY\\s+(\\w+\\.)?(\\w+)(?:\\s+(ASC|DESC))?",
    "database_indexing_strategy.label.missing_indexes": "Missing Indexes:",
    "database_backup.label.unsupported_database_type": "Unsupported database type: ",
    "database_backup.label.create_database_backup": "Create database backup",
    "database_backup.label.backup_postgresql_database": "Backup PostgreSQL database",
    "database_backup.label.backup_mysql_database": "Backup MySQL database",
    "database_backup.label.backup_sqlite_database": "Backup SQLite database",
    "database_backup.label.backup_restored": "Backup restored: ",
    "database_backup.label.restore_postgresql_database": "Restore PostgreSQL database",
    "database_backup.label.restore_mysql_database": "Restore MySQL database",
    "database_backup.label.restore_sqlite_database": "Restore SQLite database",
    "database_backup.label.removed_old_backup": "Removed old backup: ",
    "database_backup.label.cleaned_up": "Cleaned up ",
    "database_backup.label.verify_backup_integrity": "Verify backup integrity",
    "database_backup.label.scheduled_backup": "Scheduled backup: ",
    "database_backup.label.backup_restored_1": "Backup restored: ",
    "database_backup.label.removed": "Removed ",
    "database_optimization.label.database_optimization_utilitie": "Database optimization utilities",
    "database_optimization.label.create_optimized_indexes": "Create optimized indexes",
    "database_optimization.label.optimize_database_tables": "Optimize database tables",
    "database_optimization.label.vacuum_analyze": "VACUUM ANALYZE ",
    "database_optimization.label.optimize_table": "OPTIMIZE TABLE ",
    "database_optimization.label.optimized_table": "Optimized table: ",
    "database_optimization.label.explain_analyze": "EXPLAIN ANALYZE ",
    "database_optimization.label.explain": "EXPLAIN ",
    "database_optimization.label.analyze_table": "ANALYZE TABLE ",
    "database_optimization.label.configure_query_caching": "Configure query caching",
    "database_optimization.label.set_global": "SET GLOBAL ",
    "database_optimization.label.set": "Set ",
    "database_optimization.label.slow_query": "Slow query: ",
    "database_optimization.label.query": "Query: ",
    "database_optimization.label.plan": "Plan: ",
    "database_migrations.label.database_migration_management": "Database migration management",
    "database_migrations.label.initialize_migration_environme": "Initialize migration environment",
    "database_migrations.label.initialized_migration_environm": "Initialized migration environment",
    "database_migrations.label.run_pending_migrations": "Run pending migrations",
    "database_migrations.label.rollback_migrations": "Rollback migrations",
    "database_migrations.label.rolled_back": "Rolled back ",
    "database_migrations.label.get_migration_history": "Get migration history",
    "database_migrations.label.apply_data_only_migrations": "Apply data-only migrations",
    "database_migrations.label.migrated_user_roles": "Migrated user roles",
    "database_migrations.label.migrate_beneficiary_statuses": "Migrate beneficiary statuses",
    "database_migrations.label.migrated_beneficiary_statuses": "Migrated beneficiary statuses",
    "database_migrations.label.normalized_phone_numbers": "Normalized phone numbers",
    "database_migrations.label.duplicate_migration": "Duplicate migration: ",
    "database_migrations.label.upgrade_migration_logic": "Upgrade migration logic",
    "database_migrations.label.downgrade_migration_logic": "Downgrade migration logic",
    "database_migrations.label.execute_migration": "Execute migration",
    "database_migrations.label.current_revision": "Current revision: ",
    "database_migrations.label.migration_report": "Migration report: ",
    "monitoring_performance_metrics.label.user_agent": "User-Agent",
    "monitoring_performance_metrics.label.track_request_completion": "Track request completion",
    "monitoring_performance_metrics.label.store_request_metrics": "Store request metrics",
    "monitoring_performance_metrics.label.slow_request_detected": "Slow request detected: ",
    "monitoring_performance_metrics.label.collect_system_level_metrics": "Collect system-level metrics",
    "monitoring_performance_metrics.label.collect_process_level_metrics": "Collect process-level metrics",
    "monitoring_performance_metrics.label.cpu_usage_is": "CPU usage is ",
    "monitoring_performance_metrics.label.memory_usage_is": "Memory usage is ",
    "monitoring_performance_metrics.label.send_performance_alert": "Send performance alert",
    "monitoring_performance_metrics.label.performance_alert": "Performance alert: ",
    "monitoring_performance_metrics.label.endpoint_not_found": "Endpoint not found",
    "monitoring_performance_metrics.label.stop_background_monitoring": "Stop background monitoring",
    "monitoring_performance_metrics.label.background_monitoring_loop": "Background monitoring loop",
    "monitoring_performance_metrics.label.initialize_performance_monitor": "Initialize performance monitoring",
    "monitoring_performance_metrics.label.show_performance_summary": "Show performance summary",
    "monitoring_error_tracking.label.initialize_request_tracking": "Initialize request tracking",
    "monitoring_error_tracking.label.global_exception_handler": "Global exception handler",
    "monitoring_error_tracking.label.unhandled_exception": "Unhandled exception: ",
    "monitoring_error_tracking.label.resource_not_found": "Resource not found",
    "monitoring_error_tracking.label.alert_level": "Alert Level: ",
    "monitoring_error_tracking.label.user_agent": "User-Agent",
    "monitoring_error_tracking.label.referer": "Referer",
    "monitoring_error_tracking.label.cleaned_up": "Cleaned up ",
    "monitoring_error_tracking.label.cleaned_up_1": "Cleaned up ",
    "monitoring_alarm_system.label.alarm_severity_levels": "Alarm severity levels",
    "monitoring_alarm_system.label.alarm_status": "Alarm status",
    "monitoring_alarm_system.label.alarm_rule_definition": "Alarm rule definition",
    "monitoring_alarm_system.label.high_cpu_usage": "High CPU usage",
    "monitoring_alarm_system.label.high_memory_usage": "High memory usage",
    "monitoring_alarm_system.label.low_disk_space": "Low disk space",
    "monitoring_alarm_system.label.send_alarm_notification": "Send alarm notification",
    "monitoring_alarm_system.label.resolve_an_alarm": "Resolve an alarm",
    "monitoring_alarm_system.label.send_email_notification": "Send email notification",
    "monitoring_alarm_system.label.bdc_alert": "BDC Alert: ",
    "monitoring_alarm_system.label.system_alert": "System Alert",
    "monitoring_alarm_system.label.alert": "Alert",
    "monitoring_alarm_system.label.unknown": "Unknown",
    "monitoring_alarm_system.label.no_description": "No description",
    "monitoring_alarm_system.label.n_a": "N/A",
    "monitoring_alarm_system.label.n_a_1": "N/A",
    "monitoring_alarm_system.label.send_slack_notification": "Send Slack notification",
    "monitoring_alarm_system.label.bdc_alert_1": "BDC Alert: ",
    "monitoring_alarm_system.label.system_alert_1": "System Alert",
    "monitoring_alarm_system.label.severity": "Severity",
    "monitoring_alarm_system.label.unknown_1": "Unknown",
    "monitoring_alarm_system.label.metric_value": "Metric Value",
    "monitoring_alarm_system.label.n_a_2": "N/A",
    "monitoring_alarm_system.label.threshold": "Threshold",
    "monitoring_alarm_system.label.n_a_3": "N/A",
    "monitoring_alarm_system.label.description": "Description",
    "monitoring_alarm_system.label.no_description_1": "No description",
    "monitoring_alarm_system.label.bdc_monitoring_system": "BDC Monitoring System",
    "monitoring_alarm_system.label.send_webhook_notification": "Send webhook notification",
    "monitoring_alarm_system.label.bdc_monitoring_system_1": "BDC Monitoring System",
    "monitoring_alarm_system.label.content_type": "Content-Type",
    "monitoring_alarm_system.label.x_bdc_alert": "X-BDC-Alert",
    "monitoring_alarm_system.label.authorization": "Authorization",
    "monitoring_alarm_system.label.send_sms_notification": "Send SMS notification",
    "monitoring_alarm_system.label.bdc_alert_2": "BDC Alert: ",
    "monitoring_alarm_system.label.system_alert_2": "System Alert",
    "monitoring_alarm_system.label.unknown_2": "Unknown",
    "monitoring_alarm_system.label.n_a_4": "N/A",
    "monitoring_alarm_system.label.n_a_5": "N/A",
    "monitoring_alarm_system.label.start_alarm_monitoring": "Start alarm monitoring",
    "monitoring_alarm_system.label.stop_alarm_monitoring": "Stop alarm monitoring",
    "monitoring_alarm_system.label.background_monitoring_loop": "Background monitoring loop",
    "monitoring_alarm_system.label.initialize_alarm_system": "Initialize alarm system",
    "monitoring_alarm_system.label.acknowledge_alarm_endpoint": "Acknowledge alarm endpoint",
    "monitoring_alarm_system.label.silence_alarm_endpoint": "Silence alarm endpoint",
    "monitoring_app_monitoring.label.total_http_requests": "Total HTTP requests",
    "monitoring_app_monitoring.label.http_request_duration": "HTTP request duration",
    "monitoring_app_monitoring.label.cache_hit_count": "Cache hit count",
    "monitoring_app_monitoring.label.cache_miss_count": "Cache miss count",
    "monitoring_app_monitoring.label.log_request_start": "Log request start",
    "monitoring_app_monitoring.label.request_started": "Request started: ",
    "monitoring_app_monitoring.label.collect_system_metrics": "Collect system metrics",
    "monitoring_app_monitoring.label.record_cache_hit": "Record cache hit",
    "monitoring_app_monitoring.label.record_cache_miss": "Record cache miss",
    "monitoring_app_monitoring.label.check_database_connectivity": "Check database connectivity",
    "monitoring_app_monitoring.label.check_cache_connectivity": "Check cache connectivity",
    "monitoring_app_monitoring.label.performance_profiling_utilitie": "Performance profiling utilities",
    "monitoring_app_monitoring.label.profile_function_execution": "Profile function execution",
    "repositories_document_repository.label.document_repository_implementa": "Document repository implementation.",
    "repositories_document_repository.label.document_repository_implementa_1": "Document repository implementation.",
    "repositories_document_repository.label.initialize_document_repository": "Initialize document repository.",
    "repositories_document_repository.label.get_document_statistics": "Get document statistics.",
    "repositories_document_repository.label.save_document_instance": "Save document instance.",
    "repositories_document_repository.label.count_total_documents": "Count total documents.",
    "repositories_base_repository.label.base_repository_implementation": "Base repository implementation.",
    "repositories_base_repository.label.base_repository_implementation_1": "Base repository implementation.",
    "repositories_base_repository.label.save_entity_changes": "Save entity changes.",
    "repositories_program_repository.label.program_repository_implementat": "Program repository implementation.",
    "repositories_program_repository.label.program_repository_implementat_1": "Program repository implementation.",
    "repositories_program_repository.label.initialize_program_repository": "Initialize program repository.",
    "repositories_program_repository.label.get_program_statistics": "Get program statistics.",
    "repositories_program_repository.label.save_program_instance": "Save program instance.",
    "repositories_program_repository.label.count_total_programs": "Count total programs.",
    "repositories___init__.label.repository_implementations": "Repository implementations.",
    "repositories___init__.label.userrepository": "UserRepository",
    "repositories___init__.label.notificationrepository": "NotificationRepository",
    "repositories___init__.label.beneficiaryrepository": "BeneficiaryRepository",
    "repositories_improved_user_repository.label.initialize_user_repository": "Initialize user repository.",
    "repositories_improved_user_repository.label.verify_user_credentials": "Verify user credentials.",
    "repositories_improved_user_repository.label.count_total_users": "Count total users.",
    "repositories_improved_user_repository.label.save_user_instance": "Save user instance.",
    "repositories_evaluation_repository.label.evaluation_repository_implemen": "Evaluation repository implementation.",
    "repositories_evaluation_repository.label.evaluation_repository_implemen_1": "Evaluation repository implementation.",
    "repositories_evaluation_repository.label.initialize_evaluation_reposito": "Initialize evaluation repository.",
    "repositories_evaluation_repository.label.save_evaluation_instance": "Save evaluation instance.",
    "repositories_evaluation_repository.label.count_total_evaluations": "Count total evaluations.",
    "repositories_notification_repository.label.notification_repository_implem": "Notification repository implementation.",
    "repositories_notification_repository.label.notification_repository_implem_1": "Notification repository implementation.",
    "repositories_notification_repository.label.initialize_notification_reposi": "Initialize notification repository.",
    "repositories_notification_repository.label.save_notification_instance": "Save notification instance.",
    "repositories_notification_repository.label.count_total_notifications": "Count total notifications.",
    "repositories_user_repository.label.user_repository_implementation": "User repository implementation.",
    "repositories_user_repository.label.count_total_users": "Count total users.",
    "repositories_user_repository.label.save_user_instance": "Save user instance.",
    "repositories_calendar_repository.label.calendar_appointment_repositor": "Calendar/Appointment repository implementation.",
    "repositories_calendar_repository.label.calendar_appointment_repositor_1": "Calendar/Appointment repository implementation.",
    "repositories_calendar_repository.label.initialize_calendar_repository": "Initialize calendar repository.",
    "repositories_calendar_repository.label.find_upcoming_appointments": "Find upcoming appointments.",
    "repositories_calendar_repository.label.find_conflicting_appointments": "Find conflicting appointments.",
    "repositories_calendar_repository.label.reschedule_appointment": "Reschedule appointment.",
    "repositories_calendar_repository.label.cancel_appointment": "Cancel appointment.",
    "repositories_calendar_repository.label.save_appointment_instance": "Save appointment instance.",
    "repositories_calendar_repository.label.count_total_appointments": "Count total appointments.",
    "repositories_appointment_repository.label.appointment_repository_impleme": "Appointment repository implementation.",
    "repositories_appointment_repository.label.implementation_of_iappointment": "Implementation of IAppointmentRepository.",
    "repositories_sms_repository.label.sms_repository_implementation": "SMS repository implementation.",
    "v2_base_repository.label.base_repository_implementation": "Base repository implementation.",
    "v2_base_repository.label.create_new_entity": "Create new entity.",
    "v2_program_repository.label.initialize_program_repository": "Initialize program repository.",
    "v2_program_repository.label.archive_a_program": "Archive a program.",
    "v2_beneficiary_repository.label.initialize_beneficiary_reposit": "Initialize beneficiary repository.",
    "v2_beneficiary_repository.label.cancel_an_appointment": "Cancel an appointment.",
    "v2_beneficiary_repository.label.cancellation_reason": "Cancellation reason: ",
    "v2_user_repository.label.user_repository_implementation": "User repository implementation.",
    "v2_user_repository.label.initialize_user_repository": "Initialize user repository.",
    "v2_user_repository.label.deactivate_user_account": "Deactivate user account.",
    "v2_user_repository.label.activate_user_account": "Activate user account.",
    "interfaces_base_repository_interface.label.create_new_entity": "Create new entity.",
    "interfaces_document_repository_interface.label.document_repository_interface": "Document repository interface.",
    "interfaces_document_repository_interface.label.revoke_document_share": "Revoke document share.",
    "interfaces_document_repository_interface.label.get_document_statistics": "Get document statistics.",
    "interfaces_document_repository_interface.label.archive_a_document": "Archive a document.",
    "interfaces_beneficiary_repository_interface.label.beneficiary_repository_interfa": "Beneficiary repository interface.",
    "interfaces_beneficiary_repository_interface.label.get_beneficiary_notes": "Get beneficiary notes.",
    "interfaces_beneficiary_repository_interface.label.get_beneficiary_documents": "Get beneficiary documents.",
    "interfaces_beneficiary_repository_interface.label.get_beneficiary_appointments": "Get beneficiary appointments.",
    "interfaces_beneficiary_repository_interface.label.cancel_beneficiary_appointment": "Cancel beneficiary appointment.",
    "interfaces_evaluation_repository_interface.label.evaluation_repository_interfac": "Evaluation repository interface.",
    "interfaces_evaluation_repository_interface.label.create_evaluation_result": "Create evaluation result.",
    "interfaces_evaluation_repository_interface.label.get_evaluation_statistics": "Get evaluation statistics.",
    "interfaces_evaluation_repository_interface.label.get_evaluation_templates": "Get evaluation templates.",
    "interfaces_evaluation_repository_interface.label.get_overdue_evaluations": "Get overdue evaluations.",
    "interfaces_program_repository_interface.label.program_repository_interface": "Program repository interface.",
    "interfaces_program_repository_interface.label.archive_a_program": "Archive a program.",
    "interfaces_user_repository_interface.label.user_repository_interface": "User repository interface.",
    "interfaces_user_repository_interface.label.deactivate_user_account": "Deactivate user account.",
    "interfaces_user_repository_interface.label.activate_user_account": "Activate user account.",
    "interfaces_base_repository_interface.label.base_repository_interface": "Base repository interface.",
    "interfaces_base_repository_interface.label.base_repository_interface_1": "Base repository interface.",
    "interfaces_base_repository_interface.label.save_entity_changes": "Save entity changes.",
    "interfaces_document_repository_interface.label.document_repository_interface_1": "Document repository interface.",
    "interfaces_evaluation_repository_interface.label.evaluation_repository_interfac_1": "Evaluation repository interface.",
    "interfaces_calendar_repository_interface.label.calendar_appointment_repositor": "Calendar/Appointment repository interface.",
    "interfaces___init__.label.repository_interfaces_package": "Repository interfaces package.",
    "interfaces_sms_repository_interface.label.sms_repository_interface": "SMS repository interface.",
    "interfaces_program_repository_interface.label.program_repository_interface_1": "Program repository interface.",
    "interfaces_appointment_repository_interface.label.interface_for_appointmentrepos": "Interface for AppointmentRepository.",
    "models_assessment.label.assessment_models": "Assessment models.",
    "models_assessment.label.assessment_template_model": "Assessment template model.",
    "models_assessment.label.tenant": "Tenant",
    "models_assessment.label.user": "User",
    "models_assessment.label.assessmentsection": "AssessmentSection",
    "models_assessment.label.assessment": "Assessment",
    "models_assessment.label.assessment_section_model": "Assessment section model.",
    "models_assessment.label.assessmentquestion": "AssessmentQuestion",
    "models_assessment.label.assessment_question_model": "Assessment question model.",
    "models_assessment.label.assessment_instance_model": "Assessment instance model.",
    "models_assessment.label.beneficiary": "Beneficiary",
    "models_assessment.label.user_1": "User",
    "models_assessment.label.user_2": "User",
    "models_assessment.label.assessmentresponse": "AssessmentResponse",
    "models_assessment.label.assessment_response_model": "Assessment response model.",
    "models_assessment.label.assessmentquestion_1": "AssessmentQuestion",
    "models_document_version.label.document": "Document",
    "models_document_version.label.user": "User",
    "models_document_version.label.document_1": "Document",
    "models_document_version.label.documentversion": "DocumentVersion",
    "models_document_version.label.documentversion_1": "DocumentVersion",
    "models_document_version.label.user_1": "User",
    "models_user.label.user_model_module": "User model module.",
    "models_user.label.user_model": "User model.",
    "models_user.label.set_null": "SET NULL",
    "models_user.label.tenant": "Tenant",
    "models_user.label.folder": "Folder",
    "models_user.label.report": "Report",
    "models_user.label.program": "Program",
    "models_user.label.trainingsession": "TrainingSession",
    "models_user.label.set_password_hash": "Set password hash.",
    "models_video_conference.label.recording_status_enum": "Recording status enum.",
    "models_video_conference.label.video_conference_model": "Video Conference model.",
    "models_video_conference.label.appointment": "Appointment",
    "models_video_conference.label.user": "User",
    "models_video_conference.label.videoconferenceparticipant": "VideoConferenceParticipant",
    "models_video_conference.label.videoconferencerecording": "VideoConferenceRecording",
    "models_video_conference.label.videoconference": "VideoConference",
    "models_video_conference.label.user_1": "User",
    "models_video_conference.label.videoconference_1": "VideoConference",
    "models_video_conference.label.videoconference_2": "VideoConference",
    "models_video_conference.label.videoconference_3": "VideoConference",
    "models_tenant.label.tenant_model": "Tenant model.",
    "models_tenant.label.user": "User",
    "models_tenant.label.folder": "Folder",
    "models_tenant.label.report": "Report",
    "models_tenant.label.program": "Program",
    "models_beneficiary.label.beneficiary_model_module": "Beneficiary model module.",
    "models_beneficiary.label.beneficiary_student_model": "Beneficiary (Student) model.",
    "models_beneficiary.label.set_null": "SET NULL",
    "models_beneficiary.label.get_trainer_count": "Get trainer count.",
    "models_beneficiary.label.user": "User",
    "models_beneficiary.label.user_1": "User",
    "models_beneficiary.label.tenant": "Tenant",
    "models_beneficiary.label.appointment": "Appointment",
    "models_beneficiary.label.document": "Document",
    "models_beneficiary.label.evaluation": "Evaluation",
    "models_beneficiary.label.note": "Note",
    "models_beneficiary.label.programenrollment": "ProgramEnrollment",
    "models_beneficiary.label.sessionattendance": "SessionAttendance",
    "models_beneficiary.label.beneficiary": "Beneficiary",
    "models_beneficiary.label.user_2": "User",
    "models_beneficiary.label.online": "Online",
    "models_beneficiary.label.user_3": "User",
    "models_beneficiary.label.user_4": "User",
    "models_permission.label.model_for_permissions": "Model for permissions.",
    "models_permission.label.string_representation": "String representation.",
    "models_permission.label.convert_to_dictionary": "Convert to dictionary.",
    "models_permission.label.model_for_roles": "Model for roles.",
    "models_permission.label.permission": "Permission",
    "models_permission.label.string_representation_1": "String representation.",
    "models_permission.label.convert_to_dictionary_1": "Convert to dictionary.",
    "models_folder.label.folder": "Folder",
    "models_folder.label.tenant": "Tenant",
    "models_folder.label.user": "User",
    "models_notification.label.notification_model_module": "Notification model module.",
    "models_notification.label.user": "User",
    "models_notification.label.user_1": "User",
    "models_notification.label.tenant": "Tenant",
    "models_notification.label.message": "Message",
    "models_notification.label.threadparticipant": "ThreadParticipant",
    "models_notification.label.user_2": "User",
    "models_notification.label.user_3": "User",
    "models_notification.label.readreceipt": "ReadReceipt",
    "models_notification.label.user_4": "User",
    "models_evaluation.label.evaluation_results_model": "Evaluation results model.",
    "models_evaluation.label.set_null": "SET NULL",
    "models_evaluation.label.set_null_1": "SET NULL",
    "models_evaluation.label.beneficiary": "Beneficiary",
    "models_evaluation.label.test": "Test",
    "models_evaluation.label.user": "User",
    "models_evaluation.label.user_1": "User",
    "models_evaluation.label.tenant": "Tenant",
    "models_evaluation.label.adaptivetestsession": "AdaptiveTestSession",
    "models_profile.label.user_profile_model": "User profile model.",
    "models_profile.label.user": "User",
    "models_sms_message.label.sms_provider_enumeration": "SMS provider enumeration.",
    "models_sms_message.label.user": "User",
    "models_sms_message.label.tenant": "Tenant",
    "models_sms_message.label.increment_retry_count": "Increment retry count.",
    "models_sms_message.label.tenant_1": "Tenant",
    "models_sms_message.label.tenant_2": "Tenant",
    "models_sms_message.label.user_1": "User",
    "models_activity.label.activity_model": "Activity model.",
    "models_activity.label.user": "User",
    "models___init__.label.tenant": "Tenant",
    "models___init__.label.permission": "Permission",
    "models___init__.label.role": "Role",
    "models___init__.label.user": "User",
    "models___init__.label.tokenblocklist": "TokenBlocklist",
    "models___init__.label.userrole": "UserRole",
    "models___init__.label.userprofile": "UserProfile",
    "models___init__.label.useractivity": "UserActivity",
    "models___init__.label.userpreference": "UserPreference",
    "models___init__.label.beneficiary": "Beneficiary",
    "models___init__.label.note": "Note",
    "models___init__.label.beneficiaryappointment": "BeneficiaryAppointment",
    "models___init__.label.beneficiarydocument": "BeneficiaryDocument",
    "models___init__.label.test": "Test",
    "models___init__.label.testset": "TestSet",
    "models___init__.label.question": "Question",
    "models___init__.label.testsession": "TestSession",
    "models___init__.label.response": "Response",
    "models___init__.label.aifeedback": "AIFeedback",
    "models___init__.label.evaluation": "Evaluation",
    "models___init__.label.assessment": "Assessment",
    "models___init__.label.adaptivetestpool": "AdaptiveTestPool",
    "models___init__.label.adaptivequestion": "AdaptiveQuestion",
    "models___init__.label.adaptivetestsession": "AdaptiveTestSession",
    "models___init__.label.adaptiveresponse": "AdaptiveResponse",
    "models___init__.label.adaptivetestreport": "AdaptiveTestReport",
    "models___init__.label.document": "Document",
    "models___init__.label.documentpermission": "DocumentPermission",
    "models___init__.label.folder": "Folder",
    "models___init__.label.appointment": "Appointment",
    "models___init__.label.recurringpattern": "RecurringPattern",
    "models___init__.label.appointmentseries": "AppointmentSeries",
    "models___init__.label.availabilityschedule": "AvailabilitySchedule",
    "models___init__.label.availabilityslot": "AvailabilitySlot",
    "models___init__.label.availabilityexception": "AvailabilityException",
    "models___init__.label.program": "Program",
    "models___init__.label.programmodule": "ProgramModule",
    "models___init__.label.programenrollment": "ProgramEnrollment",
    "models___init__.label.trainingsession": "TrainingSession",
    "models___init__.label.sessionattendance": "SessionAttendance",
    "models___init__.label.notification": "Notification",
    "models___init__.label.messagethread": "MessageThread",
    "models___init__.label.threadparticipant": "ThreadParticipant",
    "models___init__.label.message": "Message",
    "models___init__.label.readreceipt": "ReadReceipt",
    "models___init__.label.report": "Report",
    "models___init__.label.reportschedule": "ReportSchedule",
    "models___init__.label.activity": "Activity",
    "models___init__.label.monitoring": "Monitoring",
    "models___init__.label.settings": "Settings",
    "models___init__.label.integration": "Integration",
    "models___init__.label.twofactorauth": "TwoFactorAuth",
    "models___init__.label.twofactorsession": "TwoFactorSession",
    "models___init__.label.chatconversation": "ChatConversation",
    "models___init__.label.chatmessage": "ChatMessage",
    "models___init__.label.chatratelimit": "ChatRateLimit",
    "models___init__.label.conversationtemplate": "ConversationTemplate",
    "models___init__.label.conversationstatus": "ConversationStatus",
    "models___init__.label.messagerole": "MessageRole",
    "models___init__.label.predictionmodel": "PredictionModel",
    "models___init__.label.performanceprediction": "PerformancePrediction",
    "models___init__.label.predictionrecommendation": "PredictionRecommendation",
    "models___init__.label.modeltraininghistory": "ModelTrainingHistory",
    "models___init__.label.contenttype": "ContentType",
    "models___init__.label.questiontype": "QuestionType",
    "models___init__.label.bloomstaxonomy": "BloomsTaxonomy",
    "models___init__.label.learningobjective": "LearningObjective",
    "models___init__.label.questiongenerationrequest": "QuestionGenerationRequest",
    "models___init__.label.generatedquestion": "GeneratedQuestion",
    "models___init__.label.questionduplicate": "QuestionDuplicate",
    "models___init__.label.questionbank": "QuestionBank",
    "models___init__.label.questionbankquestion": "QuestionBankQuestion",
    "models___init__.label.generationanalytics": "GenerationAnalytics",
    "models___init__.label.language": "Language",
    "models___init__.label.multilingualcontent": "MultilingualContent",
    "models___init__.label.translationproject": "TranslationProject",
    "models___init__.label.translationworkflow": "TranslationWorkflow",
    "models___init__.label.userlanguagepreference": "UserLanguagePreference",
    "models___init__.label.badge": "Badge",
    "models___init__.label.userbadge": "UserBadge",
    "models___init__.label.userxp": "UserXP",
    "models___init__.label.pointtransaction": "PointTransaction",
    "models___init__.label.leaderboard": "Leaderboard",
    "models___init__.label.leaderboardentry": "LeaderboardEntry",
    "models___init__.label.challenge": "Challenge",
    "models___init__.label.challengeparticipant": "ChallengeParticipant",
    "models___init__.label.gamificationteam": "GamificationTeam",
    "models___init__.label.reward": "Reward",
    "models___init__.label.rewardredemption": "RewardRedemption",
    "models___init__.label.usergoal": "UserGoal",
    "models___init__.label.gamificationevent": "GamificationEvent",
    "models___init__.label.userprogress": "UserProgress",
    "models___init__.label.achievementcategory": "AchievementCategory",
    "models___init__.label.achievementtype": "AchievementType",
    "models___init__.label.pointactivitytype": "PointActivityType",
    "models___init__.label.leaderboardtype": "LeaderboardType",
    "models___init__.label.challengetype": "ChallengeType",
    "models___init__.label.rewardtype": "RewardType",
    "models___init__.label.tenant_1": "Tenant",
    "models___init__.label.permission_1": "Permission",
    "models___init__.label.role_1": "Role",
    "models___init__.label.user_1": "User",
    "models___init__.label.tokenblocklist_1": "TokenBlocklist",
    "models___init__.label.userrole_1": "UserRole",
    "models___init__.label.userprofile_1": "UserProfile",
    "models___init__.label.useractivity_1": "UserActivity",
    "models___init__.label.userpreference_1": "UserPreference",
    "models___init__.label.beneficiary_1": "Beneficiary",
    "models___init__.label.note_1": "Note",
    "models___init__.label.beneficiaryappointment_1": "BeneficiaryAppointment",
    "models___init__.label.beneficiarydocument_1": "BeneficiaryDocument",
    "models___init__.label.test_1": "Test",
    "models___init__.label.testset_1": "TestSet",
    "models___init__.label.question_1": "Question",
    "models___init__.label.testsession_1": "TestSession",
    "models___init__.label.response_1": "Response",
    "models___init__.label.aifeedback_1": "AIFeedback",
    "models___init__.label.evaluation_1": "Evaluation",
    "models___init__.label.assessment_1": "Assessment",
    "models___init__.label.adaptivetestpool_1": "AdaptiveTestPool",
    "models___init__.label.adaptivequestion_1": "AdaptiveQuestion",
    "models___init__.label.adaptivetestsession_1": "AdaptiveTestSession",
    "models___init__.label.adaptiveresponse_1": "AdaptiveResponse",
    "models___init__.label.adaptivetestreport_1": "AdaptiveTestReport",
    "models___init__.label.document_1": "Document",
    "models___init__.label.documentpermission_1": "DocumentPermission",
    "models___init__.label.folder_1": "Folder",
    "models___init__.label.appointment_1": "Appointment",
    "models___init__.label.recurringpattern_1": "RecurringPattern",
    "models___init__.label.appointmentseries_1": "AppointmentSeries",
    "models___init__.label.availabilityschedule_1": "AvailabilitySchedule",
    "models___init__.label.availabilityslot_1": "AvailabilitySlot",
    "models___init__.label.availabilityexception_1": "AvailabilityException",
    "models___init__.label.program_1": "Program",
    "models___init__.label.programmodule_1": "ProgramModule",
    "models___init__.label.programenrollment_1": "ProgramEnrollment",
    "models___init__.label.trainingsession_1": "TrainingSession",
    "models___init__.label.sessionattendance_1": "SessionAttendance",
    "models___init__.label.notification_1": "Notification",
    "models___init__.label.messagethread_1": "MessageThread",
    "models___init__.label.threadparticipant_1": "ThreadParticipant",
    "models___init__.label.message_1": "Message",
    "models___init__.label.readreceipt_1": "ReadReceipt",
    "models___init__.label.report_1": "Report",
    "models___init__.label.reportschedule_1": "ReportSchedule",
    "models___init__.label.activity_1": "Activity",
    "models___init__.label.monitoring_1": "Monitoring",
    "models___init__.label.settings_1": "Settings",
    "models___init__.label.integration_1": "Integration",
    "models___init__.label.twofactorauth_1": "TwoFactorAuth",
    "models___init__.label.twofactorsession_1": "TwoFactorSession",
    "models___init__.label.chatconversation_1": "ChatConversation",
    "models___init__.label.chatmessage_1": "ChatMessage",
    "models___init__.label.chatratelimit_1": "ChatRateLimit",
    "models___init__.label.conversationtemplate_1": "ConversationTemplate",
    "models___init__.label.conversationstatus_1": "ConversationStatus",
    "models___init__.label.messagerole_1": "MessageRole",
    "models___init__.label.predictionmodel_1": "PredictionModel",
    "models___init__.label.performanceprediction_1": "PerformancePrediction",
    "models___init__.label.predictionrecommendation_1": "PredictionRecommendation",
    "models___init__.label.modeltraininghistory_1": "ModelTrainingHistory",
    "models___init__.label.contenttype_1": "ContentType",
    "models___init__.label.sourcecontent": "SourceContent",
    "models___init__.label.questiontype_1": "QuestionType",
    "models___init__.label.bloomstaxonomy_1": "BloomsTaxonomy",
    "models___init__.label.learningobjective_1": "LearningObjective",
    "models___init__.label.questiongenerationrequest_1": "QuestionGenerationRequest",
    "models___init__.label.generatedquestion_1": "GeneratedQuestion",
    "models___init__.label.questionduplicate_1": "QuestionDuplicate",
    "models___init__.label.questionbank_1": "QuestionBank",
    "models___init__.label.questionbankquestion_1": "QuestionBankQuestion",
    "models___init__.label.generationanalytics_1": "GenerationAnalytics",
    "models___init__.label.language_1": "Language",
    "models___init__.label.multilingualcontent_1": "MultilingualContent",
    "models___init__.label.translationproject_1": "TranslationProject",
    "models___init__.label.translationworkflow_1": "TranslationWorkflow",
    "models___init__.label.userlanguagepreference_1": "UserLanguagePreference",
    "models___init__.label.badge_1": "Badge",
    "models___init__.label.userbadge_1": "UserBadge",
    "models___init__.label.userxp_1": "UserXP",
    "models___init__.label.pointtransaction_1": "PointTransaction",
    "models___init__.label.leaderboard_1": "Leaderboard",
    "models___init__.label.leaderboardentry_1": "LeaderboardEntry",
    "models___init__.label.challenge_1": "Challenge",
    "models___init__.label.challengeparticipant_1": "ChallengeParticipant",
    "models___init__.label.gamificationteam_1": "GamificationTeam",
    "models___init__.label.reward_1": "Reward",
    "models___init__.label.rewardredemption_1": "RewardRedemption",
    "models___init__.label.usergoal_1": "UserGoal",
    "models___init__.label.gamificationevent_1": "GamificationEvent",
    "models___init__.label.userprogress_1": "UserProgress",
    "models___init__.label.achievementcategory_1": "AchievementCategory",
    "models___init__.label.achievementtype_1": "AchievementType",
    "models___init__.label.pointactivitytype_1": "PointActivityType",
    "models___init__.label.leaderboardtype_1": "LeaderboardType",
    "models___init__.label.challengetype_1": "ChallengeType",
    "models___init__.label.rewardtype_1": "RewardType",
    "models_user_preference.label.user_preference_model": "User preference model.",
    "models_user_preference.label.user_preference_model_1": "User preference model.",
    "models_user_preference.label.user": "User",
    "models_test.label.tenant": "Tenant",
    "models_test.label.user": "User",
    "models_test.label.tenant_1": "Tenant",
    "models_test.label.user_1": "User",
    "models_test.label.question": "Question",
    "models_test.label.testsession": "TestSession",
    "models_test.label.response": "Response",
    "models_test.label.beneficiary": "Beneficiary",
    "models_test.label.response_1": "Response",
    "models_test.label.ai_generated_feedback_model": "AI-generated feedback model.",
    "models_test.label.testsession_1": "TestSession",
    "models_test.label.user_2": "User",
    "models_integration.label.integration_model_module": "Integration model module.",
    "models_integration.label.user": "User",
    "models_recurring_appointment.label.recurring_appointment_models": "Recurring appointment models.",
    "models_recurring_appointment.label.appointmentseries": "AppointmentSeries",
    "models_recurring_appointment.label.recurringpattern": "RecurringPattern",
    "models_recurring_appointment.label.beneficiary": "Beneficiary",
    "models_recurring_appointment.label.user": "User",
    "models_recurring_appointment.label.appointment": "Appointment",
    "models_two_factor_auth.label.two_factor_authentication_mode": "Two-Factor Authentication models.",
    "models_two_factor_auth.label.user": "User",
    "models_two_factor_auth.label.generate_backup_codes": "Generate backup codes.",
    "models_two_factor_auth.label.user_1": "User",
    "models_ai_question_generation.label.tenant": "Tenant",
    "models_ai_question_generation.label.user": "User",
    "models_ai_question_generation.label.bloomstaxonomy": "BloomsTaxonomy",
    "models_ai_question_generation.label.tenant_1": "Tenant",
    "models_ai_question_generation.label.user_1": "User",
    "models_ai_question_generation.label.sourcecontent": "SourceContent",
    "models_ai_question_generation.label.ai_generated_questions": "AI-generated questions.",
    "models_ai_question_generation.label.questiongenerationrequest": "QuestionGenerationRequest",
    "models_ai_question_generation.label.questiontype": "QuestionType",
    "models_ai_question_generation.label.bloomstaxonomy_1": "BloomsTaxonomy",
    "models_ai_question_generation.label.learningobjective": "LearningObjective",
    "models_ai_question_generation.label.user_2": "User",
    "models_ai_question_generation.label.generatedquestion": "GeneratedQuestion",
    "models_ai_question_generation.label.generatedquestion_1": "GeneratedQuestion",
    "models_ai_question_generation.label.user_3": "User",
    "models_ai_question_generation.label.tenant_2": "Tenant",
    "models_ai_question_generation.label.user_4": "User",
    "models_ai_question_generation.label.questionbank": "QuestionBank",
    "models_ai_question_generation.label.generatedquestion_2": "GeneratedQuestion",
    "models_ai_question_generation.label.user_5": "User",
    "models_ai_question_generation.label.tenant_3": "Tenant",
    "models_document.label.document_model_module": "Document model module.",
    "models_document.label.document_model": "Document model.",
    "models_document.label.user": "User",
    "models_document.label.beneficiary": "Beneficiary",
    "models_document.label.evaluation": "Evaluation",
    "models_document.label.tenant": "Tenant",
    "models_performance_prediction.label.performance_prediction_models": "Performance prediction models.",
    "models_performance_prediction.label.tenant": "Tenant",
    "models_performance_prediction.label.user": "User",
    "models_performance_prediction.label.performanceprediction": "PerformancePrediction",
    "models_performance_prediction.label.beneficiary": "Beneficiary",
    "models_performance_prediction.label.predictionmodel": "PredictionModel",
    "models_performance_prediction.label.predictionrecommendation": "PredictionRecommendation",
    "models_performance_prediction.label.performanceprediction_1": "PerformancePrediction",
    "models_performance_prediction.label.user_1": "User",
    "models_performance_prediction.label.predictionmodel_1": "PredictionModel",
    "models_settings.label.settings_models": "Settings models.",
    "models_settings.label.beneficiary_development_center": "Beneficiary Development Center",
    "models_settings.label.mm_dd_yyyy": "MM/DD/YYYY",
    "models_settings.label.tenant": "Tenant",
    "models_settings.label.inter": "Inter",
    "models_settings.label.tenant_1": "Tenant",
    "models_settings.label.user": "User",
    "models_settings.label.user_1": "User",
    "models_program.label.program_model": "Program model.",
    "models_program.label.tenant": "Tenant",
    "models_program.label.user": "User",
    "models_program.label.programmodule": "ProgramModule",
    "models_program.label.programenrollment": "ProgramEnrollment",
    "models_program.label.trainingsession": "TrainingSession",
    "models_program.label.program": "Program",
    "models_program.label.trainingsession_1": "TrainingSession",
    "models_program.label.program_1": "Program",
    "models_program.label.beneficiary": "Beneficiary",
    "models_program.label.program_2": "Program",
    "models_program.label.programmodule_1": "ProgramModule",
    "models_program.label.user_1": "User",
    "models_program.label.sessionattendance": "SessionAttendance",
    "models_program.label.trainingsession_2": "TrainingSession",
    "models_program.label.beneficiary_1": "Beneficiary",
    "models_adaptive_test.label.tenant": "Tenant",
    "models_adaptive_test.label.adaptivequestion": "AdaptiveQuestion",
    "models_adaptive_test.label.adaptivetestsession": "AdaptiveTestSession",
    "models_adaptive_test.label.convert_to_dictionary": "Convert to dictionary.",
    "models_adaptive_test.label.adaptivetestpool": "AdaptiveTestPool",
    "models_adaptive_test.label.adaptiveresponse": "AdaptiveResponse",
    "models_adaptive_test.label.convert_to_dictionary_1": "Convert to dictionary.",
    "models_adaptive_test.label.adaptivetestpool_1": "AdaptiveTestPool",
    "models_adaptive_test.label.beneficiary": "Beneficiary",
    "models_adaptive_test.label.adaptiveresponse_1": "AdaptiveResponse",
    "models_adaptive_test.label.convert_to_dictionary_2": "Convert to dictionary.",
    "models_adaptive_test.label.maximum_questions_reached": "Maximum questions reached",
    "models_adaptive_test.label.time_limit_reached": "Time limit reached",
    "models_adaptive_test.label.continue_testing": "Continue testing",
    "models_adaptive_test.label.adaptivetestsession_1": "AdaptiveTestSession",
    "models_adaptive_test.label.adaptivequestion_1": "AdaptiveQuestion",
    "models_adaptive_test.label.convert_to_dictionary_3": "Convert to dictionary.",
    "models_adaptive_test.label.adaptivetestsession_2": "AdaptiveTestSession",
    "models_adaptive_test.label.convert_to_dictionary_4": "Convert to dictionary.",
    "models_i18n.label.internationalization_models": "Internationalization models.",
    "models_i18n.label.language_configuration_model": "Language configuration model.",
    "models_i18n.label.convert_to_dictionary": "Convert to dictionary.",
    "models_i18n.label.language": "Language",
    "models_i18n.label.multilingualcontent_language_c": "MultilingualContent.language_code == Language.code",
    "models_i18n.label.user": "User",
    "models_i18n.label.user_1": "User",
    "models_i18n.label.user_2": "User",
    "models_i18n.label.user_3": "User",
    "models_i18n.label.multilingualcontent": "MultilingualContent",
    "models_i18n.label.convert_to_dictionary_1": "Convert to dictionary.",
    "models_i18n.label.user_4": "User",
    "models_i18n.label.convert_to_dictionary_2": "Convert to dictionary.",
    "models_i18n.label.multilingualcontent_1": "MultilingualContent",
    "models_i18n.label.translationproject": "TranslationProject",
    "models_i18n.label.user_5": "User",
    "models_i18n.label.user_6": "User",
    "models_i18n.label.convert_to_dictionary_3": "Convert to dictionary.",
    "models_i18n.label.user_7": "User",
    "models_i18n.label.convert_to_dictionary_4": "Convert to dictionary.",
    "models_i18n.label.translationworkflow": "TranslationWorkflow",
    "models_user_activity.label.user": "User",
    "models_user_activity.label.string_representation": "String representation.",
    "models_user_activity.label.convert_to_dictionary": "Convert to dictionary.",
    "models_appointment.label.appointment_model_module": "Appointment model module.",
    "models_appointment.label.appointment_model": "Appointment model.",
    "models_appointment.label.set_null": "SET NULL",
    "models_appointment.label.beneficiary": "Beneficiary",
    "models_appointment.label.user": "User",
    "models_appointment.label.appointmentseries": "AppointmentSeries",
    "models_availability.label.availability_model_module": "Availability model module.",
    "models_availability.label.default_schedule": "Default Schedule",
    "models_availability.label.user": "User",
    "models_availability.label.availabilityslot": "AvailabilitySlot",
    "models_availability.label.monday": "Monday",
    "models_availability.label.tuesday": "Tuesday",
    "models_availability.label.wednesday": "Wednesday",
    "models_availability.label.thursday": "Thursday",
    "models_availability.label.friday": "Friday",
    "models_availability.label.saturday": "Saturday",
    "models_availability.label.sunday": "Sunday",
    "models_availability.label.user_1": "User",
    "models_report.label.report_model": "Report model.",
    "models_report.label.user": "User",
    "models_report.label.tenant": "Tenant",
    "models_report.label.reportschedule": "ReportSchedule",
    "models_report.label.report": "Report",
    "models_document_permission.label.document": "Document",
    "models_document_permission.label.user": "User",
    "models_gamification.label.userbadge": "UserBadge",
    "models_gamification.label.user_s_earned_badges": "User's earned badges.",
    "models_gamification.label.user": "User",
    "models_gamification.label.badge": "Badge",
    "models_gamification.label.user_1": "User",
    "models_gamification.label.pointtransaction": "PointTransaction",
    "models_gamification.label.point_transaction_history": "Point transaction history.",
    "models_gamification.label.userxp": "UserXP",
    "models_gamification.label.leaderboard_configurations": "Leaderboard configurations.",
    "models_gamification.label.leaderboardentry": "LeaderboardEntry",
    "models_gamification.label.individual_leaderboard_entries": "Individual leaderboard entries.",
    "models_gamification.label.leaderboard": "Leaderboard",
    "models_gamification.label.user_2": "User",
    "models_gamification.label.challenges_and_quests": "Challenges and quests.",
    "models_gamification.label.challengeparticipant": "ChallengeParticipant",
    "models_gamification.label.challenge_participation_tracki": "Challenge participation tracking.",
    "models_gamification.label.challenge": "Challenge",
    "models_gamification.label.user_3": "User",
    "models_gamification.label.gamificationteam": "GamificationTeam",
    "models_gamification.label.user_4": "User",
    "models_gamification.label.user_5": "User",
    "models_gamification.label.rewards_and_incentives": "Rewards and incentives.",
    "models_gamification.label.rewardredemption": "RewardRedemption",
    "models_gamification.label.user_reward_redemptions": "User reward redemptions.",
    "models_gamification.label.user_6": "User",
    "models_gamification.label.reward": "Reward",
    "models_gamification.label.user_7": "User",
    "models_gamification.label.user_8": "User",
    "models_gamification.label.user_9": "User",
    "models_chat_conversation.label.conversation_status_enum": "Conversation status enum.",
    "models_chat_conversation.label.message_role_enum": "Message role enum.",
    "models_chat_conversation.label.user": "User",
    "models_chat_conversation.label.beneficiary": "Beneficiary",
    "models_chat_conversation.label.tenant": "Tenant",
    "models_chat_conversation.label.chatmessage": "ChatMessage",
    "models_chat_conversation.label.user_1": "User",
    "models_chat_conversation.label.untitled": "Untitled",
    "models_chat_conversation.label.unknown": "Unknown",
    "models_chat_conversation.label.user_2": "User",
    "models_chat_conversation.label.tenant_1": "Tenant",
    "cli_i18n_commands.label.internationalization_managemen": "Internationalization management commands.",
    "cli_i18n_commands.label.english": "English",
    "cli_i18n_commands.label.english_1": "English",
    "cli_i18n_commands.label.turkish": "Turkish",
    "cli_i18n_commands.label.t_rk_e": "Türkçe",
    "cli_i18n_commands.label.arabic": "Arabic",
    "cli_i18n_commands.label.spanish": "Spanish",
    "cli_i18n_commands.label.espa_ol": "Español",
    "cli_i18n_commands.label.french": "French",
    "cli_i18n_commands.label.fran_ais": "Français",
    "cli_i18n_commands.label.german": "German",
    "cli_i18n_commands.label.deutsch": "Deutsch",
    "cli_i18n_commands.label.russian": "Russian",
    "cli_i18n_commands.label.": "Русский",
    "cli_i18n_commands.label.source_language_code": "Source language code",
    "cli_i18n_commands.label.target_language_code": "Target language code",
    "cli_i18n_commands.label.translation_value": "Translation value",
    "cli_i18n_commands.label.output_file_path": "Output file path",
    "cli_i18n_commands.label.target_language_code_1": "Target language code",
    "cli_i18n_commands.label.unknown": "Unknown",
    "cli_i18n_commands.label.entity_id": "Entity ID",
    "cli_i18n_commands.label.source_language": "Source language",
    "cli_i18n_commands.label.target_languages_comma_separa": "Target languages (comma-separated)",
    "schemas_auth.label.authentication_schemas": "Authentication schemas.",
    "schemas_auth.label.email_already_registered": "Email already registered",
    "schemas_assessment.label.userschema": "UserSchema",
    "schemas_assessment.label.beneficiaryschema": "BeneficiarySchema",
    "schemas_assessment.label.userschema_1": "UserSchema",
    "schemas_assessment.label.userschema_2": "UserSchema",
    "schemas_user.label.user_schemas": "User schemas.",
    "schemas_user.label.tenantschema": "TenantSchema",
    "schemas_user.label.email_already_registered": "Email already registered",
    "schemas_user.label.email_already_registered_1": "Email already registered",
    "schemas_beneficiary.label.beneficiary_schemas": "Beneficiary schemas.",
    "schemas_beneficiary.label.userschema": "UserSchema",
    "schemas_beneficiary.label.userschema_1": "UserSchema",
    "schemas_beneficiary.label.tenantschema": "TenantSchema",
    "schemas_beneficiary.label.userschema_2": "UserSchema",
    "schemas_beneficiary.label.online": "Online",
    "schemas_beneficiary.label.beneficiaryschema": "BeneficiarySchema",
    "schemas_beneficiary.label.userschema_3": "UserSchema",
    "schemas_beneficiary.label.online_1": "Online",
    "schemas_beneficiary.label.beneficiaryschema_1": "BeneficiarySchema",
    "schemas_beneficiary.label.userschema_4": "UserSchema",
    "schemas_evaluation.label.userschema": "UserSchema",
    "schemas_evaluation.label.tenantschema": "TenantSchema",
    "schemas_evaluation.label.beneficiaryschema": "BeneficiarySchema",
    "schemas_evaluation.label.responseschema": "ResponseSchema",
    "schemas_evaluation.label.userschema_1": "UserSchema",
    "schemas_profile.label.user_profile_schemas": "User profile schemas.",
    "schemas___init__.label.schemas_package": "Schemas package.",
    "schemas___init__.label.loginschema": "LoginSchema",
    "schemas___init__.label.registerschema": "RegisterSchema",
    "schemas___init__.label.tokenschema": "TokenSchema",
    "schemas___init__.label.refreshtokenschema": "RefreshTokenSchema",
    "schemas___init__.label.resetpasswordrequestschema": "ResetPasswordRequestSchema",
    "schemas___init__.label.resetpasswordschema": "ResetPasswordSchema",
    "schemas___init__.label.changepasswordschema": "ChangePasswordSchema",
    "schemas___init__.label.userschema": "UserSchema",
    "schemas___init__.label.usercreateschema": "UserCreateSchema",
    "schemas___init__.label.userprofileschema": "UserProfileSchema",
    "schemas___init__.label.tenantschema": "TenantSchema",
    "schemas___init__.label.tenantcreateschema": "TenantCreateSchema",
    "schemas___init__.label.beneficiaryschema": "BeneficiarySchema",
    "schemas___init__.label.beneficiarycreateschema": "BeneficiaryCreateSchema",
    "schemas___init__.label.noteschema": "NoteSchema",
    "schemas___init__.label.notecreateschema": "NoteCreateSchema",
    "schemas___init__.label.appointmentschema": "AppointmentSchema",
    "schemas___init__.label.appointmentcreateschema": "AppointmentCreateSchema",
    "schemas___init__.label.documentschema": "DocumentSchema",
    "schemas___init__.label.documentcreateschema": "DocumentCreateSchema",
    "schemas___init__.label.evaluationschema": "EvaluationSchema",
    "schemas___init__.label.evaluationcreateschema": "EvaluationCreateSchema",
    "schemas___init__.label.questionschema": "QuestionSchema",
    "schemas___init__.label.questioncreateschema": "QuestionCreateSchema",
    "schemas___init__.label.testsessionschema": "TestSessionSchema",
    "schemas___init__.label.testsessioncreateschema": "TestSessionCreateSchema",
    "schemas___init__.label.responseschema": "ResponseSchema",
    "schemas___init__.label.responsecreateschema": "ResponseCreateSchema",
    "schemas___init__.label.aifeedbackschema": "AIFeedbackSchema",
    "schemas_document.label.document_schemas": "Document schemas.",
    "schemas_settings.label.mm_dd_yyyy": "MM/DD/YYYY",
    "schemas_settings.label.dd_mm_yyyy": "DD/MM/YYYY",
    "schemas_settings.label.yyyy_mm_dd": "YYYY-MM-DD",
    "schemas_settings.label.dd_mm_yyyy_1": "DD.MM.YYYY",
    "schemas_settings.label.mmm_dd_yyyy": "MMM DD, YYYY",
    "schemas_settings.label.dd_mmm_yyyy": "DD MMM YYYY",
    "schemas_settings.label.mm_dd_yyyy_1": "MM/DD/YYYY",
    "schemas_settings.label.dd_mm_yyyy_2": "DD/MM/YYYY",
    "schemas_settings.label.yyyy_mm_dd_1": "YYYY-MM-DD",
    "schemas_settings.label.dd_mm_yyyy_3": "DD.MM.YYYY",
    "schemas_settings.label.mmm_dd_yyyy_1": "MMM DD, YYYY",
    "schemas_settings.label.dd_mmm_yyyy_1": "DD MMM YYYY",
    "schemas_adaptive_test.label.adaptivequestionschema": "AdaptiveQuestionSchema",
    "schemas_adaptive_test.label.get_pool_statistics": "Get pool statistics.",
    "schemas_adaptive_test.label.starting_ability_estimate": "Starting ability estimate",
    "schemas_adaptive_test.label.get_confidence_interval": "Get confidence interval.",
    "schemas_adaptive_test.label.calculate_ability_change": "Calculate ability change.",
    "schemas_adaptive_test.label.excellent": "Excellent",
    "schemas_adaptive_test.label.good": "Good",
    "schemas_adaptive_test.label.satisfactory": "Satisfactory",
    "schemas_adaptive_test.label.needs_improvement": "Needs Improvement",
    "schemas_adaptive_test.label.requires_focus": "Requires Focus",
    "schemas_adaptive_test.label.calculate_accuracy_rate": "Calculate accuracy rate.",
    "schemas_adaptive_test.label.generate_summary_text": "Generate summary text.",
    "schemas_adaptive_test.label.achieved": "Achieved ",
    "schemas_adaptive_test.label.strong_in": "Strong in: ",
    "schemas_adaptive_test.label.building_foundational_skills": "Building foundational skills",
    "schemas_adaptive_test.label.focus_on": "Focus on: ",
    "schemas_adaptive_test.label.maintain_current_progress": "Maintain current progress",
    "schemas_appointment.label.appointment_schemas": "Appointment schemas.",
    "schemas_appointment.label.schema_for_appointment": "Schema for appointment.",
    "schemas_availability.label.schema_for_availability": "Schema for availability.",
    "schemas_availability.label.userschema": "UserSchema",
    "realtime___init__.label.handle_client_connection": "Handle client connection.",
    "realtime___init__.label.user": "User ",
    "realtime___init__.label.handle_client_disconnection": "Handle client disconnection.",
    "realtime___init__.label.user_1": "User ",
    "realtime___init__.label.user_2": "User ",
    "realtime___init__.label.user_3": "User ",
    "integrations_config.label.loaded": "Loaded ",
    "integrations_config.label.aws_s3_bucket": "AWS_S3_BUCKET",
    "integrations_config.label.enable_an_integration": "Enable an integration.",
    "integrations_config.label.disable_an_integration": "Disable an integration.",
    "integrations_config.label.registered_integration_instanc": "Registered integration instance: ",
    "integrations_registry.label.registered_integration_class": "Registered integration class: ",
    "integrations_registry.label.removed_integration_instance": "Removed integration instance: ",
    "integrations___init__.label.baseintegration": "BaseIntegration",
    "integrations___init__.label.integrationconfig": "IntegrationConfig",
    "integrations___init__.label.integrationmanager": "IntegrationManager",
    "integrations___init__.label.integrationregistry": "IntegrationRegistry",
    "integrations_examples.label.found": "Found ",
    "integrations_examples.label.primary_calendar": "Primary calendar: ",
    "integrations_examples.label.bdc_team_meeting": "BDC Team Meeting",
    "integrations_examples.label.found_1": "Found ",
    "integrations_examples.label.stripe_not_configured": "Stripe not configured",
    "integrations_examples.label.john_doe": "John Doe",
    "integrations_examples.label.bdc_customer": "BDC customer",
    "integrations_examples.label.bdc_service_payment": "BDC Service Payment",
    "integrations_examples.label.customer_has": "Customer has ",
    "integrations_examples.label.found_2": "Found ",
    "integrations_examples.label.zoom_not_configured": "Zoom not configured",
    "integrations_examples.label.bdc_client_consultation": "BDC Client Consultation",
    "integrations_examples.label.join_url": "Join URL: ",
    "integrations_examples.label.quick_team_sync": "Quick Team Sync",
    "integrations_examples.label.found_3": "Found ",
    "integrations_examples.label.weekly_team_meeting": "Weekly Team Meeting",
    "integrations_examples.label.sendgrid_not_configured": "SendGrid not configured",
    "integrations_examples.label.jane_smith": "Jane Smith",
    "integrations_examples.label.new_user_registration": "New User Registration",
    "integrations_examples.label.john_doe_1": "John Doe",
    "integrations_examples.label.consultation": "Consultation",
    "integrations_examples.label.registered_integration_classes": "Registered integration classes: ",
    "integrations_examples.label.registry_info": "Registry info: ",
    "integrations_examples.label.calendar_integrations": "Calendar integrations: ",
    "integrations_examples.label.payment_integrations": "Payment integrations: ",
    "integrations_examples.label.video_integrations": "Video integrations: ",
    "integrations_examples.label.email_integrations": "Email integrations: ",
    "integrations_examples.label.stripe_webhook_processed": "Stripe webhook processed: ",
    "integrations_examples.label.sendgrid_webhook_processed": "SendGrid webhook processed ",
    "integrations_testing.label.test_result_status": "Test result status.",
    "integrations_testing.label.individual_test_case": "Individual test case.",
    "integrations_testing.label.test_configuration_loading": "Test configuration loading",
    "integrations_testing.label.test_listing_calendars": "Test listing calendars",
    "integrations_testing.label.test_availability_checking": "Test availability checking",
    "integrations_testing.label.test_email_sending": "Test email sending",
    "integrations_testing.label.test_suite": "Test suite '",
    "integrations_testing.label.running_test_suite": "Running test suite: ",
    "integrations_testing.label.test_method": "Test method '",
    "integrations_testing.label.test_configuration_loading_1": "Test configuration loading.",
    "integrations_testing.label.no_configurations_loaded": "No configurations loaded",
    "integrations_testing.label.config": "Config ",
    "integrations_testing.label.config_name_mismatch": "Config name mismatch: ",
    "integrations_testing.label.test_listing_calendars_1": "Test listing calendars.",
    "integrations_testing.label.test_event": "Test Event",
    "integrations_testing.label.test_event_1": "Test Event",
    "integrations_testing.label.test_availability_checking_1": "Test availability checking.",
    "integrations_testing.label.overall_results": "Overall Results:",
    "integrations_testing.label.test_suite_1": "Test Suite: ",
    "integrations_base.label.integration_connection_status": "Integration connection status.",
    "integrations_base.label.implementation_specific_authen": "Implementation-specific authentication logic.",
    "integrations_base.label.received_webhook_for": "Received webhook for ",
    "integrations_base.label.implementation_specific_webhoo": "Implementation-specific webhook handling.",
    "integrations_base.label.oauth2_authentication_flow": "OAuth2 authentication flow.",
    "integrations_base.label.api_key_authentication": "API key authentication.",
    "video_base_video.label.video_meeting_types": "Video meeting types.",
    "video_base_video.label.video_meeting_status": "Video meeting status.",
    "video_base_video.label.participant_roles": "Participant roles.",
    "video_base_video.label.start_a_meeting": "Start a meeting.",
    "video_base_video.label.end_a_meeting": "End a meeting.",
    "video_base_video.label.mute_a_participant": "Mute a participant.",
    "video_base_video.label.unmute_a_participant": "Unmute a participant.",
    "video_base_video.label.meeting": "Meeting ",
    "video_teams_integration.label.authorization": "Authorization",
    "video_teams_integration.label.content_type": "Content-Type",
    "video_teams_integration.label.test_teams_connection": "Test Teams connection.",
    "video_teams_integration.label.list_teams_meetings": "List Teams meetings.",
    "video___init__.label.basevideointegration": "BaseVideoIntegration",
    "video___init__.label.videomeeting": "VideoMeeting",
    "video___init__.label.videomeetinginput": "VideoMeetingInput",
    "video___init__.label.participant": "Participant",
    "video___init__.label.recordinginfo": "RecordingInfo",
    "video___init__.label.zoomintegration": "ZoomIntegration",
    "video___init__.label.teamsintegration": "TeamsIntegration",
    "video___init__.label.meetintegration": "MeetIntegration",
    "video_zoom_integration.label.authorization": "Authorization",
    "video_zoom_integration.label.content_type": "Content-Type",
    "video_zoom_integration.label.test_zoom_connection": "Test Zoom connection.",
    "video_zoom_integration.label.list_zoom_meetings": "List Zoom meetings.",
    "video_zoom_integration.label.end_zoom_meeting": "End Zoom meeting.",
    "payments_stripe_integration.label.stripe_payment_integration": "Stripe payment integration.",
    "payments_stripe_integration.label.initialize_stripe_client": "Initialize Stripe client.",
    "payments_stripe_integration.label.test_stripe_connection": "Test Stripe connection.",
    "payments_stripe_integration.label.create_stripe_refund": "Create Stripe refund.",
    "payments_stripe_integration.label.list_stripe_refunds": "List Stripe refunds.",
    "payments_paypal_integration.label.paypal_payment_integration": "PayPal payment integration.",
    "payments_paypal_integration.label.authorization": "Authorization",
    "payments_paypal_integration.label.content_type": "Content-Type",
    "payments_paypal_integration.label.authorization_1": "Authorization",
    "payments_paypal_integration.label.test_paypal_connection": "Test PayPal connection.",
    "payments_paypal_integration.label.content_type_1": "Content-Type",
    "payments_paypal_integration.label.content_type_2": "Content-Type",
    "payments_paypal_integration.label.capture_paypal_order": "Capture PayPal order.",
    "payments_paypal_integration.label.content_type_3": "Content-Type",
    "payments_paypal_integration.label.list_paypal_transactions": "List PayPal transactions.",
    "payments_paypal_integration.label.create_paypal_refund": "Create PayPal refund.",
    "payments_paypal_integration.label.transaction_not_found": "Transaction not found",
    "payments_paypal_integration.label.content_type_4": "Content-Type",
    "payments_paypal_integration.label.list_paypal_refunds": "List PayPal refunds.",
    "payments___init__.label.basepaymentintegration": "BasePaymentIntegration",
    "payments___init__.label.paymentintent": "PaymentIntent",
    "payments___init__.label.paymentmethod": "PaymentMethod",
    "payments___init__.label.customer": "Customer",
    "payments___init__.label.transaction": "Transaction",
    "payments___init__.label.stripeintegration": "StripeIntegration",
    "payments___init__.label.paypalintegration": "PayPalIntegration",
    "payments_base_payment.label.payment_status": "Payment status.",
    "payments_base_payment.label.payment_method_types": "Payment method types.",
    "payments_base_payment.label.represents_a_customer": "Represents a customer.",
    "payments_base_payment.label.represents_a_refund": "Represents a refund.",
    "calendar_outlook_calendar.label.authorization": "Authorization",
    "calendar_ical_calendar.label.test_caldav_connection": "Test CalDAV connection.",
    "calendar_ical_calendar.label.calendar_not_found": "Calendar not found: ",
    "calendar_ical_calendar.label.calendar_not_found_1": "Calendar not found: ",
    "calendar_ical_calendar.label.event_not_found": "Event not found: ",
    "calendar_ical_calendar.label.calendar_not_found_2": "Calendar not found: ",
    "calendar___init__.label.basecalendarintegration": "BaseCalendarIntegration",
    "calendar___init__.label.calendarevent": "CalendarEvent",
    "calendar___init__.label.calendareventinput": "CalendarEventInput",
    "calendar___init__.label.googlecalendarintegration": "GoogleCalendarIntegration",
    "calendar___init__.label.outlookcalendarintegration": "OutlookCalendarIntegration",
    "calendar___init__.label.icalcalendarintegration": "ICalCalendarIntegration",
    "calendar_base_calendar.label.calendar_event_status": "Calendar event status.",
    "calendar_base_calendar.label.calendar_event_visibility": "Calendar event visibility.",
    "calendar_base_calendar.label.represents_a_calendar": "Represents a calendar.",
    "email_base_email.label.email_status": "Email status.",
    "email_base_email.label.email_priority_levels": "Email priority levels.",
    "email_base_email.label.email_attachment": "Email attachment.",
    "email_base_email.label.email_message": "Email message.",
    "email_base_email.label.email_template": "Email template.",
    "email_base_email.label.email_statistics": "Email statistics.",
    "email_base_email.label.get_email_statistics": "Get email statistics.",
    "email_base_email.label.password_reset_request": "Password Reset Request",
    "email_base_email.label.welcome_to_bdc": "Welcome to BDC, ",
    "email___init__.label.baseemailintegration": "BaseEmailIntegration",
    "email___init__.label.emailmessage": "EmailMessage",
    "email___init__.label.emailattachment": "EmailAttachment",
    "email___init__.label.emailtemplate": "EmailTemplate",
    "email___init__.label.emailstats": "EmailStats",
    "email___init__.label.sendgridintegration": "SendGridIntegration",
    "email___init__.label.mailgunintegration": "MailgunIntegration",
    "email_sendgrid_integration.label.initialize_sendgrid_client": "Initialize SendGrid client.",
    "email_sendgrid_integration.label.clear_sendgrid_client": "Clear SendGrid client.",
    "email_sendgrid_integration.label.test_sendgrid_connection": "Test SendGrid connection.",
    "email_sendgrid_integration.label.x_message_id": "X-Message-Id",
    "email_sendgrid_integration.label.x_message_id_1": "X-Message-Id",
    "api_user_settings.label.user_settings_api": "User settings API.",
    "api_user_settings.label.get_user_preferences": "Get user preferences.",
    "api_assessment.label.assessment_api_endpoints": "Assessment API endpoints.",
    "api_assessment.label.communication": "Communication",
    "api_assessment.label.technical_skills_assessment": "Technical Skills Assessment",
    "api_assessment.label.computer_skills": "Computer Skills",
    "api_assessment.label.communication_1": "Communication",
    "api_assessment.label.template_not_found": "Template not found",
    "api_assessment.label.template_not_found_1": "Template not found",
    "api_assessment.label.template_not_found_2": "Template not found",
    "api_gamification_v2.label.no_data_provided": "No data provided",
    "api_gamification_v2.label.no_data_provided_1": "No data provided",
    "api_gamification_v2.label.no_data_provided_2": "No data provided",
    "api_gamification_v2.label.no_data_provided_3": "No data provided",
    "api_gamification_v2.label.get_leaderboard_data": "Get leaderboard data",
    "api_gamification_v2.label.get_global_leaderboards": "Get global leaderboards",
    "api_gamification_v2.label.no_data_provided_4": "No data provided",
    "api_gamification_v2.label.join_a_team": "Join a team",
    "api_gamification_v2.label.no_data_provided_5": "No data provided",
    "api_gamification_v2.label.health_check_endpoint": "Health check endpoint",
    "api_gamification_v2.label.bad_request": "Bad request",
    "api_gamification_v2.label.unauthorized": "Unauthorized",
    "api_gamification_v2.label.forbidden": "Forbidden",
    "api_gamification_v2.label.not_found": "Not found",
    "api_settings_routes.label.settings_api_routes": "Settings API routes.",
    "api_settings_routes.label.user_not_found": "User not found",
    "api_settings_routes.label.openai_gpt": "OpenAI GPT",
    "api_settings_routes.label.anthropic_claude": "Anthropic Claude",
    "api_settings_routes.label.local_llm": "Local LLM",
    "api_settings_routes.label.personalized_learning_recommen": "Personalized learning recommendations",
    "api_settings_routes.label.custom_translation_service": "Custom Translation Service",
    "api_settings_routes.label.user_not_found_1": "User not found",
    "api_settings_routes.label.no_data_provided": "No data provided",
    "api_settings_routes.label.user_not_found_2": "User not found",
    "api_settings_routes.label.user_not_found_3": "User not found",
    "api_portal.label.excellence_in": "Excellence in ",
    "api_portal.label.scored": "Scored ",
    "api_portal.label.perfect_attendance": "Perfect Attendance - ",
    "api_portal.label.unknown": "Unknown",
    "api_settings_appearance.label.user_not_found": "User not found",
    "api_settings_appearance.label.inter": "Inter",
    "api_settings_appearance.label.user_not_found_1": "User not found",
    "api_settings_appearance.label.light": "Light",
    "api_settings_appearance.label.default_light_theme": "Default light theme",
    "api_settings_appearance.label.dark": "Dark",
    "api_settings_appearance.label.auto": "Auto",
    "api_settings_appearance.label.inter_1": "Inter",
    "api_settings_appearance.label.inter_2": "Inter",
    "api_settings_appearance.label.sans_serif": "Sans-serif",
    "api_settings_appearance.label.roboto": "Roboto",
    "api_settings_appearance.label.roboto_1": "Roboto",
    "api_settings_appearance.label.sans_serif_1": "Sans-serif",
    "api_settings_appearance.label.open_sans": "Open Sans",
    "api_settings_appearance.label.open_sans_1": "Open Sans",
    "api_settings_appearance.label.sans_serif_2": "Sans-serif",
    "api_settings_appearance.label.lato": "Lato",
    "api_settings_appearance.label.lato_1": "Lato",
    "api_settings_appearance.label.sans_serif_3": "Sans-serif",
    "api_settings_appearance.label.montserrat": "Montserrat",
    "api_settings_appearance.label.montserrat_1": "Montserrat",
    "api_settings_appearance.label.sans_serif_4": "Sans-serif",
    "api_settings_appearance.label.poppins": "Poppins",
    "api_settings_appearance.label.poppins_1": "Poppins",
    "api_settings_appearance.label.sans_serif_5": "Sans-serif",
    "api_settings_appearance.label.source_sans_pro": "Source Sans Pro",
    "api_settings_appearance.label.source_sans_pro_1": "Source Sans Pro",
    "api_settings_appearance.label.sans_serif_6": "Sans-serif",
    "api_settings_appearance.label.playfair_display": "Playfair Display",
    "api_settings_appearance.label.playfair_display_1": "Playfair Display",
    "api_settings_appearance.label.serif": "Serif",
    "api_settings_appearance.label.merriweather": "Merriweather",
    "api_settings_appearance.label.merriweather_1": "Merriweather",
    "api_settings_appearance.label.serif_1": "Serif",
    "api_settings_appearance.label.georgia": "Georgia",
    "api_settings_appearance.label.georgia_1": "Georgia",
    "api_settings_appearance.label.serif_2": "Serif",
    "api_settings_appearance.label.user_not_found_2": "User not found",
    "api_settings_appearance.label.inter_3": "Inter",
    "api_question_randomization.label.simple_random": "Simple Random",
    "api_question_randomization.label.stratified_random": "Stratified Random",
    "api_question_randomization.label.deterministic_pseudo_random": "Deterministic Pseudo-Random",
    "api_question_randomization.label.adaptive_randomization": "Adaptive Randomization",
    "api_question_randomization.label.template_based": "Template-Based",
    "api_question_randomization.label.predefined_ordering_patterns": "Predefined ordering patterns",
    "api_question_randomization.label.balanced_distribution": "Balanced Distribution",
    "api_question_randomization.label.easy_to_hard": "Easy to Hard",
    "api_question_randomization.label.hard_to_easy": "Hard to Easy",
    "api_question_randomization.label.mixed_difficulty": "Mixed Difficulty",
    "api_question_randomization.label.topic_grouped": "Topic Grouped",
    "api_question_randomization.label.alternating_difficulty": "Alternating Difficulty",
    "api_question_randomization.label.cognitive_progression": "Cognitive Progression",
    "api_question_randomization.label.categorize_exposure_rate": "Categorize exposure rate.",
    "api_users.label.users_api": "Users API.",
    "api_users.label.user_not_found": "User not found",
    "api_users.label.get_all_users": "Get all users.",
    "api_users.label.upload_profile_picture": "Upload profile picture.",
    "api_users.label.user_not_found_1": "User not found",
    "api_users.label.no_file_part": "No file part",
    "api_users.label.user_not_found_2": "User not found",
    "api_users.label.user_not_found_3": "User not found",
    "api_users.label.user_not_found_4": "User not found",
    "api_users.label.user_not_found_5": "User not found",
    "api_users.label.user_not_found_6": "User not found",
    "api_users.label.get_user_profile": "Get user profile.",
    "api_users.label.user_not_found_7": "User not found",
    "api_health.label.database_specific_health_check": "Database-specific health check.",
    "api_health.label.unknown": "Unknown",
    "api_health.label.redis_specific_health_check": "Redis-specific health check.",
    "api_health.label.prometheus_style_metrics_endpo": "Prometheus-style metrics endpoint.",
    "api_health.label.content_type": "Content-Type",
    "api_health.label.content_type_1": "Content-Type",
    "api_beneficiaries_dashboard.label.unauthorized": "Unauthorized",
    "api_beneficiaries_dashboard.label.beneficiary_not_found": "Beneficiary not found",
    "api_beneficiaries_dashboard.label.unauthorized_1": "Unauthorized",
    "api_beneficiaries_dashboard.label.unknown_test": "Unknown Test",
    "api_beneficiaries_dashboard.label.build_portfolio_website": "Build Portfolio Website",
    "api_beneficiaries_dashboard.label.first_project_submitted": "First Project Submitted",
    "api_beneficiaries_dashboard.label.unauthorized_2": "Unauthorized",
    "api_beneficiaries_dashboard.label.beneficiary_not_found_1": "Beneficiary not found",
    "api_webrtc.label.conference_not_found": "Conference not found",
    "api_webrtc.label.access_denied": "Access denied",
    "api_webrtc.label.access_denied_1": "Access denied",
    "api_webrtc.label.access_denied_2": "Access denied",
    "api_webrtc.label.room_access_granted": "Room access granted",
    "api_webrtc.label.access_denied_3": "Access denied",
    "api_webrtc.label.get_webrtc_configuration": "Get WebRTC configuration.",
    "api_webrtc.label.access_denied_4": "Access denied",
    "api_webrtc.label.resource_not_found": "Resource not found",
    "api_webrtc.label.bad_request": "Bad request",
    "api_webrtc.label.access_forbidden": "Access forbidden",
    "api_documents.label.document_api_endpoints": "Document API endpoints.",
    "api_documents.label.download_a_document": "Download a document.",
    "api_documents.label.document_shared": "Document Shared",
    "api_documents.label.upload_a_document": "Upload a document.",
    "api_documents.label.no_file_provided": "No file provided",
    "api_documents.label.untitled_document": "Untitled Document",
    "api_documents.label.only": "Only ",
    "api_documents.label.no_file_provided_1": "No file provided",
    "api_documents.label.version_not_found": "Version not found",
    "api_documents.label.version_not_found_1": "Version not found",
    "api_profile.label.profile_not_found": "Profile not found",
    "api_appointments.label.appointment_api_endpoints": "Appointment API endpoints.",
    "api_user_activities.label.user_activities_api": "User activities API.",
    "api_user_activities.label.get_user_activities": "Get user activities.",
    "api_user_activities.label.get_user_documents": "Get user documents.",
    "api_video_conferences.label.conference_not_found": "Conference not found",
    "api_video_conferences.label.access_denied": "Access denied",
    "api_video_conferences.label.cancel_video_conference": "Cancel video conference.",
    "api_video_conferences.label.start_join_video_conference": "Start/join video conference.",
    "api_video_conferences.label.joining_conference": "Joining conference",
    "api_video_conferences.label.end_video_conference": "End video conference.",
    "api_video_conferences.label.conference_not_found_1": "Conference not found",
    "api_video_conferences.label.permission_denied": "Permission denied",
    "api_video_conferences.label.get_conference_participants": "Get conference participants.",
    "api_video_conferences.label.conference_not_found_2": "Conference not found",
    "api_video_conferences.label.access_denied_1": "Access denied",
    "api_video_conferences.label.conference_not_found_3": "Conference not found",
    "api_video_conferences.label.permission_denied_1": "Permission denied",
    "api_video_conferences.label.conference_not_found_4": "Conference not found",
    "api_video_conferences.label.access_denied_2": "Access denied",
    "api_video_conferences.label.conference_not_found_5": "Conference not found",
    "api_video_conferences.label.access_denied_3": "Access denied",
    "api_video_conferences.label.access_denied_4": "Access denied",
    "api_video_conferences.label.resource_not_found": "Resource not found",
    "api_video_conferences.label.bad_request": "Bad request",
    "api_video_conferences.label.access_forbidden": "Access forbidden",
    "api___init__.label.api_package": "API package.",
    "api_performance_predictions.label.user_not_found": "User not found",
    "api_performance_predictions.label.user_not_found_1": "User not found",
    "api_performance_predictions.label.user_not_found_2": "User not found",
    "api_evaluations.label.evaluations_api": "Evaluations API.",
    "api_evaluations.label.student_user_id": "Student user ID: ",
    "api_evaluations.label.beneficiary_found": "Beneficiary found: ",
    "api_evaluations.label.beneficiary_id": "Beneficiary ID: ",
    "api_evaluations.label.evaluation_not_found": "Evaluation not found",
    "api_evaluations.label.evaluation_not_found_1": "Evaluation not found",
    "api_evaluations.label.evaluation_not_found_2": "Evaluation not found",
    "api_evaluations.label.evaluation_not_found_3": "Evaluation not found",
    "api_evaluations.label.evaluation_not_found_4": "Evaluation not found",
    "api_evaluations.label.question_not_found": "Question not found",
    "api_evaluations.label.question_not_found_1": "Question not found",
    "api_evaluations.label.evaluation_not_found_5": "Evaluation not found",
    "api_evaluations.label.evaluation_not_found_6": "Evaluation not found",
    "api_evaluations.label.evaluation_not_found_7": "Evaluation not found",
    "api_performance_monitoring.label.clear_application_cache": "Clear application cache",
    "api_performance_monitoring.label.trigger_memory_optimization": "Trigger memory optimization",
    "api_performance_monitoring.label.optimize_database_indexes": "Optimize database indexes",
    "api_performance_monitoring.label.get_performance_alerts": "Get performance alerts",
    "api_performance_monitoring.label.cache_not_configured": "Cache not configured",
    "api_performance_monitoring.label.memory_usage_critical": "Memory usage critical: ",
    "api_performance_monitoring.label.memory_usage_high": "Memory usage high: ",
    "api_performance_monitoring.label.memory_usage_normal": "Memory usage normal: ",
    "api_performance_monitoring.label.get_system_level_metrics": "Get system-level metrics",
    "api_performance_monitoring.label.memory_usage_critical_1": "Memory usage critical: ",
    "api_performance_monitoring.label.memory_usage_high_1": "Memory usage high: ",
    "api_performance_monitoring.label.cpu_usage_critical": "CPU usage critical: ",
    "api_performance_monitoring.label.cpu_usage_high": "CPU usage high: ",
    "api_tests_simple.label.no_description_available": "No description available",
    "api_tests_simple.label.no_description_available_1": "No description available",
    "api_calendar.label.calendar_api_endpoints": "Calendar API endpoints.",
    "api_calendar.label.user_not_found": "User not found",
    "api_calendar.label.available": "Available",
    "api_calendar.label.appointment_not_found": "Appointment not found",
    "api_calendar.label.permission_denied": "Permission denied",
    "api_calendar.label.appointment_not_found_1": "Appointment not found",
    "api_calendar.label.permission_denied_1": "Permission denied",
    "api_calendar.label.get_availability_schedule": "Get availability schedule.",
    "api_programs.label.programs_api_endpoints": "Programs API endpoints.",
    "api_programs.label.get_all_programs": "Get all programs.",
    "api_programs.label.unauthorized": "Unauthorized",
    "api_programs.label.new_program": "New program \"",
    "api_programs.label.unauthorized_1": "Unauthorized",
    "api_programs.label.program": "Program \"",
    "api_programs.label.unauthorized_2": "Unauthorized",
    "api_programs.label.unauthorized_3": "Unauthorized",
    "api_programs.label.program_1": "Program \"",
    "api_programs.label.unauthorized_4": "Unauthorized",
    "api_programs.label.beneficiary_not_found": "Beneficiary not found",
    "api_programs.label.already_enrolled": "Already enrolled",
    "api_programs.label.get_program_enrollments": "Get program enrollments.",
    "api_programs.label.get_program_sessions": "Get program sessions.",
    "api_programs.label.unauthorized_5": "Unauthorized",
    "api_programs.label.record_session_attendance": "Record session attendance.",
    "api_programs.label.beneficiary_not_found_1": "Beneficiary not found",
    "api_programs.label.technical_skills": "Technical Skills",
    "api_programs.label.soft_skills": "Soft Skills",
    "api_programs.label.leadership_development": "Leadership Development",
    "api_programs.label.communication": "Communication",
    "api_programs.label.management": "Management",
    "api_programs.label.sales_marketing": "Sales & Marketing",
    "api_programs.label.finance_accounting": "Finance & Accounting",
    "api_programs.label.beginner": "Beginner",
    "api_programs.label.intermediate": "Intermediate",
    "api_programs.label.advanced": "Advanced",
    "api_programs.label.expert": "Expert",
    "api_chat.label.chat_api_endpoints": "Chat API endpoints.",
    "api_chat.label.conversation_not_found": "Conversation not found",
    "api_chat.label.close_a_conversation": "Close a conversation.",
    "api_chat.label.conversation_not_found_1": "Conversation not found",
    "api_chat.label.export_a_conversation": "Export a conversation.",
    "api_chat.label.content_type": "Content-Type",
    "api_chat.label.content_disposition": "Content-Disposition",
    "api_chat.label.get_chat_analytics": "Get chat analytics.",
    "api_chat.label.template_not_found": "Template not found",
    "api_chat.label.template_not_found_1": "Template not found",
    "api_chat.label.resource_not_found": "Resource not found",
    "api_two_factor_auth.label.disable_two_factor_authenticat": "Disable two-factor authentication.",
    "api_two_factor_auth.label.regenerate_backup_codes": "Regenerate backup codes.",
    "api_two_factor_auth.label.qr_code_generated": "QR code generated",
    "api_settings_general.label.user_not_found": "User not found",
    "api_settings_general.label.beneficiary_development_center": "Beneficiary Development Center",
    "api_settings_general.label.mm_dd_yyyy": "MM/DD/YYYY",
    "api_settings_general.label.user_not_found_1": "User not found",
    "api_settings_general.label.settings_not_found": "Settings not found",
    "api_settings_general.label.english": "English",
    "api_settings_general.label.english_1": "English",
    "api_settings_general.label.french": "French",
    "api_settings_general.label.fran_ais": "Français",
    "api_settings_general.label.spanish": "Spanish",
    "api_settings_general.label.espa_ol": "Español",
    "api_settings_general.label.german": "German",
    "api_settings_general.label.deutsch": "Deutsch",
    "api_settings_general.label.italian": "Italian",
    "api_settings_general.label.italiano": "Italiano",
    "api_settings_general.label.portuguese": "Portuguese",
    "api_settings_general.label.portugu_s": "Português",
    "api_settings_general.label.turkish": "Turkish",
    "api_settings_general.label.t_rk_e": "Türkçe",
    "api_settings_general.label.arabic": "Arabic",
    "api_settings_general.label.chinese": "Chinese",
    "api_settings_general.label.japanese": "Japanese",
    "api_settings_general.label.america_new_york": "America/New_York",
    "api_settings_general.label.america_chicago": "America/Chicago",
    "api_settings_general.label.america_denver": "America/Denver",
    "api_settings_general.label.america_los_angeles": "America/Los_Angeles",
    "api_settings_general.label.europe_london": "Europe/London",
    "api_settings_general.label.london": "London",
    "api_settings_general.label.europe_paris": "Europe/Paris",
    "api_settings_general.label.paris": "Paris",
    "api_settings_general.label.europe_berlin": "Europe/Berlin",
    "api_settings_general.label.berlin": "Berlin",
    "api_settings_general.label.europe_istanbul": "Europe/Istanbul",
    "api_settings_general.label.istanbul": "Istanbul",
    "api_settings_general.label.asia_dubai": "Asia/Dubai",
    "api_settings_general.label.dubai": "Dubai",
    "api_settings_general.label.asia_shanghai": "Asia/Shanghai",
    "api_settings_general.label.shanghai": "Shanghai",
    "api_settings_general.label.asia_tokyo": "Asia/Tokyo",
    "api_settings_general.label.tokyo": "Tokyo",
    "api_settings_general.label.australia_sydney": "Australia/Sydney",
    "api_settings_general.label.sydney": "Sydney",
    "api_settings_general.label.mm_dd_yyyy_1": "MM/DD/YYYY",
    "api_settings_general.label.dd_mm_yyyy": "DD/MM/YYYY",
    "api_settings_general.label.yyyy_mm_dd": "YYYY-MM-DD",
    "api_settings_general.label.dd_mm_yyyy_1": "DD.MM.YYYY",
    "api_settings_general.label.mmm_dd_yyyy": "MMM DD, YYYY",
    "api_settings_general.label.mar_14_2024": "Mar 14, 2024",
    "api_settings_general.label.dd_mmm_yyyy": "DD MMM YYYY",
    "api_settings_general.label.upload_site_logo": "Upload site logo.",
    "api_settings_general.label.user_not_found_2": "User not found",
    "api_settings_general.label.user_not_found_3": "User not found",
    "api_settings_general.label.settings_not_found_1": "Settings not found",
    "api_settings_general.label.beneficiary_development_center_1": "Beneficiary Development Center",
    "api_settings_general.label.mm_dd_yyyy_2": "MM/DD/YYYY",
    "api_ai_question_generation.label.health_check_endpoint": "Health check endpoint.",
    "api_ai_question_generation.label.ai_question_generation": "AI Question Generation",
    "api_ai_question_generation.label.no_data_provided": "No data provided",
    "api_ai_question_generation.label.content_not_found": "Content not found",
    "api_ai_question_generation.label.reprocess_source_content": "Reprocess source content.",
    "api_ai_question_generation.label.content_not_found_1": "Content not found",
    "api_ai_question_generation.label.get_learning_objectives": "Get learning objectives.",
    "api_ai_question_generation.label.no_data_provided_1": "No data provided",
    "api_ai_question_generation.label.no_data_provided_2": "No data provided",
    "api_ai_question_generation.label.get_generated_questions": "Get generated questions.",
    "api_ai_question_generation.label.get_question_details": "Get question details.",
    "api_ai_question_generation.label.question_not_found": "Question not found",
    "api_ai_question_generation.label.approve_a_question": "Approve a question.",
    "api_ai_question_generation.label.reject_a_question": "Reject a question.",
    "api_ai_question_generation.label.get_question_banks": "Get question banks.",
    "api_ai_question_generation.label.no_data_provided_3": "No data provided",
    "api_ai_question_generation.label.get_analytics_summary": "Get analytics summary.",
    "api_ai_question_generation.label.duplicate_not_found": "Duplicate not found",
    "api_ai_question_generation.label.no_questions_found": "No questions found",
    "api_ai_reports.label.comprehensive_report": "Comprehensive Report",
    "api_ai_reports.label.progress_report": "Progress Report",
    "api_ai_reports.label.assessment_report": "Assessment Report",
    "api_ai_reports.label.last_week": "Last Week",
    "api_ai_reports.label.last_month": "Last Month",
    "api_ai_reports.label.last_quarter": "Last Quarter",
    "api_ai_reports.label.last_year": "Last Year",
    "api_ai_reports.label.all_time": "All Time",
    "api_ai_reports.label.beneficiary_profile": "Beneficiary Profile",
    "api_ai_reports.label.assessment_results": "Assessment Results",
    "api_ai_reports.label.attendance_appointments": "Attendance & Appointments",
    "api_ai_reports.label.progress_tracking": "Progress Tracking",
    "api_ai_reports.label.document_activity": "Document Activity",
    "api_ai_reports.label.notes_observations": "Notes & Observations",
    "api_ai_reports.label.assessment_scores": "Assessment Scores",
    "api_ai_reports.label.attendance_rate": "Attendance Rate",
    "api_ai_reports.label.progress_rate": "Progress Rate",
    "api_ai_reports.label.engagement_level": "Engagement Level",
    "api_ai_reports.label.completion_rate": "Completion Rate",
    "api_ai_reports.label.assessments_tests": "Assessments & Tests",
    "api_ai_reports.label.appointments_attendance": "Appointments & Attendance",
    "api_ai_reports.label.documents_files": "Documents & Files",
    "api_ai_reports.label.notes_comments": "Notes & Comments",
    "api_ai_reports.label.program_enrollment": "Program Enrollment",
    "api_messages.label.messages_api_endpoints": "Messages API endpoints.",
    "api_messages.label.new_conversation": "New Conversation",
    "api_messages.label.unauthorized": "Unauthorized",
    "api_messages.label.unauthorized_1": "Unauthorized",
    "api_messages.label.edit_a_message": "Edit a message.",
    "api_messages.label.unauthorized_2": "Unauthorized",
    "api_messages.label.unauthorized_3": "Unauthorized",
    "api_messages.label.untitled_thread": "Untitled Thread",
    "api_reports.label.reports_api_endpoints": "Reports API endpoints.",
    "api_reports.label.beneficiary_progress_report": "Beneficiary Progress Report",
    "api_reports.label.monthly_beneficiary_summary": "Monthly Beneficiary Summary",
    "api_reports.label.beneficiary_test_results": "Beneficiary Test Results",
    "api_reports.label.program_performance_report": "Program Performance Report",
    "api_reports.label.program_enrollment_summary": "Program Enrollment Summary",
    "api_reports.label.program_completion_analysis": "Program Completion Analysis",
    "api_reports.label.trainer_activity_report": "Trainer Activity Report",
    "api_reports.label.trainer_performance_summary": "Trainer Performance Summary",
    "api_reports.label.trainer_load_analysis": "Trainer Load Analysis",
    "api_reports.label.overall_analytics_report": "Overall Analytics Report",
    "api_reports.label.kpi_dashboard_summary": "KPI Dashboard Summary",
    "api_reports.label.trend_analysis_report": "Trend Analysis Report",
    "api_reports.label.performance_metrics_report": "Performance Metrics Report",
    "api_reports.label.test_score_analysis": "Test Score Analysis",
    "api_reports.label.learning_outcomes_report": "Learning Outcomes Report",
    "api_reports.label.unauthorized": "Unauthorized",
    "api_reports.label.unauthorized_1": "Unauthorized",
    "api_reports.label.unauthorized_2": "Unauthorized",
    "api_reports.label.unauthorized_3": "Unauthorized",
    "api_reports.label.unauthorized_4": "Unauthorized",
    "api_reports.label.name": "Name",
    "api_reports.label.email": "Email",
    "api_reports.label.status": "Status",
    "api_reports.label.average_score": "Average Score",
    "api_reports.label.name_1": "Name",
    "api_reports.label.email_1": "Email",
    "api_reports.label.beneficiaries": "Beneficiaries",
    "api_reports.label.active": "Active",
    "api_reports.label.last_login": "Last Login",
    "api_reports.label.yes": "Yes",
    "api_reports.label.program_name": "Program Name",
    "api_reports.label.code": "Code",
    "api_reports.label.status_1": "Status",
    "api_reports.label.total_enrollments": "Total Enrollments",
    "api_reports.label.active_1": "Active",
    "api_reports.label.completion_rate": "Completion Rate",
    "api_reports.label.attendance_rate": "Attendance Rate",
    "api_reports.label.start_date": "Start Date",
    "api_reports.label.end_date": "End Date",
    "api_reports.label.date": "Date",
    "api_reports.label.beneficiary": "Beneficiary",
    "api_reports.label.test": "Test",
    "api_reports.label.score": "Score",
    "api_reports.label.duration": "Duration",
    "api_reports.label.status_2": "Status",
    "api_reports.label.unknown": "Unknown",
    "api_reports.label.unauthorized_5": "Unauthorized",
    "api_reports.label.full_name": "Full Name",
    "api_reports.label.beneficiary_full_name": "Beneficiary full name",
    "api_reports.label.email_2": "Email",
    "api_reports.label.beneficiary_email_address": "Beneficiary email address",
    "api_reports.label.status_3": "Status",
    "api_reports.label.current_beneficiary_status": "Current beneficiary status",
    "api_reports.label.assigned_trainer": "Assigned Trainer",
    "api_reports.label.average_test_score": "Average Test Score",
    "api_reports.label.progress": "Progress",
    "api_reports.label.overall_progress_percentage": "Overall progress percentage",
    "api_reports.label.department": "Department",
    "api_reports.label.department_classification": "Department classification",
    "api_reports.label.notes": "Notes",
    "api_reports.label.program_name_1": "Program Name",
    "api_reports.label.program_code": "Program Code",
    "api_reports.label.unique_program_identifier": "Unique program identifier",
    "api_reports.label.status_4": "Status",
    "api_reports.label.current_program_status": "Current program status",
    "api_reports.label.start_date_1": "Start Date",
    "api_reports.label.program_start_date": "Program start date",
    "api_reports.label.end_date_1": "End Date",
    "api_reports.label.program_end_date": "Program end date",
    "api_reports.label.enrollment_count": "Enrollment Count",
    "api_reports.label.completion_rate_1": "Completion Rate",
    "api_reports.label.program_completion_percentage": "Program completion percentage",
    "api_reports.label.attendance_rate_1": "Attendance Rate",
    "api_reports.label.average_attendance_rate": "Average attendance rate",
    "api_reports.label.description": "Description",
    "api_reports.label.program_description": "Program description",
    "api_reports.label.trainer_name": "Trainer Name",
    "api_reports.label.email_3": "Email",
    "api_reports.label.trainer_email_address": "Trainer email address",
    "api_reports.label.beneficiary_count": "Beneficiary Count",
    "api_reports.label.active_status": "Active Status",
    "api_reports.label.last_login_1": "Last Login",
    "api_reports.label.last_login_timestamp": "Last login timestamp",
    "api_reports.label.specialization": "Specialization",
    "api_reports.label.areas_of_expertise": "Areas of expertise",
    "api_reports.label.assigned_programs": "Assigned Programs",
    "api_reports.label.performance_rating": "Performance Rating",
    "api_reports.label.average_performance_rating": "Average performance rating",
    "api_reports.label.metric_name": "Metric Name",
    "api_reports.label.value": "Value",
    "api_reports.label.metric_value": "Metric value",
    "api_reports.label.change": "Change",
    "api_reports.label.trend": "Trend",
    "api_reports.label.trend_direction": "Trend direction",
    "api_reports.label.date_1": "Date",
    "api_reports.label.category": "Category",
    "api_reports.label.metric_category": "Metric category",
    "api_reports.label.beneficiary_name": "Beneficiary Name",
    "api_reports.label.test_name": "Test Name",
    "api_reports.label.score_1": "Score",
    "api_reports.label.test_score": "Test score",
    "api_reports.label.date_2": "Date",
    "api_reports.label.test_completion_date": "Test completion date",
    "api_reports.label.duration_1": "Duration",
    "api_reports.label.status_5": "Status",
    "api_reports.label.test_completion_status": "Test completion status",
    "api_reports.label.feedback": "Feedback",
    "api_reports.label.improvement": "Improvement",
    "api_reports.label.status_6": "Status",
    "api_reports.label.active_2": "Active",
    "api_reports.label.inactive": "Inactive",
    "api_reports.label.pending": "Pending",
    "api_reports.label.trainer": "Trainer",
    "api_reports.label.test_score_range": "Test Score Range",
    "api_reports.label.status_7": "Status",
    "api_reports.label.active_3": "Active",
    "api_reports.label.upcoming": "Upcoming",
    "api_reports.label.cancelled": "Cancelled",
    "api_reports.label.enrollment_count_1": "Enrollment Count",
    "api_reports.label.date_range": "Date Range",
    "api_reports.label.active_status_1": "Active Status",
    "api_reports.label.active_4": "Active",
    "api_reports.label.inactive_1": "Inactive",
    "api_reports.label.beneficiary_count_1": "Beneficiary Count",
    "api_reports.label.programs": "Programs",
    "api_reports.label.metric_category_1": "Metric Category",
    "api_reports.label.engagement": "Engagement",
    "api_reports.label.performance": "Performance",
    "api_reports.label.completion": "Completion",
    "api_reports.label.satisfaction": "Satisfaction",
    "api_reports.label.date_range_1": "Date Range",
    "api_reports.label.test_name_1": "Test Name",
    "api_reports.label.score_range": "Score Range",
    "api_reports.label.status_8": "Status",
    "api_reports.label.in_progress": "In Progress",
    "api_reports.label.abandoned": "Abandoned",
    "api_reports.label.date_range_2": "Date Range",
    "api_reports.label.summary": "Summary",
    "api_reports.label.total_beneficiaries": "Total Beneficiaries",
    "api_reports.label.active_5": "Active",
    "api_reports.label.average_score_1": "Average Score",
    "api_reports.label.beneficiary_details": "Beneficiary Details",
    "api_reports.label.name_2": "Name",
    "api_reports.label.email_4": "Email",
    "api_reports.label.status_9": "Status",
    "api_reports.label.avg_score": "Avg Score",
    "api_reports.label.trainer_1": "Trainer",
    "api_reports.label.john_doe": "John Doe",
    "api_reports.label.active_6": "Active",
    "api_reports.label.sarah_johnson": "Sarah Johnson",
    "api_reports.label.jane_smith": "Jane Smith",
    "api_reports.label.active_7": "Active",
    "api_reports.label.mike_wilson": "Mike Wilson",
    "api_reports.label.program_enrollment_trends": "Program Enrollment Trends",
    "api_reports.label.program_details": "Program Details",
    "api_reports.label.program": "Program",
    "api_reports.label.enrollments": "Enrollments",
    "api_reports.label.completion_rate_2": "Completion Rate",
    "api_reports.label.attendance": "Attendance",
    "api_reports.label.leadership_training": "Leadership Training",
    "api_reports.label.technical_skills": "Technical Skills",
    "api_reports.label.generated_report": "Generated Report",
    "api_settings.label.settings_api_endpoints": "Settings API endpoints.",
    "api_settings.label.user_not_found": "User not found",
    "api_settings.label.user_not_found_1": "User not found",
    "api_settings.label.user_not_found_2": "User not found",
    "api_settings.label.user_not_found_3": "User not found",
    "api_notifications.label.notification_not_found": "Notification not found",
    "api_notifications.label.notification_not_found_1": "Notification not found",
    "api_notifications.label.test_notification": "Test Notification",
    "api_notifications.label.notification": "Notification",
    "api_notifications.label.broadcast": "Broadcast",
    "api_notifications.label.broadcast_sent_to": "Broadcast sent to ",
    "api_notifications.label.system_notification": "System Notification",
    "api_notifications.label.system_notification_1": "System Notification",
    "api_notifications.label.system_notification_2": "System Notification",
    "api_i18n.label.internationalization_api_endpo": "Internationalization API endpoints.",
    "api_i18n.label.language_not_found": "Language not found",
    "api_i18n.label.create_multilingual_content": "Create multilingual content.",
    "api_i18n.label.content_not_found": "Content not found",
    "api_i18n.label.get_translation_statistics": "Get translation statistics.",
    "api_analytics.label.analytics_api_endpoints": "Analytics API endpoints.",
    "api_analytics.label.get_beneficiary_analytics": "Get beneficiary analytics.",
    "api_analytics.label.unauthorized": "Unauthorized",
    "api_analytics.label.unauthorized_1": "Unauthorized",
    "api_analytics.label.get_trainer_analytics": "Get trainer analytics.",
    "api_analytics.label.unauthorized_2": "Unauthorized",
    "api_analytics.label.get_program_analytics": "Get program analytics.",
    "api_analytics.label.unauthorized_3": "Unauthorized",
    "api_adaptive_tests.label.pool_not_found": "Pool not found",
    "api_adaptive_tests.label.pool_not_found_1": "Pool not found",
    "api_adaptive_tests.label.pool_not_found_2": "Pool not found",
    "api_adaptive_tests.label.question_not_found": "Question not found",
    "api_adaptive_tests.label.question_not_found_1": "Question not found",
    "api_adaptive_tests.label.session_not_found": "Session not found",
    "api_adaptive_tests.label.session_not_found_1": "Session not found",
    "api_adaptive_tests.label.session_not_found_2": "Session not found",
    "api_folders.label.user_not_found": "User not found",
    "api_folders.label.folder_not_found": "Folder not found",
    "api_tests.label.test_api_endpoints": "Test API endpoints.",
    "api_tests.label.questionnaire": "Questionnaire",
    "api_tests.label.assessment": "Assessment",
    "api_tests.label.skill_test": "Skill Test",
    "api_tests.label.evaluation": "Evaluation",
    "api_tests.label.survey": "Survey",
    "api_tests.label.technical_skills": "Technical Skills",
    "api_tests.label.soft_skills": "Soft Skills",
    "api_tests.label.leadership": "Leadership",
    "api_tests.label.communication": "Communication",
    "api_tests.label.problem_solving": "Problem Solving",
    "api_tests.label.general_knowledge": "General Knowledge",
    "api_tenants.label.unauthorized": "Unauthorized",
    "api_tenants.label.unauthorized_1": "Unauthorized",
    "api_tenants.label.tenant_not_found": "Tenant not found",
    "api_tenants.label.unauthorized_2": "Unauthorized",
    "api_tenants.label.unauthorized_3": "Unauthorized",
    "api_tenants.label.tenant_not_found_1": "Tenant not found",
    "api_tenants.label.unauthorized_4": "Unauthorized",
    "api_tenants.label.tenant_not_found_2": "Tenant not found",
    "api_availability.label.availability_api_endpoints": "Availability API endpoints.",
    "api_sms.label.sms_api_endpoints": "SMS API endpoints.",
    "api_sms.label.message_not_found": "Message not found",
    "api_sms.label.get_sms_statistics": "Get SMS statistics.",
    "api_sms.label.get_sms_templates": "Get SMS templates.",
    "api_sms.label.template_not_found": "Template not found",
    "api_sms.label.get_sms_campaigns": "Get SMS campaigns.",
    "api_sms.label.campaign_execution_started": "Campaign execution started",
    "api_sms.label.campaign_not_found": "Campaign not found",
    "api_gamification.label.insufficient_permissions": "Insufficient permissions",
    "api_gamification.label.insufficient_permissions_1": "Insufficient permissions",
    "api_gamification.label.get_available_leaderboards": "Get available leaderboards.",
    "api_gamification.label.leaderboard_not_found": "Leaderboard not found",
    "api_gamification.label.insufficient_permissions_2": "Insufficient permissions",
    "api_gamification.label.get_active_challenges": "Get active challenges.",
    "api_gamification.label.join_a_challenge": "Join a challenge.",
    "api_gamification.label.insufficient_permissions_3": "Insufficient permissions",
    "api_gamification.label.get_available_teams": "Get available teams.",
    "api_gamification.label.join_a_team": "Join a team.",
    "api_gamification.label.leave_a_team": "Leave a team.",
    "api_gamification.label.get_available_rewards": "Get available rewards.",
    "api_gamification.label.redeem_a_reward": "Redeem a reward.",
    "api_gamification.label.insufficient_permissions_4": "Insufficient permissions",
    "api_gamification.label.get_user_s_goals": "Get user's goals.",
    "api_gamification.label.user_agent": "User-Agent",
    "api_gamification.label.resource_not_found": "Resource not found",
    "api_gamification.label.access_forbidden": "Access forbidden",
    "beneficiaries_v2_detail_routes.label.beneficiary_not_found": "Beneficiary not found",
    "beneficiaries_v2_detail_routes.label.forbidden": "Forbidden",
    "beneficiaries_v2_detail_routes.label.forbidden_1": "Forbidden",
    "beneficiaries_v2_detail_routes.label.forbidden_2": "Forbidden",
    "beneficiaries_v2_detail_routes.label.beneficiary_not_found_1": "Beneficiary not found",
    "beneficiaries_v2_detail_routes.label.forbidden_3": "Forbidden",
    "beneficiaries_v2_detail_routes.label.forbidden_4": "Forbidden",
    "beneficiaries_v2_detail_routes.label.forbidden_5": "Forbidden",
    "beneficiaries_v2_detail_routes.label.beneficiary_not_found_2": "Beneficiary not found",
    "beneficiaries_v2_detail_routes.label.forbidden_6": "Forbidden",
    "beneficiaries_v2_evaluations_routes.label.beneficiary_not_found": "Beneficiary not found",
    "beneficiaries_v2_evaluations_routes.label.forbidden": "Forbidden",
    "beneficiaries_v2_evaluations_routes.label.beneficiary_not_found_1": "Beneficiary not found",
    "beneficiaries_v2_evaluations_routes.label.forbidden_1": "Forbidden",
    "beneficiaries_v2_evaluations_routes.label.beneficiary_not_found_2": "Beneficiary not found",
    "beneficiaries_v2_evaluations_routes.label.forbidden_2": "Forbidden",
    "beneficiaries_v2_evaluations_routes.label.evaluation": "Evaluation #",
    "beneficiaries_v2_evaluations_routes.label.communication": "Communication",
    "beneficiaries_v2_evaluations_routes.label.problem_solving": "Problem Solving",
    "beneficiaries_v2_evaluations_routes.label.leadership": "Leadership",
    "beneficiaries_v2_evaluations_routes.label.teamwork": "Teamwork",
    "beneficiaries_v2_evaluations_routes.label.time_management": "Time Management",
    "beneficiaries_v2_documents_routes.label.beneficiary_not_found": "Beneficiary not found",
    "beneficiaries_v2_documents_routes.label.forbidden": "Forbidden",
    "beneficiaries_v2_documents_routes.label.beneficiary_not_found_1": "Beneficiary not found",
    "beneficiaries_v2_documents_routes.label.forbidden_1": "Forbidden",
    "beneficiaries_v2_documents_routes.label.no_file_provided": "No file provided",
    "beneficiaries_v2_documents_routes.label.profile_picture_uploaded": "Profile picture uploaded",
    "beneficiaries_v2_trainer_routes.label.beneficiary_not_found": "Beneficiary not found",
    "beneficiaries_v2_trainer_routes.label.forbidden": "Forbidden",
    "beneficiaries_v2_trainer_routes.label.beneficiary_not_found_1": "Beneficiary not found",
    "beneficiaries_v2_trainer_routes.label.forbidden_1": "Forbidden",
    "beneficiaries_v2_notes_routes.label.beneficiary_not_found": "Beneficiary not found",
    "beneficiaries_v2_notes_routes.label.forbidden": "Forbidden",
    "beneficiaries_v2_notes_routes.label.beneficiary_not_found_1": "Beneficiary not found",
    "beneficiaries_v2_notes_routes.label.forbidden_1": "Forbidden",
    "beneficiaries_v2_notes_routes.label.note_not_found": "Note not found",
    "beneficiaries_v2_notes_routes.label.forbidden_2": "Forbidden",
    "beneficiaries_v2_notes_routes.label.note_not_found_1": "Note not found",
    "beneficiaries_v2_notes_routes.label.forbidden_3": "Forbidden",
    "v2_auth.label.login_endpoint": "Login endpoint.",
    "v2_auth.label.register_endpoint": "Register endpoint.",
    "v2_auth.label.user_already_exists": "User already exists",
    "v2_auth.label.refresh_token_endpoint": "Refresh token endpoint.",
    "v2_auth.label.logout_endpoint": "Logout endpoint.",
    "v2_auth.label.authorization": "Authorization",
    "v2_auth.label.forgot_password_endpoint": "Forgot password endpoint.",
    "v2_auth.label.reset_password_endpoint": "Reset password endpoint.",
    "v2_auth.label.change_password_endpoint": "Change password endpoint.",
    "v2_auth.label.verify_token_endpoint": "Verify token endpoint.",
    "v2_auth.label.authorization_1": "Authorization",
    "v2_cached_endpoints.label.beneficiary_not_found": "Beneficiary not found",
    "v2_cached_endpoints.label.beneficiary_not_found_1": "Beneficiary not found",
    "v2_cached_endpoints.label.authorization": "Authorization",
    "v2_cached_endpoints.label.user_not_found": "User not found",
    "v2_beneficiaries.label.get_beneficiary_details": "Get beneficiary details.",
    "v2_beneficiaries.label.beneficiary_not_found": "Beneficiary not found",
    "v2_beneficiaries.label.beneficiary_not_found_1": "Beneficiary not found",
    "v2_beneficiaries.label.beneficiary_not_found_2": "Beneficiary not found",
    "v2_beneficiaries.label.get_beneficiary_statistics": "Get beneficiary statistics.",
    "v2_beneficiaries.label.get_beneficiary_notes": "Get beneficiary notes.",
    "v2_beneficiaries.label.note_not_found": "Note not found",
    "v2_beneficiaries.label.note_not_found_1": "Note not found",
    "v2_beneficiaries.label.get_beneficiary_documents": "Get beneficiary documents.",
    "v2_beneficiaries.label.no_file_provided": "No file provided",
    "v2_beneficiaries.label.download_a_document": "Download a document.",
    "v2_beneficiaries.label.document_not_found": "Document not found",
    "v2_beneficiaries.label.document_not_found_1": "Document not found",
    "v2_beneficiaries.label.get_beneficiary_appointments": "Get beneficiary appointments.",
    "v2_beneficiaries.label.schedule_an_appointment": "Schedule an appointment.",
    "v2_beneficiaries.label.appointment_not_found": "Appointment not found",
    "v2_beneficiaries.label.cancel_an_appointment": "Cancel an appointment.",
    "v2_beneficiaries.label.appointment_not_found_1": "Appointment not found",
    "v2_beneficiaries.label.export_beneficiary_data": "Export beneficiary data.",
    "programs_v2_enrollment_routes.label.unauthorized": "Unauthorized",
    "programs_v2_enrollment_routes.label.unauthorized_1": "Unauthorized",
    "programs_v2_enrollment_routes.label.unauthorized_2": "Unauthorized",
    "programs_v2_enrollment_routes.label.unauthorized_3": "Unauthorized",
    "programs_v2_enrollment_routes.label.unauthorized_4": "Unauthorized",
    "programs_v2_enrollment_routes.label.unauthorized_5": "Unauthorized",
    "programs_v2_enrollment_routes.label.beneficiary_not_found": "Beneficiary not found",
    "programs_v2_detail_routes.label.unauthorized": "Unauthorized",
    "programs_v2_detail_routes.label.unauthorized_1": "Unauthorized",
    "programs_v2_util_routes.label.technical_skills": "Technical Skills",
    "programs_v2_util_routes.label.soft_skills": "Soft Skills",
    "programs_v2_util_routes.label.leadership": "Leadership",
    "programs_v2_util_routes.label.management": "Management",
    "programs_v2_util_routes.label.communication": "Communication",
    "programs_v2_util_routes.label.industry_specific": "Industry-Specific",
    "programs_v2_util_routes.label.certification": "Certification",
    "programs_v2_util_routes.label.language": "Language",
    "programs_v2_util_routes.label.other": "Other",
    "programs_v2_util_routes.label.beginner": "Beginner",
    "programs_v2_util_routes.label.intermediate": "Intermediate",
    "programs_v2_util_routes.label.advanced": "Advanced",
    "programs_v2_util_routes.label.expert": "Expert",
    "programs_v2_progress_routes.label.unauthorized": "Unauthorized",
    "programs_v2_progress_routes.label.unauthorized_1": "Unauthorized",
    "programs_v2_progress_routes.label.unauthorized_2": "Unauthorized",
    "programs_v2_progress_routes.label.unauthorized_3": "Unauthorized",
    "programs_v2_progress_routes.label.unauthorized_4": "Unauthorized",
    "programs_v2_progress_routes.label.unauthorized_5": "Unauthorized",
    "programs_v2_crud_routes.label.unauthorized": "Unauthorized",
    "programs_v2_crud_routes.label.unauthorized_1": "Unauthorized",
    "programs_v2_crud_routes.label.not_found": "Not found",
    "programs_v2_crud_routes.label.unauthorized_2": "Unauthorized",
    "programs_v2_crud_routes.label.not_found_1": "Not found",
    "programs_v2_module_routes.label.unauthorized": "Unauthorized",
    "programs_v2_module_routes.label.unauthorized_1": "Unauthorized",
    "programs_v2_module_routes.label.unauthorized_2": "Unauthorized",
    "programs_v2_module_routes.label.unauthorized_3": "Unauthorized",
    "programs_v2_module_routes.label.unauthorized_4": "Unauthorized",
    "programs_v2_module_routes.label.unauthorized_5": "Unauthorized",
    "programs_v2_module_routes.label.unauthorized_6": "Unauthorized",
    "programs_v2_module_routes.label.unauthorized_7": "Unauthorized",
    "programs_v2_session_routes.label.unauthorized": "Unauthorized",
    "programs_v2_session_routes.label.unauthorized_1": "Unauthorized",
    "programs_v2_session_routes.label.unauthorized_2": "Unauthorized",
    "programs_v2_session_routes.label.unauthorized_3": "Unauthorized",
    "programs_v2_session_routes.label.unauthorized_4": "Unauthorized",
    "routes_alerts.label.authorization": "Authorization",
    "monitoring_performance_monitor.label.application_performance_monito": "Application Performance Monitoring",
    "monitoring_performance_monitor.label.x_response_time": "X-Response-Time",
    "monitoring_performance_monitor.label.x_db_queries": "X-DB-Queries",
    "monitoring_performance_monitor.label.slow_request_detected": "Slow request detected: ",
    "monitoring_performance_monitor.label.high_cpu_usage": "High CPU usage: ",
    "monitoring_performance_monitor.label.high_memory_usage": "High memory usage: ",
    "monitoring_performance_monitor.label.calculate_percentile_value": "Calculate percentile value",
    "monitoring_performance_monitor.label.slow_query": "Slow query (",
    "monitoring_performance_monitor.label.monitor_cache_performance": "Monitor cache performance",
    "monitoring_performance_monitor.label.record_cache_hit": "Record cache hit",
    "monitoring_performance_monitor.label.record_cache_miss": "Record cache miss",
    "monitoring_performance_monitor.label.high_response_times": "High response times",
    "monitoring_performance_monitor.label.high_cpu_usage_1": "High CPU usage",
    "monitoring_performance_monitor.label.high_memory_usage_1": "High memory usage",
    "monitoring_metrics_exporter.label.total_requests": "Total requests",
    "monitoring_metrics_exporter.label.request_latency": "Request latency",
    "monitoring_metrics_exporter.label.cpu_usage_percentage": "CPU usage percentage",
    "monitoring_metrics_exporter.label.memory_usage_percentage": "Memory usage percentage",
    "monitoring_metrics_exporter.label.disk_usage_percentage": "Disk usage percentage",
    "monitoring_metrics_exporter.label.database_connection_establishe": "Database connection established",
    "monitoring_metrics_exporter.label.redis_connection_established": "Redis connection established",
    "monitoring_metrics_exporter.label.setup_flask_routes": "Setup Flask routes",
    "monitoring_metrics_exporter.label.collect_database_related_metri": "Collect database-related metrics",
    "monitoring_metrics_exporter.label.collect_redis_related_metrics": "Collect Redis-related metrics",
    "monitoring_metrics_exporter.label.collect_application_specific_m": "Collect application-specific metrics",
    "performance___init__.label.performanceoptimizer": "PerformanceOptimizer",
    "performance___init__.label.queryoptimizer": "QueryOptimizer",
    "performance___init__.label.indexmanager": "IndexManager",
    "performance___init__.label.cachemanager": "CacheManager",
    "performance___init__.label.redisoptimizer": "RedisOptimizer",
    "performance___init__.label.responseoptimizer": "ResponseOptimizer",
    "performance___init__.label.compressionmanager": "CompressionManager",
    "performance___init__.label.paginationoptimizer": "PaginationOptimizer",
    "performance___init__.label.performancemonitor": "PerformanceMonitor",
    "performance___init__.label.profiler": "Profiler",
    "performance___init__.label.imageoptimizer": "ImageOptimizer",
    "performance___init__.label.cdnmanager": "CDNManager",
    "performance___init__.label.loadtester": "LoadTester",
    "performance___init__.label.benchmarkrunner": "BenchmarkRunner",
    "database_query_optimizer.label.count": "COUNT(*)",
    "database_query_optimizer.label.remove_unnecessary_joins": "Remove unnecessary joins",
    "database_query_optimizer.label.left_join": "LEFT JOIN",
    "database_query_optimizer.label.order_s_by_s_n": "ORDER\\s+BY\\s+([^\\\\n]+)",
    "database_query_optimizer.label.group_by": "GROUP BY",
    "database_query_optimizer.label.optimize_like_queries": "Optimize LIKE queries",
    "database_query_optimizer.label.like_s": "LIKE\\s+['\\\"]%",
    "database_query_optimizer.label.optimize_date_based_queries": "Optimize date-based queries",
    "database_query_optimizer.label.pattern_detected": "Pattern detected: ",
    "database_query_optimizer.label.create_index_idx": "CREATE INDEX idx_",
    "database_query_optimizer.label.on_s_w_w_s": "ON\\s+\\w+\\.(\\w+)\\s*=",
    "database_query_optimizer.label.create_index_idx_1": "CREATE INDEX idx_",
    "database_query_optimizer.label.join_s_w_s_as_s_w": "JOIN\\s+\\w+\\s+(?:AS\\s+)?(\\w+)",
    "database_index_manager.label.drop_index": "DROP INDEX ",
    "database_index_manager.label.dropped_redundant_index": "Dropped redundant index: ",
    "database_index_manager.label.create": "Create ",
    "database_index_manager.label.drop": "Drop ",
    "database_index_manager.label.create_index": "CREATE INDEX ",
    "core_optimizer.label.x_response_time": "X-Response-Time",
    "core_optimizer.label.x_optimization_level": "X-Optimization-Level",
    "core_optimizer.label.found": "Found ",
    "core_optimizer.label.found_1": "Found ",
    "core_optimizer.label.clear_all_caches": "Clear all caches",
    "core_optimizer.label.all_caches_cleared": "All caches cleared",
    "config_performance_config.label.database_optimization_configur": "Database optimization configuration",
    "config_performance_config.label.caching_configuration": "Caching configuration",
    "config_performance_config.label.api_optimization_configuration": "API optimization configuration",
    "config_performance_config.label.performance_monitoring_configu": "Performance monitoring configuration",
    "config_performance_config.label.asset_optimization_configurati": "Asset optimization configuration",
    "config_performance_config.label.load_testing_configuration": "Load testing configuration",
    "config_performance_config.label.performance_related_security_c": "Performance-related security configuration",
    "config_performance_config.label.production_specific_configurat": "Production-specific configuration",
    "config_performance_config.label.staging_specific_configuration": "Staging-specific configuration",
    "config_performance_config.label.development_specific_configura": "Development-specific configuration",
    "config_performance_config.label.performanceconfig": "PerformanceConfig",
    "testing_load_tester.label.load_test_configuration": "Load test configuration",
    "testing_load_tester.label.individual_request_result": "Individual request result",
    "testing_load_tester.label.added_scenario": "Added scenario: ",
    "testing_load_tester.label.load_test": "Load Test",
    "testing_load_tester.label.starting_load_test": "Starting load test: ",
    "testing_load_tester.label.stress_test": "Stress Test - ",
    "testing_load_tester.label.starting_spike_test": "Starting spike test: ",
    "testing_load_tester.label.spike_test": "Spike Test",
    "testing_load_tester.label.report_generated": "Report generated: ",
    "testing_load_tester.label.user": "User ",
    "testing_load_tester.label.user_1": "User ",
    "testing_load_tester.label.authorization": "Authorization",
    "testing_load_tester.label.http": "HTTP ",
    "testing_load_tester.label.http_1": "HTTP ",
    "testing_load_tester.label.no_scenarios_available": "No scenarios available",
    "testing_benchmark_runner.label.benchmark_configuration": "Benchmark configuration",
    "testing_benchmark_runner.label.individual_benchmark_metric": "Individual benchmark metric",
    "testing_benchmark_runner.label.benchmark_comparison_result": "Benchmark comparison result",
    "testing_benchmark_runner.label.benchmark_runner_initialized": "Benchmark Runner initialized",
    "testing_benchmark_runner.label.registered_custom_benchmark": "Registered custom benchmark: ",
    "testing_benchmark_runner.label.starting_benchmark": "Starting benchmark: ",
    "testing_benchmark_runner.label.warmup_phase": "Warmup phase: ",
    "testing_benchmark_runner.label.running_iteration": "Running iteration ",
    "testing_benchmark_runner.label.api_benchmark": "API Benchmark - ",
    "testing_benchmark_runner.label.api_benchmark_1": "API Benchmark",
    "testing_benchmark_runner.label.database_benchmark": "Database Benchmark",
    "testing_benchmark_runner.label.query": "Query ",
    "testing_benchmark_runner.label.memory_benchmark": "Memory Benchmark",
    "testing_benchmark_runner.label.baseline": "Baseline '",
    "testing_benchmark_runner.label.set_baseline": "Set baseline: ",
    "testing_benchmark_runner.label.results_exported_to": "Results exported to ",
    "testing_benchmark_runner.label.run_warmup_phase": "Run warmup phase",
    "testing_benchmark_runner.label.run_function_based_benchmark": "Run function-based benchmark",
    "testing_benchmark_runner.label.run_url_based_benchmark": "Run URL-based benchmark",
    "testing_benchmark_runner.label.run_custom_benchmark": "Run custom benchmark",
    "testing_benchmark_runner.label.best_improvement": "Best improvement: ",
    "testing_benchmark_runner.label.worst_regression": "Worst regression: ",
    "testing_benchmark_runner.label.benchmark": "Benchmark",
    "testing_benchmark_runner.label.type": "Type",
    "testing_benchmark_runner.label.duration": "Duration",
    "testing_benchmark_runner.label.metric": "Metric",
    "testing_benchmark_runner.label.value": "Value",
    "testing_benchmark_runner.label.unit": "Unit",
    "api_pagination_optimizer.label.pagination_configuration": "Pagination configuration",
    "api_pagination_optimizer.label.pagination_metadata": "Pagination metadata",
    "api_pagination_optimizer.label.implement_offset_based_paginat": "Implement offset-based pagination",
    "api_pagination_optimizer.label.implement_cursor_based_paginat": "Implement cursor-based pagination",
    "api_response_optimizer.label.response_optimization_configur": "Response optimization configuration",
    "api_response_optimizer.label.response_optimization_metrics": "Response optimization metrics",
    "api_response_optimizer.label.transfer_encoding": "Transfer-Encoding",
    "api_response_optimizer.label.cache_control": "Cache-Control",
    "api_response_optimizer.label.x_streaming": "X-Streaming",
    "api_response_optimizer.label.x_response_time": "X-Response-Time",
    "api_response_optimizer.label.x_processing_time_ms": "X-Processing-Time-Ms",
    "api_response_optimizer.label.cache_control_1": "Cache-Control",
    "api_response_optimizer.label.cache_control_2": "Cache-Control",
    "api_response_optimizer.label.cache_control_3": "Cache-Control",
    "api_response_optimizer.label.vary": "Vary",
    "api_response_optimizer.label.accept_encoding_accept": "Accept-Encoding, Accept",
    "api_response_optimizer.label.cache_control_4": "Cache-Control",
    "api_response_optimizer.label.pragma": "Pragma",
    "api_response_optimizer.label.expires": "Expires",
    "api_response_optimizer.label.content_encoding": "Content-Encoding",
    "api_response_optimizer.label.content_length": "Content-Length",
    "api_response_optimizer.label.add_performance_related_header": "Add performance-related headers",
    "api_response_optimizer.label.x_optimization_time": "X-Optimization-Time",
    "api_response_optimizer.label.x_optimized": "X-Optimized",
    "api_response_optimizer.label.x_content_size": "X-Content-Size",
    "api_response_optimizer.label.optimize_json_serialization": "Optimize JSON serialization",
    "api_response_optimizer.label.accept_encoding": "Accept-Encoding",
    "api_compression_manager.label.compression_configuration_sett": "Compression configuration settings",
    "api_compression_manager.label.unsupported_compression_type": "Unsupported compression type: ",
    "api_compression_manager.label.compress_using_gzip": "Compress using gzip",
    "api_compression_manager.label.compress_using_brotli": "Compress using Brotli",
    "api_compression_manager.label.compress_using_deflate": "Compress using deflate",
    "api_compression_manager.label.compress_using_lz4": "Compress using LZ4",
    "api_compression_manager.label.decompress_gzip_data": "Decompress gzip data",
    "api_compression_manager.label.decompress_brotli_data": "Decompress Brotli data",
    "api_compression_manager.label.decompress_deflate_data": "Decompress deflate data",
    "api_compression_manager.label.decompress_lz4_data": "Decompress LZ4 data",
    "monitoring_performance_monitor.label.individual_metric_data": "Individual metric data",
    "monitoring_performance_monitor.label.performance_alert": "Performance alert",
    "monitoring_performance_monitor.label.system_performance_snapshot": "System performance snapshot",
    "monitoring_performance_monitor.label.start_background_monitoring": "Start background monitoring",
    "monitoring_performance_monitor.label.performance_monitoring_started": "Performance monitoring started",
    "monitoring_performance_monitor.label.stop_background_monitoring": "Stop background monitoring",
    "monitoring_performance_monitor.label.performance_monitoring_stopped": "Performance monitoring stopped",
    "monitoring_performance_monitor.label.record_request_completion": "Record request completion",
    "monitoring_performance_monitor.label.background_monitoring_loop": "Background monitoring loop",
    "monitoring_performance_monitor.label.trigger_an_alert": "Trigger an alert",
    "monitoring_performance_monitor.label.metric": "Metric ",
    "monitoring_performance_monitor.label.performance_alert_triggered": "Performance alert triggered: ",
    "monitoring_performance_monitor.label.generate_performance_recommend": "Generate performance recommendations",
    "monitoring_performance_monitor.label.slow_endpoints_detected": "Slow endpoints detected: ",
    "monitoring_profiler.label.profiling_result_data": "Profiling result data",
    "monitoring_profiler.label.memory_usage_snapshot": "Memory usage snapshot",
    "monitoring_profiler.label.performance_hotspot_identifica": "Performance hotspot identification",
    "monitoring_profiler.label.application_profiler_initializ": "Application profiler initialized",
    "monitoring_profiler.label.slow_function_detected": "Slow function detected: ",
    "monitoring_profiler.label.function": "Function ",
    "monitoring_profiler.label.analyze_profiling_results": "Analyze profiling results",
    "monitoring_profiler.label.mb_function_time": "MB, Function time: ",
    "monitoring_profiler.label.optimize": "Optimize ",
    "monitoring_profiler.label.critical_hotspot": "Critical hotspot: ",
    "monitoring_profiler.label.function_1": "Function",
    "monitoring_profiler.label.total_time": "Total Time",
    "monitoring_profiler.label.call_count": "Call Count",
    "monitoring_profiler.label.avg_time": "Avg Time",
    "monitoring_profiler.label.max_time": "Max Time",
    "caching_cache_manager.label.cache_configuration_settings": "Cache configuration settings",
    "caching_cache_manager.label.cache_statistics": "Cache statistics",
    "caching_cache_manager.label.cleared_cache_level": "Cleared cache level: ",
    "caching_cache_manager.label.register_cache_middleware": "Register cache middleware",
    "caching_cache_manager.label.record_cache_hit": "Record cache hit",
    "caching_cache_manager.label.record_cache_miss": "Record cache miss",
    "caching_cache_manager.label.record_cache_set": "Record cache set",
    "caching_redis_optimizer.label.redis_optimization_configurati": "Redis optimization configuration",
    "caching_redis_optimizer.label.redis_performance_statistics": "Redis performance statistics",
    "caching_redis_optimizer.label.processed": "Processed ",
    "assets_cdn_manager.label.cdn_endpoint_configuration": "CDN endpoint configuration",
    "assets_cdn_manager.label.cdn_performance_metrics": "CDN performance metrics",
    "assets_cdn_manager.label.registered_cdn_endpoint": "Registered CDN endpoint: ",
    "assets_cdn_manager.label.asset_not_found": "Asset not found: ",
    "assets_cdn_manager.label.uploaded": "Uploaded ",
    "assets_cdn_manager.label.purged": "Purged ",
    "assets_cdn_manager.label.upload_to_cloudflare": "Upload to Cloudflare",
    "assets_cdn_manager.label.uploading": "Uploading ",
    "assets_cdn_manager.label.uploading_1": "Uploading ",
    "assets_cdn_manager.label.generic_upload_implementation": "Generic upload implementation",
    "assets_cdn_manager.label.uploading_2": "Uploading ",
    "assets_cdn_manager.label.purging": "Purging ",
    "assets_cdn_manager.label.purging_1": "Purging ",
    "assets_cdn_manager.label.generic_purge_implementation": "Generic purge implementation",
    "assets_cdn_manager.label.purging_2": "Purging ",
    "assets_cdn_manager.label.preloading": "Preloading ",
    "assets_image_optimizer.label.image_optimization_configurati": "Image optimization configuration",
    "assets_image_optimizer.label.image_optimization_result": "Image optimization result",
    "assets_image_optimizer.label.image_not_found": "Image not found: ",
    "assets_image_optimizer.label.optimized": "Optimized ",
    "assets_image_optimizer.label.optimized_1": "Optimized ",
    "assets_image_optimizer.label.heif_support_enabled": "HEIF support enabled",
    "assets_image_optimizer.label.avif_support_enabled": "AVIF support enabled",
    "i18n_locale_manager.label.initialize_locale_manager": "Initialize locale manager.",
    "i18n_config.label.mm_dd_yyyy": "MM/DD/YYYY",
    "i18n_config.label.main_i18n_configuration": "Main i18n configuration.",
    "i18n_config.label.english": "English",
    "i18n_config.label.english_1": "English",
    "i18n_config.label.mm_dd_yyyy_1": "MM/DD/YYYY",
    "i18n_config.label.spanish": "Spanish",
    "i18n_config.label.espa_ol": "Español",
    "i18n_config.label.dd_mm_yyyy": "DD/MM/YYYY",
    "i18n_config.label.french": "French",
    "i18n_config.label.fran_ais": "Français",
    "i18n_config.label.dd_mm_yyyy_1": "DD/MM/YYYY",
    "i18n_config.label.turkish": "Turkish",
    "i18n_config.label.t_rk_e": "Türkçe",
    "i18n_config.label.dd_mm_yyyy_2": "DD.MM.YYYY",
    "i18n_config.label.arabic": "Arabic",
    "i18n_config.label.dd_mm_yyyy_3": "DD/MM/YYYY",
    "i18n_config.label.hebrew": "Hebrew",
    "i18n_config.label.dd_mm_yyyy_4": "DD/MM/YYYY",
    "i18n_config.label.german": "German",
    "i18n_config.label.deutsch": "Deutsch",
    "i18n_config.label.dd_mm_yyyy_5": "DD.MM.YYYY",
    "i18n_config.label.russian": "Russian",
    "i18n_config.label.": "Русский",
    "i18n_config.label.dd_mm_yyyy_6": "DD.MM.YYYY",
    "i18n_config.label.chinese": "Chinese",
    "i18n_config.label.yyyy_mm_dd": "YYYY/MM/DD",
    "i18n_config.label.japanese": "Japanese",
    "i18n_config.label.yyyy_mm_dd_1": "YYYY/MM/DD",
    "i18n_config.label.lax": "Lax",
    "i18n___init__.label.i18nconfig": "I18nConfig",
    "i18n___init__.label.i18nmanager": "I18nManager",
    "i18n___init__.label.translator": "Translator",
    "i18n___init__.label.localemanager": "LocaleManager",
    "i18n___init__.label.contenttranslationmanager": "ContentTranslationManager",
    "i18n___init__.label.languagedetector": "LanguageDetector",
    "i18n___init__.label.rtlsupport": "RTLSupport",
    "i18n_language_detector.label.initialize_language_detector": "Initialize language detector.",
    "i18n_language_detector.label.accept_language": "Accept-Language",
    "i18n_language_detector.label.accept_language_1": "Accept-Language",
    "i18n_rtl_support.label.initialize_rtl_support": "Initialize RTL support.",
    "i18n_manager.label.initialize_i18n_manager": "Initialize i18n manager.",
    "i18n_manager.label.get_translation_statistics": "Get translation statistics.",
    "infrastructure_query_optimizer.label.start_query_s": "Start Query: %s",
    "infrastructure_query_optimizer.label.slow_query": "Slow query '",
    "infrastructure_query_optimizer.label.bdc_app": "BDC_App",
    "infrastructure_cache_config.label.cache_configuration_settings": "Cache configuration settings",
    "infrastructure_cache_config.label.get_redis_configuration": "Get Redis configuration",
    "services_appointment_service.label.implementation_of_iappointment": "Implementation of IAppointmentService.",
    "services_appointment_service.label.user": "User ",
    "services_appointment_service.label.user_1": "User ",
    "services_appointment_service.label.beneficiary_not_found": "Beneficiary not found",
    "services_appointment_service.label.user_2": "User ",
    "services_appointment_service.label.appointment": "Appointment ",
    "services_appointment_service.label.user_3": "User ",
    "services_appointment_service.label.appointment_1": "Appointment ",
    "services_appointment_service.label.user_4": "User ",
    "services_appointment_service.label.appointment_2": "Appointment ",
    "services_appointment_service.label.meeting_with": "Meeting with ",
    "services_appointment_service.label.scheduled_appointment_with": "Scheduled appointment with ",
    "services_appointment_service.label.appointment_with": "Appointment with ",
    "services_appointment_service.label.user_5": "User ",
    "services_appointment_service.label.appointment_3": "Appointment ",
    "services_auth_service.label.change_user_password": "Change user password.",
    "services_auth_service.label.verify_email_address": "Verify email address.",
    "services_auth_service.label.resend_verification_email": "Resend verification email.",
    "services_auth_service.label.request_password_reset": "Request password reset.",
    "services_auth_service.label.log_user_activity": "Log user activity.",
    "services_ai_verification.label.verification_already_processed": "Verification already processed",
    "services_ai_verification.label.get_verification_statistics": "Get verification statistics",
    "services_ai_verification.label.ai_i_eri_iniz_onayland": "AI içeriğiniz onaylandı",
    "services_ai_verification.label.ai_i_eri_iniz_reddedildi": "AI içeriğiniz reddedildi",
    "services_sms_service.label.appointment_reminder": "Appointment Reminder",
    "services_sms_service.label.assessment_notification": "Assessment Notification",
    "services_sms_service.label.password_reset_code": "Password Reset Code",
    "services_sms_service.label.provider_not_configured": "Provider not configured",
    "services_sms_service.label.messageid": "MessageId",
    "services_sms_service.label.unknown_provider": "Unknown provider",
    "services_sms_service.label.template_not_found": "Template not found",
    "services_sms_service.label.get_sms_statistics": "Get SMS statistics.",
    "services_document_service.label.document_service_module": "Document service module.",
    "services_document_service.label.document": "Document ",
    "services_ai_chat_service.label.initialize_dependent_services": "Initialize dependent services.",
    "services_ai_chat_service.label.rate_limit_exceeded": "Rate limit exceeded",
    "services_ai_chat_service.label.conversation_not_found": "Conversation not found",
    "services_ai_chat_service.label.rate_limit_exceeded_1": "Rate limit exceeded",
    "services_ai_chat_service.label.trainer_id_optional": "Trainer ID (optional)",
    "services_ai_chat_service.label.book_an_appointment": "Book an appointment",
    "services_ai_chat_service.label.appointment_date": "Appointment date",
    "services_ai_chat_service.label.appointment_time": "Appointment time",
    "services_ai_chat_service.label.trainer_id": "Trainer ID",
    "services_ai_chat_service.label.purpose_of_appointment": "Purpose of appointment",
    "services_ai_chat_service.label.include_detailed_metrics": "Include detailed metrics",
    "services_ai_chat_service.label.program_id_optional": "Program ID (optional)",
    "services_ai_chat_service.label.program_category_optional": "Program category (optional)",
    "services_ai_chat_service.label.conversation_not_found_1": "Conversation not found",
    "services_ai_chat_service.label.conversation": "Conversation: ",
    "services_ai_chat_service.label.date": "Date: ",
    "services_ai_chat_service.label.language": "Language: ",
    "services_ai_chat_service.label.time": "Time: ",
    "services_ai_chat_service.label.conversation_not_found_2": "Conversation not found",
    "services_ai_chat_service.label.conversation_flagged": "Conversation Flagged",
    "services_ai_chat_service.label.get_conversation_analytics": "Get conversation analytics.",
    "services_ai_chat_service.label.hangi_programlar_mevcut": "Hangi programlar mevcut?",
    "services_ai_chat_service.label.programlar_mda_nas_l_ilerliyor": "Programlarımda nasıl ilerliyorum?",
    "services_ai_chat_service.label.hangi_alanlara_odaklanmal_y_m": "Hangi alanlara odaklanmalıyım?",
    "services_ai_chat_service.label.hangi_hizmetler_mevcut": "Hangi hizmetler mevcut?",
    "services_ai_chat_service.label.nas_l_yard_m_alabilirim": "Nasıl yardım alabilirim?",
    "services_ai_chat_service.label.no_summary_available": "No summary available",
    "services_ai_chat_service.label.check_appointment_availability": "Check appointment availability.",
    "services_ai_chat_service.label.book_an_appointment_1": "Book an appointment.",
    "services_ai_chat_service.label.advanced_training": "Advanced Training",
    "services_ai_chat_service.label.appointment_on": "Appointment on ",
    "services_ai_chat_service.label.program": "Program: ",
    "services_ai_chat_service.label.assessment": "Assessment: ",
    "services_ai_chat_service.label.name": "Name: ",
    "services_ai_chat_service.label.available_slots_on": "Available slots on ",
    "services_ai_chat_service.label.your_progress_for": "Your progress for ",
    "services_ai_chat_service.label.mevcut_programlar": "Mevcut programlar:\n",
    "services_ai_chat_service.label.available_programs": "Available programs:\n",
    "services_calendar_service.label.google_calendar_service": "Google Calendar service.",
    "services_question_randomization_service.label.randomization_strategies_avail": "Randomization strategies available.",
    "services_question_randomization_service.label.unknown_randomization_strategy": "Unknown randomization strategy: ",
    "services_log_analytics_service.label.log_level_enumeration": "Log level enumeration",
    "services_log_analytics_service.label.initialize_elasticsearch_conne": "Initialize Elasticsearch connection",
    "services_log_analytics_service.label.elasticsearch_connection_estab": "Elasticsearch connection established",
    "services_log_analytics_service.label.initialize_redis_connection": "Initialize Redis connection",
    "services_log_analytics_service.label.redis_connection_established": "Redis connection established",
    "services_log_analytics_service.label.background_analysis_started": "Background analysis started",
    "services_log_analytics_service.label.stop_background_analysis": "Stop background analysis",
    "services_log_analytics_service.label.analyze_performance_trends": "Analyze performance trends",
    "services_log_analytics_service.label.analyze_security_related_incid": "Analyze security-related incidents",
    "services_log_analytics_service.label.found": "Found ",
    "services_log_analytics_service.label.average_response_time": "Average response time: ",
    "services_log_analytics_service.label.consider_scaling_infrastructur": "Consider scaling infrastructure",
    "services_log_analytics_service.label.check_database_connectivity": "Check database connectivity",
    "services_log_analytics_service.label.cache_miss_rate": "Cache miss rate: ",
    "services_log_analytics_service.label.detected": "Detected ",
    "services_log_analytics_service.label.enable_multi_factor_authentica": "Enable multi-factor authentication",
    "services_log_analytics_service.label.review_authentication_logs": "Review authentication logs",
    "services_log_analytics_service.label.suspicious_activity_detected": "Suspicious Activity Detected",
    "services_log_analytics_service.label.detected_1": "Detected ",
    "services_log_analytics_service.label.investigate_suspicious_pattern": "Investigate suspicious patterns",
    "services_log_analytics_service.label.review_security_policies": "Review security policies",
    "services_log_analytics_service.label.enhance_monitoring_rules": "Enhance monitoring rules",
    "services_log_analytics_service.label.consider_load_balancing": "Consider load balancing",
    "services_log_analytics_service.label.plan_for_scaling": "Plan for scaling",
    "services_log_analytics_service.label.analyzed": "Analyzed ",
    "services_log_analytics_service.label.monitor_high_traffic_endpoints": "Monitor high-traffic endpoints",
    "services_log_analytics_service.label.optimize_popular_endpoints": "Optimize popular endpoints",
    "services_log_analytics_service.label.detected_2": "Detected ",
    "services_log_analytics_service.label.review_application_behavior": "Review application behavior",
    "services_log_analytics_service.label.check_network_connectivity": "Check network connectivity",
    "services_log_analytics_service.label.increase_timeout_values": "Increase timeout values",
    "services_log_analytics_service.label.optimize_slow_operations": "Optimize slow operations",
    "services_log_analytics_service.label.monitor_memory_usage": "Monitor memory usage",
    "services_video_conference_service_updated.label.appointment": "Appointment ",
    "services_video_conference_service_updated.label.host_user": "Host user ",
    "services_video_conference_service_updated.label.conference": "Conference ",
    "services_video_conference_service_updated.label.conference_1": "Conference ",
    "services_video_conference_service_updated.label.conference_2": "Conference ",
    "services_video_conference_service_updated.label.conference_3": "Conference ",
    "services_video_conference_service_updated.label.conference_4": "Conference ",
    "services_video_conference_service_updated.label.conference_5": "Conference ",
    "services_video_conference_service_updated.label.video_conference_invitation": "Video Conference Invitation: ",
    "services_video_conference_service_updated.label.conference_6": "Conference ",
    "services_video_conference_service_updated.label.recording": "Recording: ",
    "services_video_conference_service_updated.label.recording_1": "Recording ",
    "services_video_conference_service_updated.label.conference_7": "Conference ",
    "services_video_conference_service_updated.label.video_conference": "Video Conference ",
    "services_video_conference_service_updated.label.meeting_password": "Meeting Password: ",
    "services_video_conference_service_updated.label.send_email_invitation": "Send email invitation.",
    "services_video_conference_service_updated.label.guest": "Guest",
    "services_video_conference_service_updated.label.send_sms_invitation": "Send SMS invitation.",
    "services_video_conference_service_updated.label.video_conference_1": "Video Conference: ",
    "services_video_conference_service_updated.label.time": "Time: ",
    "services_video_conference_service_updated.label.join": "Join: ",
    "services_ai_question_generator_service.label.process_pdf_files": "Process PDF files.",
    "services_ai_question_generator_service.label.process_word_documents": "Process Word documents.",
    "services_ai_question_generator_service.label.process_text_files": "Process text files.",
    "services_ai_question_generator_service.label.process_web_content": "Process web content.",
    "services_ai_question_generator_service.label.user_agent": "User-Agent",
    "services_ai_question_generator_service.label.unknown": "Unknown",
    "services_ai_question_generator_service.label.question_d": "Question \\d+:",
    "services_ai_question_generator_service.label.q_d": "Q\\d+:",
    "services_ai_question_generator_service.label.post_process_generated_questio": "Post-process generated questions.",
    "services_ai_question_generator_service.label.generated_for_request": "Generated for request ",
    "services_ai_question_generator_service.label.assess_question_clarity": "Assess question clarity.",
    "services_ai_question_generator_service.label.content_type": "Content type: ",
    "services_ai_question_generator_service.label.request_not_found": "Request not found",
    "services_ai_question_generator_service.label.question_not_found": "Question not found",
    "services_ai_question_generator_service.label.question_not_found_1": "Question not found",
    "services_ai_question_generator_service.label.multiple_choice": "Multiple Choice",
    "services_ai_question_generator_service.label.true_false": "True/False",
    "services_ai_question_generator_service.label.short_answer": "Short Answer",
    "services_ai_question_generator_service.label.essay": "Essay",
    "services_ai_question_generator_service.label.matching": "Matching",
    "services_ai_question_generator_service.label.ordering_sequencing": "Ordering/Sequencing",
    "services_ai_question_generator_service.label.plain_text": "Plain Text",
    "services_ai_question_generator_service.label.document": "Document",
    "services_ai_question_generator_service.label.audio": "Audio",
    "services_ai_question_generator_service.label.video": "Video",
    "services_ai_question_generator_service.label.web_content": "Web Content",
    "services_gamification_integration.label.unknown_activity_type": "Unknown activity type: ",
    "services___init__.label.services_package": "Services package.",
    "services___init__.label.authservice": "AuthService",
    "services___init__.label.beneficiaryservice": "BeneficiaryService",
    "services___init__.label.noteservice": "NoteService",
    "services___init__.label.appointmentservice": "AppointmentService",
    "services___init__.label.documentservice": "DocumentService",
    "services___init__.label.documentversionservice": "DocumentVersionService",
    "services___init__.label.evaluationservice": "EvaluationService",
    "services___init__.label.questionservice": "QuestionService",
    "services___init__.label.testsessionservice": "TestSessionService",
    "services___init__.label.responseservice": "ResponseService",
    "services___init__.label.aifeedbackservice": "AIFeedbackService",
    "services___init__.label.twofactorservice": "TwoFactorService",
    "services___init__.label.recurringappointmentservice": "RecurringAppointmentService",
    "services___init__.label.performancepredictionservice": "PerformancePredictionService",
    "services___init__.label.aiquestiongeneratorservice": "AIQuestionGeneratorService",
    "services_availability_service.label.availability_service_module": "Availability service module.",
    "services_availability_service.label.default_schedule": "Default Schedule",
    "services_availability_service.label.default_schedule_1": "Default Schedule",
    "services_webrtc_service.label.webrtc_room_management": "WebRTC room management.",
    "services_webrtc_service.label.participant": "Participant ",
    "services_webrtc_service.label.participant_1": "Participant ",
    "services_webrtc_service.label.room": "Room ",
    "services_webrtc_service.label.user": "User ",
    "services_webrtc_service.label.room_1": "Room ",
    "services_webrtc_service.label.handle_webrtc_signaling": "Handle WebRTC signaling.",
    "services_webrtc_service.label.handle_chat_message": "Handle chat message.",
    "services_webrtc_service.label.handle_start_recording": "Handle start recording.",
    "services_webrtc_service.label.handle_stop_recording": "Handle stop recording.",
    "services_webrtc_service.label.handle_client_disconnect": "Handle client disconnect.",
    "services_two_factor_service.label.two_factor_authentication_serv": "Two-Factor Authentication service.",
    "services_two_factor_service.label.user_not_found": "User not found",
    "services_two_factor_service.label.two_factor_authentication_enab": "Two-Factor Authentication Enabled",
    "services_two_factor_service.label.you_have_only": "You have only ",
    "services_two_factor_service.label.two_factor_authentication_disa": "Two-Factor Authentication Disabled",
    "services_two_factor_service.label.session_expired": "Session expired",
    "services_two_factor_service.label.session_already_verified": "Session already verified",
    "services_two_factor_service.label.enable_two_factor_authenticati": "Enable Two-Factor Authentication",
    "services_two_factor_service.label.hi": "Hi ",
    "services_email_service.label.email_service_module": "Email service module.",
    "services_email_service.label.send_email_asynchronously": "Send email asynchronously.",
    "services_email_service.label.reset_your_password": "Reset Your Password",
    "services_email_service.label.welcome_to_bdc": "Welcome to BDC",
    "services_email_service.label.new_notification": "New Notification",
    "services_email_service.label.recurring_appointments_cancell": "Recurring Appointments Cancelled: ",
    "services_recurring_appointment_service.label.series_not_found": "Series not found",
    "services_recurring_appointment_service.label.series_not_found_1": "Series not found",
    "services_recurring_appointment_service.label.series_not_found_2": "Series not found",
    "services_recurring_appointment_service.label.appointment_not_found": "Appointment not found",
    "services_recurring_appointment_service.label.series_not_found_3": "Series not found",
    "services_recurring_appointment_service.label.cancelled": "Cancelled: ",
    "services_recurring_appointment_service.label.no_reason_provided": "No reason provided",
    "services_recurring_appointment_service.label.series_not_found_4": "Series not found",
    "services_video_conference_service.label.authorization": "Authorization",
    "services_video_conference_service.label.content_type": "Content-Type",
    "services_video_conference_service.label.appointment": "Appointment ",
    "services_video_conference_service.label.host_user": "Host user ",
    "services_video_conference_service.label.conference": "Conference ",
    "services_video_conference_service.label.conference_1": "Conference ",
    "services_video_conference_service.label.conference_2": "Conference ",
    "services_video_conference_service.label.conference_3": "Conference ",
    "services_video_conference_service.label.conference_4": "Conference ",
    "services_video_conference_service.label.conference_5": "Conference ",
    "services_video_conference_service.label.video_conference_invitation": "Video Conference Invitation: ",
    "services_video_conference_service.label.conference_6": "Conference ",
    "services_video_conference_service.label.recording": "Recording: ",
    "services_video_conference_service.label.recording_1": "Recording ",
    "services_video_conference_service.label.conference_7": "Conference ",
    "services_video_conference_service.label.video_conference": "Video Conference ",
    "services_video_conference_service.label.meeting_password": "Meeting Password: ",
    "services_video_conference_service.label.send_email_invitation": "Send email invitation.",
    "services_video_conference_service.label.guest": "Guest",
    "services_video_conference_service.label.send_sms_invitation": "Send SMS invitation.",
    "services_video_conference_service.label.video_conference_1": "Video Conference: ",
    "services_video_conference_service.label.time": "Time: ",
    "services_video_conference_service.label.join": "Join: ",
    "services_tracing_service.label.initialize_opentelemetry_traci": "Initialize OpenTelemetry tracing",
    "services_tracing_service.label.initialize_custom_metrics": "Initialize custom metrics",
    "services_tracing_service.label.set_user_context": "Set user context",
    "services_tracing_service.label.x_correlation_id": "X-Correlation-ID",
    "services_tracing_service.label.x_request_id": "X-Request-ID",
    "services_tracing_service.label.x_user_id": "X-User-ID",
    "services_tracing_service.label.x_user_role": "X-User-Role",
    "services_tracing_service.label.x_correlation_id_1": "X-Correlation-ID",
    "services_tracing_service.label.x_request_id_1": "X-Request-ID",
    "services_tracing_service.label.set_correlation_id": "Set correlation ID",
    "services_tracing_service.label.set_request_id": "Set request ID",
    "services_alert_service.label.alert_severity_levels": "Alert severity levels",
    "services_alert_service.label.available_alert_channels": "Available alert channels",
    "services_alert_service.label.load_email_configuration": "Load email configuration",
    "services_alert_service.label.load_webhook_configuration": "Load webhook configuration",
    "services_alert_service.label.alert_rate_limited": "Alert rate limited: ",
    "services_alert_service.label.alert_sent_via": "Alert sent via ",
    "services_alert_service.label.unsupported_alert_channel": "Unsupported alert channel: ",
    "services_alert_service.label.severity": "Severity",
    "services_alert_service.label.source": "Source",
    "services_alert_service.label.time": "Time",
    "services_alert_service.label.event_type": "Event Type",
    "services_alert_service.label.bdc_alert_system": "BDC Alert System",
    "services_alert_service.label.correlation_id": "Correlation ID",
    "services_alert_service.label.alert": "Alert: ",
    "services_alert_service.label.subject": "Subject",
    "services_alert_service.label.correlation_id_1": "Correlation ID: ",
    "services_alert_service.label.content_type": "Content-Type",
    "services_alert_service.label.authorization": "Authorization",
    "services_alert_service.label.messagecard": "MessageCard",
    "services_alert_service.label.bdc_alert": "BDC Alert: ",
    "services_alert_service.label.source_1": "Source",
    "services_alert_service.label.event_type_1": "Event Type",
    "services_alert_service.label.timestamp": "Timestamp",
    "services_alert_service.label.severity_1": "Severity",
    "services_alert_service.label.correlation_id_2": "Correlation ID",
    "services_alert_service.label.severity_2": "Severity",
    "services_alert_service.label.source_2": "Source",
    "services_alert_service.label.event_type_2": "Event Type",
    "services_alert_service.label.timestamp_1": "Timestamp",
    "services_alert_service.label.bdc_alert_system_1": "BDC Alert System",
    "services_alert_service.label.correlation_id_3": "Correlation ID",
    "services_alert_service.label.get_alert_statistics": "Get alert statistics",
    "services_user_service.label.user_with_email": "User with email ",
    "services_user_service.label.create_user_profile": "Create user profile.",
    "services_user_service.label.get_user_profile": "Get user profile.",
    "services_user_service.label.log_user_activity": "Log user activity.",
    "services_user_service.label.get_user_statistics": "Get user statistics.",
    "services_search_service.label.paginate_a_query": "Paginate a query.",
    "services_adaptive_test_service.label.advanced": "Advanced",
    "services_adaptive_test_service.label.proficient": "Proficient",
    "services_adaptive_test_service.label.below_basic": "Below Basic",
    "services_adaptive_test_service.label.advanced_1": "Advanced",
    "services_adaptive_test_service.label.proficient_1": "Proficient",
    "services_adaptive_test_service.label.review_fundamental_concepts": "Review fundamental concepts",
    "services_adaptive_test_service.label.focus_on_improving": "Focus on improving: ",
    "services_evaluation_service.label.initialize_evaluation_service": "Initialize evaluation service.",
    "services_evaluation_service.label.beneficiary_not_found": "Beneficiary not found",
    "services_evaluation_service.label.test_not_found": "Test not found",
    "services_evaluation_service.label.submit_evaluation_responses": "Submit evaluation responses.",
    "services_gamification_service.label.badge_not_found": "Badge not found",
    "services_gamification_service.label.evaluate_progress_based_condit": "Evaluate progress-based conditions.",
    "services_gamification_service.label.challenge_not_found": "Challenge not found",
    "services_gamification_service.label.challenge_is_full": "Challenge is full",
    "services_gamification_service.label.reward_not_available": "Reward not available",
    "services_gamification_service.label.insufficient_points": "Insufficient points",
    "services_gamification_service.label.get_user_s_goals": "Get user's goals.",
    "services_performance_prediction_service.label.beneficiary": "Beneficiary ",
    "services_performance_prediction_service.label.score_predictor_v": "Score Predictor v",
    "services_performance_prediction_service.label.randomforestregressor": "RandomForestRegressor",
    "services_performance_prediction_service.label.beneficiary_1": "Beneficiary ",
    "services_performance_prediction_service.label.predicted_score_of": "Predicted score of ",
    "services_performance_prediction_service.label.review_fundamental_concepts": "Review fundamental concepts",
    "services_performance_prediction_service.label.practice_question_banks": "Practice question banks",
    "services_performance_prediction_service.label.predicted_score_of_1": "Predicted score of ",
    "services_performance_prediction_service.label.monitor_progress_weekly": "Monitor progress weekly",
    "services_performance_prediction_service.label.supplementary_reading_material": "Supplementary reading materials",
    "services_performance_prediction_service.label.online_practice_tests": "Online practice tests",
    "services_performance_prediction_service.label.only": "Only ",
    "services_performance_prediction_service.label.academic_counseling_services": "Academic counseling services",
    "services_performance_prediction_service.label.alternative_learning_pathways": "Alternative learning pathways",
    "services_performance_prediction_service.label.completion_probability_of": "Completion probability of ",
    "services_performance_prediction_service.label.provide_mentorship_support": "Provide mentorship support",
    "services_performance_prediction_service.label.mentorship_program_enrollment": "Mentorship program enrollment",
    "services_performance_prediction_service.label.time_management_workshops": "Time management workshops",
    "services_performance_prediction_service.label.stress_management_resources": "Stress management resources",
    "services_performance_prediction_service.label.flexible_learning_options": "Flexible learning options",
    "services_performance_prediction_service.label.transportation_assistance_prog": "Transportation assistance programs",
    "services_performance_prediction_service.label.remote_attendance_technology": "Remote attendance technology",
    "services_performance_prediction_service.label.attendance_improvement_needed": "Attendance Improvement Needed",
    "services_performance_prediction_service.label.predicted_attendance_of": "Predicted attendance of ",
    "services_performance_prediction_service.label.attendance_tracking_tools": "Attendance tracking tools",
    "services_performance_prediction_service.label.make_up_session_scheduling": "Make-up session scheduling",
    "services_performance_prediction_service.label.high_risk_alert": "High Risk Alert: ",
    "services_performance_prediction_service.label.performance_predictions_indica": "Performance predictions indicate ",
    "services_performance_prediction_service.label.at_risk_student_alert": "At-Risk Student Alert",
    "services_performance_prediction_service.label.model": "Model ",
    "services_beneficiary_service.label.beneficiary_with_email": "Beneficiary with email ",
    "services_beneficiary_service.label.get_beneficiary_statistics": "Get beneficiary statistics.",
    "services_beneficiary_service.label.get_beneficiary_notes": "Get beneficiary notes.",
    "services_beneficiary_service.label.get_beneficiary_documents": "Get beneficiary documents.",
    "services_beneficiary_service.label.download_a_document": "Download a document.",
    "services_beneficiary_service.label.schedule_an_appointment": "Schedule an appointment.",
    "services_beneficiary_service.label.get_beneficiary_appointments": "Get beneficiary appointments.",
    "services_beneficiary_service.label.cancel_an_appointment": "Cancel an appointment.",
    "services_beneficiary_service.label.beneficiary": "Beneficiary ",
    "services_beneficiary_service.label.beneficiary_profile": "Beneficiary Profile: ",
    "services_beneficiary_service.label.bdc_system": "BDC System",
    "services_beneficiary_service.label.name": "Name: ",
    "services_beneficiary_service.label.email": "Email: ",
    "services_beneficiary_service.label.n_a": "N/A",
    "services_beneficiary_service.label.phone": "Phone: ",
    "services_beneficiary_service.label.n_a_1": "N/A",
    "services_beneficiary_service.label.national_id": "National ID: ",
    "services_beneficiary_service.label.n_a_2": "N/A",
    "services_beneficiary_service.label.date_of_birth": "Date of Birth: ",
    "services_beneficiary_service.label.n_a_3": "N/A",
    "services_beneficiary_service.label.city": "City: ",
    "services_beneficiary_service.label.n_a_4": "N/A",
    "services_beneficiary_service.label.status": "Status: ",
    "services_beneficiary_service.label.enrolled_programs": "Enrolled Programs",
    "services_beneficiary_service.label.recent_notes": "Recent Notes",
    "services_beneficiary_service.label.upcoming_appointments": "Upcoming Appointments",
    "services_beneficiary_service.label.field": "Field",
    "services_beneficiary_service.label.value": "Value",
    "services_beneficiary_service.label.name_1": "Name",
    "services_beneficiary_service.label.email_1": "Email",
    "services_beneficiary_service.label.phone_1": "Phone",
    "services_beneficiary_service.label.national_id_1": "National ID",
    "services_beneficiary_service.label.date_of_birth_1": "Date of Birth",
    "services_beneficiary_service.label.city_1": "City",
    "services_beneficiary_service.label.status_1": "Status",
    "services_beneficiary_service.label.name_2": "Name",
    "services_beneficiary_service.label.email_2": "Email",
    "services_beneficiary_service.label.phone_2": "Phone",
    "services_beneficiary_service.label.national_id_2": "National ID",
    "services_beneficiary_service.label.city_2": "City",
    "services_beneficiary_service.label.status_2": "Status",
    "services_storage_service.label.s3_bucket": "S3_BUCKET",
    "services_storage_service.label.initialize_storage_service": "Initialize storage service.",
    "services_storage_service.label.initialize_app_configuration": "Initialize app configuration.",
    "services_storage_service.label.no_file_provided": "No file provided",
    "services_storage_service.label.no_file_provided_1": "No file provided",
    "services_storage_service.label.save_document_file": "Save document file.",
    "services_ai_report_service.label.beneficiary_not_found": "Beneficiary not found",
    "services_ai_report_service.label.unknown_report_type": "Unknown report type: ",
    "services_ai_report_service.label.program_not_found": "Program not found",
    "services_ai_report_service.label.beneficiary_not_found_1": "Beneficiary not found",
    "services_ai_report_service.label.unknown": "Unknown",
    "services_ai_report_service.label.unknown_1": "Unknown",
    "services_ai_report_service.label.generate_progress_focused_repo": "Generate progress-focused report.",
    "services_ai_report_service.label.generate_assessment_focused_re": "Generate assessment-focused report.",
    "services_ai_report_service.label.within_2_weeks": "Within 2 weeks",
    "services_ai_report_service.label.within_1_month": "Within 1 month",
    "services_ai_report_service.label.ongoing": "Ongoing",
    "services_ai_report_service.label.finding_1": "Finding 1",
    "services_ai_report_service.label.finding_2": "Finding 2",
    "services_ai_report_service.label.recommendation_1": "Recommendation 1",
    "services_ai_report_service.label.recommendation_2": "Recommendation 2",
    "services_ai_report_service.label.generate_progress_specific_rec": "Generate progress-specific recommendations.",
    "services_ai_report_service.label.demonstrating_continuous_impro": "Demonstrating continuous improvement",
    "services_ai_report_service.label.building_foundational_skills": "Building foundational skills",
    "services_ai_report_service.label.generate_assessment_specific_r": "Generate assessment-specific recommendations.",
    "services_ai_report_service.label.program_has": "Program has ",
    "services_ai_report_service.label.average_performance_score": "Average performance score: ",
    "services_ai_report_service.label.average_attendance_rate": "Average attendance rate: ",
    "services_ai_report_service.label.program_completion_rate": "Program completion rate: ",
    "services_ai_report_service.label.address_risk": "Address risk: ",
    "services_ai_report_service.label.low_attendance_rate": "Low attendance rate: ",
    "services_ai_report_service.label.low_average_score": "Low average score: ",
    "services_ai_report_service.label.beneficiary": "Beneficiary: ",
    "services_ai_report_service.label.status": "Status: ",
    "services_ai_report_service.label.assessment_data": "Assessment Data:",
    "services_ai_report_service.label.appointment_data": "Appointment Data:",
    "services_ai_report_service.label.document_data": "Document Data:",
    "services_ai_report_service.label.notes_data": "Notes Data:",
    "services_ai_report_service.label.program_data": "Program Data:",
    "services_ai_report_service.label.engagement_consistency": "Engagement Consistency",
    "services_ai_report_service.label.performance_trajectory": "Performance Trajectory",
    "services_ai_report_service.label.morning_sessions": "Morning sessions",
    "services_ai_report_service.label.mid_week_appointments": "Mid-week appointments",
    "services_document_version_service.label.document": "Document ",
    "services_document_version_service.label.document_1": "Document ",
    "services_document_version_service.label.initial_version": "Initial version",
    "services_message_search_service.label.untitled_thread": "Untitled Thread",
    "services_message_search_service.label.untitled_thread_1": "Untitled Thread",
    "reporting_realtime_service.label.handle_client_disconnection": "Handle client disconnection",
    "reporting_realtime_service.label.subscription_not_found": "Subscription not found",
    "reporting_realtime_service.label.subscription_not_found_1": "Subscription not found",
    "reporting_realtime_service.label.unsupported_subscription_type": "Unsupported subscription type: ",
    "reporting_realtime_service.label.stop_background_workers": "Stop background workers",
    "reporting_visualization_service.label.bar_chart": "Bar Chart",
    "reporting_visualization_service.label.line_chart": "Line Chart",
    "reporting_visualization_service.label.pie_chart": "Pie Chart",
    "reporting_visualization_service.label.doughnut_chart": "Doughnut Chart",
    "reporting_visualization_service.label.scatter_plot": "Scatter Plot",
    "reporting_visualization_service.label.area_chart": "Area Chart",
    "reporting_visualization_service.label.histogram": "Histogram",
    "reporting_visualization_service.label.box_plot": "Box Plot",
    "reporting_visualization_service.label.show_statistical_distribution": "Show statistical distribution",
    "reporting_visualization_service.label.heat_map": "Heat Map",
    "reporting_visualization_service.label.tree_map": "Tree Map",
    "reporting_visualization_service.label.sunburst_chart": "Sunburst Chart",
    "reporting_visualization_service.label.waterfall_chart": "Waterfall Chart",
    "reporting_visualization_service.label.unsupported_chart_type": "Unsupported chart type: ",
    "reporting_visualization_service.label.chart_type": "Chart type ",
    "reporting_visualization_service.label.bar_chart_1": "Bar Chart",
    "reporting_visualization_service.label.line_chart_1": "Line Chart",
    "reporting_visualization_service.label.pie_chart_1": "Pie Chart",
    "reporting_visualization_service.label.scatter_plot_1": "Scatter Plot",
    "reporting_visualization_service.label.area_chart_1": "Area Chart",
    "reporting_visualization_service.label.create_a_histogram": "Create a histogram",
    "reporting_visualization_service.label.histogram_1": "Histogram",
    "reporting_visualization_service.label.frequency": "Frequency",
    "reporting_visualization_service.label.box_plot_1": "Box Plot",
    "reporting_visualization_service.label.create_a_heatmap": "Create a heatmap",
    "reporting_visualization_service.label.viridis": "Viridis",
    "reporting_visualization_service.label.heatmap": "Heatmap",
    "reporting_visualization_service.label.create_a_treemap": "Create a treemap",
    "reporting_visualization_service.label.treemap": "Treemap",
    "reporting_visualization_service.label.sunburst_chart_1": "Sunburst Chart",
    "reporting_visualization_service.label.waterfall": "Waterfall",
    "reporting_visualization_service.label.waterfall_chart_1": "Waterfall Chart",
    "reporting_visualization_service.label.unsupported_map_type": "Unsupported map type: ",
    "reporting_visualization_service.label.lat": "Lat: ",
    "reporting_visualization_service.label.lat_1": "Lat: ",
    "reporting_visualization_service.label.lat_2": "Lat: ",
    "reporting_visualization_service.label.lat_3": "Lat: ",
    "reporting_visualization_service.label.chart_type_1": "Chart type ",
    "reporting_visualization_service.label.column": "Column '",
    "reporting_visualization_service.label.large_dataset": "Large dataset (",
    "reporting___init__.label.reportbuilderservice": "ReportBuilderService",
    "reporting___init__.label.dashboardservice": "DashboardService",
    "reporting___init__.label.reportschedulerservice": "ReportSchedulerService",
    "reporting___init__.label.visualizationservice": "VisualizationService",
    "reporting___init__.label.exportservice": "ExportService",
    "reporting___init__.label.realtimereportingservice": "RealtimeReportingService",
    "reporting_report_builder_service.label.first_name": "First Name",
    "reporting_report_builder_service.label.last_name": "Last Name",
    "reporting_report_builder_service.label.email": "Email",
    "reporting_report_builder_service.label.phone": "Phone",
    "reporting_report_builder_service.label.date_of_birth": "Date of Birth",
    "reporting_report_builder_service.label.gender": "Gender",
    "reporting_report_builder_service.label.status": "Status",
    "reporting_report_builder_service.label.registration_date": "Registration Date",
    "reporting_report_builder_service.label.program_id": "Program ID",
    "reporting_report_builder_service.label.program_name": "Program Name",
    "reporting_report_builder_service.label.description": "Description",
    "reporting_report_builder_service.label.start_date": "Start Date",
    "reporting_report_builder_service.label.end_date": "End Date",
    "reporting_report_builder_service.label.status_1": "Status",
    "reporting_report_builder_service.label.capacity": "Capacity",
    "reporting_report_builder_service.label.enrolled_count": "Enrolled Count",
    "reporting_report_builder_service.label.completion_rate": "Completion Rate",
    "reporting_report_builder_service.label.evaluation_id": "Evaluation ID",
    "reporting_report_builder_service.label.title": "Title",
    "reporting_report_builder_service.label.score": "Score",
    "reporting_report_builder_service.label.max_score": "Max Score",
    "reporting_report_builder_service.label.percentage": "Percentage",
    "reporting_report_builder_service.label.passed": "Passed",
    "reporting_report_builder_service.label.submitted_date": "Submitted Date",
    "reporting_report_builder_service.label.graded_date": "Graded Date",
    "reporting_report_builder_service.label.appointment_id": "Appointment ID",
    "reporting_report_builder_service.label.title_1": "Title",
    "reporting_report_builder_service.label.start_time": "Start Time",
    "reporting_report_builder_service.label.end_time": "End Time",
    "reporting_report_builder_service.label.status_2": "Status",
    "reporting_report_builder_service.label.attendance": "Attendance",
    "reporting_report_builder_service.label.location": "Location",
    "reporting_report_builder_service.label.notes": "Notes",
    "reporting_report_builder_service.label.untitled_report": "Untitled Report",
    "reporting_report_builder_service.label.template_with_id": "Template with ID ",
    "reporting_dashboard_service.label.chart_widget": "Chart Widget",
    "reporting_dashboard_service.label.metric_widget": "Metric Widget",
    "reporting_dashboard_service.label.data_table": "Data Table",
    "reporting_dashboard_service.label.geographic_map": "Geographic Map",
    "reporting_dashboard_service.label.calendar_view": "Calendar View",
    "reporting_dashboard_service.label.progress_tracker": "Progress Tracker",
    "reporting_dashboard_service.label.text_widget": "Text Widget",
    "reporting_dashboard_service.label.untitled_dashboard": "Untitled Dashboard",
    "reporting_dashboard_service.label.dashboard_with_id": "Dashboard with ID ",
    "reporting_dashboard_service.label.get_user_s_dashboards": "Get user's dashboards",
    "reporting_dashboard_service.label.dashboard_with_id_1": "Dashboard with ID ",
    "reporting_dashboard_service.label.widget_with_id": "Widget with ID ",
    "reporting_dashboard_service.label.widget_with_id_1": "Widget with ID ",
    "reporting_dashboard_service.label.field": "Field '",
    "reporting_dashboard_service.label.field_1": "Field '",
    "reporting_dashboard_service.label.field_2": "Field '",
    "reporting_export_service.label.pdf_document": "PDF Document",
    "reporting_export_service.label.excel_workbook": "Excel Workbook",
    "reporting_export_service.label.csv_file": "CSV File",
    "reporting_export_service.label.powerpoint_presentation": "PowerPoint Presentation",
    "reporting_export_service.label.word_document": "Word Document",
    "reporting_export_service.label.json_file": "JSON File",
    "reporting_export_service.label.xml_file": "XML File",
    "reporting_export_service.label.report": "Report",
    "reporting_export_service.label.customtitle": "CustomTitle",
    "reporting_export_service.label.heading1": "Heading1",
    "reporting_export_service.label.generated": "Generated: ",
    "reporting_export_service.label.records": "Records: ",
    "reporting_export_service.label.filters_applied": "Filters Applied: ",
    "reporting_export_service.label.normal": "Normal",
    "reporting_export_service.label.normal_1": "Normal",
    "reporting_export_service.label.helvetica_bold": "Helvetica-Bold",
    "reporting_export_service.label.data": "Data",
    "reporting_export_service.label.f2f2f2": "F2F2F2",
    "reporting_export_service.label.f2f2f2_1": "F2F2F2",
    "reporting_export_service.label.summary": "Summary",
    "reporting_export_service.label.report_title": "Report Title",
    "reporting_export_service.label.report_1": "Report",
    "reporting_export_service.label.generated_1": "Generated",
    "reporting_export_service.label.total_records": "Total Records",
    "reporting_export_service.label.columns": "Columns",
    "reporting_export_service.label.filters_applied_1": "Filters Applied",
    "reporting_export_service.label.data_sources": "Data Sources",
    "reporting_export_service.label.charts": "Charts",
    "reporting_export_service.label.chart": "Chart ",
    "reporting_export_service.label.chart_1": "Chart ",
    "reporting_export_service.label.chart_2": "Chart ",
    "reporting_export_service.label.report_2": "Report",
    "reporting_export_service.label.generated_on": "Generated on ",
    "reporting_export_service.label.report_summary": "Report Summary",
    "reporting_export_service.label.total_records_1": "Total Records: ",
    "reporting_export_service.label.data_sources_1": "Data Sources: ",
    "reporting_export_service.label.filters_applied_2": "Filters Applied: ",
    "reporting_export_service.label.data_table": "Data Table",
    "reporting_export_service.label.chart_3": "Chart",
    "reporting_export_service.label.report_3": "Report",
    "reporting_export_service.label.generated_2": "Generated: ",
    "reporting_export_service.label.records_1": "Records: ",
    "reporting_export_service.label.filters_applied_3": "Filters Applied: ",
    "reporting_export_service.label.data_sources_2": "Data Sources: ",
    "reporting_export_service.label.data_1": "Data",
    "reporting_export_service.label.table_grid": "Table Grid",
    "reporting_export_service.label.note_only_first": "Note: Only first ",
    "reporting_export_service.label.charts_1": "Charts",
    "reporting_export_service.label.report_4": "Report",
    "reporting_export_service.label.report_5": "Report",
    "reporting_export_service.label.encoding": "Encoding '",
    "reporting_scheduler_service.label.untitled_scheduled_report": "Untitled Scheduled Report",
    "reporting_scheduler_service.label.get_scheduled_reports": "Get scheduled reports",
    "reporting_scheduler_service.label.unsupported_delivery_method": "Unsupported delivery method: ",
    "reporting_scheduler_service.label.scheduled_report": "Scheduled Report",
    "reporting_scheduler_service.label.unsupported_http_method": "Unsupported HTTP method: ",
    "reporting_scheduler_service.label.stor": "STOR ",
    "file_upload_image_processor.label.save_processed_image": "Save processed image.",
    "file_upload_image_processor.label.webp": "WebP",
    "file_upload_image_processor.label.webp_1": "WebP",
    "file_upload_file_scanner.label.file_not_found": "File not found: ",
    "file_upload_file_scanner.label.file_size": "File size ",
    "file_upload_file_scanner.label.unknown_file_type": "Unknown file type",
    "file_upload_file_scanner.label.file_extension": "File extension ",
    "file_upload_file_scanner.label.file_type": "File type ",
    "file_upload_file_scanner.label.virus_detected": "Virus detected: ",
    "file_upload_file_scanner.label.clamav_service_unavailable": "ClamAV service unavailable",
    "file_upload_file_scanner.label.file_quarantined": "File quarantined: ",
    "file_upload_storage_manager.label.initialize_encryption_system": "Initialize encryption system.",
    "file_upload_storage_manager.label.serversideencryption": "ServerSideEncryption",
    "file_upload_storage_manager.label.contentdisposition": "ContentDisposition",
    "file_upload_storage_manager.label.aes256": "AES256",
    "file_upload_storage_manager.label.bucket": "Bucket",
    "file_upload_storage_manager.label.key": "Key",
    "file_upload_config.label.s3_bucket": "S3_BUCKET",
    "file_upload_config.label.s3_region": "S3_REGION",
    "file_upload_config.label.s3_access_key": "S3_ACCESS_KEY",
    "file_upload_config.label.s3_secret_key": "S3_SECRET_KEY",
    "file_upload_config.label.true": "True",
    "file_upload_config.label.true_1": "True",
    "file_upload_tests_example.label.test_filename_sanitization": "Test filename sanitization.",
    "file_upload_file_upload_service.label.no_file_provided": "No file provided",
    "file_upload_file_upload_service.label.file_size": "File size ",
    "file_upload_file_upload_service.label.file_not_found": "File not found",
    "file_upload_file_upload_service.label.file_not_found_1": "File not found",
    "file_upload_file_upload_service.label.file_not_found_2": "File not found",
    "file_upload___init__.label.fileuploadservice": "FileUploadService",
    "file_upload___init__.label.filescanner": "FileScanner",
    "file_upload___init__.label.imageprocessor": "ImageProcessor",
    "file_upload___init__.label.storagemanager": "StorageManager",
    "file_upload___init__.label.fileauditlogger": "FileAuditLogger",
    "file_upload___init__.label.fileuploadconfig": "FileUploadConfig",
    "file_upload_api_example.label.no_file_provided": "No file provided",
    "file_upload_api_example.label.user_agent": "User-Agent",
    "file_upload_api_example.label.x_tenant_id": "X-Tenant-ID",
    "file_upload_api_example.label.user_agent_1": "User-Agent",
    "file_upload_api_example.label.no_file_provided_1": "No file provided",
    "file_upload_api_example.label.file_not_found": "File not found",
    "file_upload_api_example.label.x_tenant_id_1": "X-Tenant-ID",
    "file_upload_audit_logger.label.fileversion": "FileVersion",
    "file_upload_audit_logger.label.fileuploadaudit": "FileUploadAudit",
    "file_upload_audit_logger.label.initial_upload": "Initial upload",
    "file_upload_audit_logger.label.file_upload_logged": "File upload logged: ",
    "file_upload_audit_logger.label.file_not_found": "File not found: ",
    "file_upload_audit_logger.label.cleaned_up": "Cleaned up ",
    "core_service_container.label.servicecontainer": "ServiceContainer",
    "core_service_container.label.registered_service": "Registered service: ",
    "core_service_container.label.service": "Service '",
    "core_service_container.label.circular_dependency_detected": "Circular dependency detected: ",
    "core_service_container.label.resolved_service": "Resolved service: ",
    "core_service_container.label.unregistered_service": "Unregistered service: ",
    "core_service_container.label.configure_default_services": "Configure default services.",
    "core_service_container.label.configured_default_services": "Configured default services",
    "core_service_container.label.register_default_services": "Register default services.",
    "core_service_container.label.create_request_scoped_containe": "Create request-scoped container.",
    "core___init__.label.baseservice": "BaseService",
    "core___init__.label.iservice": "IService",
    "core___init__.label.servicecontainer": "ServiceContainer",
    "core___init__.label.servicefactory": "ServiceFactory",
    "core_base_service.label.get_database_session": "Get database session.",
    "core_base_service.label.get_logger_instance": "Get logger instance.",
    "core_base_service.label.cache_hit_for": "Cache hit for ",
    "core_base_service.label.commit_current_transaction": "Commit current transaction.",
    "core_base_service.label.rollback_current_transaction": "Rollback current transaction.",
    "core_service_config.label.serviceconfig": "ServiceConfig",
    "core_service_config.label.configure_repository_services": "Configure repository services.",
    "core_service_config.label.configure_core_services": "Configure core services.",
    "core_service_config.label.configure_domain_specific_serv": "Configure domain-specific services.",
    "core_service_config.label.configure_infrastructure_servi": "Configure infrastructure services.",
    "core_service_factory.label.servicefactory": "ServiceFactory[",
    "core_service_factory.label.creating": "Creating ",
    "core_service_factory.label.creating_1": "Creating ",
    "core_service_factory.label.resolved_dependency": "Resolved dependency '",
    "core_service_factory.label.resolved_dependency_1": "Resolved dependency '",
    "core_service_factory.label.registered": "Registered ",
    "core_service_factory.label.initialize_factory_registry": "Initialize factory registry.",
    "core_service_factory.label.servicefactoryregistry": "ServiceFactoryRegistry",
    "core_service_factory.label.registered_factory": "Registered factory: ",
    "core_user_service_example.label.create_repository_instance": "Create repository instance.",
    "core_user_service_example.label.email_already_exists": "Email already exists",
    "core_user_service_example.label.log_user_activity": "Log user activity.",
    "core_user_service_example.label.get_user_statistics": "Get user statistics.",
    "core_user_service_example.label.test": "Test",
    "core_user_service_example.label.user": "User",
    "core_decorators.label.servicedecorators": "ServiceDecorators",
    "core_decorators.label.service": "Service '",
    "core_decorators.label.service_1": "Service '",
    "core_decorators.label.registered_service_class": "Registered service class: ",
    "core_decorators.label.transaction_committed_for": "Transaction committed for ",
    "core_decorators.label.cache_hit_for": "Cache hit for ",
    "core_decorators.label.cached_result_for": "Cached result for ",
    "core_decorators.label.rate_limit_exceeded": "Rate limit exceeded: ",
    "core_decorators.label.role": "Role '",
    "core_decorators.label.role_1": "Role '",
    "core_decorators.label.queuing_async_task": "Queuing async task: ",
    "gamification_achievement_service.label.user": "User ",
    "gamification_achievement_service.label.awarded_achievement": "Awarded achievement ",
    "gamification_achievement_service.label.check_completion_based_achieve": "Check completion-based achievements",
    "gamification_achievement_service.label.check_streak_based_achievement": "Check streak-based achievements",
    "gamification_achievement_service.label.check_performance_based_achiev": "Check performance-based achievements",
    "gamification_achievement_service.label.check_participation_based_achi": "Check participation-based achievements",
    "gamification_achievement_service.label.check_milestone_based_achievem": "Check milestone-based achievements",
    "gamification_achievement_service.label.check_social_based_achievement": "Check social-based achievements",
    "gamification_learning_path_service.label.learning_path_statuses": "Learning path statuses",
    "gamification_learning_path_service.label.difficulty_levels": "Difficulty levels",
    "gamification_learning_path_service.label.assigned_path": "Assigned path ",
    "gamification_learning_path_service.label.started_learning_path": "Started learning path ",
    "gamification_learning_path_service.label.node_not_found": "Node not found",
    "gamification_learning_path_service.label.adaptive_path": "Adaptive Path: ",
    "gamification_learning_path_service.label.skill_development": "Skill Development: ",
    "gamification_learning_path_service.label.develop_skills_in": "Develop skills in: ",
    "gamification_learning_path_service.label.general_learning": "General Learning",
    "gamification_learning_path_service.label.goal_oriented": "Goal-Oriented: ",
    "gamification_learning_path_service.label.achieve_your_goal": "Achieve your goal: ",
    "gamification_learning_path_service.label.competency_development": "Competency Development",
    "gamification_learning_path_service.label.develop_competencies_in": "Develop competencies in: ",
    "gamification_learning_path_service.label.perfect_for_beginners": "Perfect for beginners",
    "gamification_learning_path_service.label.matches_your_interests": "Matches your interests",
    "gamification_learning_path_service.label.popular_learning_path": "Popular learning path",
    "gamification_learning_path_service.label.introduction": "Introduction",
    "gamification_learning_path_service.label.skill_assessment": "Skill Assessment",
    "gamification_learning_path_service.label.learn": "Learn ",
    "gamification_learning_path_service.label.develop": "Develop ",
    "gamification_gamification_manager.label.triggering_gamification_event": "Triggering gamification event: ",
    "gamification_gamification_manager.label.unknown_event_type": "Unknown event type",
    "gamification_gamification_manager.label.unknown_challenge_type": "Unknown challenge type",
    "gamification_gamification_manager.label.program_master": "Program Master",
    "gamification_gamification_manager.label.perfectionist": "Perfectionist",
    "gamification_gamification_manager.label.perfectionist_1": "Perfectionist",
    "gamification_gamification_manager.label.first_steps": "First Steps",
    "gamification_gamification_manager.label.streak_master": "Streak Master",
    "gamification_gamification_manager.label.knowledge_seeker": "Knowledge Seeker",
    "gamification_xp_service.label.awarded": "Awarded ",
    "gamification_xp_service.label.unknown_activity_type": "Unknown activity type: ",
    "gamification___init__.label.achievementservice": "AchievementService",
    "gamification___init__.label.badgeservice": "BadgeService",
    "gamification___init__.label.xpservice": "XPService",
    "gamification___init__.label.levelservice": "LevelService",
    "gamification___init__.label.progressservice": "ProgressService",
    "gamification___init__.label.leaderboardservice": "LeaderboardService",
    "gamification___init__.label.socialservice": "SocialService",
    "gamification___init__.label.learningpathservice": "LearningPathService",
    "gamification___init__.label.gamificationmanager": "GamificationManager",
    "gamification_progress_service.label.first_steps": "First Steps",
    "gamification_progress_service.label.perfectionist": "Perfectionist",
    "gamification_progress_service.label.week_warrior": "Week Warrior",
    "gamification_progress_service.label.program_master": "Program Master",
    "gamification_progress_service.label.graduate": "Graduate",
    "gamification_progress_service.label.skill_expert": "Skill Expert",
    "gamification_progress_service.label.unknown_milestone_template": "Unknown milestone template: ",
    "gamification_progress_service.label.awarded_milestone": "Awarded milestone ",
    "gamification_progress_service.label.track_participation_progress": "Track participation progress",
    "gamification_progress_service.label.calculate_progress_percentage": "Calculate progress percentage",
    "gamification_social_service.label.team_member_roles": "Team member roles",
    "gamification_social_service.label.challenge_statuses": "Challenge statuses",
    "gamification_social_service.label.user": "User ",
    "gamification_social_service.label.leave_a_team": "Leave a team",
    "gamification_social_service.label.user_1": "User ",
    "gamification_social_service.label.started_team_challenge": "Started team challenge ",
    "gamification_social_service.label.get_team_challenges": "Get team challenges",
    "gamification_social_service.label.user_2": "User ",
    "gamification_social_service.label.get_team_statistics": "Get team statistics",
    "gamification_level_service.label.beginner": "Beginner",
    "gamification_level_service.label.novice": "Novice",
    "gamification_level_service.label.apprentice": "Apprentice",
    "gamification_level_service.label.building_fundamental_skills": "Building fundamental skills",
    "gamification_level_service.label.student": "Student",
    "gamification_level_service.label.practitioner": "Practitioner",
    "gamification_level_service.label.applying_knowledge_effectively": "Applying knowledge effectively",
    "gamification_level_service.label.scholar": "Scholar",
    "gamification_level_service.label.demonstrating_expertise": "Demonstrating expertise",
    "gamification_level_service.label.expert": "Expert",
    "gamification_level_service.label.mastering_advanced_concepts": "Mastering advanced concepts",
    "gamification_level_service.label.mentor": "Mentor",
    "gamification_level_service.label.helping_others_learn": "Helping others learn",
    "gamification_level_service.label.master": "Master",
    "gamification_level_service.label.sage": "Sage",
    "gamification_level_service.label.wisdom_through_experience": "Wisdom through experience",
    "gamification_level_service.label.legend": "Legend",
    "gamification_level_service.label.legendary_achievement_unlocked": "Legendary achievement unlocked",
    "gamification_level_service.label.champion": "Champion",
    "gamification_level_service.label.champion_of_learning": "Champion of learning",
    "gamification_level_service.label.hero": "Hero",
    "gamification_level_service.label.hero_of_knowledge": "Hero of knowledge",
    "gamification_level_service.label.titan": "Titan",
    "gamification_level_service.label.titanic_achievement": "Titanic achievement",
    "gamification_level_service.label.demigod": "Demigod",
    "gamification_level_service.label.near_divine_mastery": "Near-divine mastery",
    "gamification_level_service.label.transcendent": "Transcendent",
    "gamification_level_service.label.transcended_mortal_limits": "Transcended mortal limits",
    "gamification_level_service.label.beginner_1": "Beginner",
    "gamification_level_service.label.unknown": "Unknown",
    "gamification_level_service.label.level": "Level ",
    "gamification_level_service.label.reached_level": "Reached level ",
    "gamification_level_service.label.unlocked_new_title": "Unlocked new title",
    "gamification_level_service.label.custom_avatar": "Custom Avatar",
    "gamification_level_service.label.unlock_avatar_customization": "Unlock avatar customization",
    "gamification_level_service.label.xp_boost": "XP Boost",
    "gamification_level_service.label.mentor_access": "Mentor Access",
    "gamification_level_service.label.legend_status": "Legend Status",
    "gamification_level_service.label.legendary_achievement_unlocked_1": "Legendary achievement unlocked",
    "gamification_level_service.label.golden_badge": "Golden Badge",
    "gamification_level_service.label.hall_of_fame": "Hall of Fame",
    "gamification_level_service.label.get_level_based_leaderboard": "Get level-based leaderboard",
    "gamification_level_service.label.unknown_formula": "Unknown formula: ",
    "gamification_badge_service.label.first_steps": "First Steps",
    "gamification_badge_service.label.perfectionist": "Perfectionist",
    "gamification_badge_service.label.streak_master": "Streak Master",
    "gamification_badge_service.label.social_butterfly": "Social Butterfly",
    "gamification_badge_service.label.knowledge_seeker": "Knowledge Seeker",
    "gamification_badge_service.label.legend": "Legend",
    "gamification_badge_service.label.reach_level_50": "Reach level 50",
    "gamification_badge_service.label.unknown_badge_template": "Unknown badge template: ",
    "gamification_badge_service.label.user": "User ",
    "gamification_badge_service.label.awarded_badge": "Awarded badge ",
    "gamification_badge_service.label.arial_sans_serif": "Arial, sans-serif",
    "gamification_badge_service.label.arial_sans_serif_1": "Arial, sans-serif",
    "gamification_leaderboard_service.label.leaderboard_types": "Leaderboard types",
    "gamification_leaderboard_service.label.leaderboard_time_frames": "Leaderboard time frames",
    "gamification_leaderboard_service.label.get_active_competitions": "Get active competitions",
    "gamification_leaderboard_service.label.calculate_xp_based_leaderboard": "Calculate XP-based leaderboard",
    "gamification_leaderboard_service.label.calculate_level_based_leaderbo": "Calculate level-based leaderboard",
    "gamification_leaderboard_service.label.calculate_badges_based_leaderb": "Calculate badges-based leaderboard",
    "gamification_leaderboard_service.label.calculate_achievements_based_l": "Calculate achievements-based leaderboard",
    "gamification_leaderboard_service.label.calculate_streak_based_leaderb": "Calculate streak-based leaderboard",
    "gamification_leaderboard_service.label.calculate_participation_based": "Calculate participation-based leaderboard",
    "optimization_query_optimizer.label.performance": "Performance: ",
    "optimization_query_optimizer.label.column": "Column ",
    "optimization_query_optimizer.label.foreign_key_column": "Foreign key column ",
    "optimization_query_optimizer.label.explain_analyze": "EXPLAIN ANALYZE ",
    "optimization_query_optimizer.label.optimize_join_operations": "Optimize join operations",
    "optimization_query_optimizer.label.optimize_subqueries": "Optimize subqueries",
    "optimization_api_optimizer.label.performance": "Performance: ",
    "optimization_api_optimizer.label.optimize_response_data": "Optimize response data",
    "optimization_api_optimizer.label.content_encoding": "Content-Encoding",
    "optimization_api_optimizer.label.authorization": "Authorization",
    "optimization_api_optimizer.label.accept": "Accept",
    "optimization_api_optimizer.label.x_cache": "X-Cache",
    "optimization_api_optimizer.label.slow_api_request": "Slow API request: ",
    "optimization_api_optimizer.label.rate_limit_exceeded": "Rate limit exceeded",
    "optimization_api_optimizer.label.x_ratelimit_limit": "X-RateLimit-Limit",
    "optimization_api_optimizer.label.x_ratelimit_remaining": "X-RateLimit-Remaining",
    "optimization_api_optimizer.label.x_ratelimit_reset": "X-RateLimit-Reset",
    "optimization_api_optimizer.label.if_none_match": "If-None-Match",
    "optimization_api_optimizer.label.etag": "ETag",
    "optimization_api_optimizer.label.low_compression_usage": "Low compression usage",
    "optimization_cache_strategy.label.performance": "Performance: ",
    "optimization_cache_strategy.label.warmed": "Warmed ",
    "optimization_cache_strategy.label.implement_cache_aside_pattern": "Implement cache-aside pattern",
    "optimization_cache_strategy.label.high_eviction_rate": "High eviction rate: ",
    "optimization_db_indexing.label.performance": "Performance: ",
    "optimization_db_indexing.label.login_lookups": "Login lookups",
    "optimization_db_indexing.label.role_based_filtering": "Role-based filtering",
    "optimization_db_indexing.label.tenant_user_queries": "Tenant user queries",
    "optimization_db_indexing.label.chronological_queries": "Chronological queries",
    "optimization_db_indexing.label.activity_tracking": "Activity tracking",
    "optimization_db_indexing.label.user_beneficiary_mapping": "User-beneficiary mapping",
    "optimization_db_indexing.label.trainer_assignment_queries": "Trainer assignment queries",
    "optimization_db_indexing.label.tenant_beneficiary_filtering": "Tenant beneficiary filtering",
    "optimization_db_indexing.label.status_timeline_queries": "Status timeline queries",
    "optimization_db_indexing.label.age_based_filtering": "Age-based filtering",
    "optimization_db_indexing.label.beneficiary_schedule": "Beneficiary schedule",
    "optimization_db_indexing.label.trainer_schedule": "Trainer schedule",
    "optimization_db_indexing.label.status_based_scheduling": "Status-based scheduling",
    "optimization_db_indexing.label.time_range_queries": "Time range queries",
    "optimization_db_indexing.label.recurring_appointments": "Recurring appointments",
    "optimization_db_indexing.label.beneficiary_evaluation_history": "Beneficiary evaluation history",
    "optimization_db_indexing.label.status_filtering": "Status filtering",
    "optimization_db_indexing.label.type_based_queries": "Type-based queries",
    "optimization_db_indexing.label.program_status_filtering": "Program status filtering",
    "optimization_db_indexing.label.creator_queries": "Creator queries",
    "optimization_db_indexing.label.date_range_filtering": "Date range filtering",
    "optimization_db_indexing.label.document_timeline": "Document timeline",
    "optimization_db_indexing.label.creator_history": "Creator history",
    "optimization_db_indexing.label.type_filtering": "Type filtering",
    "optimization_db_indexing.label.user_notification_queries": "User notification queries",
    "optimization_db_indexing.label.chronological_sorting": "Chronological sorting",
    "optimization_db_indexing.label.type_filtering_1": "Type filtering",
    "optimization_db_indexing.label.foreign_key_column": "Foreign key column",
    "optimization_db_indexing.label.common_query_pattern": "Common query pattern",
    "optimization_db_indexing.label.search_optimization": "Search optimization",
    "optimization_db_indexing.label.chronological_queries_1": "Chronological queries",
    "optimization_db_indexing.label.status_filtering_1": "Status filtering",
    "optimization_db_indexing.label.active_record_filtering": "Active record filtering",
    "optimization_db_indexing.label.email_lookup": "Email lookup",
    "optimization_db_indexing.label.username_lookup": "Username lookup",
    "optimization_db_indexing.label.role_based_queries": "Role-based queries",
    "optimization_db_indexing.label.trainer_lookup": "Trainer lookup",
    "optimization_db_indexing.label.status_timeline": "Status timeline",
    "optimization_db_indexing.label.program_filtering": "Program filtering",
    "optimization_db_indexing.label.beneficiary_assessments": "Beneficiary assessments",
    "optimization_db_indexing.label.type_filtering_2": "Type filtering",
    "optimization_db_indexing.label.completion_queries": "Completion queries",
    "optimization_db_indexing.label.schedule_lookup": "Schedule lookup",
    "optimization_db_indexing.label.trainer_schedule_1": "Trainer schedule",
    "optimization_db_indexing.label.status_filtering_2": "Status filtering",
    "optimization_db_indexing.label.beneficiary_timeline": "Beneficiary timeline",
    "optimization_db_indexing.label.author_history": "Author history",
    "optimization_db_indexing.label.type_filtering_3": "Type filtering",
    "optimization_db_indexing.label.drop_an_index": "Drop an index",
    "optimization_db_indexing.label.dropped_unused_index": "Dropped unused index ",
    "optimization_db_indexing.label.explain_analyze": "EXPLAIN ANALYZE ",
    "optimization_db_indexing.label.seq_scan": "Seq Scan",
    "video_conference_providers_base_provider.label.provider": "Provider",
    "video_conference_providers_webrtc_provider.label.webrtc_room": "WebRTC room ",
    "video_conference_providers_webrtc_provider.label.webrtc_room_1": "WebRTC room ",
    "video_conference_providers_webrtc_provider.label.room": "Room ",
    "video_conference_providers_webrtc_provider.label.cleaned_up": "Cleaned up ",
    "video_conference_providers___init__.label.videoconferenceproviderinterfa": "VideoConferenceProviderInterface",
    "video_conference_providers___init__.label.zoomprovider": "ZoomProvider",
    "video_conference_providers___init__.label.googlemeetprovider": "GoogleMeetProvider",
    "video_conference_providers___init__.label.microsoftteamsprovider": "MicrosoftTeamsProvider",
    "video_conference_providers___init__.label.webrtcprovider": "WebRTCProvider",
    "video_conference_providers_zoom_provider.label.missing_zoom_configuration": "Missing Zoom configuration: ",
    "video_conference_providers_zoom_provider.label.hs256": "HS256",
    "video_conference_providers_zoom_provider.label.hs256_1": "HS256",
    "video_conference_providers_zoom_provider.label.authorization": "Authorization",
    "video_conference_providers_zoom_provider.label.content_type": "Content-Type",
    "video_conference_providers_zoom_provider.label.authorization_1": "Authorization",
    "video_conference_providers_zoom_provider.label.content_type_1": "Content-Type",
    "video_conference_providers_zoom_provider.label.unsupported_http_method": "Unsupported HTTP method: ",
    "video_conference_providers_microsoft_teams_provider.label.missing_teams_configuration": "Missing Teams configuration: ",
    "video_conference_providers_microsoft_teams_provider.label.content_type": "Content-Type",
    "video_conference_providers_microsoft_teams_provider.label.authorization": "Authorization",
    "video_conference_providers_microsoft_teams_provider.label.content_type_1": "Content-Type",
    "video_conference_providers_microsoft_teams_provider.label.unsupported_http_method": "Unsupported HTTP method: ",
    "v2_auth_service.label.change_user_password": "Change user password.",
    "v2_auth_service.label.log_user_activity": "Log user activity.",
    "v2_user_service.label.user_service_implementation": "User service implementation.",
    "v2_user_service.label.user_with_email": "User with email ",
    "v2_user_service.label.deactivated_user": "Deactivated user: ",
    "v2_user_service.label.activate_a_user": "Activate a user.",
    "v2_user_service.label.activated_user": "Activated user: ",
    "v2_user_service.label.deactivate_a_user": "Deactivate a user.",
    "v2_user_service.label.deactivated_user_1": "Deactivated user: ",
    "v2_user_service.label.change_user_role": "Change user role.",
    "v2_user_service.label.changed_user": "Changed user ",
    "v2_beneficiary_service.label.beneficiary_service_implementa": "Beneficiary service implementation.",
    "v2_beneficiary_service.label.beneficiary_with_email": "Beneficiary with email ",
    "interfaces_user_service_interface.label.user_service_interface": "User service interface.",
    "interfaces_user_service_interface.label.user_service_interface_1": "User service interface.",
    "interfaces_user_service_interface.label.create_user_profile": "Create user profile.",
    "interfaces_user_service_interface.label.get_user_profile": "Get user profile.",
    "interfaces_user_service_interface.label.log_user_activity": "Log user activity.",
    "interfaces_user_service_interface.label.get_user_statistics": "Get user statistics.",
    "interfaces_auth_service_interface.label.authentication_service_interfa": "Authentication service interface.",
    "interfaces_auth_service_interface.label.authentication_service_interfa_1": "Authentication service interface.",
    "interfaces_auth_service_interface.label.register_new_user": "Register new user.",
    "interfaces_auth_service_interface.label.change_user_password": "Change user password.",
    "interfaces_auth_service_interface.label.resend_email_verification": "Resend email verification.",
    "interfaces_beneficiary_service_interface.label.beneficiary_service_interface": "Beneficiary service interface.",
    "interfaces_beneficiary_service_interface.label.beneficiary_service_interface_1": "Beneficiary service interface.",
    "interfaces_beneficiary_service_interface.label.get_beneficiary_statistics": "Get beneficiary statistics.",
    "interfaces_beneficiary_service_interface.label.get_beneficiary_notes": "Get beneficiary notes.",
    "interfaces_beneficiary_service_interface.label.get_beneficiary_documents": "Get beneficiary documents.",
    "interfaces_beneficiary_service_interface.label.download_a_document": "Download a document.",
    "interfaces_beneficiary_service_interface.label.schedule_an_appointment": "Schedule an appointment.",
    "interfaces_beneficiary_service_interface.label.get_beneficiary_appointments": "Get beneficiary appointments.",
    "interfaces_beneficiary_service_interface.label.cancel_an_appointment": "Cancel an appointment.",
    "ai_human_review_workflow.label.exception_captured": "Exception captured: ",
    "ai_human_review_workflow.label.user": "User",
    "ai_human_review_workflow.label.user_1": "User",
    "ai_human_review_workflow.label.workflow": "Workflow ",
    "ai_human_review_workflow.label.workflow_1": "Workflow ",
    "ai_human_review_workflow.label.workflow_2": "Workflow ",
    "ai_human_review_workflow.label.workflow_3": "Workflow ",
    "ai_human_review_workflow.label.workflow_4": "Workflow ",
    "ai_human_review_workflow.label.workflow_5": "Workflow ",
    "ai_human_review_workflow.label.auto_approve_high_confidence_w": "Auto-approve high-confidence workflows",
    "ai_human_review_workflow.label.workflow_6": "Workflow ",
    "ai_human_review_workflow.label.content_auto_approved": "Content Auto-Approved",
    "ai_human_review_workflow.label.your": "Your ",
    "ai_human_review_workflow.label.new": "New ",
    "ai_human_review_workflow.label.content_approved": "Content Approved",
    "ai_human_review_workflow.label.your_1": "Your ",
    "ai_human_review_workflow.label.content_rejected": "Content Rejected",
    "ai_human_review_workflow.label.your_2": "Your ",
    "ai_human_review_workflow.label.revision_requested": "Revision Requested",
    "ai_human_review_workflow.label.your_3": "Your ",
    "ai_human_review_workflow.label.revision_submitted": "Revision Submitted",
    "ai_human_review_workflow.label.revised": "Revised ",
    "ai_human_review_workflow.label.unknown_service_type": "Unknown service type: ",
    "ai_note_analysis.label.ai_generated_content_placehold": "AI-generated content placeholder",
    "ai_note_analysis.label.note": "Note ",
    "ai_recommendations.label.ai_generated_content_placehold": "AI-generated content placeholder",
    "ai_recommendations.label.beneficiary": "Beneficiary ",
    "ai_recommendations.label.temel_beceriler": "Temel beceriler",
    "ai_recommendations.label.ba_lang_kaynaklar": "Başlangıç kaynakları",
    "ai_content_recommendations.label.exception_captured": "Exception captured: ",
    "ai_content_recommendations.label.beneficiary": "Beneficiary ",
    "ai_content_recommendations.label.general_learning_support": "General learning support",
    "ai_content_recommendations.label.none_identified": "None identified",
    "ai_content_recommendations.label.none_identified_1": "None identified",
    "ai_content_recommendations.label.standard_lesson_plan": "Standard Lesson Plan",
    "ai_content_recommendations.label.learning_objectives": "Learning Objectives",
    "ai_content_recommendations.label.materials_needed": "Materials Needed",
    "ai_content_recommendations.label.introduction": "Introduction",
    "ai_content_recommendations.label.main_activity": "Main Activity",
    "ai_content_recommendations.label.assessment": "Assessment",
    "ai_content_recommendations.label.closure": "Closure",
    "ai_content_recommendations.label.standard_assessment": "Standard Assessment",
    "ai_content_recommendations.label.instructions": "Instructions",
    "ai_content_recommendations.label.multiple_choice": "Multiple Choice",
    "ai_content_recommendations.label.short_answer": "Short Answer",
    "ai_content_recommendations.label.essay_questions": "Essay Questions",
    "ai_content_recommendations.label.practical_tasks": "Practical Tasks",
    "ai_content_recommendations.label.progress_report": "Progress Report",
    "ai_content_recommendations.label.executive_summary": "Executive Summary",
    "ai_content_recommendations.label.assessment_results": "Assessment Results",
    "ai_content_recommendations.label.skill_development": "Skill Development",
    "ai_content_recommendations.label.recommendations": "Recommendations",
    "ai_content_recommendations.label.next_steps": "Next Steps",
    "ai_content_recommendations.label.ai_suggested_structure": "AI-Suggested Structure",
    "ai_content_recommendations.label.introduction_1": "Introduction",
    "ai_content_recommendations.label.section": "Section",
    "ai_content_recommendations.label.conclusion": "Conclusion",
    "ai_content_recommendations.label.define_clear_objectives": "Define clear objectives",
    "ai_content_recommendations.label.know_your_audience": "Know your audience",
    "ai_content_recommendations.label.include_relevant_examples": "Include relevant examples",
    "ai_content_recommendations.label.main_content": "Main Content",
    "ai_content_recommendations.label.examples": "Examples",
    "ai_content_recommendations.label.practical_examples": "Practical examples",
    "ai_content_recommendations.label.summary": "Summary",
    "ai_content_recommendations.label.key_takeaways": "Key takeaways",
    "ai_content_recommendations.label.clear_objectives": "Clear objectives",
    "ai_content_recommendations.label.main_content_1": "Main content",
    "ai_content_recommendations.label.summary_1": "Summary",
    "ai_content_recommendations.label.examples_1": "Examples",
    "ai_content_recommendations.label.visuals": "Visuals",
    "ai_content_recommendations.label.activities": "Activities",
    "ai_content_recommendations.label.additional_resources": "Additional resources",
    "ai_content_recommendations.label.advanced_topics": "Advanced topics",
    "ai_content_recommendations.label.skill_development_resources": "Skill Development Resources",
    "ai_content_recommendations.label.improve_core_skills": "Improve core skills",
    "ai_content_recommendations.label.review_fundamentals": "Review fundamentals",
    "ai_content_recommendations.label.practice_exercises": "Practice exercises",
    "ai_content_recommendations.label.advanced_topics_1": "Advanced topics",
    "ai_content_recommendations.label.track_your_progress": "Track your progress",
    "ai_content_recommendations.label.celebrate_improvements": "Celebrate improvements",
    "ai_report_synthesis.label.exception_captured": "Exception captured: ",
    "ai_report_synthesis.label.beneficiary": "Beneficiary ",
    "ai_report_synthesis.label.akademik_ilerleme_zeti": "Akademik ilerleme özeti",
    "ai_report_synthesis.label.g_l_y_n_1": "Güçlü yön 1",
    "ai_report_synthesis.label.g_l_y_n_2": "Güçlü yön 2",
    "ai_report_synthesis.label.geli_im_alan_1": "Gelişim alanı 1",
    "orchestration_tasks.label.task_execution_status": "Task execution status.",
    "orchestration_tasks.label.starting_task": "Starting task: ",
    "orchestration_tasks.label.unknown_task_type": "Unknown task type: ",
    "orchestration_tasks.label.retrying_task": "Retrying task: ",
    "orchestration_tasks.label.handle_classification_tasks": "Handle classification tasks.",
    "orchestration_tasks.label.handle_extraction_tasks": "Handle extraction tasks.",
    "orchestration_tasks.label.handle_custom_tasks": "Handle custom tasks.",
    "orchestration_tasks.label.execute_tasks_sequentially": "Execute tasks sequentially.",
    "orchestration_config.label.orchestrationconfig": "OrchestrationConfig",
    "orchestration_monitoring.label.alert_severity_levels": "Alert severity levels.",
    "orchestration_monitoring.label.acknowledge_the_alert": "Acknowledge the alert.",
    "orchestration_monitoring.label.long_execution_time": "Long Execution Time",
    "orchestration_monitoring.label.low_throughput": "Low Throughput",
    "orchestration_monitoring.label.acknowledge_an_alert": "Acknowledge an alert.",
    "orchestration_monitoring.label.alert": "Alert ",
    "orchestration_monitoring.label.get_execution_history": "Get execution history.",
    "orchestration_monitoring.label.trigger_an_alert": "Trigger an alert.",
    "orchestration_monitoring.label.alert_triggered": "Alert triggered: ",
    "orchestration_cache.label.deserialize_cached_data": "Deserialize cached data.",
    "orchestration_cache.label.entry_size": "Entry size (",
    "orchestration_cache.label.cleaned_up": "Cleaned up ",
    "orchestration_cache.label.get_cache_statistics": "Get cache statistics.",
    "orchestration_cache.label.optimize_cache_performance": "Optimize cache performance.",
    "orchestration___init__.label.pipeline": "Pipeline",
    "orchestration___init__.label.pipelineconfig": "PipelineConfig",
    "orchestration___init__.label.pipelinestatus": "PipelineStatus",
    "orchestration___init__.label.pipelinetask": "PipelineTask",
    "orchestration___init__.label.taskstatus": "TaskStatus",
    "orchestration___init__.label.taskresult": "TaskResult",
    "orchestration___init__.label.pipelineorchestrator": "PipelineOrchestrator",
    "orchestration___init__.label.modelversionmanager": "ModelVersionManager",
    "orchestration___init__.label.humaninloopmanager": "HumanInLoopManager",
    "orchestration___init__.label.resultcache": "ResultCache",
    "orchestration___init__.label.pipelinemonitor": "PipelineMonitor",
    "orchestration_human_loop.label.human_in_the_loop_workflow_man": "Human-in-the-loop workflow management.",
    "orchestration_human_loop.label.human_review_request": "Human review request.",
    "orchestration_human_loop.label.manages_human_in_the_loop_work": "Manages human-in-the-loop workflows.",
    "orchestration_human_loop.label.assigned_review": "Assigned review ",
    "orchestration_human_loop.label.rejected_review": "Rejected review ",
    "orchestration_human_loop.label.cancelled_review": "Cancelled review ",
    "orchestration_human_loop.label.registered_reviewer": "Registered reviewer: ",
    "orchestration_pipeline.label.pipeline_execution_status": "Pipeline execution status.",
    "orchestration_pipeline.label.pipelineconfig": "PipelineConfig",
    "orchestration_pipeline.label.pipelineconfig_1": "PipelineConfig",
    "orchestration_pipeline.label.task": "Task '",
    "orchestration_pipeline.label.dependency": "Dependency '",
    "orchestration_pipeline.label.task_1": "Task '",
    "orchestration_pipeline.label.pipeline": "Pipeline: ",
    "orchestration_pipeline.label.description": "Description: ",
    "orchestration_pipeline.label.stage": "Stage ",
    "orchestration_orchestrator.label.registered_pipeline": "Registered pipeline: ",
    "orchestration_orchestrator.label.pipeline_not_found": "Pipeline not found: ",
    "orchestration_orchestrator.label.started_pipeline_execution": "Started pipeline execution: ",
    "orchestration_orchestrator.label.pipeline_started": "Pipeline started",
    "orchestration_orchestrator.label.executing_stage": "Executing stage ",
    "orchestration_orchestrator.label.task": "Task '",
    "orchestration_orchestrator.label.human_review_rejected": "Human review rejected: ",
    "orchestration_orchestrator.label.human_review_timeout": "Human review timeout",
    "orchestration_orchestrator.label.paused_pipeline_execution": "Paused pipeline execution: ",
    "orchestration_orchestrator.label.resumed_pipeline_execution": "Resumed pipeline execution: ",
    "orchestration_orchestrator.label.cancelled_pipeline_execution": "Cancelled pipeline execution: ",
    "orchestration_orchestrator.label.notify_completion_callbacks": "Notify completion callbacks.",
    "orchestration_orchestrator.label.notify_progress_callbacks": "Notify progress callbacks.",
    "orchestration_versioning.label.version": "Version ",
    "orchestration_versioning.label.registered_model": "Registered model: ",
    "orchestration_versioning.label.deactivated_model_version": "Deactivated model version: ",
    "orchestration_examples.label.gpt_4_language_model": "GPT-4 language model",
    "orchestration_examples.label.gpt_3_5_turbo_model": "GPT-3.5 Turbo model",
    "orchestration_examples.label.alice_johnson": "Alice Johnson",
    "orchestration_examples.label.bob_smith": "Bob Smith",
    "orchestration_examples.label.carol_davis": "Carol Davis",
    "orchestration_examples.label.execution_timeout": "Execution Timeout",
    "orchestration_examples.label.no_recent_executions": "No Recent Executions",
    "orchestration_examples.label.document_processing": "Document Processing",
    "orchestration_examples.label.content_generation": "Content Generation",
    "orchestration_examples.label.data_analysis": "Data Analysis",
    "orchestration_examples.label.demonstrate_human_in_the_loop": "Demonstrate human-in-the-loop workflow.",
    "orchestration_examples.label.sample_contract": "Sample Contract",
    "orchestration_examples.label.company_a": "Company A",
    "orchestration_examples.label.company_b": "Company B",
    "orchestration_examples.label.demonstrate_caching_capabiliti": "Demonstrate caching capabilities.",
    "orchestration_examples.label.unknown": "Unknown",
    "orchestration_examples.label.unknown_1": "Unknown",
    "orchestration_examples.label.north": "North",
    "orchestration_examples.label.south": "South",
    "orchestration_examples.label.east": "East",
    "orchestration_examples.label.west": "West",
    "sync_offline_handler.label.network_connectivity_states": "Network connectivity states",
    "sync_offline_handler.label.starting_offline_handler": "Starting offline handler",
    "sync_offline_handler.label.stopping_offline_handler": "Stopping offline handler",
    "sync_offline_handler.label.queued_operation": "Queued operation ",
    "sync_offline_handler.label.cancelled_operation": "Cancelled operation ",
    "sync_offline_handler.label.executing_operation": "Executing operation ",
    "sync_offline_handler.label.scheduled_retry": "Scheduled retry ",
    "sync_offline_handler.label.loaded": "Loaded ",
    "sync_conflict_resolver.label.detected": "Detected ",
    "sync_conflict_resolver.label.resolving_conflict": "Resolving conflict ",
    "sync_conflict_resolver.label.unresolved_conflict_at": "Unresolved conflict at ",
    "sync_config.label.logging_levels": "Logging levels",
    "sync_config.label.compression_algorithms": "Compression algorithms",
    "sync_config.label.encryption_algorithms": "Encryption algorithms",
    "sync_config.label.websocket_manager_configuratio": "WebSocket manager configuration",
    "sync_config.label.offline_handler_configuration": "Offline handler configuration",
    "sync_config.label.conflict_resolver_configuratio": "Conflict resolver configuration",
    "sync_config.label.version_manager_configuration": "Version manager configuration",
    "sync_config.label.event_sourcing_configuration": "Event sourcing configuration",
    "sync_config.label.device_synchronization_configu": "Device synchronization configuration",
    "sync_config.label.security_related_configuration": "Security-related configuration",
    "sync_config.label.storage_backend_configuration": "Storage backend configuration",
    "sync_config.label.performance_optimization_confi": "Performance optimization configuration",
    "sync_config.label.unknown_config_key": "Unknown config key: ",
    "sync_config.label.unsupported_storage_backend": "Unsupported storage backend: ",
    "sync_config.label.unknown_configuration_section": "Unknown configuration section: ",
    "sync_config.label.unknown_configuration_key": "Unknown configuration key: ",
    "sync_config.label.reloading_configuration": "Reloading configuration",
    "sync_config.label.syncconfig_websocket": "SyncConfig(websocket=",
    "sync_config.label.detailed_string_representation": "Detailed string representation",
    "sync_config.label.syncconfig": "SyncConfig(",
    "sync_version_manager.label.source_version": "Source version ",
    "sync_version_manager.label.target_version": "Target version ",
    "sync_version_manager.label.unsupported_merge_type": "Unsupported merge type: ",
    "sync_version_manager.label.merge_operation": "Merge operation ",
    "sync_version_manager.label.merge_operation_1": "Merge operation ",
    "sync_version_manager.label.branch": "Branch ",
    "sync_version_manager.label.cleaned_up": "Cleaned up ",
    "sync___init__.label.websocketmanager": "WebSocketManager",
    "sync___init__.label.offlinehandler": "OfflineHandler",
    "sync___init__.label.conflictresolver": "ConflictResolver",
    "sync___init__.label.versionmanager": "VersionManager",
    "sync___init__.label.eventstore": "EventStore",
    "sync___init__.label.eventsourcingservice": "EventSourcingService",
    "sync___init__.label.devicesynccoordinator": "DeviceSyncCoordinator",
    "sync___init__.label.syncservice": "SyncService",
    "sync___init__.label.syncconfig": "SyncConfig",
    "sync___init__.label.message": "Message",
    "sync___init__.label.connectionstate": "ConnectionState",
    "sync___init__.label.connectioninfo": "ConnectionInfo",
    "sync___init__.label.operationtype": "OperationType",
    "sync___init__.label.operationpriority": "OperationPriority",
    "sync___init__.label.networkstate": "NetworkState",
    "sync___init__.label.conflicttype": "ConflictType",
    "sync___init__.label.resolutionstrategy": "ResolutionStrategy",
    "sync___init__.label.conflictresolution": "ConflictResolution",
    "sync___init__.label.changetype": "ChangeType",
    "sync___init__.label.mergetype": "MergeType",
    "sync___init__.label.version": "Version",
    "sync___init__.label.branch": "Branch",
    "sync___init__.label.event": "Event",
    "sync___init__.label.eventtype": "EventType",
    "sync___init__.label.snapshot": "Snapshot",
    "sync___init__.label.deviceinfo": "DeviceInfo",
    "sync___init__.label.devicetype": "DeviceType",
    "sync___init__.label.datacategory": "DataCategory",
    "sync___init__.label.syncpriority": "SyncPriority",
    "sync___init__.label.syncrequest": "SyncRequest",
    "sync___init__.label.syncresponse": "SyncResponse",
    "sync___init__.label.syncservicestate": "SyncServiceState",
    "sync___init__.label.loglevel": "LogLevel",
    "sync___init__.label.compressiontype": "CompressionType",
    "sync___init__.label.encryptiontype": "EncryptionType",
    "sync___init__.label.syncexception": "SyncException",
    "sync___init__.label.connectionexception": "ConnectionException",
    "sync___init__.label.authenticationexception": "AuthenticationException",
    "sync___init__.label.conflictresolutionexception": "ConflictResolutionException",
    "sync___init__.label.versionexception": "VersionException",
    "sync___init__.label.eventexception": "EventException",
    "sync___init__.label.devicesyncexception": "DeviceSyncException",
    "sync___init__.label.offlineexception": "OfflineException",
    "sync___init__.label.configurationexception": "ConfigurationException",
    "sync___init__.label.storageexception": "StorageException",
    "sync___init__.label.ratelimitexception": "RateLimitException",
    "sync___init__.label.timeoutexception": "TimeoutException",
    "sync___init__.label.circularbuffer": "CircularBuffer",
    "sync___init__.label.ratelimiter": "RateLimiter",
    "sync_event_sourcing.label.appended_event": "Appended event ",
    "sync_event_sourcing.label.compress_snapshot_data": "Compress snapshot data",
    "sync_event_sourcing.label.decompress_snapshot_data": "Decompress snapshot data",
    "sync_event_sourcing.label.notify_event_subscribers": "Notify event subscribers",
    "sync_event_sourcing.label.replayed": "Replayed ",
    "sync_sync_service.label.synchronization_service_states": "Synchronization service states",
    "sync_sync_service.label.initializing_synchronization_s": "Initializing synchronization service",
    "sync_sync_service.label.user": "User",
    "sync_sync_service.label.document": "Document",
    "sync_sync_service.label.stopping_synchronization_servi": "Stopping synchronization service",
    "sync_sync_service.label.synchronization_service_stoppe": "Synchronization service stopped",
    "sync_sync_service.label.entity": "Entity ",
    "sync_sync_service.label.version_not_found": "Version not found",
    "sync_sync_service.label.apply_rate_limiting": "Apply rate limiting",
    "sync_sync_service.label.monitor_service_health": "Monitor service health",
    "sync_sync_service.label.unhealthy_components": "Unhealthy components: ",
    "sync_sync_service.label.sync_metrics": "Sync metrics: ",
    "sync_sync_service.label.unregister_a_device": "Unregister a device",
    "sync_sync_service.label.get_service_metrics": "Get service metrics",
    "sync_sync_service.label.get_service_status": "Get service status",
    "sync_sync_service.label.add_custom_middleware": "Add custom middleware",
    "sync_utils.label.unsupported_hash_algorithm": "Unsupported hash algorithm: ",
    "sync_utils.label.unsupported_compression_method": "Unsupported compression method: ",
    "sync_utils.label.unsupported_compression_method_1": "Unsupported compression method: ",
    "sync_utils.label.attempt": "Attempt ",
    "sync_device_sync.label.device_status_states": "Device status states",
    "sync_device_sync.label.synchronization_priority_level": "Synchronization priority levels",
    "sync_device_sync.label.registered_device": "Registered device ",
    "sync_device_sync.label.unregister_a_device": "Unregister a device",
    "sync_device_sync.label.unregistered_device": "Unregistered device ",
    "sync_device_sync.label.source_device": "Source device ",
    "sync_device_sync.label.executing_sync_operation": "Executing sync operation ",
    "sync_device_sync.label.device": "Device ",
    "sync_device_sync.label.marked_device": "Marked device ",
    "sync_device_sync.label.get_synchronization_status": "Get synchronization status",
    "sync_websocket_manager.label.websocket_connection_states": "WebSocket connection states",
    "sync_websocket_manager.label.websocket_message_structure": "WebSocket message structure",
    "sync_websocket_manager.label.starting_websocket_manager": "Starting WebSocket manager",
    "sync_websocket_manager.label.stopping_websocket_manager": "Stopping WebSocket manager",
    "sync_websocket_manager.label.new_websocket_connection": "New WebSocket connection: ",
    "sync_websocket_manager.label.handle_authentication_message": "Handle authentication message",
    "sync_websocket_manager.label.hs256": "HS256",
    "sync_websocket_manager.label.connection": "Connection ",
    "sync_websocket_manager.label.connection_1": "Connection ",
    "sync_websocket_manager.label.connection_2": "Connection ",
    "sync_websocket_manager.label.handle_ping_message": "Handle ping message",
    "sync_websocket_manager.label.active_connections": "Active connections: ",
    "sync_websocket_manager.label.cleaned_up_connection": "Cleaned up connection: ",
    "sync_websocket_manager.label.get_connection_statistics": "Get connection statistics",
    "i18n_language_detection_service.label.language_detection_result": "Language detection result.",
    "i18n_language_detection_service.label.english": "English",
    "i18n_language_detection_service.label.english_1": "English",
    "i18n_language_detection_service.label.turkish": "Turkish",
    "i18n_language_detection_service.label.t_rk_e": "Türkçe",
    "i18n_language_detection_service.label.arabic": "Arabic",
    "i18n_language_detection_service.label.spanish": "Spanish",
    "i18n_language_detection_service.label.espa_ol": "Español",
    "i18n_language_detection_service.label.french": "French",
    "i18n_language_detection_service.label.fran_ais": "Français",
    "i18n_language_detection_service.label.german": "German",
    "i18n_language_detection_service.label.deutsch": "Deutsch",
    "i18n_language_detection_service.label.russian": "Russian",
    "i18n_language_detection_service.label.": "Русский",
    "i18n___init__.label.internationalization_services": "Internationalization services package.",
    "i18n___init__.label.languagedetectionservice": "LanguageDetectionService",
    "i18n___init__.label.translationservice": "TranslationService",
    "i18n___init__.label.localeservice": "LocaleService",
    "i18n___init__.label.contenttranslationservice": "ContentTranslationService",
    "i18n_i18n_manager.label.comprehensive_internationaliza": "Comprehensive internationalization manager.",
    "i18n_i18n_manager.label.initialize_i18n_manager": "Initialize I18n Manager.",
    "i18n_i18n_manager.label.project_not_found": "Project not found",
    "i18n_i18n_manager.label.flatten_nested_dictionary": "Flatten nested dictionary.",
    "i18n_translation_service.label.initialize_translation_service": "Initialize translation service.",
    "i18n_translation_service.label.save": "Save",
    "i18n_translation_service.label.cancel": "Cancel",
    "i18n_translation_service.label.edit": "Edit",
    "i18n_translation_service.label.create": "Create",
    "i18n_translation_service.label.search": "Search",
    "i18n_translation_service.label.filter": "Filter",
    "i18n_translation_service.label.loading": "Loading...",
    "i18n_translation_service.label.warning": "Warning",
    "i18n_translation_service.label.confirm": "Confirm",
    "i18n_translation_service.label.yes": "Yes",
    "i18n_translation_service.label.submit": "Submit",
    "i18n_translation_service.label.reset": "Reset",
    "i18n_translation_service.label.close": "Close",
    "i18n_translation_service.label.back": "Back",
    "i18n_translation_service.label.next": "Next",
    "i18n_translation_service.label.previous": "Previous",
    "i18n_translation_service.label.home": "Home",
    "i18n_translation_service.label.dashboard": "Dashboard",
    "i18n_translation_service.label.profile": "Profile",
    "i18n_translation_service.label.settings": "Settings",
    "i18n_translation_service.label.logout": "Logout",
    "i18n_translation_service.label.login": "Login",
    "i18n_translation_service.label.register": "Register",
    "i18n_translation_service.label.email": "Email",
    "i18n_translation_service.label.password": "Password",
    "i18n_translation_service.label.confirm_password": "Confirm Password",
    "i18n_translation_service.label.remember_me": "Remember Me",
    "i18n_translation_service.label.forgot_password": "Forgot Password?",
    "i18n_translation_service.label.reset_password": "Reset Password",
    "i18n_translation_service.label.beneficiaries": "Beneficiaries",
    "i18n_translation_service.label.programs": "Programs",
    "i18n_translation_service.label.appointments": "Appointments",
    "i18n_translation_service.label.documents": "Documents",
    "i18n_translation_service.label.reports": "Reports",
    "i18n_translation_service.label.calendar": "Calendar",
    "i18n_translation_service.label.messages": "Messages",
    "i18n_translation_service.label.notifications": "Notifications",
    "i18n_translation_service.label.analytics": "Analytics",
    "i18n_translation_service.label.administration": "Administration",
    "i18n_translation_service.label.users": "Users",
    "i18n_translation_service.label.tenants": "Tenants",
    "i18n_translation_service.label.first_name": "First Name",
    "i18n_translation_service.label.last_name": "Last Name",
    "i18n_translation_service.label.phone": "Phone",
    "i18n_translation_service.label.address": "Address",
    "i18n_translation_service.label.city": "City",
    "i18n_translation_service.label.state": "State",
    "i18n_translation_service.label.country": "Country",
    "i18n_translation_service.label.zip_code": "ZIP Code",
    "i18n_translation_service.label.organization": "Organization",
    "i18n_translation_service.label.biography": "Biography",
    "i18n_translation_service.label.date_of_birth": "Date of Birth",
    "i18n_translation_service.label.gender": "Gender",
    "i18n_translation_service.label.emergency_contact": "Emergency Contact",
    "i18n_translation_service.label.notes": "Notes",
    "i18n_translation_service.label.description": "Description",
    "i18n_translation_service.label.title": "Title",
    "i18n_translation_service.label.start_date": "Start Date",
    "i18n_translation_service.label.end_date": "End Date",
    "i18n_translation_service.label.status": "Status",
    "i18n_translation_service.label.no_data_available": "No data available",
    "i18n_translation_service.label.no_results_found": "No results found",
    "i18n_translation_service.label.permission_denied": "Permission denied",
    "i18n_translation_service.label.passwords_don_t_match": "Passwords don't match",
    "i18n_translation_service.label.resource_not_found": "Resource not found",
    "i18n_translation_service.label.unauthorized_access": "Unauthorized access",
    "i18n_translation_service.label.access_forbidden": "Access forbidden",
    "i18n_translation_service.label.request_timeout": "Request timeout",
    "i18n_translation_service.label.today": "Today",
    "i18n_translation_service.label.yesterday": "Yesterday",
    "i18n_translation_service.label.tomorrow": "Tomorrow",
    "i18n_translation_service.label.this_week": "This Week",
    "i18n_translation_service.label.last_week": "Last Week",
    "i18n_translation_service.label.next_week": "Next Week",
    "i18n_translation_service.label.this_month": "This Month",
    "i18n_translation_service.label.last_month": "Last Month",
    "i18n_translation_service.label.next_month": "Next Month",
    "i18n_translation_service.label.this_year": "This Year",
    "i18n_translation_service.label.morning": "Morning",
    "i18n_translation_service.label.afternoon": "Afternoon",
    "i18n_translation_service.label.evening": "Evening",
    "i18n_translation_service.label.night": "Night",
    "i18n_translation_service.label.kaydet": "Kaydet",
    "i18n_translation_service.label.ptal": "İptal",
    "i18n_translation_service.label.sil": "Sil",
    "i18n_translation_service.label.d_zenle": "Düzenle",
    "i18n_translation_service.label.olu_tur": "Oluştur",
    "i18n_translation_service.label.g_ncelle": "Güncelle",
    "i18n_translation_service.label.ara": "Ara",
    "i18n_translation_service.label.filtrele": "Filtrele",
    "i18n_translation_service.label.y_kleniyor": "Yükleniyor...",
    "i18n_translation_service.label.hata": "Hata",
    "i18n_translation_service.label.ba_ar_l": "Başarılı",
    "i18n_translation_service.label.uyar": "Uyarı",
    "i18n_translation_service.label.bilgi": "Bilgi",
    "i18n_translation_service.label.onayla": "Onayla",
    "i18n_translation_service.label.evet": "Evet",
    "i18n_translation_service.label.hay_r": "Hayır",
    "i18n_translation_service.label.tamam": "Tamam",
    "i18n_translation_service.label.g_nder": "Gönder",
    "i18n_translation_service.label.s_f_rla": "Sıfırla",
    "i18n_translation_service.label.kapat": "Kapat",
    "i18n_translation_service.label.geri": "Geri",
    "i18n_translation_service.label.leri": "İleri",
    "i18n_translation_service.label.nceki": "Önceki",
    "i18n_translation_service.label.ana_sayfa": "Ana Sayfa",
    "i18n_translation_service.label.kontrol_paneli": "Kontrol Paneli",
    "i18n_translation_service.label.profil": "Profil",
    "i18n_translation_service.label.ayarlar": "Ayarlar",
    "i18n_translation_service.label.k": "Çıkış",
    "i18n_translation_service.label.giri": "Giriş",
    "i18n_translation_service.label.kay_t_ol": "Kayıt Ol",
    "i18n_translation_service.label.e_posta": "E-posta",
    "i18n_translation_service.label.ifre": "Şifre",
    "i18n_translation_service.label.ifreyi_onayla": "Şifreyi Onayla",
    "i18n_translation_service.label.beni_hat_rla": "Beni Hatırla",
    "i18n_translation_service.label.ifremi_unuttum": "Şifremi Unuttum",
    "i18n_translation_service.label.ifreyi_s_f_rla": "Şifreyi Sıfırla",
    "i18n_translation_service.label.giri_ba_ar_l": "Giriş başarılı",
    "i18n_translation_service.label.giri_ba_ar_s_z": "Giriş başarısız",
    "i18n_translation_service.label.k_ba_ar_l": "Çıkış başarılı",
    "i18n_translation_service.label.kay_t_ba_ar_l": "Kayıt başarılı",
    "i18n_translation_service.label.ge_ersiz_kimlik_bilgileri": "Geçersiz kimlik bilgileri",
    "i18n_translation_service.label.ifre_ba_ar_yla_g_ncellendi": "Şifre başarıyla güncellendi",
    "i18n_translation_service.label.guardar": "Guardar",
    "i18n_translation_service.label.cancelar": "Cancelar",
    "i18n_translation_service.label.eliminar": "Eliminar",
    "i18n_translation_service.label.editar": "Editar",
    "i18n_translation_service.label.crear": "Crear",
    "i18n_translation_service.label.actualizar": "Actualizar",
    "i18n_translation_service.label.buscar": "Buscar",
    "i18n_translation_service.label.filtrar": "Filtrar",
    "i18n_translation_service.label.cargando": "Cargando...",
    "i18n_translation_service.label.xito": "Éxito",
    "i18n_translation_service.label.advertencia": "Advertencia",
    "i18n_translation_service.label.informaci_n": "Información",
    "i18n_translation_service.label.confirmar": "Confirmar",
    "i18n_translation_service.label.enviar": "Enviar",
    "i18n_translation_service.label.restablecer": "Restablecer",
    "i18n_translation_service.label.cerrar": "Cerrar",
    "i18n_translation_service.label.atr_s": "Atrás",
    "i18n_translation_service.label.siguiente": "Siguiente",
    "i18n_translation_service.label.anterior": "Anterior",
    "i18n_translation_service.label.inicio": "Inicio",
    "i18n_translation_service.label.panel": "Panel",
    "i18n_translation_service.label.perfil": "Perfil",
    "i18n_translation_service.label.configuraci_n": "Configuración",
    "i18n_translation_service.label.cerrar_sesi_n": "Cerrar Sesión",
    "i18n_translation_service.label.iniciar_sesi_n": "Iniciar Sesión",
    "i18n_translation_service.label.registrarse": "Registrarse",
    "i18n_translation_service.label.enregistrer": "Enregistrer",
    "i18n_translation_service.label.annuler": "Annuler",
    "i18n_translation_service.label.supprimer": "Supprimer",
    "i18n_translation_service.label.modifier": "Modifier",
    "i18n_translation_service.label.cr_er": "Créer",
    "i18n_translation_service.label.mettre_jour": "Mettre à jour",
    "i18n_translation_service.label.rechercher": "Rechercher",
    "i18n_translation_service.label.filtrer": "Filtrer",
    "i18n_translation_service.label.chargement": "Chargement...",
    "i18n_translation_service.label.erreur": "Erreur",
    "i18n_translation_service.label.succ_s": "Succès",
    "i18n_translation_service.label.avertissement": "Avertissement",
    "i18n_translation_service.label.confirmer": "Confirmer",
    "i18n_translation_service.label.oui": "Oui",
    "i18n_translation_service.label.non": "Non",
    "i18n_translation_service.label.soumettre": "Soumettre",
    "i18n_translation_service.label.r_initialiser": "Réinitialiser",
    "i18n_translation_service.label.fermer": "Fermer",
    "i18n_translation_service.label.retour": "Retour",
    "i18n_translation_service.label.suivant": "Suivant",
    "i18n_translation_service.label.pr_c_dent": "Précédent",
    "i18n_translation_service.label.accueil": "Accueil",
    "i18n_translation_service.label.tableau_de_bord": "Tableau de bord",
    "i18n_translation_service.label.profil_1": "Profil",
    "i18n_translation_service.label.param_tres": "Paramètres",
    "i18n_translation_service.label.d_connexion": "Déconnexion",
    "i18n_translation_service.label.connexion": "Connexion",
    "i18n_translation_service.label.s_inscrire": "S'inscrire",
    "i18n_translation_service.label.speichern": "Speichern",
    "i18n_translation_service.label.abbrechen": "Abbrechen",
    "i18n_translation_service.label.l_schen": "Löschen",
    "i18n_translation_service.label.bearbeiten": "Bearbeiten",
    "i18n_translation_service.label.erstellen": "Erstellen",
    "i18n_translation_service.label.aktualisieren": "Aktualisieren",
    "i18n_translation_service.label.suchen": "Suchen",
    "i18n_translation_service.label.filtern": "Filtern",
    "i18n_translation_service.label.laden": "Laden...",
    "i18n_translation_service.label.fehler": "Fehler",
    "i18n_translation_service.label.erfolg": "Erfolg",
    "i18n_translation_service.label.warnung": "Warnung",
    "i18n_translation_service.label.best_tigen": "Bestätigen",
    "i18n_translation_service.label.nein": "Nein",
    "i18n_translation_service.label.senden": "Senden",
    "i18n_translation_service.label.zur_cksetzen": "Zurücksetzen",
    "i18n_translation_service.label.schlie_en": "Schließen",
    "i18n_translation_service.label.zur_ck": "Zurück",
    "i18n_translation_service.label.weiter": "Weiter",
    "i18n_translation_service.label.vorherige": "Vorherige",
    "i18n_translation_service.label.startseite": "Startseite",
    "i18n_translation_service.label.dashboard_1": "Dashboard",
    "i18n_translation_service.label.profil_2": "Profil",
    "i18n_translation_service.label.einstellungen": "Einstellungen",
    "i18n_translation_service.label.abmelden": "Abmelden",
    "i18n_translation_service.label.anmelden": "Anmelden",
    "i18n_translation_service.label.registrieren": "Registrieren",
    "i18n_translation_service.label.": "Сохранить",
    "i18n_translation_service.label._1": "Отменить",
    "i18n_translation_service.label._2": "Удалить",
    "i18n_translation_service.label._3": "Редактировать",
    "i18n_translation_service.label._4": "Создать",
    "i18n_translation_service.label._5": "Обновить",
    "i18n_translation_service.label._6": "Поиск",
    "i18n_translation_service.label._7": "Фильтр",
    "i18n_translation_service.label._8": "Загрузка...",
    "i18n_translation_service.label._9": "Ошибка",
    "i18n_translation_service.label._10": "Успех",
    "i18n_translation_service.label._11": "Предупреждение",
    "i18n_translation_service.label._12": "Информация",
    "i18n_translation_service.label._13": "Подтвердить",
    "i18n_translation_service.label._14": "Нет",
    "i18n_translation_service.label._15": "Отправить",
    "i18n_translation_service.label._16": "Сбросить",
    "i18n_translation_service.label._17": "Закрыть",
    "i18n_translation_service.label._18": "Назад",
    "i18n_translation_service.label._19": "Далее",
    "i18n_translation_service.label._20": "Предыдущий",
    "i18n_translation_service.label._21": "Главная",
    "i18n_translation_service.label._22": "Панель управления",
    "i18n_translation_service.label._23": "Профиль",
    "i18n_translation_service.label._24": "Настройки",
    "i18n_translation_service.label._25": "Выйти",
    "i18n_translation_service.label._26": "Войти",
    "i18n_translation_service.label._27": "Регистрация",
    "i18n_locale_service.label.america_new_york": "America/New_York",
    "i18n_locale_service.label.europe_istanbul": "Europe/Istanbul",
    "i18n_locale_service.label.asia_riyadh": "Asia/Riyadh",
    "i18n_locale_service.label.europe_madrid": "Europe/Madrid",
    "i18n_locale_service.label.europe_paris": "Europe/Paris",
    "i18n_locale_service.label.europe_berlin": "Europe/Berlin",
    "i18n_locale_service.label.europe_moscow": "Europe/Moscow",
    "i18n_locale_service.label.initialize_locale_service": "Initialize locale service.",
    "i18n_locale_service.label.monday": "Monday",
    "i18n_locale_service.label.tuesday": "Tuesday",
    "i18n_locale_service.label.wednesday": "Wednesday",
    "i18n_locale_service.label.thursday": "Thursday",
    "i18n_locale_service.label.friday": "Friday",
    "i18n_locale_service.label.saturday": "Saturday",
    "i18n_locale_service.label.sunday": "Sunday",
    "i18n_locale_service.label.monday_1": "Monday",
    "i18n_locale_service.label.tuesday_1": "Tuesday",
    "i18n_locale_service.label.wednesday_1": "Wednesday",
    "i18n_locale_service.label.thursday_1": "Thursday",
    "i18n_locale_service.label.friday_1": "Friday",
    "i18n_locale_service.label.saturday_1": "Saturday",
    "i18n_locale_service.label.sunday_1": "Sunday",
    "i18n_locale_service.label.january": "January",
    "i18n_locale_service.label.february": "February",
    "i18n_locale_service.label.march": "March",
    "i18n_locale_service.label.april": "April",
    "i18n_locale_service.label.may": "May",
    "i18n_locale_service.label.june": "June",
    "i18n_locale_service.label.july": "July",
    "i18n_locale_service.label.august": "August",
    "i18n_locale_service.label.september": "September",
    "i18n_locale_service.label.october": "October",
    "i18n_locale_service.label.november": "November",
    "i18n_locale_service.label.december": "December",
    "i18n_locale_service.label.january_1": "January",
    "i18n_locale_service.label.february_1": "February",
    "i18n_locale_service.label.march_1": "March",
    "i18n_locale_service.label.april_1": "April",
    "i18n_locale_service.label.may_1": "May",
    "i18n_locale_service.label.june_1": "June",
    "i18n_locale_service.label.july_1": "July",
    "i18n_locale_service.label.august_1": "August",
    "i18n_locale_service.label.september_1": "September",
    "i18n_locale_service.label.october_1": "October",
    "i18n_locale_service.label.november_1": "November",
    "i18n_locale_service.label.december_1": "December",
    "i18n_locale_service.label.mon": "Mon",
    "i18n_locale_service.label.tue": "Tue",
    "i18n_locale_service.label.wed": "Wed",
    "i18n_locale_service.label.thu": "Thu",
    "i18n_locale_service.label.fri": "Fri",
    "i18n_locale_service.label.sat": "Sat",
    "i18n_locale_service.label.sun": "Sun",
    "i18n_locale_service.label.monday_2": "Monday",
    "i18n_locale_service.label.tuesday_2": "Tuesday",
    "i18n_locale_service.label.wednesday_2": "Wednesday",
    "i18n_locale_service.label.thursday_2": "Thursday",
    "i18n_locale_service.label.friday_2": "Friday",
    "i18n_locale_service.label.saturday_2": "Saturday",
    "i18n_locale_service.label.sunday_2": "Sunday",
    "i18n_locale_service.label.jan": "Jan",
    "i18n_locale_service.label.feb": "Feb",
    "i18n_locale_service.label.mar": "Mar",
    "i18n_locale_service.label.apr": "Apr",
    "i18n_locale_service.label.may_2": "May",
    "i18n_locale_service.label.jun": "Jun",
    "i18n_locale_service.label.jul": "Jul",
    "i18n_locale_service.label.aug": "Aug",
    "i18n_locale_service.label.sep": "Sep",
    "i18n_locale_service.label.oct": "Oct",
    "i18n_locale_service.label.nov": "Nov",
    "i18n_locale_service.label.dec": "Dec",
    "i18n_locale_service.label.january_2": "January",
    "i18n_locale_service.label.february_2": "February",
    "i18n_locale_service.label.march_2": "March",
    "i18n_locale_service.label.april_2": "April",
    "i18n_locale_service.label.may_3": "May",
    "i18n_locale_service.label.june_2": "June",
    "i18n_locale_service.label.july_2": "July",
    "i18n_locale_service.label.august_2": "August",
    "i18n_locale_service.label.september_2": "September",
    "i18n_locale_service.label.october_2": "October",
    "i18n_locale_service.label.november_2": "November",
    "i18n_locale_service.label.december_2": "December",
    "i18n_content_translation_service.label.translation_request_data": "Translation request data.",
    "i18n_content_translation_service.label.translation_response_data": "Translation response data.",
    "i18n_content_translation_service.label.user": "User",
    "i18n_content_translation_service.label.user_1": "User",
    "i18n_content_translation_service.label.convert_to_dictionary": "Convert to dictionary.",
    "i18n_content_translation_service.label.user_2": "User",
    "analytics_config.label.environment_types": "Environment types",
    "analytics_config.label.real_time_dashboard_configurat": "Real-time dashboard configuration",
    "analytics_config.label.predictive_analytics_configura": "Predictive analytics configuration",
    "analytics_config.label.performance_metrics_configurat": "Performance metrics configuration",
    "analytics_config.label.report_generation_configuratio": "Report generation configuration",
    "analytics_config.label.data_export_configuration": "Data export configuration",
    "analytics_config.label.alert_system_configuration": "Alert system configuration",
    "analytics_config.label.load_database_configuration": "Load database configuration",
    "analytics_config.label.load_dashboard_configuration": "Load dashboard configuration",
    "analytics_config.label.load_security_configuration": "Load security configuration",
    "analytics_config.label.get_chart_specific_configurati": "Get chart-specific configuration",
    "analytics_config.label.rdbu": "RdBu",
    "analytics_config.label.analyticsconfig": "AnalyticsConfig",
    "analytics_real_time_dashboard.label.active_users": "Active Users",
    "analytics_real_time_dashboard.label.new_registrations": "New Registrations",
    "analytics_real_time_dashboard.label.total_users": "Total Users",
    "analytics_real_time_dashboard.label.appointments_scheduled": "Appointments Scheduled",
    "analytics_real_time_dashboard.label.appointments_cancelled": "Appointments Cancelled",
    "analytics_real_time_dashboard.label.evaluations_submitted": "Evaluations Submitted",
    "analytics_real_time_dashboard.label.average_score": "Average Score",
    "analytics_real_time_dashboard.label.database_connections": "Database Connections",
    "analytics_real_time_dashboard.label.memory_usage": "Memory Usage (%)",
    "analytics_real_time_dashboard.label.cpu_usage": "CPU Usage (%)",
    "analytics_real_time_dashboard.label.page_views": "Page Views",
    "analytics_real_time_dashboard.label.throughput_req_sec": "Throughput (req/sec)",
    "analytics_real_time_dashboard.label.unsupported_chart_type": "Unsupported chart type: ",
    "analytics_real_time_dashboard.label.category_a": "Category A",
    "analytics_real_time_dashboard.label.category_b": "Category B",
    "analytics_real_time_dashboard.label.category_c": "Category C",
    "analytics_real_time_dashboard.label.category_d": "Category D",
    "analytics_real_time_dashboard.label.determine_trend_direction": "Determine trend direction",
    "analytics_performance_metrics.label.types_of_metrics": "Types of metrics",
    "analytics_performance_metrics.label.monthly_active_users": "Monthly Active Users",
    "analytics_performance_metrics.label.user_retention_rate": "User Retention Rate",
    "analytics_performance_metrics.label.conversion_rate": "Conversion Rate",
    "analytics_performance_metrics.label.revenue_per_user": "Revenue per User",
    "analytics_performance_metrics.label.appointment_completion_rate": "Appointment Completion Rate",
    "analytics_performance_metrics.label.no_show_rate": "No-show Rate",
    "analytics_performance_metrics.label.average_evaluation_score": "Average Evaluation Score",
    "analytics_performance_metrics.label.staff_utilization_rate": "Staff Utilization Rate",
    "analytics_performance_metrics.label.system_uptime": "System Uptime",
    "analytics_performance_metrics.label.average_response_time": "Average Response Time",
    "analytics_performance_metrics.label.database_response_time": "Database Response Time",
    "analytics_performance_metrics.label.memory_usage": "Memory Usage",
    "analytics_performance_metrics.label.user_satisfaction_score": "User Satisfaction Score",
    "analytics_performance_metrics.label.page_load_time": "Page Load Time",
    "analytics_performance_metrics.label.feature_adoption_rate": "Feature Adoption Rate",
    "analytics_performance_metrics.label.average_response_time_1": "Average Response Time",
    "analytics_performance_metrics.label.database_response_time_1": "Database Response Time",
    "analytics_performance_metrics.label.page_load_time_1": "Page Load Time",
    "analytics_performance_metrics.label.no_show_rate_1": "No-show Rate",
    "analytics_performance_metrics.label.monitor": "Monitor ",
    "analytics_performance_metrics.label.technical_issue_detected": "Technical issue detected: ",
    "analytics_performance_metrics.label.business_impact": "Business impact: ",
    "analytics_performance_metrics.label.operational_efficiency": "Operational efficiency: ",
    "analytics___init__.label.realtimeanalyticsdashboard": "RealTimeAnalyticsDashboard",
    "analytics___init__.label.predictiveanalyticsservice": "PredictiveAnalyticsService",
    "analytics___init__.label.userbehavioranalytics": "UserBehaviorAnalytics",
    "analytics___init__.label.performancemetricsservice": "PerformanceMetricsService",
    "analytics___init__.label.customreportgenerator": "CustomReportGenerator",
    "analytics___init__.label.dataexportservice": "DataExportService",
    "analytics___init__.label.analyticsorchestrator": "AnalyticsOrchestrator",
    "analytics_user_behavior_analytics.label.user_engagement_metrics": "User engagement metrics",
    "analytics_user_behavior_analytics.label.behavioral_segment_data": "Behavioral segment data",
    "analytics_user_behavior_analytics.label.champions": "Champions",
    "analytics_user_behavior_analytics.label.loyal_users": "Loyal Users",
    "analytics_user_behavior_analytics.label.potential_loyalists": "Potential Loyalists",
    "analytics_user_behavior_analytics.label.new_users": "New Users",
    "analytics_user_behavior_analytics.label.at_risk": "At Risk",
    "analytics_user_behavior_analytics.label.hibernating": "Hibernating",
    "analytics_user_behavior_analytics.label.hibernating_1": "Hibernating",
    "analytics_user_behavior_analytics.label.high": "High",
    "analytics_user_behavior_analytics.label.medium": "Medium",
    "analytics_user_behavior_analytics.label.low": "Low",
    "analytics_user_behavior_analytics.label.champions_1": "Champions",
    "analytics_user_behavior_analytics.label.loyal_users_1": "Loyal Users",
    "analytics_user_behavior_analytics.label.potential_loyalists_1": "Potential Loyalists",
    "analytics_user_behavior_analytics.label.new_users_1": "New Users",
    "analytics_user_behavior_analytics.label.at_risk_1": "At Risk",
    "analytics_user_behavior_analytics.label.hibernating_2": "Hibernating",
    "analytics_user_behavior_analytics.label.create_advocacy_programs": "Create advocacy programs",
    "analytics_user_behavior_analytics.label.offer_loyalty_rewards": "Offer loyalty rewards",
    "analytics_user_behavior_analytics.label.upsell_premium_features": "Upsell premium features",
    "analytics_user_behavior_analytics.label.provide_personalized_onboardin": "Provide personalized onboarding",
    "analytics_user_behavior_analytics.label.offer_feature_tutorials": "Offer feature tutorials",
    "analytics_user_behavior_analytics.label.send_engagement_campaigns": "Send engagement campaigns",
    "analytics_user_behavior_analytics.label.implement_comprehensive_onboar": "Implement comprehensive onboarding",
    "analytics_user_behavior_analytics.label.send_re_engagement_campaigns": "Send re-engagement campaigns",
    "analytics_user_behavior_analytics.label.offer_special_promotions": "Offer special promotions",
    "analytics_user_behavior_analytics.label.implement_win_back_campaigns": "Implement win-back campaigns",
    "analytics_user_behavior_analytics.label.offer_personalized_support": "Offer personalized support",
    "analytics_user_behavior_analytics.label.provide_exclusive_offers": "Provide exclusive offers",
    "analytics_user_behavior_analytics.label.send_reactivation_emails": "Send reactivation emails",
    "analytics_user_behavior_analytics.label.offer_significant_incentives": "Offer significant incentives",
    "analytics_user_behavior_analytics.label.consider_sunset_campaigns": "Consider sunset campaigns",
    "analytics_user_behavior_analytics.label.user": "User ",
    "analytics_data_export.label.visualization_types": "Visualization types",
    "analytics_data_export.label.visualization_configuration": "Visualization configuration",
    "analytics_data_export.label.export_operation_result": "Export operation result",
    "analytics_data_export.label.starting_data_export": "Starting data export: ",
    "analytics_data_export.label.unknown_data_source": "Unknown data source: ",
    "analytics_data_export.label.collected": "Collected ",
    "analytics_data_export.label.unknown": "Unknown",
    "analytics_data_export.label.poor": "Poor",
    "analytics_data_export.label.fair": "Fair",
    "analytics_data_export.label.good": "Good",
    "analytics_data_export.label.excellent": "Excellent",
    "analytics_data_export.label.unsupported_chart_type": "Unsupported chart type: ",
    "analytics_data_export.label.create_heatmap_visualization": "Create heatmap visualization",
    "analytics_data_export.label.rdbu": "RdBu",
    "analytics_data_export.label.create_histogram_visualization": "Create histogram visualization",
    "analytics_data_export.label.create_treemap_visualization": "Create treemap visualization",
    "analytics_data_export.label.get_export_history": "Get export history",
    "analytics_report_generator.label.types_of_reports": "Types of reports",
    "analytics_report_generator.label.report_template_configuration": "Report template configuration",
    "analytics_report_generator.label.report_scheduling_configuratio": "Report scheduling configuration",
    "analytics_report_generator.label.executive_summary": "Executive Summary",
    "analytics_report_generator.label.operational_analytics": "Operational Analytics",
    "analytics_report_generator.label.user_behavior_analysis": "User Behavior Analysis",
    "analytics_report_generator.label.performance_metrics_dashboard": "Performance Metrics Dashboard",
    "analytics_report_generator.label.template": "Template ",
    "analytics_report_generator.label.calculate_operational_trends": "Calculate operational trends",
    "analytics_report_generator.label.calculate_performance_trends": "Calculate performance trends",
    "analytics_report_generator.label.generate_performance_based_rec": "Generate performance-based recommendations",
    "analytics_report_generator.label.address": "Address ",
    "analytics_report_generator.label.user_engagement": "User Engagement",
    "analytics_report_generator.label.system_performance": "System Performance",
    "analytics_report_generator.label.business_growth": "Business Growth",
    "analytics_report_generator.label.feature_adoption": "Feature Adoption",
    "analytics_report_generator.label.support_metrics": "Support Metrics",
    "analytics_report_generator.label.technical_health": "Technical Health",
    "analytics_report_generator.label.performance": "Performance",
    "analytics_report_generator.label.security": "Security",
    "analytics_report_generator.label.business": "Business",
    "analytics_report_generator.label.address_critical_alerts": "Address critical alerts",
    "analytics_report_generator.label.optimize_performance": "Optimize performance",
    "analytics_report_generator.label.improve_user_engagement": "Improve user engagement",
    "analytics_report_generator.label.enhance_monitoring": "Enhance monitoring",
    "analytics_report_generator.label.scale_infrastructure": "Scale infrastructure",
    "analytics_report_generator.label.expand_features": "Expand features",
    "analytics_report_generator.label.metric_value_unit": "Metric,Value,Unit",
    "analytics_report_generator.label.report_generated": "Report Generated,",
    "analytics_report_generator.label.template_1": "Template,",
    "analytics_examples.label.starting_analytics_orchestrato": "Starting analytics orchestrator...",
    "analytics_examples.label.collecting_real_time_metrics": "Collecting real-time metrics...",
    "analytics_examples.label.generating_chart_data": "Generating chart data...",
    "analytics_examples.label.initializing_predictive_models": "Initializing predictive models...",
    "analytics_examples.label.model_performance": "Model Performance:",
    "analytics_examples.label.generating_sample_predictions": "Generating sample predictions...",
    "analytics_examples.label.performing_cohort_analysis": "Performing cohort analysis...",
    "analytics_examples.label.calculating_engagement_metrics": "Calculating engagement metrics...",
    "analytics_examples.label.behavioral_segments": "Behavioral Segments:",
    "analytics_examples.label.analyzing_feature_usage": "Analyzing feature usage...",
    "analytics_examples.label.getting_performance_dashboard": "Getting performance dashboard...",
    "analytics_examples.label.key_business_metrics": "Key Business Metrics:",
    "analytics_examples.label.getting_metric_history": "Getting metric history...",
    "analytics_examples.label.key_insights": "Key Insights:",
    "analytics_examples.label.exporting_data": "Exporting data...",
    "analytics_examples.label.creating_visualization": "Creating visualization...",
    "analytics_examples.label.user_registration_trends": "User Registration Trends",
    "analytics_examples.label.example_workflow_orchestratio": "Example: Workflow orchestration",
    "analytics_examples.label.creating_custom_workflow": "Creating custom workflow...",
    "analytics_examples.label.example_custom_workflow": "Example Custom Workflow",
    "analytics_examples.label.getting_workflow_status": "Getting workflow status...",
    "analytics_examples.label.getting_recent_insights": "Getting recent insights...",
    "analytics_examples.label.insights_by_category": "Insights by Category:",
    "analytics_examples.label.high_priority_insights": "High Priority Insights:",
    "analytics_examples.label.getting_critical_insights": "Getting critical insights...",
    "analytics_examples.label.line_chart_config": "Line Chart Config:",
    "analytics_examples.label.example_flask_integration": "Example Flask integration",
    "analytics_examples.label.model_retraining_task": "Model retraining task",
    "analytics_examples.label.main_example_runner": "Main example runner",
    "analytics_analytics_orchestrator.label.analytics_workflow_configurati": "Analytics workflow configuration",
    "analytics_analytics_orchestrator.label.workflow_execution_result": "Workflow execution result",
    "analytics_analytics_orchestrator.label.analytics_insight_structure": "Analytics insight structure",
    "analytics_analytics_orchestrator.label.real_time_monitoring": "Real-time Monitoring",
    "analytics_analytics_orchestrator.label.daily_insights": "Daily Insights",
    "analytics_analytics_orchestrator.label.weekly_reports": "Weekly Reports",
    "analytics_analytics_orchestrator.label.monthly_analytics": "Monthly Analytics",
    "analytics_analytics_orchestrator.label.starting_analytics_orchestrato": "Starting Analytics Orchestrator",
    "analytics_analytics_orchestrator.label.scheduled_workflows_started": "Scheduled workflows started",
    "analytics_analytics_orchestrator.label.workflow": "Workflow ",
    "analytics_analytics_orchestrator.label.starting_workflow_execution": "Starting workflow execution: ",
    "analytics_analytics_orchestrator.label.unknown_component": "Unknown component: ",
    "analytics_analytics_orchestrator.label.performance": "Performance",
    "analytics_analytics_orchestrator.label.investigate_performance_bottle": "Investigate performance bottlenecks",
    "analytics_analytics_orchestrator.label.user_engagement": "User Engagement",
    "analytics_analytics_orchestrator.label.generate_performance_specific": "Generate performance-specific insights",
    "analytics_analytics_orchestrator.label.performance_1": "Performance",
    "analytics_analytics_orchestrator.label.user_behavior": "User Behavior",
    "analytics_analytics_orchestrator.label.handle_system_alerts": "Handle system alerts",
    "analytics_analytics_orchestrator.label.critical_alerts_detected": "Critical alerts detected: ",
    "analytics_analytics_orchestrator.label.system_alert": "System Alert",
    "analytics_analytics_orchestrator.label.critical_system_alerts": "Critical System Alerts",
    "analytics_analytics_orchestrator.label.check_system_status": "Check system status",
    "analytics_analytics_orchestrator.label.workflow_1": "Workflow ",
    "analytics_predictive_analytics.label.prediction_result_structure": "Prediction result structure",
    "analytics_predictive_analytics.label.model_performance_metrics": "Model performance metrics",
    "analytics_predictive_analytics.label.model": "Model ",
    "analytics_predictive_analytics.label.predicted": "Predicted ",
    "analytics_predictive_analytics.label.model_1": "Model ",
    "analytics_predictive_analytics.label.churn_probability": "Churn probability: ",
    "analytics_predictive_analytics.label.model_2": "Model ",
    "analytics_predictive_analytics.label.predicted_evaluation_score": "Predicted evaluation score: ",
    "analytics_predictive_analytics.label.model_3": "Model ",
    "analytics_predictive_analytics.label.predicted_1": "Predicted ",
    "analytics_predictive_analytics.label.retraining_model": "Retraining model: ",
    "interfaces_document_repository_interface.label.document_repository_interface_2": "Document repository interface.",
    "interfaces_document_repository_interface.label.save_document_instance": "Save document instance.",
    "interfaces_calendar_service_interface.label.calendar_service_interface": "Calendar service interface.",
    "interfaces_document_service_interface.label.document_service_interface": "Document service interface.",
    "interfaces___init__.label.iauthservice": "IAuthService",
    "interfaces___init__.label.iuserrepository": "IUserRepository",
    "interfaces___init__.label.inotificationservice": "INotificationService",
    "interfaces_program_service_interface.label.program_service_interface": "Program service interface.",
    "interfaces_auth_service_interface.label.authentication_service_interfa_2": "Authentication service interface.",
    "interfaces_appointment_service_interface.label.interface_for_appointmentservi": "Interface for AppointmentService.",
    "interfaces_sms_service_interface.label.sms_service_interface": "SMS service interface.",
    "interfaces_evaluation_service_interface.label.evaluation_service_interface": "Evaluation service interface.",
    "interfaces_user_repository_interface.label.user_repository_interface_1": "User repository interface.",
    "interfaces_user_repository_interface.label.count_total_users": "Count total users.",
    "interfaces_user_repository_interface.label.save_user_instance": "Save user instance."
  },
  "error": {
    "realtime.error.failed_to_emit": "Failed to emit ",
    "realtime.error.failed_to_emit_1": "Failed to emit ",
    "realtime.error.failed_to_emit_2": "Failed to emit ",
    "realtime.error.failed_to_broadcast": "Failed to broadcast ",
    "__init__.error.i18n_middleware_initializati": "❌ I18n middleware initialization failed: ",
    "__init__.error.performance_optimization_ini": "❌ Performance optimization initialization failed: ",
    "__init__.error.failed_to_register_blueprint": "❌ Failed to register blueprint ",
    "__init__.error.memory_baseline_setup_failed": "❌ Memory baseline setup failed: ",
    "__init__.error.database_optimization_failed": "❌ Database optimization failed: ",
    "__init__.error.request_error_during_teardown": "Request error during teardown: ",
    "__init__.error.404_error": "404 error: ",
    "__init__.error.500_error": "500 error: ",
    "__init__.error.high_memory_usage_detected_dur": "High memory usage detected during error: ",
    "__init__.error.internal_server_error": "Internal server error",
    "__init__.error.database_optimization_failed_1": "❌ Database optimization failed: ",
    "__init__.error.cache_clearing_failed": "❌ Cache clearing failed: ",
    "__init__.error.performance_report_generatio": "❌ Performance report generation failed: ",
    "container.error.resolve_a_service_by": "\n        Resolve a service by name.\n        \n        Args:\n            name: Service name\n            \n        Returns:\n            Service instance\n            \n        Raises:\n            ValueError: If service is not registered\n        ",
    "cli.error.database_initialization_fail": "❌ Database initialization failed. Check logs for details.",
    "cli.error.test_data_creation_failed_c": "❌ Test data creation failed. Check logs for details.",
    "cli.error.error": "Error: ",
    "cli.error.failed": " failed",
    "cli.error.some_migrations_failed_chec": "❌ Some migrations failed. Check logs for details.",
    "cli.error.configuration_validation_fai": "❌ Configuration validation failed.",
    "cli.error.errors": "\nErrors:",
    "cli.error.error_1": " - error: ",
    "websocket_notifications.error.token_decode_error": "Token decode error: ",
    "websocket_notifications.error.connection_error": "Connection error: ",
    "websocket_notifications.error.mark_read_error": "Mark read error: ",
    "websocket_notifications.error.token_decode_error_1": "Token decode error: ",
    "websocket_notifications.error.connection_error_1": "Connection error: ",
    "websocket_notifications.error.join_thread_error": "Join thread error: ",
    "websocket_notifications.error.leave_thread_error": "Leave thread error: ",
    "websocket_notifications.error.message_sent_error": "Message sent error: ",
    "websocket_notifications.error.typing_indicator_error": "Typing indicator error: ",
    "websocket_notifications.error.mark_message_read_error": "Mark message read error: ",
    "exceptions.error.exception_for_validation_error": "Exception for validation errors.",
    "exceptions.error.exception_for_resource_not_fou": "Exception for resource not found errors.",
    "exceptions.error.exception_for_conflict_errors": "Exception for conflict errors.",
    "exceptions.error.exception_for_external_service": "Exception for external service errors.",
    "exceptions.error.initialize_the_tenant_access_e": "Initialize the tenant access error.",
    "exceptions.error.exception_for_tenant_context_e": "Exception for tenant context errors.",
    "exceptions.error.initialize_the_tenant_context": "Initialize the tenant context error.",
    "socketio_events.error.connection_authentication_erro": "Connection authentication error: ",
    "socketio_events.error.invalid_authentication": "Invalid authentication",
    "socketio_events.error.error_during_disconnect_cleanu": "Error during disconnect cleanup: ",
    "socketio_events.error.invalid_token_in_message": "Invalid token in message: ",
    "socketio_events.error.invalid_authentication_1": "Invalid authentication",
    "socketio_events.error.failed_to_create_notification": "Failed to create notification: ",
    "socketio_events.error.error_sending_message": "Error sending message: ",
    "socketio_events.error.an_error_occurred_while_sendin": "An error occurred while sending your message",
    "socketio_events.error.error_in_typing_indicator": "Error in typing indicator: ",
    "socketio_events.error.invalid_authentication_2": "Invalid authentication",
    "socketio_events.error.error_marking_items_as_read": "Error marking items as read: ",
    "socketio_events.error.failed_to_mark_items_as_read": "Failed to mark items as read",
    "socketio_events.error.failed_to_send_notification_to": "Failed to send notification to user ",
    "socketio_events.error.failed_to_broadcast": "Failed to broadcast ",
    "socketio_events.error.failed_to_broadcast_1": "Failed to broadcast ",
    "socketio_events.error.broadcast_a_system_notifi": "\n    Broadcast a system notification to all users or specific roles.\n    \n    Args:\n        message (str): The notification message\n        level (str): The notification level (info, warning, error)\n        roles (list): Optional list of roles to send to (None = all users)\n        \n    Returns:\n        int: The number of users the notification was sent to\n    ",
    "socketio_events.error.failed_to_broadcast_system_not": "Failed to broadcast system notification: ",
    "middleware_alert_middleware.error.alert_middleware_for_flask_ap": "\nAlert Middleware for Flask Application\nAutomatically triggers alerts for critical errors and events\n",
    "middleware_alert_middleware.error.request_teardown_error": "Request teardown error: ",
    "middleware_alert_middleware.error.handle_500_internal_server_err": "Handle 500 Internal Server Error",
    "middleware_alert_middleware.error.internal_server_error": "Internal Server Error",
    "middleware_alert_middleware.error.500_error_on": "500 error on ",
    "middleware_alert_middleware.error.internal_server_error_1": "Internal server error",
    "middleware_alert_middleware.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "middleware_alert_middleware.error.handle_404_not_found_error": "Handle 404 Not Found Error",
    "middleware_alert_middleware.error.handle_403_forbidden_error": "Handle 403 Forbidden Error",
    "middleware_alert_middleware.error.403_error_on": "403 error on ",
    "middleware_alert_middleware.error.handle_401_unauthorized_error": "Handle 401 Unauthorized Error",
    "middleware_alert_middleware.error.unhandled_application_error": "Unhandled Application Error",
    "middleware_alert_middleware.error.internal_server_error_2": "Internal server error",
    "middleware_alert_middleware.error.an_unexpected_error_occurred_1": "An unexpected error occurred",
    "middleware_alert_middleware.error.track_error_rates_and_alert_on": "Track error rates and alert on high error rates",
    "middleware_alert_middleware.error.high_error_rate_detected": "High Error Rate Detected",
    "middleware_alert_middleware.error.high_error_rate_on": "High error rate on ",
    "middleware_alert_middleware.error.requests_failed": " requests failed",
    "middleware_alert_middleware.error.track_authentication_failures": "Track authentication failures and alert on brute force attempts",
    "middleware_alert_middleware.error.decorator_to_alert_when_a": "\n    Decorator to alert when a condition is met\n    \n    Usage:\n        @alert_on_condition(\n            lambda result: result['status'] == 'failed',\n            \"Process Failed\",\n            \"Process returned failed status\"\n        )\n        def some_process():\n            return {'status': 'failed'}\n    ",
    "middleware_alert_middleware.error.failed_after": " failed after ",
    "middleware_i18n_middleware.error.error_in_i18n_middleware_befor": "Error in i18n middleware before_request: ",
    "middleware_i18n_middleware.error.error_in_i18n_middleware_after": "Error in i18n middleware after_request: ",
    "middleware_i18n_middleware.error.error_detecting_user_language": "Error detecting user language: ",
    "middleware_i18n_middleware.error.error_getting_explicit_languag": "Error getting explicit language: ",
    "middleware_i18n_middleware.error.error_getting_user_preference": "Error getting user preference language: ",
    "middleware_i18n_middleware.error.error_getting_browser_language": "Error getting browser language: ",
    "middleware_i18n_middleware.error.error_getting_geolocation_lang": "Error getting geolocation language: ",
    "middleware_i18n_middleware.error.error_in_content_localization": "Error in content localization middleware: ",
    "middleware_i18n_middleware.error.error_localizing_data": "Error localizing data: ",
    "middleware_i18n_middleware.error.error_translating_field": "Error translating field: ",
    "middleware_i18n_middleware.error.error_in_rtl_support_middlewar": "Error in RTL support middleware: ",
    "middleware_rate_limiter.error.invalid_rate_limit_format": "Invalid RATE_LIMIT format: ",
    "middleware_cache_middleware.error.error_generating_etag": "Error generating ETag: ",
    "middleware_ip_whitelist.error.invalid_ip_or_network_in_white": "Invalid IP or network in whitelist: ",
    "middleware_ip_whitelist.error.invalid_ip_address": "Invalid IP address: ",
    "middleware_security_middleware.error.rate_limiting_error": "Rate limiting error: ",
    "middleware_security_middleware.error.onerror": "onerror=",
    "middleware_security_middleware.error.invalid_or_missing_api_key": "Invalid or missing API key",
    "middleware_security_middleware.error.csrf_token_missing_or_invalid": "CSRF token missing or invalid",
    "middleware_tracing_middleware.error.error_in_tracing_before_reques": "Error in tracing before_request: ",
    "middleware_tracing_middleware.error.error_in_tracing_after_request": "Error in tracing after_request: ",
    "middleware_tracing_middleware.error.error_in_tracing_teardown_requ": "Error in tracing teardown_request: ",
    "middleware_tracing_middleware.error.error_adding_tracing_headers": "Error adding tracing headers: ",
    "middleware_tracing_middleware.error.error_updating_span_with_respo": "Error updating span with response: ",
    "middleware_tracing_middleware.error.error_recording_request_metric": "Error recording request metrics: ",
    "validation_schema_validator.error.validate_data_against": "\n        Validate data against a schema.\n        \n        Args:\n            schema_class: Marshmallow schema class\n            data: Data to validate\n            partial: Allow partial validation\n            strict: Use strict mode (exclude unknown fields)\n            \n        Returns:\n            Validated data\n            \n        Raises:\n            ValidationError: If validation fails\n        ",
    "validation_schema_validator.error.enhance_validation_error_messa": "Enhance validation error messages for better clarity.",
    "validation_schema_validator.error.enhance_a_single_error_message": "Enhance a single error message.",
    "validation_schema_validator.error.onerror_s": "onerror\\s*=",
    "validation_schema_validator.error.invalid_phone_number_format": "Invalid phone number format",
    "validation_schema_validator.error.invalid_email_format": "Invalid email format",
    "validation_schema_validator.error.invalid_email_format_1": "Invalid email format",
    "validation_schema_validator.error.invalid_phone_number_format_1": "Invalid phone number format",
    "validation_schema_validator.error.invalid_url_format": "Invalid URL format",
    "validation_schema_validator.error.amount_cannot_be_negative": "Amount cannot be negative",
    "validation_validators.error.validate_value_should_raise_v": "Validate value. Should raise ValueError if invalid.",
    "validation_validators.error.password_cannot_contain_three": "Password cannot contain three or more consecutive identical characters",
    "validation_validators.error.password_cannot_contain_sequen": "Password cannot contain sequential numbers",
    "validation_validators.error.password_cannot_contain_sequen_1": "Password cannot contain sequential letters",
    "validation_validators.error.password_cannot_contain_common": "Password cannot contain common words like 'password', 'admin', etc.",
    "validation_validators.error.invalid_url_format": "Invalid URL format",
    "validation_validators.error.url_contains_invalid_character": "URL contains invalid characters",
    "validation_validators.error.invalid_json_data_type": "Invalid JSON data type: ",
    "validation_validators.error.invalid_phone_number": "Invalid phone number",
    "validation_validators.error.invalid_phone_number_format": "Invalid phone number format",
    "validation_validators.error.invalid_date_format": "Invalid date format",
    "validation_validators.error.invalid_date_type": "Invalid date type",
    "validation_validators.error.invalid_credit_card_number_len": "Invalid credit card number length",
    "validation_validators.error.invalid_credit_card_number": "Invalid credit card number",
    "validation_example_usage.error.invalid_credentials": "Invalid credentials",
    "validation_example_usage.error.handle_validation_errors_consi": "Handle validation errors consistently.",
    "validation_example_usage.error.validation_failed": "Validation failed",
    "validation_schemas.error.invalid_2fa_code_format": "Invalid 2FA code format",
    "validation_schemas.error.invalid_date_of_birth": "Invalid date of birth",
    "validation_schemas.error.program_cannot_exceed_1_year": "Program cannot exceed 1 year",
    "validation_schemas.error.minimum_age_cannot_be_greater": "Minimum age cannot be greater than maximum age",
    "validation_schemas.error.passing_score_cannot_exceed_to": "Passing score cannot exceed total points",
    "validation_schemas.error.message_content_cannot_be_empt": "Message content cannot be empty",
    "validation_schemas.error.report_range_cannot_exceed_1_y": "Report range cannot exceed 1 year",
    "validation_schemas.error.invalid_file_object": "Invalid file object",
    "validation_validation_middleware.error.handle_marshmallow_validation": "Handle marshmallow validation errors.",
    "validation_validation_middleware.error.validation_error": "Validation error: ",
    "validation_validation_middleware.error.validation_failed": "Validation failed",
    "validation_validation_middleware.error.handle_bad_request_errors": "Handle bad request errors.",
    "validation_validation_middleware.error.invalid_input_detected": "Invalid input detected",
    "validation_validation_middleware.error.validation_failed_1": "Validation failed",
    "validation_validation_middleware.error.invalid_location": "Invalid location: ",
    "validation_validation_middleware.error.error_getting_request_data": "Error getting request data: ",
    "validation_validation_middleware.error.invalid": "Invalid ",
    "validation_validation_middleware.error.invalid_api_key_attempt": "Invalid API key attempt",
    "validation_validation_middleware.error.invalid_api_key": "Invalid API key",
    "validation_business_validators.error.invalid_date_of_birth": "Invalid date of birth",
    "validation_business_validators.error.invalid_national_id_format": "Invalid national ID format",
    "validation_business_validators.error.invalid_beneficiary_or_program": "Invalid beneficiary or program",
    "validation_business_validators.error.appointments_cannot_be_booked": "Appointments cannot be booked more than 90 days in advance",
    "validation_business_validators.error.appointment_duration_cannot_ex": "Appointment duration cannot exceed 4 hours",
    "validation_business_validators.error.cannot_cancel": "Cannot cancel ",
    "validation_business_validators.error.invalid_user": "Invalid user",
    "validation_business_validators.error.program_start_date_cannot_be_i": "Program start date cannot be in the past",
    "validation_business_validators.error.program_cannot_exceed_1_year": "Program cannot exceed 1 year",
    "validation_business_validators.error.maximum_participants_cannot_ex": "Maximum participants cannot exceed 1000",
    "validation_business_validators.error.cannot_have_more_than_7_sessio": "Cannot have more than 7 sessions per week",
    "validation_business_validators.error.cannot_mark_attendance_for_fut": "Cannot mark attendance for future sessions",
    "validation_business_validators.error.total_attachment_size_cannot_e": "Total attachment size cannot exceed 50MB",
    "validation_business_validators.error.invalid_user_or_admin": "Invalid user or admin",
    "validation_business_validators.error.invalid_role_must_be_one_of": "Invalid role. Must be one of: ",
    "validation_business_validators.error.cannot_change_super_admin_role": "Cannot change super admin role",
    "validation_business_validators.error.cannot_change_roles_for_users": "Cannot change roles for users in different tenants",
    "validation_business_validators.error.invalid_timezone": "Invalid timezone",
    "validation_decorators.error.file_validation_failed": "File validation failed: ",
    "validation_decorators.error.business_rule_validation_faile": "Business rule validation failed: ",
    "validation_decorators.error.validation_failed": "Validation failed",
    "tasks_maintenance.error.error_in_cleanup_old_notificat": "Error in cleanup_old_notifications task: ",
    "tasks_maintenance.error.error_deleting_orphaned_file": "Error deleting orphaned file ",
    "tasks_maintenance.error.error_in_cleanup_orphaned_docu": "Error in cleanup_orphaned_documents task: ",
    "tasks_maintenance.error.error_in_cleanup_old_audit_log": "Error in cleanup_old_audit_logs task: ",
    "tasks_maintenance.error.error_in_cleanup_abandoned_tes": "Error in cleanup_abandoned_test_sessions task: ",
    "tasks_maintenance.error.error_in_optimize_database_tas": "Error in optimize_database task: ",
    "tasks_maintenance.error.error_in_check_storage_usage_t": "Error in check_storage_usage task: ",
    "tasks_evaluations.error.error_processing_overdue_evalu": "Error processing overdue evaluation ",
    "tasks_evaluations.error.error_in_check_overdue_evaluat": "Error in check_overdue_evaluations task: ",
    "tasks_evaluations.error.error_in_process_ai_analysis_t": "Error in process_ai_analysis task: ",
    "tasks_evaluations.error.error_in_send_evaluation_remin": "Error in send_evaluation_reminder task: ",
    "tasks_email.error.error_sending_email_to": "Error sending email to ",
    "tasks_email.error.error_sending_bulk_email_to": "Error sending bulk email to ",
    "tasks_email.error.failed": " failed",
    "tasks_email.error.error_in_send_bulk_email_task": "Error in send_bulk_email task: ",
    "tasks_email.error.error_in_send_welcome_email_ta": "Error in send_welcome_email task: ",
    "tasks_email.error.error_in_send_password_reset_e": "Error in send_password_reset_email task: ",
    "tasks_email.error.error_in_send_evaluation_compl": "Error in send_evaluation_complete_email task: ",
    "tasks_reports.error.error_generating_report_for_te": "Error generating report for tenant ",
    "tasks_reports.error.error_in_generate_weekly_repor": "Error in generate_weekly_reports task: ",
    "tasks_reports.error.error_generating_analytics_for": "Error generating analytics for tenant ",
    "tasks_reports.error.error_in_generate_monthly_anal": "Error in generate_monthly_analytics task: ",
    "tasks_reports.error.error_in_generate_beneficiary": "Error in generate_beneficiary_progress_report task: ",
    "tasks_notifications.error.error_sending_reminder_for_app": "Error sending reminder for appointment ",
    "tasks_notifications.error.error_in_send_appointment_remi": "Error in send_appointment_reminders task: ",
    "tasks_notifications.error.error_sending_notification_to": "Error sending notification to user ",
    "tasks_notifications.error.error_in_send_bulk_notificatio": "Error in send_bulk_notification task: ",
    "tasks_notifications.error.error_sending_notification_to_1": "Error sending notification to user ",
    "tasks_notifications.error.error_in_send_role_based_notif": "Error in send_role_based_notification task: ",
    "tasks_sms.error.error_sending_scheduled_sms": "Error sending scheduled SMS: ",
    "tasks_sms.error.error_processing_bulk_sms": "Error processing bulk SMS: ",
    "tasks_sms.error.error_sending_campaign_sms_to": "Error sending campaign SMS to ",
    "tasks_sms.error.error_executing_sms_campaign": "Error executing SMS campaign: ",
    "tasks_sms.error.error_updating_sms_delivery_st": "Error updating SMS delivery status: ",
    "tasks_sms.error.error_sending_appointment_remi": "Error sending appointment reminders: ",
    "tasks_sms.error.error_cleaning_up_sms_records": "Error cleaning up SMS records: ",
    "core_app_factory.error.create_a_flask_application_wit": "Create a Flask application with clean initialization.\n        \n        Args:\n            config_object: Optional configuration object to use\n            \n        Returns:\n            Configured Flask application instance\n            \n        Raises:\n            RuntimeError: If configuration validation fails\n        ",
    "core_app_factory.error.configuration_validation_faile": "Configuration validation failed: ",
    "core_app_factory.error.extension_initialization_faile": "Extension initialization failed",
    "core_app_factory.error.failed_to_create_application": "Failed to create application: ",
    "core_app_factory.error.failed_to_configure_custom_log": "Failed to configure custom logging, using basic: ",
    "core_app_factory.error.failed_to_register_blueprints": "Failed to register blueprints: ",
    "core_app_factory.error.failed_to_register_blueprint": "Failed to register blueprint ",
    "core_app_factory.error.failed_to_register_blueprint_1": "Failed to register blueprint ",
    "core_app_factory.error.register_error_handlers": "Register error handlers.",
    "core_app_factory.error.internal_server_error": "Internal Server Error",
    "core_app_factory.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "core_app_factory.error.error_handlers_registered_succ": "Error handlers registered successfully",
    "core_app_factory.error.failed_to_register_middleware": "Failed to register middleware: ",
    "core_app_factory.error.failed_to_initialize_ip_whitel": "Failed to initialize IP whitelist middleware: ",
    "core_app_factory.error.failed_to_register_cli_command": "Failed to register CLI commands: ",
    "core_app_factory.error.failed_to_initialize_database": "Failed to initialize database: ",
    "core_query_cache.error.advanced_query_caching_system": "\nAdvanced Query Caching System with Redis\nProvides intelligent query caching, cache invalidation, and performance optimization.\n",
    "core_query_cache.error.invalidation": "invalidation:",
    "core_query_cache.error.serialization_error": "Serialization error: ",
    "core_query_cache.error.deserialization_error": "Deserialization error: ",
    "core_query_cache.error.cache_get_error": "Cache get error: ",
    "core_query_cache.error.cache_set_error": "Cache set error: ",
    "core_query_cache.error.invalidate_all_cache_keys_matc": "Invalidate all cache keys matching a pattern",
    "core_query_cache.error.invalidated": "Invalidated ",
    "core_query_cache.error.cache_pattern_invalidation_err": "Cache pattern invalidation error: ",
    "core_query_cache.error.store_cache_invalidation_tags": "Store cache invalidation tags",
    "core_query_cache.error.error_storing_invalidation_tag": "Error storing invalidation tag ",
    "core_query_cache.error.invalidate_cache_entries_by_ta": "Invalidate cache entries by tags",
    "core_query_cache.error.invalidated_1": "Invalidated ",
    "core_query_cache.error.error_invalidating_by_tag": "Error invalidating by tag ",
    "core_query_cache.error.error_getting_redis_memory_inf": "Error getting Redis memory info: ",
    "core_query_cache.error.error_warming_cache_for_query": "Error warming cache for query: ",
    "core_query_cache.error.cache_cleanup_error": "Cache cleanup error: ",
    "core_query_cache.error.intelligent_cache_invalidation": "Intelligent cache invalidation based on data changes",
    "core_query_cache.error.invalidate_cache_entries_for_a": "Invalidate cache entries for a specific model change",
    "core_query_cache.error.invalidated_2": "Invalidated ",
    "core_query_cache.error.failed_to_initialize_query_cac": "Failed to initialize query cache: ",
    "core_config_manager.error.cannot_create_database_directo": "Cannot create database directory: ",
    "core_config_manager.error.failed_to_load_configuration": "Failed to load configuration: ",
    "core_config_manager.error.configuration_loading_failed": "Configuration loading failed: ",
    "core_config_manager.error.failed_to_import_config": "Failed to import config: ",
    "core_config_manager.error.failed_to_create_upload_folder": "Failed to create upload folder: ",
    "core_config_manager.error.validation_error_with": "Validation error with ",
    "core_config_manager.error.failed": " failed: ",
    "core_config_manager.error.configuration_validation_faile": "Configuration validation failed",
    "core_config_manager.error.config_error": "Config error: ",
    "core_extension_manager.error.failed_to_initialize_database": "Failed to initialize database extensions: ",
    "core_extension_manager.error.failed_to_initialize_authentic": "Failed to initialize authentication extensions: ",
    "core_extension_manager.error.error_in_user_lookup": "Error in user lookup: ",
    "core_extension_manager.error.error_checking_token_blocklist": "Error checking token blocklist: ",
    "core_extension_manager.error.handle_invalid_token": "Handle invalid token.",
    "core_extension_manager.error.signature_verification_failed": "Signature verification failed",
    "core_extension_manager.error.failed_to_initialize_cors_exte": "Failed to initialize CORS extensions: ",
    "core_extension_manager.error.failed_to_initialize_caching_e": "Failed to initialize caching extensions: ",
    "core_extension_manager.error.failed_to_initialize_mail_exte": "Failed to initialize mail extensions: ",
    "core_extension_manager.error.failed_to_initialize_rate_limi": "Failed to initialize rate limiting extensions: ",
    "core_extension_manager.error.failed_to_initialize_socketio": "Failed to initialize SocketIO extensions: ",
    "core_extension_manager.error.failed_to_initialize_extension": "Failed to initialize extension: ",
    "core_extension_manager.error.some_extensions_failed_to_init": "Some extensions failed to initialize",
    "core_performance_init.error.database_performance_initial": "❌ Database performance initialization failed: ",
    "core_performance_init.error.query_cache_initialization_f": "❌ Query cache initialization failed: ",
    "core_performance_init.error.memory_optimization_initiali": "❌ Memory optimization initialization failed: ",
    "core_performance_init.error.performance_middleware_initi": "❌ Performance middleware initialization failed: ",
    "core_performance_init.error.performance_monitoring_regis": "❌ Performance monitoring registration failed: ",
    "core_performance_init.error.celery_optimization_initiali": "❌ Celery optimization initialization failed: ",
    "core_performance_init.error.performance_hooks_setup_fail": "❌ Performance hooks setup failed: ",
    "core_performance_init.error.initial_optimizations_failed": "❌ Initial optimizations failed: ",
    "core_performance_init.error.cache_warming_failed": "Cache warming failed: ",
    "core_performance_init.error.request_error": "Request error: ",
    "core_performance_init.error.request_teardown_error": "Request teardown error: ",
    "core_performance_init.error.index_creation_failed": "Index creation failed: ",
    "core_performance_init.error.object_pool_initialization_fai": "Object pool initialization failed: ",
    "core_performance_init.error.cache_warming_failed_1": "Cache warming failed: ",
    "core_performance_init.error.performance_report_generation": "Performance report generation failed: ",
    "core_performance_init.error.recommendation_generation_fail": "Recommendation generation failed: ",
    "core_performance_init.error.unable_to_analyze_performance": "Unable to analyze performance metrics for recommendations",
    "core_cache_manager.error.cache_get_error": "Cache get error: ",
    "core_cache_manager.error.cache_set_error": "Cache set error: ",
    "core_cache_manager.error.invalidate_all_keys_matching_a": "Invalidate all keys matching a pattern.",
    "core_cache_manager.error.cache_invalidate_pattern_error": "Cache invalidate pattern error: ",
    "core_cache_manager.error.cache_clear_all_error": "Cache clear all error: ",
    "core_cache_manager.error.invalidate_all_cache_entries_f": "Invalidate all cache entries for a user.",
    "core_cache_manager.error.invalidate_all_cache_entries_f_1": "Invalidate all cache entries for a beneficiary.",
    "core_cache_manager.error.invalidate_all_cache_entries_f_2": "Invalidate all cache entries for a tenant.",
    "core_database_manager.error.database_initialization_failed": "Database initialization failed: ",
    "core_database_manager.error.failed_to_create_tables": "Failed to create tables: ",
    "core_database_manager.error.failed_to_create_test_data": "Failed to create test data: ",
    "core_database_manager.error.failed_to_create_default_tenan": "Failed to create default tenant: ",
    "core_database_manager.error.failed_to_remove_default_tenan": "Failed to remove default tenant: ",
    "core_database_manager.error.failed_to_create_admin_user": "Failed to create admin user: ",
    "core_database_manager.error.failed_to_remove_admin_user": "Failed to remove admin user: ",
    "core_database_manager.error.cannot_be_executed": " cannot be executed",
    "core_database_manager.error.failed": " failed: ",
    "core_database_manager.error.failed_1": " failed",
    "core_database_performance.error.session_cleanup_error": "Session cleanup error: ",
    "core_database_performance.error.database_session_error": "Database session error: ",
    "core_database_performance.error.query_analysis_failed": "Query analysis failed: ",
    "core_database_performance.error.index_optimization_failed": "Index optimization failed: ",
    "core_database_performance.error.failed_after": "' failed after ",
    "core_database_performance.error.transaction_failed": "Transaction failed: ",
    "core_cdn_config.error.error_generating_asset_manifes": "Error generating asset manifest: ",
    "core_cdn_config.error.asset_optimization_analysis_fa": "Asset optimization analysis failed: ",
    "core_celery_optimizer.error.task_failed": "Task failed: ",
    "core_celery_optimizer.error.high_failure_rate_for_task": "High failure rate for task '",
    "core_tenant_isolation.error.invalid_or_inactive_tenant": "Invalid or inactive tenant: ",
    "core_tenant_isolation.error.ensure_that_this_inst": "\n        Ensure that this instance belongs to the specified tenant.\n        Raises exception if access is denied.\n        \n        Args:\n            tenant_id: Tenant ID to check or None for current tenant\n            \n        Raises:\n            TenantAccessError: If access is denied\n        ",
    "core_tenant_isolation.error.save_the_instance_wit": "\n        Save the instance with tenant validation.\n        \n        Args:\n            validate_tenant: Whether to validate tenant access\n            \n        Raises:\n            TenantAccessError: If tenant validation fails\n        ",
    "core_tenant_isolation.error.invalid_or_inactive_tenant_1": "Invalid or inactive tenant",
    "core_tenant_isolation.error.switch_to_a_different_ten": "\n    Switch to a different tenant context.\n    \n    Args:\n        tenant_id: The tenant ID to switch to\n        \n    Raises:\n        TenantAccessError: If user doesn't have access to the tenant\n    ",
    "core_cache_config.error.get_cache_keys_to_invalidate_f": "Get cache keys to invalidate for an entity action.",
    "core_cache_config.error.failed_to_warm_cache_for": "Failed to warm cache for ",
    "core_cache_config.error.error_warming_cache_for": "Error warming cache for ",
    "core_session_cache.error.session_deserialization_error": "Session deserialization error: ",
    "core_session_cache.error.session_retrieval_error": "Session retrieval error: ",
    "core_session_cache.error.session_deletion_error": "Session deletion error: ",
    "core_session_cache.error.session_save_error": "Session save error: ",
    "core_session_cache.error.session_data_parsing_error": "Session data parsing error: ",
    "core_session_cache.error.error_getting_user_sessions": "Error getting user sessions: ",
    "core_session_cache.error.invalidate_all_sessions_for_a": "Invalidate all sessions for a user except optionally the current one",
    "core_session_cache.error.invalidated": "Invalidated ",
    "core_session_cache.error.error_invalidating_user_sessio": "Error invalidating user sessions: ",
    "core_session_cache.error.error_tracking_user_session": "Error tracking user session: ",
    "core_session_cache.error.error_updating_session_activit": "Error updating session activity: ",
    "core_session_cache.error.error_getting_session_statisti": "Error getting session statistics: ",
    "core_session_cache.error.error_cleaning_user_key": "Error cleaning user key ",
    "core_session_cache.error.session_cleanup_error": "Session cleanup error: ",
    "core_session_cache.error.error_getting_session_security": "Error getting session security info: ",
    "core_session_cache.error.failed_to_initialize_session_c": "Failed to initialize session caching: ",
    "core_session_cache.error.invalidate_all_sessions_for_a_1": "Invalidate all sessions for a user",
    "core_memory_optimizer.error.object_reset_failed": "Object reset failed: ",
    "core_memory_optimizer.error.memory_monitoring_error": "Memory monitoring error: ",
    "core_memory_optimizer.error.error_getting_memory_allocatio": "Error getting memory allocations: ",
    "core_memory_optimizer.error.streaming_upload_failed": "Streaming upload failed: ",
    "core_memory_optimizer.error.streaming_download_failed": "Streaming download failed: ",
    "core_memory_optimizer.error.memory_monitoring_error_1": "Memory monitoring error: ",
    "error_handling_error_manager.error.centralized_error_manager_for": "\nCentralized Error Manager for the BDC project.\n\nProvides comprehensive error classification, logging, and management.\n",
    "error_handling_error_manager.error.error_severity_levels": "Error severity levels.",
    "error_handling_error_manager.error.error_category_classification": "Error category classification.",
    "error_handling_error_manager.error.error_context_information": "Error context information.",
    "error_handling_error_manager.error.centralized_error_management_s": "Centralized error management system.",
    "error_handling_error_manager.error.setup_default_error_classifica": "Setup default error classification rules.",
    "error_handling_error_manager.error.register_a_custom_error_handle": "Register a custom error handler for a specific exception type.",
    "error_handling_error_manager.error.register_a_custom_error_classi": "Register a custom error classifier function.",
    "error_handling_error_manager.error.register_a_callback_to_be_call": "Register a callback to be called when errors are processed.",
    "error_handling_error_manager.error.classify_an_error_by_category": "Classify an error by category and severity.",
    "error_handling_error_manager.error.error_classifier_failed": "Error classifier failed: ",
    "error_handling_error_manager.error.handle_an_error_with_comprehen": "Handle an error with comprehensive logging and classification.",
    "error_handling_error_manager.error.custom_error_handler_failed": "Custom error handler failed: ",
    "error_handling_error_manager.error.error_callback_failed": "Error callback failed: ",
    "error_handling_error_manager.error.add_error_context_to_history_w": "Add error context to history with size management.",
    "error_handling_error_manager.error.log_error_with_appropriate_lev": "Log error with appropriate level based on severity.",
    "error_handling_error_manager.error.critical_error": "CRITICAL ERROR: ",
    "error_handling_error_manager.error.high_severity_error": "HIGH SEVERITY ERROR: ",
    "error_handling_error_manager.error.medium_severity_error": "MEDIUM SEVERITY ERROR: ",
    "error_handling_error_manager.error.low_severity_error": "LOW SEVERITY ERROR: ",
    "error_handling_error_manager.error.stack_trace_for_error": "Stack trace for error ",
    "error_handling_error_manager.error.get_error_statistics_for_the_s": "Get error statistics for the specified time period.",
    "error_handling_error_manager.error.get_recent_errors_in_serializa": "Get recent errors in serializable format.",
    "error_handling_error_manager.error.clear_the_error_history": "Clear the error history.",
    "error_handling_error_manager.error.error_history_cleared": "Error history cleared",
    "error_handling_user_messages.error.user_friendly_error_message_m": "\nUser-Friendly Error Message Management and Localization.\n\nProvides mapping of technical errors to user-friendly messages with internationalization support.\n",
    "error_handling_user_messages.error.maps_technical_errors_to_user": "Maps technical errors to user-friendly messages.",
    "error_handling_user_messages.error.setup_default_error_message_ma": "Setup default error message mappings.",
    "error_handling_user_messages.error.contact_support_if_you_believe": "Contact support if you believe this is an error",
    "error_handling_user_messages.error.an_unexpected_error_occurred": "An unexpected error occurred. Please try again or contact support if the problem persists.",
    "error_handling_user_messages.error.please_include_details_about_w": "Please include details about what you were trying to do when this error occurred.",
    "error_handling_user_messages.error.ocurri_un_error_inesperado_p": "Ocurrió un error inesperado. Por favor intente nuevamente o contacte al soporte si el problema persiste.",
    "error_handling_user_messages.error.por_favor_incluya_detalles_sob": "Por favor incluya detalles sobre lo que estaba tratando de hacer cuando ocurrió este error.",
    "error_handling_user_messages.error.add_a_custom_message_mapping_f": "Add a custom message mapping for a specific locale and error code.",
    "error_handling_user_messages.error.get_a_user_friendly_message_fo": "Get a user-friendly message for an error code.",
    "error_handling_user_messages.error.get_list_of_error_codes_availa": "Get list of error codes available for a locale.",
    "error_handling_user_messages.error.h4_error_code": "<h4>Error Code: ",
    "error_handling_config.error.configuration_management_for": "\nConfiguration Management for Error Handling System.\n\nProvides centralized configuration for all error handling components.\n",
    "error_handling_config.error.error_monitoring_configuration": "Error monitoring configuration.",
    "error_handling_config.error.error_recovery_configuration": "Error recovery configuration.",
    "error_handling_config.error.main_error_handling_configurat": "Main error handling configuration.",
    "error_handling_config.error.loaded_default_error_handling": "Loaded default error handling configuration",
    "error_handling_config.error.invalid_value_for": "Invalid value for ",
    "error_handling_config.error.config_watcher_failed": "Config watcher failed: ",
    "error_handling_config.error.circuit_breaker_failure_thresh": "Circuit breaker failure_threshold must be positive",
    "error_handling_config.error.monitoring_error_rate_threshol": "Monitoring error_rate_threshold must be non-negative",
    "error_handling_retry_manager.error.retry_manager_with_exponentia": "\nRetry Manager with Exponential Backoff and Jitter.\n\nProvides configurable retry mechanisms for handling transient failures.\n",
    "error_handling_retry_manager.error.failed_with_non_retryable_ex": "' failed with non-retryable exception: ",
    "error_handling_retry_manager.error.failed_on_attempt": "' failed on attempt ",
    "error_handling_retry_manager.error.retry_callback_failed": "Retry callback failed: ",
    "error_handling_retry_manager.error.failed_with_non_retryable_ex_1": "' failed with non-retryable exception: ",
    "error_handling_retry_manager.error.failed_on_attempt_1": "' failed on attempt ",
    "error_handling_retry_manager.error.retry_callback_failed_1": "Retry callback failed: ",
    "error_handling___init__.error.comprehensive_error_handling": "\nComprehensive Error Handling System for BDC Project.\n\nThis module provides:\n- Centralized error management\n- Circuit breaker pattern\n- Retry mechanisms with backoff\n- Error monitoring and alerting  \n- User-friendly error messages\n- Error recovery strategies\n",
    "error_handling___init__.error.errormanager": "ErrorManager",
    "error_handling___init__.error.errormonitor": "ErrorMonitor",
    "error_handling___init__.error.errorrecovery": "ErrorRecovery",
    "error_handling___init__.error.errorhandlingmiddleware": "ErrorHandlingMiddleware",
    "error_handling___init__.error.circuitbreakererror": "CircuitBreakerError",
    "error_handling___init__.error.retryexhaustederror": "RetryExhaustedError",
    "error_handling___init__.error.recoveryerror": "RecoveryError",
    "error_handling___init__.error.monitoringerror": "MonitoringError",
    "error_handling_error_recovery.error.error_recovery_strategies_and": "\nError Recovery Strategies and Fallback Mechanisms.\n\nProvides automatic error recovery capabilities and fallback strategies for resilient applications.\n",
    "error_handling_error_recovery.error.failed": " failed: ",
    "error_handling_error_recovery.error.failed_1": " failed: ",
    "error_handling_error_recovery.error.main_error_recovery_system": "Main error recovery system.",
    "error_handling_error_recovery.error.recovery_failed_with_handler": "Recovery failed with handler ",
    "error_handling_error_recovery.error.all_recovery_attempts_failed_f": "All recovery attempts failed for exception: ",
    "error_handling_error_recovery.error.decorator_to_add_error_recover": "Decorator to add error recovery to a function.",
    "error_handling_circuit_breaker.error.circuit_breaker_pattern_imple": "\nCircuit Breaker Pattern Implementation.\n\nProvides fault tolerance by preventing calls to failing services and allowing recovery.\n",
    "error_handling_circuit_breaker.error.failures": " failures",
    "error_handling_circuit_breaker.error.record_a_failed_operation": "Record a failed operation.",
    "error_handling_circuit_breaker.error.recorded_failure": "' recorded failure ",
    "error_handling_circuit_breaker.error.failed_call_in": "' failed call in ",
    "error_handling_examples.error.usage_examples_for_the_error": "\nUsage Examples for the Error Handling System.\n\nThis module provides comprehensive examples of how to use the error handling system\nin various scenarios within the BDC project.\n",
    "error_handling_examples.error.example_of_basic_error_handlin": "Example of basic error handling with manual error management.",
    "error_handling_examples.error.basic_error_handling_exam": "\n=== Basic Error Handling Example ===",
    "error_handling_examples.error.simulates_an_operation_that_mi": "Simulates an operation that might fail.",
    "error_handling_examples.error.simulated_failure_in_risky_ope": "Simulated failure in risky operation",
    "error_handling_examples.error.error_handled_id": "Error handled - ID: ",
    "error_handling_examples.error.mock_external_payment_service": "Mock external payment service that can fail.",
    "error_handling_examples.error.simulates_payment_processing_t": "Simulates payment processing that might fail.",
    "error_handling_examples.error.failed": " failed: ",
    "error_handling_examples.error.failed_requests": "Failed requests: ",
    "error_handling_examples.error.mock_database_service_with_int": "Mock database service with intermittent failures.",
    "error_handling_examples.error.simulates_database_query_that": "Simulates database query that might fail.",
    "error_handling_examples.error.all_retries_failed": "All retries failed: ",
    "error_handling_examples.error.all_retries_failed_1": "All retries failed: ",
    "error_handling_examples.error.example_of_error_monitoring_an": "Example of error monitoring and custom alerts.",
    "error_handling_examples.error.error_monitoring_example": "\n=== Error Monitoring Example ===",
    "error_handling_examples.error.alert_when_database_errors_exc": "Alert when database errors exceed 3 in recent period.",
    "error_handling_examples.error.high_number_of_database_errors": "High number of database errors detected",
    "error_handling_examples.error.simulating_database_errors": "Simulating database errors...",
    "error_handling_examples.error.database_connection_failed": "Database connection failed #",
    "error_handling_examples.error.total_errors": "Total errors: ",
    "error_handling_examples.error.error_rate": "Error rate: ",
    "error_handling_examples.error.errors_by_category": "Errors by category: ",
    "error_handling_examples.error.example_of_user_friendly_error": "Example of user-friendly error messages in different languages.",
    "error_handling_examples.error.invalid_email_format": "Invalid email format",
    "error_handling_examples.error.network_error": "Network error",
    "error_handling_examples.error.mock_user_profile_service_that": "Mock user profile service that can fail.",
    "error_handling_examples.error.get_user_profile_might_fail": "Get user profile - might fail.",
    "error_handling_examples.error.example_of_error_recovery_stra": "Example of error recovery strategies.",
    "error_handling_examples.error.error_recovery_example": "\n=== Error Recovery Example ===",
    "error_handling_examples.error.recovery_failed": "Recovery failed: ",
    "error_handling_examples.error.recovery_failed_1": "Recovery failed: ",
    "error_handling_examples.error.first_call_failed": "First call failed: ",
    "error_handling_examples.error.cache_fallback_failed": "Cache fallback failed: ",
    "error_handling_examples.error.example_of_async_error_handlin": "Example of async error handling with retry.",
    "error_handling_examples.error.async_error_handling_exam": "\n=== Async Error Handling Example ===",
    "error_handling_examples.error.api_call_failed_attempt": "API call failed (attempt #",
    "error_handling_examples.error.all_async_retries_failed": "All async retries failed: ",
    "error_handling_examples.error.example_of_integrating_error_h": "Example of integrating error handling with Flask.",
    "error_handling_examples.error.endpoint_that_demonstrates_err": "Endpoint that demonstrates error handling.",
    "error_handling_examples.error.invalid_input_parameter": "Invalid input parameter",
    "error_handling_examples.error.unknown_error_type": "Unknown error type",
    "error_handling_examples.error.flask_app_configured_with_erro": "Flask app configured with error handling middleware",
    "error_handling_examples.error.get_api_test_error_type_val": "  GET /api/test-error?type=validation",
    "error_handling_examples.error.get_api_test_error_type_aut": "  GET /api/test-error?type=auth",
    "error_handling_examples.error.get_api_test_error_type_not": "  GET /api/test-error?type=not_found",
    "error_handling_examples.error.circuit_breaker_failure_thresh": "Circuit Breaker failure threshold: ",
    "error_handling_examples.error.monitoring_error_rate_threshol": "Monitoring error rate threshold: ",
    "error_handling_examples.error.running_error_handling_syste": "🚀 Running Error Handling System Examples",
    "error_handling_examples.error.3_provide_user_friendly_loca": "3. Provide user-friendly, localized error messages",
    "error_handling_examples.error.4_implement_appropriate_recov": "4. Implement appropriate recovery strategies for different failure modes",
    "error_handling_examples.error.5_use_configuration_managemen": "5. Use configuration management for flexible error handling behavior",
    "error_handling_examples.error.example_execution_failed": "\n❌ Example execution failed: ",
    "error_handling_exceptions.error.custom_exceptions_for_the_err": "\nCustom exceptions for the error handling system.\n",
    "error_handling_exceptions.error.base_exception_for_error_handl": "Base exception for error handling system.",
    "error_handling_exceptions.error.failures": " (failures: ",
    "error_handling_exceptions.error.raised_when_error_recovery_fai": "Raised when error recovery fails.",
    "error_handling_exceptions.error.failed": "' failed",
    "error_handling_exceptions.error.raised_when_error_monitoring_f": "Raised when error monitoring fails.",
    "error_handling_exceptions.error.monitoring_error_in": "Monitoring error in ",
    "error_handling_exceptions.error.raised_when_error_handling_con": "Raised when error handling configuration is invalid.",
    "error_handling_exceptions.error.invalid_configuration_for": "Invalid configuration for '",
    "error_handling_exceptions.error.raised_when_fallback_mechanism": "Raised when fallback mechanism fails.",
    "error_handling_exceptions.error.failed_1": "' failed",
    "error_handling_exceptions.error.raised_when_alerting_system_fa": "Raised when alerting system fails.",
    "error_handling_exceptions.error.failed_to_send": "Failed to send ",
    "error_handling_error_monitor.error.error_monitoring_and_alerting": "\nError Monitoring and Alerting System.\n\nProvides comprehensive error monitoring, metrics collection, and alerting capabilities.\n",
    "error_handling_error_monitor.error.error_metrics_for_monitoring": "Error metrics for monitoring.",
    "error_handling_error_monitor.error.add_an_error_to_the_metrics": "Add an error to the metrics.",
    "error_handling_error_monitor.error.error_evaluating_alert_rule": "Error evaluating alert rule '",
    "error_handling_error_monitor.error.failed_to_send_alert_via": "Failed to send alert via ",
    "error_handling_error_monitor.error.main_error_monitoring_system": "Main error monitoring system.",
    "error_handling_error_monitor.error.high_error_rate_detected_10": "High error rate detected (>10 errors/minute)",
    "error_handling_error_monitor.error.critical_error_detected": "Critical error detected",
    "error_handling_error_monitor.error.high_proportion_of_database_er": "High proportion of database errors detected",
    "error_handling_error_monitor.error.multiple_external_service_erro": "Multiple external service errors detected",
    "error_handling_error_monitor.error.record_an_error_for_monitoring": "Record an error for monitoring.",
    "error_handling_error_monitor.error.error_recording_error_for_moni": "Error recording error for monitoring: ",
    "error_handling_error_monitor.error.get_current_error_metrics": "Get current error metrics.",
    "error_handling_error_monitor.error.get_error_trends_over_time": "Get error trends over time.",
    "error_handling_error_monitor.error.enable_error_monitoring": "Enable error monitoring.",
    "error_handling_error_monitor.error.error_monitoring_enabled": "Error monitoring enabled",
    "error_handling_error_monitor.error.disable_error_monitoring": "Disable error monitoring.",
    "error_handling_error_monitor.error.error_monitoring_disabled": "Error monitoring disabled",
    "error_handling_error_monitor.error.error_metrics_reset": "Error metrics reset",
    "error_handling_middleware.error.error_handling_middleware_int": "\nError Handling Middleware Integration.\n\nProvides Flask middleware integration for comprehensive error handling across the application.\n",
    "error_handling_middleware.error.flask_middleware_for_comprehen": "Flask middleware for comprehensive error handling.",
    "error_handling_middleware.error.error_handling_middleware_init": "Error handling middleware initialized",
    "error_handling_middleware.error.register_error_handlers_with_t": "Register error handlers with the Flask app.",
    "error_handling_middleware.error.handle_error_handling_system_e": "Handle error handling system exceptions.",
    "error_handling_middleware.error.failed_to_record_error_for_mon": "Failed to record error for monitoring: ",
    "error_handling_middleware.error.failed_to_record_error_for_mon_1": "Failed to record error for monitoring: ",
    "error_handling_middleware.error.error_handling_system_failure": "Error handling system failure: ",
    "error_handling_middleware.error.an_internal_system_error_occur": "An internal system error occurred. Please try again later.",
    "error_handling_middleware.error.build_the_error_response_data": "Build the error response data.",
    "error_handling_middleware.error.invalid_json": "[INVALID JSON]",
    "error_handling_middleware.error.factory_function_to_create_err": "Factory function to create error handling middleware.",
    "security_rate_limiting.error.redis_connection_failed_using": "Redis connection failed, using memory store: ",
    "security_rate_limiting.error.redis_rate_limit_error": "Redis rate limit error: ",
    "security_rate_limiting.error.pattern_tracking_error": "Pattern tracking error: ",
    "security_password_policy.error.password_cannot_contain_more_t": "Password cannot contain more than ",
    "security_password_policy.error.password_cannot_contain_more_t_1": "Password cannot contain more than ",
    "security_password_policy.error.password_cannot_contain_person": "Password cannot contain personal information",
    "security_password_policy.error.password_cannot_contain_keyboa": "Password cannot contain keyboard patterns",
    "security_password_policy.error.error_checking_pwned_passwords": "Error checking pwned passwords: ",
    "security_password_policy.error.pwned_password_api_request_fai": "Pwned password API request failed: ",
    "security_encryption_service.error.decryption_failed": "Decryption failed: ",
    "security_encryption_service.error.password_hashing_failed": "Password hashing failed: ",
    "security_encryption_service.error.file_encryption_failed": "File encryption failed: ",
    "security_encryption_service.error.file_decryption_failed": "File decryption failed: ",
    "security_csrf_protection.error.csrf_token_invalid": "CSRF token invalid",
    "security_csrf_protection.error.handle_csrf_validation_error": "Handle CSRF validation error.",
    "security_csrf_protection.error.csrf_protection_error": "CSRF protection error: ",
    "security_audit_logger.error.failed_operation": "Failed operation: ",
    "security_input_validator.error.onerror_s": "onerror\\s*=",
    "security_input_validator.error.invalid_email_format": "Invalid email format",
    "security_input_validator.error.password_cannot_contain_three": "Password cannot contain three or more consecutive identical characters",
    "security_input_validator.error.password_cannot_contain_sequen": "Password cannot contain sequential numbers",
    "security_input_validator.error.password_cannot_contain_sequen_1": "Password cannot contain sequential letters",
    "security_input_validator.error.invalid_url_format": "Invalid URL format",
    "security_input_validator.error.invalid_key_in_json_payload": "Invalid key in JSON payload",
    "refactored_appointment_resources.error.error_fetching_appointments": "Error fetching appointments: ",
    "refactored_appointment_resources.error.error_creating_appointment": "Error creating appointment: ",
    "refactored_appointment_resources.error.error_fetching_appointment": "Error fetching appointment: ",
    "refactored_appointment_resources.error.error_updating_appointment": "Error updating appointment: ",
    "refactored_appointment_resources.error.error_deleting_appointment": "Error deleting appointment: ",
    "refactored_appointment_resources.error.error_syncing_appointment": "Error syncing appointment: ",
    "refactored_appointment_resources.error.error_unsyncing_appointment": "Error unsyncing appointment: ",
    "utils_content_processing.error.content_extraction_failed": "Content extraction failed: ",
    "utils_content_processing.error.failed_to_extract_page": "Failed to extract page ",
    "utils_content_processing.error.pdf_extraction_failed": "PDF extraction failed: ",
    "utils_content_processing.error.docx_extraction_failed": "DOCX extraction failed: ",
    "utils_content_processing.error.text_extraction_failed": "Text extraction failed: ",
    "utils_content_processing.error.audio_extraction_failed": "Audio extraction failed: ",
    "utils_content_processing.error.video_extraction_failed": "Video extraction failed: ",
    "utils_content_processing.error.invalid_url_format": "Invalid URL format",
    "utils_content_processing.error.failed_to_fetch_url": "Failed to fetch URL: ",
    "utils_content_processing.error.web_content_extraction_failed": "Web content extraction failed: ",
    "utils_content_processing.error.create_error_result": "Create error result.",
    "utils_content_processing.error.text_analysis_failed": "Text analysis failed: ",
    "utils_content_processing.error.readability_analysis_failed": "Readability analysis failed: ",
    "utils_content_processing.error.spacy_keyword_extraction_faile": "SpaCy keyword extraction failed: ",
    "utils_content_processing.error.difficulty_calculation_failed": "Difficulty calculation failed: ",
    "utils_content_processing.error.validation_failed": "Validation failed: ",
    "utils_rate_limiting.error.error_getting_rate_limit_statu": "Error getting rate limit status: ",
    "utils_file_upload_security.error.validate_uploaded_fil": "\n        Validate uploaded file for security.\n        \n        Returns:\n            Tuple of (is_valid, error_message)\n        ",
    "utils_file_upload_security.error.invalid_file_content_detected": "Invalid file content. Detected type: ",
    "utils_file_upload_security.error.save_file_securely_wi": "\n        Save file securely with validation.\n        \n        Returns:\n            Tuple of (success, saved_path, error_message)\n        ",
    "utils_file_upload_security.error.failed_to_save_file": "Failed to save file: ",
    "utils_file_upload_security.error.error_deleting_file": "Error deleting file ",
    "utils_ai.error.failed_to_parse_ai_response_as": "Failed to parse AI response as JSON: ",
    "utils_ai.error.failed_to_parse_ai_response": "Failed to parse AI response",
    "utils_ai.error.analysis_summary_not_available": "Analysis summary not available due to processing error.",
    "utils_ai.error.error_calling_openai_api": "Error calling OpenAI API: ",
    "utils_ai.error.ai_analysis_failed": "AI analysis failed: ",
    "utils_ai.error.analysis_summary_not_available_1": "Analysis summary not available due to API error.",
    "utils_ai.error.failed_to_parse_ai_response_as_1": "Failed to parse AI response as JSON: ",
    "utils_ai.error.failed_to_parse_ai_response_1": "Failed to parse AI response",
    "utils_ai.error.not_available_due_to_processin": "Not available due to processing error",
    "utils_ai.error.not_available_due_to_processin_1": "Not available due to processing error",
    "utils_ai.error.error_calling_openai_api_1": "Error calling OpenAI API: ",
    "utils_ai.error.ai_report_generation_failed": "AI report generation failed: ",
    "utils_ai.error.not_available_due_to_api_error": "Not available due to API error",
    "utils_ai.error.not_available_due_to_api_error_1": "Not available due to API error",
    "utils_data_encryption.error.decryption_failed": "Decryption failed: ",
    "utils_data_encryption.error.failed_to_decrypt_data": "Failed to decrypt data",
    "utils_data_encryption.error.failed_to_decrypt_field": "Failed to decrypt field: ",
    "utils_cache.error.invalidate_cache_entries": "\n    Invalidate cache entries matching a pattern.\n    \n    Args:\n        key_pattern (str): Pattern to match cache keys\n        \n    Returns:\n        int: Number of keys invalidated\n    ",
    "utils_cache.error.invalidated": "Invalidated ",
    "utils_cache.error.cannot_access_redis_client_cl": "Cannot access Redis client, clearing entire cache instead of pattern: ",
    "utils_cache.error.error_invalidating_cache_for_p": "Error invalidating cache for pattern ",
    "utils_cache.error.clear_all_cache_entries_f": "\n    Clear all cache entries for a specific user.\n    \n    Args:\n        user_id (int): User ID\n        \n    Returns:\n        int: Number of keys invalidated\n    ",
    "utils_cache.error.clear_all_cache_entries_f_1": "\n    Clear all cache entries for a specific model.\n    \n    Args:\n        model_name (str): Model name\n        \n    Returns:\n        int: Number of keys invalidated\n    ",
    "utils_backup_manager.error.database_backup_failed": "Database backup failed: ",
    "utils_backup_manager.error.files_backup_failed": "Files backup failed: ",
    "utils_backup_manager.error.full_backup_completed_with_err": "Full backup completed with errors",
    "utils_backup_manager.error.database_restore_failed": "Database restore failed: ",
    "utils_backup_manager.error.failed_to_list_s3_backups": "Failed to list S3 backups: ",
    "utils_backup_manager.error.backup_cleanup_failed": "Backup cleanup failed: ",
    "utils_datetime_utils.error.unable_to_parse_datetime": "Unable to parse datetime: ",
    "utils_health_checker.error.health_check_failed": "Health check failed: ",
    "utils_health_checker.error.database_connection_failed": "Database connection failed: ",
    "utils_health_checker.error.redis_read_write_test_failed": "Redis read/write test failed",
    "utils_health_checker.error.redis_connection_failed": "Redis connection failed: ",
    "utils_health_checker.error.disk_space_check_failed": "Disk space check failed: ",
    "utils_health_checker.error.memory_check_failed": "Memory check failed: ",
    "utils_health_checker.error.cpu_check_failed": "CPU check failed: ",
    "utils_health_checker.error.cannot_create_upload_directory": "Cannot create upload directory: ",
    "utils_health_checker.error.dependency_check_failed": "Dependency check failed: ",
    "utils_notifications.error.failed_to_send_email_to": "Failed to send email to ",
    "utils_notifications.error.failed_to_send_slack_message": "Failed to send Slack message: ",
    "utils_notifications.error.failed_to_send_sms_to": "Failed to send SMS to ",
    "utils_notifications.error.failed_to_send_push_notificati": "Failed to send push notification: ",
    "utils_notifications.error.failed_to_send_push_notificati_1": "Failed to send push notification: ",
    "utils_notifications.error.failed_to_store_notification_i": "Failed to store notification in database: ",
    "utils_notifications.error.failed_to_schedule_notificatio": "Failed to schedule notification: ",
    "utils_error_handler.error.standardized_error_handling_ut": "Standardized error handling utilities.",
    "utils_error_handler.error.base_application_error_class": "Base application error class.",
    "utils_error_handler.error.validation_error_class": "Validation error class.",
    "utils_error_handler.error.authentication_error_class": "Authentication error class.",
    "utils_error_handler.error.authorization_error_class": "Authorization error class.",
    "utils_error_handler.error.not_found_error_class": "Not found error class.",
    "utils_error_handler.error.conflict_error_class": "Conflict error class.",
    "utils_error_handler.error.rate_limit_error_class": "Rate limit error class.",
    "utils_error_handler.error.external_service_error_class": "External service error class.",
    "utils_error_handler.error.format_error_into_standardized": "Format error into standardized response.",
    "utils_error_handler.error.validation_failed": "Validation failed",
    "utils_error_handler.error.database_operation_failed": "Database operation failed",
    "utils_error_handler.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "utils_error_handler.error.decorator_to_handle_errors_in": "Decorator to handle errors in view functions.",
    "utils_error_handler.error.log_error_with_context": "Log error with context.",
    "utils_error_handler.error.application_error": "Application error: ",
    "utils_error_handler.error.server_error": "Server error: ",
    "utils_error_handler.error.register_error_handlers_with_f": "Register error handlers with Flask app.",
    "utils_error_handler.error.handle_404_errors": "Handle 404 errors.",
    "utils_error_handler.error.handle_500_errors": "Handle 500 errors.",
    "utils_error_handler.error.an_internal_server_error_occur": "An internal server error occurred",
    "utils_error_handler.error.handle_database_errors_with_ap": "Handle database errors with appropriate responses.",
    "utils_error_handler.error.invalid_reference_to_related_r": "Invalid reference to related resource",
    "utils_error_handler.error.database_operation_failed_1": "Database operation failed",
    "utils_multi_tenancy.error.cannot_save_to_different_tenan": "Cannot save to different tenant",
    "utils_sentry.error.sentry_integration_for_error_t": "Sentry integration for error tracking and monitoring.",
    "utils_sentry.error.add_a_breadcrumb_for_better_er": "Add a breadcrumb for better error context.",
    "database_indexing_strategy.error.error_analyzing_query_patterns": "Error analyzing query patterns: ",
    "database_indexing_strategy.error.error_analyzing_query_patterns_1": "Error analyzing query patterns: ",
    "database_indexing_strategy.error.error_analyzing_join_patterns": "Error analyzing join patterns: ",
    "database_indexing_strategy.error.error_finding_unused_indexes": "Error finding unused indexes: ",
    "database_backup.error.backup_failed": "Backup failed: ",
    "database_backup.error.restore_failed": "Restore failed: ",
    "database_backup.error.error_removing_backup": "Error removing backup ",
    "database_backup.error.backup_verification_failed": "Backup verification failed: ",
    "database_backup.error.failed_to_schedule_backup": "Failed to schedule backup: ",
    "database_backup.error.restore_failed_1": "Restore failed",
    "database_backup.error.backup_is_corrupted_or_invalid": "Backup is corrupted or invalid",
    "database_optimization.error.error_creating_index": "Error creating index: ",
    "database_optimization.error.error_optimizing_table": "Error optimizing table ",
    "database_optimization.error.error_creating_partitions": "Error creating partitions: ",
    "database_optimization.error.error_generating_execution_pla": "Error generating execution plan: ",
    "database_optimization.error.error_creating_materialized_vi": "Error creating materialized view: ",
    "database_optimization.error.error_setting": "Error setting ",
    "database_migrations.error.error_initializing_migrations": "Error initializing migrations: ",
    "database_migrations.error.error_creating_migration": "Error creating migration: ",
    "database_migrations.error.error_running_migrations": "Error running migrations: ",
    "database_migrations.error.error_rolling_back_migrations": "Error rolling back migrations: ",
    "database_migrations.error.error_getting_migration_histor": "Error getting migration history: ",
    "database_migrations.error.invalid_migration_filename": "Invalid migration filename: ",
    "database_migrations.error.error_creating_backup": "Error creating backup: ",
    "database_migrations.error.error_in_data_migration": "Error in data migration ",
    "database_migrations.error.error_generating_report": "Error generating report: ",
    "monitoring_performance_metrics.error.failed_to_store_metrics_in_red": "Failed to store metrics in Redis: ",
    "monitoring_performance_metrics.error.metrics_errors": "metrics:errors:",
    "monitoring_performance_metrics.error.failed_to_collect_system_metri": "Failed to collect system metrics: ",
    "monitoring_performance_metrics.error.failed_to_collect_process_metr": "Failed to collect process metrics: ",
    "monitoring_performance_metrics.error.failed_to_store_system_metrics": "Failed to store system metrics in Redis: ",
    "monitoring_performance_metrics.error.failed_to_store_process_metric": "Failed to store process metrics in Redis: ",
    "monitoring_performance_metrics.error.error_in_monitoring_loop": "Error in monitoring loop: ",
    "monitoring___init__.error.monitoring_utilities_package": "\nMonitoring Utilities Package\n\nThis package provides application monitoring utilities including\nerror tracking, performance metrics, and alerting systems.\n",
    "monitoring_error_tracking.error.error_tracking_system_for_bdc": "\nError tracking system for BDC application\n",
    "monitoring_error_tracking.error.central_error_tracking_system": "Central error tracking system",
    "monitoring_error_tracking.error.initialize_error_tracking_with": "Initialize error tracking with Flask app",
    "monitoring_error_tracking.error.internal_server_error": "Internal server error",
    "monitoring_error_tracking.error.handle_404_errors": "Handle 404 errors",
    "monitoring_error_tracking.error.handle_500_errors": "Handle 500 errors",
    "monitoring_error_tracking.error.internal_server_error_1": "Internal server error",
    "monitoring_error_tracking.error.track_an_error_occurrence": "Track an error occurrence",
    "monitoring_error_tracking.error.error_tracked": "Error tracked: ",
    "monitoring_error_tracking.error.error_in_error_tracking": "Error in error tracking: ",
    "monitoring_error_tracking.error.store_error_in_database": "Store error in database",
    "monitoring_error_tracking.error.failed_to_store_error_in_datab": "Failed to store error in database: ",
    "monitoring_error_tracking.error.store_error_in_redis_for_real": "Store error in Redis for real-time analysis",
    "monitoring_error_tracking.error.errors": "errors:",
    "monitoring_error_tracking.error.error_count": "error_count:",
    "monitoring_error_tracking.error.failed_to_store_error_in_redis": "Failed to store error in Redis: ",
    "monitoring_error_tracking.error.check_if_error_conditions_warr": "Check if error conditions warrant an alert",
    "monitoring_error_tracking.error.count_errors_within_time_windo": "Count errors within time window",
    "monitoring_error_tracking.error.send_alert_for_error_condition": "Send alert for error condition",
    "monitoring_error_tracking.error.error_type": "\nError Type: ",
    "monitoring_error_tracking.error.errors_in": " errors in ",
    "monitoring_error_tracking.error.errors_1": " errors",
    "monitoring_error_tracking.error.error_alert_triggered": "Error alert triggered: ",
    "monitoring_error_tracking.error.bdc_error_alert": "BDC Error Alert: ",
    "monitoring_error_tracking.error.error_type_1": "Error Type",
    "monitoring_error_tracking.error.error_count_1": "Error Count",
    "monitoring_error_tracking.error.unable_to_parse_request_data": "Unable to parse request data",
    "monitoring_error_tracking.error.get_error_summary_for_specifie": "Get error summary for specified time period",
    "monitoring_error_tracking.error.get_detailed_information_about": "Get detailed information about a specific error",
    "monitoring_error_tracking.error.analyze_error_trends_over_time": "Analyze error trends over time",
    "monitoring_error_tracking.error.clean_up_old_error_records": "Clean up old error records",
    "monitoring_error_tracking.error.old_error_records": " old error records",
    "monitoring_error_tracking.error.decorator_for_error_handling": "Decorator for error handling",
    "monitoring_error_tracking.error.collect_and_process_error_metr": "Collect and process error metrics",
    "monitoring_error_tracking.error.collect_current_error_metrics": "Collect current error metrics",
    "monitoring_error_tracking.error.initialize_error_tracking_for": "Initialize error tracking for the application",
    "monitoring_error_tracking.error.clean_up_old_error_records_1": "Clean up old error records",
    "monitoring_error_tracking.error.old_error_records_1": " old error records",
    "monitoring_alarm_system.error.high_application_error_rate": "High application error rate",
    "monitoring_alarm_system.error.database_connection_failures": "Database connection failures",
    "monitoring_alarm_system.error.failed_to_save_alarm_rule": "Failed to save alarm rule: ",
    "monitoring_alarm_system.error.failed_to_remove_alarm_rule": "Failed to remove alarm rule: ",
    "monitoring_alarm_system.error.error_evaluating_metric": "Error evaluating metric ",
    "monitoring_alarm_system.error.failed_to_send": "Failed to send ",
    "monitoring_alarm_system.error.failed_to_send_resolution_noti": "Failed to send resolution notification: ",
    "monitoring_alarm_system.error.failed_to_store_alarm_history": "Failed to store alarm history: ",
    "monitoring_alarm_system.error.evaluate_application_error_rat": "Evaluate application error rate",
    "monitoring_alarm_system.error.evaluate_database_connection_e": "Evaluate database connection errors",
    "monitoring_alarm_system.error.metrics_db_errors_count": "metrics:db_errors:count",
    "monitoring_alarm_system.error.failed_to_send_email_notificat": "Failed to send email notification: ",
    "monitoring_alarm_system.error.failed_to_send_slack_notificat": "Failed to send Slack notification: ",
    "monitoring_alarm_system.error.failed_to_send_webhook_notific": "Failed to send webhook notification: ",
    "monitoring_alarm_system.error.failed_to_send_sms_to": "Failed to send SMS to ",
    "monitoring_alarm_system.error.failed_to_send_sms_notificatio": "Failed to send SMS notification: ",
    "monitoring_alarm_system.error.error_in_alarm_monitoring_loop": "Error in alarm monitoring loop: ",
    "monitoring_app_monitoring.error.total_application_errors": "Total application errors",
    "monitoring_app_monitoring.error.log_errors_and_record_metrics": "Log errors and record metrics",
    "monitoring_app_monitoring.error.error_in_request": "Error in request ",
    "monitoring_app_monitoring.error.error_getting_health_status": "Error getting health status: ",
    "monitoring_app_monitoring.error.database_check_failed": "Database check failed: ",
    "monitoring_app_monitoring.error.cache_check_failed": "Cache check failed: ",
    "monitoring_app_monitoring.error.failed_after": " failed after ",
    "models_monitoring.error.models_for_monitoring_and_err": "\nModels for monitoring and error tracking\n",
    "models_monitoring.error.model_for_storing_error_logs": "Model for storing error logs",
    "models_monitoring.error.convert_error_log_to_dictionar": "Convert error log to dictionary",
    "models_monitoring.error.model_for_storing_aggregated_e": "Model for storing aggregated error metrics",
    "models_monitoring.error.convert_error_metrics_to_dicti": "Convert error metrics to dictionary",
    "models_sms_message.error.mark_the_sms_as_failed": "Mark the SMS as failed.",
    "models_adaptive_test.error.standard_error_threshold_met": "Standard error threshold met",
    "cli_i18n_commands.error.error_initializing_languages": "Error initializing languages: ",
    "cli_i18n_commands.error.error": "❌ Error: ",
    "cli_i18n_commands.error.error_checking_translations": "Error checking translations: ",
    "cli_i18n_commands.error.error_1": "❌ Error: ",
    "cli_i18n_commands.error.error_updating_translation": "Error updating translation: ",
    "cli_i18n_commands.error.error_2": "❌ Error: ",
    "cli_i18n_commands.error.error_3": "❌ Error: ",
    "cli_i18n_commands.error.error_exporting_language": "Error exporting language: ",
    "cli_i18n_commands.error.error_4": "❌ Error: ",
    "cli_i18n_commands.error.invalid_json_file": "❌ Invalid JSON file: ",
    "cli_i18n_commands.error.error_importing_language": "Error importing language: ",
    "cli_i18n_commands.error.error_5": "❌ Error: ",
    "cli_i18n_commands.error.error_generating_analytics": "Error generating analytics: ",
    "cli_i18n_commands.error.error_6": "❌ Error: ",
    "cli_i18n_commands.error.error_7": "❌ Error: ",
    "cli_i18n_commands.error.error_during_cleanup": "Error during cleanup: ",
    "cli_i18n_commands.error.error_8": "❌ Error: ",
    "cli_i18n_commands.error.error_9": "❌ Error: ",
    "cli_i18n_commands.error.errors": "   Errors: ",
    "cli_i18n_commands.error.error_translating_entity": "Error translating entity: ",
    "cli_i18n_commands.error.error_10": "❌ Error: ",
    "cli_i18n_commands.error.error_loading_translations_for": "Error loading translations for ",
    "cli_i18n_commands.error.validation_errors": "❌ Validation Errors:",
    "cli_i18n_commands.error.errors_1": "   Errors: ",
    "cli_i18n_commands.error.error_during_validation": "Error during validation: ",
    "cli_i18n_commands.error.validation_failed": "❌ Validation failed: ",
    "schemas_assessment.error.passing_score_cannot_be_greate": "Passing score cannot be greater than total points",
    "schemas_video_conference.error.start_time_cannot_be_in_the_pa": "Start time cannot be in the past.",
    "schemas_video_conference.error.schema_for_error_responses": "Schema for error responses.",
    "schemas_gamification.error.min_participants_cannot_be_gre": "min_participants cannot be greater than max_participants",
    "realtime___init__.error.authentication_failed": "Authentication failed: ",
    "realtime___init__.error.connection_error": "Connection error: ",
    "integrations_config.error.failed_to_load_config_file": "Failed to load config file ",
    "integrations_config.error.failed_to_save_configs": "Failed to save configs: ",
    "integrations_config.error.failed_to_save_configs_1": "Failed to save configs: ",
    "integrations___init__.error.integrationerror": "IntegrationError",
    "integrations_examples.error.calendar_example_failed": "Calendar example failed: ",
    "integrations_examples.error.payment_example_failed": "Payment example failed: ",
    "integrations_examples.error.video_example_failed": "Video example failed: ",
    "integrations_examples.error.email_example_failed": "Email example failed: ",
    "integrations_examples.error.failed_to_create": "Failed to create ",
    "integrations_testing.error.failed_to_run_test_suite": "Failed to run test suite ",
    "integrations_testing.error.assertion_failed": "Assertion failed: ",
    "integrations_testing.error.test_error": "Test error: ",
    "integrations_testing.error.test_setup_error": "Test setup error: ",
    "integrations_testing.error.failed_to_create": "Failed to create ",
    "integrations_testing.error.calendar_connection_test_faile": "Calendar connection test failed for ",
    "integrations_testing.error.payment_connection_test_failed": "Payment connection test failed for ",
    "integrations_testing.error.failed": "  Failed: ",
    "integrations_testing.error.errors": "  Errors: ",
    "integrations_testing.error.failed_1": "  Failed: ",
    "integrations_testing.error.errors_1": "  Errors: ",
    "integrations_base.error.base_exception_for_integration": "Base exception for integration-related errors.",
    "integrations_base.error.raised_when_authentication_wit": "Raised when authentication with a service fails.",
    "integrations_base.error.authentication_failed": "Authentication failed: ",
    "integrations_base.error.authentication_failed_1": "Authentication failed: ",
    "video_meet_integration.error.failed_to_refresh_token": "Failed to refresh token: ",
    "video_meet_integration.error.failed_to_connect_to_google_me": "Failed to connect to Google Meet: ",
    "video_meet_integration.error.connection_test_failed": "Connection test failed: ",
    "video_meet_integration.error.failed_to_create_google_meet_m": "Failed to create Google Meet meeting: ",
    "video_meet_integration.error.failed_to_create_meeting": "Failed to create meeting: ",
    "video_meet_integration.error.failed_to_get_google_meet_meet": "Failed to get Google Meet meeting: ",
    "video_meet_integration.error.failed_to_get_meeting": "Failed to get meeting: ",
    "video_meet_integration.error.failed_to_list_google_meet_mee": "Failed to list Google Meet meetings: ",
    "video_meet_integration.error.failed_to_list_meetings": "Failed to list meetings: ",
    "video_meet_integration.error.failed_to_add_participant": "Failed to add participant: ",
    "video_meet_integration.error.failed_to_remove_participant": "Failed to remove participant: ",
    "video_teams_integration.error.token_exchange_failed": "Token exchange failed: ",
    "video_teams_integration.error.failed_to_refresh_token": "Failed to refresh token: ",
    "video_teams_integration.error.failed_to_connect_to_teams": "Failed to connect to Teams: ",
    "video_teams_integration.error.connection_test_failed": "Connection test failed: ",
    "video_teams_integration.error.failed_to_create_teams_meeting": "Failed to create Teams meeting: ",
    "video_teams_integration.error.failed_to_create_teams_meeting_1": "Failed to create Teams meeting: ",
    "video_teams_integration.error.failed_to_create_meeting": "Failed to create meeting: ",
    "video_teams_integration.error.failed_to_get_teams_meeting": "Failed to get Teams meeting: ",
    "video_teams_integration.error.failed_to_get_teams_meeting_1": "Failed to get Teams meeting: ",
    "video_teams_integration.error.failed_to_get_meeting": "Failed to get meeting: ",
    "video_teams_integration.error.failed_to_list_teams_meetings": "Failed to list Teams meetings: ",
    "video_teams_integration.error.failed_to_list_teams_meetings_1": "Failed to list Teams meetings: ",
    "video_teams_integration.error.failed_to_list_meetings": "Failed to list meetings: ",
    "video_zoom_integration.error.token_exchange_failed": "Token exchange failed: ",
    "video_zoom_integration.error.failed_to_refresh_token": "Failed to refresh token: ",
    "video_zoom_integration.error.failed_to_connect_to_zoom": "Failed to connect to Zoom: ",
    "video_zoom_integration.error.connection_test_failed": "Connection test failed: ",
    "video_zoom_integration.error.failed_to_create_zoom_meeting": "Failed to create Zoom meeting: ",
    "video_zoom_integration.error.failed_to_create_zoom_meeting_1": "Failed to create Zoom meeting: ",
    "video_zoom_integration.error.failed_to_create_meeting": "Failed to create meeting: ",
    "video_zoom_integration.error.failed_to_get_zoom_meeting": "Failed to get Zoom meeting: ",
    "video_zoom_integration.error.failed_to_get_zoom_meeting_1": "Failed to get Zoom meeting: ",
    "video_zoom_integration.error.failed_to_get_meeting": "Failed to get meeting: ",
    "video_zoom_integration.error.failed_to_list_zoom_meetings": "Failed to list Zoom meetings: ",
    "video_zoom_integration.error.failed_to_list_zoom_meetings_1": "Failed to list Zoom meetings: ",
    "video_zoom_integration.error.failed_to_list_meetings": "Failed to list meetings: ",
    "video_zoom_integration.error.failed_to_start_zoom_meeting": "Failed to start Zoom meeting: ",
    "video_zoom_integration.error.failed_to_end_zoom_meeting": "Failed to end Zoom meeting: ",
    "video_zoom_integration.error.failed_to_get_participants": "Failed to get participants: ",
    "video_zoom_integration.error.failed_to_get_zoom_meeting_par": "Failed to get Zoom meeting participants: ",
    "video_zoom_integration.error.failed_to_remove_participant": "Failed to remove participant: ",
    "video_zoom_integration.error.failed_to_mute_participant": "Failed to mute participant: ",
    "video_zoom_integration.error.failed_to_unmute_participant": "Failed to unmute participant: ",
    "video_zoom_integration.error.failed_to_start_recording": "Failed to start recording: ",
    "video_zoom_integration.error.failed_to_stop_recording": "Failed to stop recording: ",
    "video_zoom_integration.error.failed_to_get_recordings": "Failed to get recordings: ",
    "video_zoom_integration.error.failed_to_get_zoom_recordings": "Failed to get Zoom recordings: ",
    "payments_stripe_integration.error.failed_to_connect_to_stripe": "Failed to connect to Stripe: ",
    "payments_stripe_integration.error.stripe_authentication_failed": "Stripe authentication failed",
    "payments_stripe_integration.error.stripe_connection_test_failed": "Stripe connection test failed: ",
    "payments_stripe_integration.error.failed_to_create_stripe_custom": "Failed to create Stripe customer: ",
    "payments_stripe_integration.error.failed_to_create_customer": "Failed to create customer: ",
    "payments_stripe_integration.error.failed_to_get_stripe_customer": "Failed to get Stripe customer: ",
    "payments_stripe_integration.error.failed_to_get_customer": "Failed to get customer: ",
    "payments_stripe_integration.error.failed_to_create_stripe_paymen": "Failed to create Stripe payment method: ",
    "payments_stripe_integration.error.failed_to_create_payment_metho": "Failed to create payment method: ",
    "payments_stripe_integration.error.failed_to_get_stripe_payment_m": "Failed to get Stripe payment method: ",
    "payments_stripe_integration.error.failed_to_get_payment_method": "Failed to get payment method: ",
    "payments_stripe_integration.error.failed_to_list_stripe_payment": "Failed to list Stripe payment methods: ",
    "payments_stripe_integration.error.failed_to_list_payment_methods": "Failed to list payment methods: ",
    "payments_stripe_integration.error.failed_to_detach_stripe_paymen": "Failed to detach Stripe payment method: ",
    "payments_stripe_integration.error.failed_to_create_stripe_paymen_1": "Failed to create Stripe payment intent: ",
    "payments_stripe_integration.error.failed_to_create_payment_inten": "Failed to create payment intent: ",
    "payments_stripe_integration.error.failed_to_get_stripe_payment_i": "Failed to get Stripe payment intent: ",
    "payments_stripe_integration.error.failed_to_get_payment_intent": "Failed to get payment intent: ",
    "payments_stripe_integration.error.failed_to_confirm_stripe_payme": "Failed to confirm Stripe payment intent: ",
    "payments_stripe_integration.error.failed_to_confirm_payment_inte": "Failed to confirm payment intent: ",
    "payments_stripe_integration.error.failed_to_cancel_stripe_paymen": "Failed to cancel Stripe payment intent: ",
    "payments_stripe_integration.error.failed_to_cancel_payment_inten": "Failed to cancel payment intent: ",
    "payments_stripe_integration.error.failed_to_capture_stripe_payme": "Failed to capture Stripe payment intent: ",
    "payments_stripe_integration.error.failed_to_capture_payment_inte": "Failed to capture payment intent: ",
    "payments_stripe_integration.error.failed_to_get_stripe_transacti": "Failed to get Stripe transaction: ",
    "payments_stripe_integration.error.failed_to_get_transaction": "Failed to get transaction: ",
    "payments_stripe_integration.error.failed_to_list_stripe_transact": "Failed to list Stripe transactions: ",
    "payments_stripe_integration.error.failed_to_list_transactions": "Failed to list transactions: ",
    "payments_stripe_integration.error.failed_to_create_stripe_refund": "Failed to create Stripe refund: ",
    "payments_stripe_integration.error.failed_to_create_refund": "Failed to create refund: ",
    "payments_stripe_integration.error.failed_to_get_stripe_refund": "Failed to get Stripe refund: ",
    "payments_stripe_integration.error.failed_to_get_refund": "Failed to get refund: ",
    "payments_stripe_integration.error.failed_to_list_stripe_refunds": "Failed to list Stripe refunds: ",
    "payments_stripe_integration.error.failed_to_list_refunds": "Failed to list refunds: ",
    "payments_paypal_integration.error.paypal_auth_failed": "PayPal auth failed: ",
    "payments_paypal_integration.error.paypal_authentication_failed": "PayPal authentication failed: ",
    "payments_paypal_integration.error.failed_to_connect_to_paypal": "Failed to connect to PayPal: ",
    "payments_paypal_integration.error.paypal_connection_test_failed": "PayPal connection test failed: ",
    "payments_paypal_integration.error.failed_to_create_paypal_order": "Failed to create PayPal order: ",
    "payments_paypal_integration.error.failed_to_create_paypal_order_1": "Failed to create PayPal order: ",
    "payments_paypal_integration.error.failed_to_create_payment_inten": "Failed to create payment intent: ",
    "payments_paypal_integration.error.failed_to_get_paypal_order": "Failed to get PayPal order: ",
    "payments_paypal_integration.error.failed_to_get_paypal_order_1": "Failed to get PayPal order: ",
    "payments_paypal_integration.error.failed_to_get_payment_intent": "Failed to get payment intent: ",
    "payments_paypal_integration.error.failed_to_capture_paypal_order": "Failed to capture PayPal order: ",
    "payments_paypal_integration.error.failed_to_capture_paypal_order_1": "Failed to capture PayPal order: ",
    "payments_paypal_integration.error.failed_to_confirm_payment_inte": "Failed to confirm payment intent: ",
    "payments_paypal_integration.error.failed_to_get_paypal_capture": "Failed to get PayPal capture: ",
    "payments_paypal_integration.error.failed_to_get_paypal_capture_1": "Failed to get PayPal capture: ",
    "payments_paypal_integration.error.failed_to_get_transaction": "Failed to get transaction: ",
    "payments_paypal_integration.error.failed_to_create_paypal_refund": "Failed to create PayPal refund: ",
    "payments_paypal_integration.error.failed_to_create_paypal_refund_1": "Failed to create PayPal refund: ",
    "payments_paypal_integration.error.failed_to_create_refund": "Failed to create refund: ",
    "payments_paypal_integration.error.failed_to_get_paypal_refund": "Failed to get PayPal refund: ",
    "payments_paypal_integration.error.failed_to_get_paypal_refund_1": "Failed to get PayPal refund: ",
    "payments_paypal_integration.error.failed_to_get_refund": "Failed to get refund: ",
    "calendar_outlook_calendar.error.token_exchange_failed": "Token exchange failed: ",
    "calendar_outlook_calendar.error.failed_to_refresh_token": "Failed to refresh token: ",
    "calendar_outlook_calendar.error.failed_to_connect_to_outlook_c": "Failed to connect to Outlook Calendar: ",
    "calendar_outlook_calendar.error.connection_test_failed": "Connection test failed: ",
    "calendar_outlook_calendar.error.failed_to_get_calendars": "Failed to get calendars: ",
    "calendar_outlook_calendar.error.failed_to_get_calendars_1": "Failed to get calendars: ",
    "calendar_outlook_calendar.error.failed_to_get_calendars_2": "Failed to get calendars: ",
    "calendar_outlook_calendar.error.failed_to_create_event": "Failed to create event: ",
    "calendar_outlook_calendar.error.failed_to_create_event_1": "Failed to create event: ",
    "calendar_outlook_calendar.error.failed_to_create_event_2": "Failed to create event: ",
    "calendar_outlook_calendar.error.failed_to_get_event": "Failed to get event: ",
    "calendar_outlook_calendar.error.failed_to_get_event_1": "Failed to get event: ",
    "calendar_outlook_calendar.error.failed_to_get_event_2": "Failed to get event: ",
    "calendar_outlook_calendar.error.failed_to_list_events": "Failed to list events: ",
    "calendar_outlook_calendar.error.failed_to_list_events_1": "Failed to list events: ",
    "calendar_outlook_calendar.error.failed_to_list_events_2": "Failed to list events: ",
    "calendar_outlook_calendar.error.failed_to_search_events": "Failed to search events: ",
    "calendar_outlook_calendar.error.failed_to_search_events_1": "Failed to search events: ",
    "calendar_outlook_calendar.error.failed_to_search_events_2": "Failed to search events: ",
    "calendar_ical_calendar.error.caldav_authentication_failed": "CalDAV authentication failed: ",
    "calendar_ical_calendar.error.connection_test_failed": "Connection test failed: ",
    "calendar_ical_calendar.error.failed_to_get_calendars": "Failed to get calendars: ",
    "calendar_ical_calendar.error.failed_to_get_calendars_1": "Failed to get calendars: ",
    "calendar_ical_calendar.error.failed_to_create_event": "Failed to create event: ",
    "calendar_ical_calendar.error.failed_to_create_event_1": "Failed to create event: ",
    "calendar_ical_calendar.error.failed_to_get_event": "Failed to get event: ",
    "calendar_ical_calendar.error.failed_to_convert_event": "Failed to convert event: ",
    "calendar_ical_calendar.error.failed_to_list_events": "Failed to list events: ",
    "calendar_ical_calendar.error.failed_to_list_events_1": "Failed to list events: ",
    "calendar_ical_calendar.error.failed_to_get_calendar": "Failed to get calendar: ",
    "calendar_google_calendar.error.failed_to_refresh_token": "Failed to refresh token: ",
    "calendar_google_calendar.error.failed_to_connect_to_google_ca": "Failed to connect to Google Calendar: ",
    "calendar_google_calendar.error.connection_test_failed": "Connection test failed: ",
    "calendar_google_calendar.error.failed_to_get_calendars": "Failed to get calendars: ",
    "calendar_google_calendar.error.failed_to_get_calendars_1": "Failed to get calendars: ",
    "calendar_google_calendar.error.failed_to_create_event": "Failed to create event: ",
    "calendar_google_calendar.error.failed_to_create_event_1": "Failed to create event: ",
    "calendar_google_calendar.error.failed_to_get_event": "Failed to get event: ",
    "calendar_google_calendar.error.failed_to_get_event_1": "Failed to get event: ",
    "calendar_google_calendar.error.failed_to_list_events": "Failed to list events: ",
    "calendar_google_calendar.error.failed_to_list_events_1": "Failed to list events: ",
    "calendar_google_calendar.error.failed_to_search_events": "Failed to search events: ",
    "calendar_google_calendar.error.failed_to_search_events_1": "Failed to search events: ",
    "email_base_email.error.invalid_email_address": "Invalid email address: ",
    "email_sendgrid_integration.error.failed_to_connect_to_sendgrid": "Failed to connect to SendGrid: ",
    "email_sendgrid_integration.error.sendgrid_connection_test_faile": "SendGrid connection test failed: ",
    "email_sendgrid_integration.error.sendgrid_send_failed": "SendGrid send failed: ",
    "email_sendgrid_integration.error.failed_to_send_email_via_sendg": "Failed to send email via SendGrid: ",
    "email_sendgrid_integration.error.failed_to_send_email": "Failed to send email: ",
    "email_sendgrid_integration.error.failed_to_send_bulk_email": "Failed to send bulk email: ",
    "email_sendgrid_integration.error.failed_to_get_email_status": "Failed to get email status: ",
    "email_sendgrid_integration.error.failed_to_get_email_stats": "Failed to get email stats: ",
    "email_sendgrid_integration.error.failed_to_create_template_vers": "Failed to create template version",
    "email_sendgrid_integration.error.failed_to_create_template": "Failed to create template",
    "email_sendgrid_integration.error.failed_to_create_template_1": "Failed to create template: ",
    "email_sendgrid_integration.error.failed_to_create_template_2": "Failed to create template: ",
    "email_sendgrid_integration.error.failed_to_get_template": "Failed to get template",
    "email_sendgrid_integration.error.failed_to_get_template_1": "Failed to get template: ",
    "email_sendgrid_integration.error.failed_to_list_templates": "Failed to list templates: ",
    "email_sendgrid_integration.error.template_send_failed": "Template send failed: ",
    "email_sendgrid_integration.error.failed_to_send_template_email": "Failed to send template email: ",
    "email_sendgrid_integration.error.failed_to_send_template_email_1": "Failed to send template email: ",
    "email_sendgrid_integration.error.failed_to_add_to_suppression_l": "Failed to add to suppression list: ",
    "email_sendgrid_integration.error.failed_to_check_suppression_li": "Failed to check suppression list: ",
    "email_sendgrid_integration.error.failed_to_parse_sendgrid_event": "Failed to parse SendGrid event: ",
    "api_auth.error.validation_failed": "Validation failed",
    "api_auth.error.invalid_email_or_password": "Invalid email or password",
    "api_auth.error.login_error": "Login error: ",
    "api_auth.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "api_auth.error.validation_failed_1": "Validation failed",
    "api_auth.error.user_registration_failed_emai": "User registration failed. Email may already exist.",
    "api_auth.error.registration_error": "Registration error: ",
    "api_auth.error.an_unexpected_error_occurred_1": "An unexpected error occurred",
    "api_auth.error.failed_to_refresh_token": "Failed to refresh token",
    "api_auth.error.token_refresh_error": "Token refresh error: ",
    "api_auth.error.an_unexpected_error_occurred_2": "An unexpected error occurred",
    "api_auth.error.failed_to_logout": "Failed to logout",
    "api_auth.error.logout_error": "Logout error: ",
    "api_auth.error.an_unexpected_error_occurred_3": "An unexpected error occurred",
    "api_auth.error.validation_failed_2": "Validation failed",
    "api_auth.error.failed_to_change_password_cur": "Failed to change password. Current password may be incorrect.",
    "api_auth.error.change_password_error": "Change password error: ",
    "api_auth.error.an_unexpected_error_occurred_4": "An unexpected error occurred",
    "api_auth.error.validation_failed_3": "Validation failed",
    "api_auth.error.failed_to_reset_password_user": "Failed to reset password. User may not exist.",
    "api_auth.error.reset_password_error": "Reset password error: ",
    "api_auth.error.an_unexpected_error_occurred_5": "An unexpected error occurred",
    "api_gamification_v2.error.create_standardized_error_resp": "Create standardized error response",
    "api_gamification_v2.error.failed_to_load_dashboard_data": "Failed to load dashboard data",
    "api_gamification_v2.error.error_getting_gamification_das": "Error getting gamification dashboard: ",
    "api_gamification_v2.error.internal_server_error": "Internal server error",
    "api_gamification_v2.error.error_getting_gamification_sum": "Error getting gamification summary: ",
    "api_gamification_v2.error.internal_server_error_1": "Internal server error",
    "api_gamification_v2.error.error_triggering_gamification": "Error triggering gamification event: ",
    "api_gamification_v2.error.internal_server_error_2": "Internal server error",
    "api_gamification_v2.error.error_awarding_xp": "Error awarding XP: ",
    "api_gamification_v2.error.internal_server_error_3": "Internal server error",
    "api_gamification_v2.error.error_getting_xp_history": "Error getting XP history: ",
    "api_gamification_v2.error.internal_server_error_4": "Internal server error",
    "api_gamification_v2.error.error_getting_xp_statistics": "Error getting XP statistics: ",
    "api_gamification_v2.error.internal_server_error_5": "Internal server error",
    "api_gamification_v2.error.error_getting_level_progress": "Error getting level progress: ",
    "api_gamification_v2.error.internal_server_error_6": "Internal server error",
    "api_gamification_v2.error.error_creating_badge": "Error creating badge: ",
    "api_gamification_v2.error.internal_server_error_7": "Internal server error",
    "api_gamification_v2.error.error_awarding_badge": "Error awarding badge: ",
    "api_gamification_v2.error.internal_server_error_8": "Internal server error",
    "api_gamification_v2.error.error_getting_user_badges": "Error getting user badges: ",
    "api_gamification_v2.error.internal_server_error_9": "Internal server error",
    "api_gamification_v2.error.error_getting_badge_showcase": "Error getting badge showcase: ",
    "api_gamification_v2.error.internal_server_error_10": "Internal server error",
    "api_gamification_v2.error.error_getting_available_badges": "Error getting available badges: ",
    "api_gamification_v2.error.internal_server_error_11": "Internal server error",
    "api_gamification_v2.error.error_creating_achievement": "Error creating achievement: ",
    "api_gamification_v2.error.internal_server_error_12": "Internal server error",
    "api_gamification_v2.error.error_getting_user_achievement": "Error getting user achievements: ",
    "api_gamification_v2.error.internal_server_error_13": "Internal server error",
    "api_gamification_v2.error.error_getting_available_achiev": "Error getting available achievements: ",
    "api_gamification_v2.error.internal_server_error_14": "Internal server error",
    "api_gamification_v2.error.error_creating_leaderboard": "Error creating leaderboard: ",
    "api_gamification_v2.error.internal_server_error_15": "Internal server error",
    "api_gamification_v2.error.error_getting_leaderboard": "Error getting leaderboard: ",
    "api_gamification_v2.error.internal_server_error_16": "Internal server error",
    "api_gamification_v2.error.error_getting_leaderboard_by_t": "Error getting leaderboard by type: ",
    "api_gamification_v2.error.internal_server_error_17": "Internal server error",
    "api_gamification_v2.error.error_getting_global_leaderboa": "Error getting global leaderboards: ",
    "api_gamification_v2.error.internal_server_error_18": "Internal server error",
    "api_gamification_v2.error.error_getting_user_rankings": "Error getting user rankings: ",
    "api_gamification_v2.error.internal_server_error_19": "Internal server error",
    "api_gamification_v2.error.error_creating_team": "Error creating team: ",
    "api_gamification_v2.error.internal_server_error_20": "Internal server error",
    "api_gamification_v2.error.failed_to_join_team": "Failed to join team",
    "api_gamification_v2.error.error_joining_team": "Error joining team: ",
    "api_gamification_v2.error.internal_server_error_21": "Internal server error",
    "api_gamification_v2.error.error_getting_user_teams": "Error getting user teams: ",
    "api_gamification_v2.error.internal_server_error_22": "Internal server error",
    "api_gamification_v2.error.error_getting_social_feed": "Error getting social feed: ",
    "api_gamification_v2.error.internal_server_error_23": "Internal server error",
    "api_gamification_v2.error.error_creating_learning_path": "Error creating learning path: ",
    "api_gamification_v2.error.internal_server_error_24": "Internal server error",
    "api_gamification_v2.error.error_getting_user_learning_pa": "Error getting user learning paths: ",
    "api_gamification_v2.error.internal_server_error_25": "Internal server error",
    "api_gamification_v2.error.error_getting_recommended_lear": "Error getting recommended learning paths: ",
    "api_gamification_v2.error.internal_server_error_26": "Internal server error",
    "api_gamification_v2.error.error_getting_learning_path_pr": "Error getting learning path progress: ",
    "api_gamification_v2.error.internal_server_error_27": "Internal server error",
    "api_gamification_v2.error.error_getting_user_progress": "Error getting user progress: ",
    "api_gamification_v2.error.internal_server_error_28": "Internal server error",
    "api_gamification_v2.error.error_getting_progress_dashboa": "Error getting progress dashboard: ",
    "api_gamification_v2.error.internal_server_error_29": "Internal server error",
    "api_gamification_v2.error.error_getting_global_stats": "Error getting global stats: ",
    "api_gamification_v2.error.internal_server_error_30": "Internal server error",
    "api_gamification_v2.error.internal_server_error_31": "Internal server error",
    "api_settings_routes.error.unexpected_error": "Unexpected error",
    "api_settings_routes.error.unexpected_error_1": "Unexpected error",
    "api_settings_routes.error.connection_test_failed": "Connection test failed",
    "api_settings_routes.error.unexpected_error_2": "Unexpected error",
    "api_portal.error.an_error_occurred": "An error occurred: ",
    "api_portal.error.an_error_occurred_1": "An error occurred: ",
    "api_portal.error.an_error_occurred_2": "An error occurred: ",
    "api_portal.error.an_error_occurred_3": "An error occurred: ",
    "api_portal.error.an_error_occurred_4": "An error occurred: ",
    "api_portal.error.an_error_occurred_5": "An error occurred: ",
    "api_portal.error.an_error_occurred_6": "An error occurred: ",
    "api_portal.error.an_error_occurred_7": "An error occurred: ",
    "api_settings_appearance.error.unable_to_load_appearance_sett": "Unable to load appearance settings",
    "api_settings_appearance.error.failed_to_reset_appearance_set": "Failed to reset appearance settings",
    "api_question_randomization.error.get_randomization_config_error": "Get randomization config error: ",
    "api_question_randomization.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "api_question_randomization.error.invalid_configuration": "Invalid configuration",
    "api_question_randomization.error.an_unexpected_error_occurred_1": "An unexpected error occurred",
    "api_question_randomization.error.invalid_request_data": "Invalid request data",
    "api_question_randomization.error.generate_question_order_error": "Generate question order error: ",
    "api_question_randomization.error.an_unexpected_error_occurred_2": "An unexpected error occurred",
    "api_question_randomization.error.invalid_request_data_1": "Invalid request data",
    "api_question_randomization.error.analyze_question_exposure_erro": "Analyze question exposure error: ",
    "api_question_randomization.error.an_unexpected_error_occurred_3": "An unexpected error occurred",
    "api_question_randomization.error.preview_randomization_error": "Preview randomization error: ",
    "api_question_randomization.error.an_unexpected_error_occurred_4": "An unexpected error occurred",
    "api_users.error.get_current_user_error": "Get current user error: ",
    "api_users.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "api_users.error.get_users_error": "Get users error: ",
    "api_users.error.an_unexpected_error_occurred_1": "An unexpected error occurred",
    "api_users.error.invalid_file_type_allowed_typ": "Invalid file type. Allowed types: png, jpg, jpeg, gif",
    "api_users.error.upload_profile_picture_error": "Upload profile picture error: ",
    "api_users.error.an_unexpected_error_occurred_2": "An unexpected error occurred",
    "api_users.error.get_user_profile_error": "Get user profile error: ",
    "api_users.error.an_unexpected_error_occurred_3": "An unexpected error occurred",
    "api_users.error.an_unexpected_error_occurred_4": "An unexpected error occurred",
    "api_users.error.get_user_error": "Get user error: ",
    "api_users.error.an_unexpected_error_occurred_5": "An unexpected error occurred",
    "api_users.error.invalid_data_provided": "Invalid data provided",
    "api_users.error.create_user_error": "Create user error: ",
    "api_users.error.error": "Error: ",
    "api_users.error.invalid_data_provided_1": "Invalid data provided",
    "api_users.error.an_unexpected_error_occurred_6": "An unexpected error occurred",
    "api_users.error.an_unexpected_error_occurred_7": "An unexpected error occurred",
    "api_users.error.get_user_profile_error_1": "Get user profile error: ",
    "api_users.error.an_unexpected_error_occurred_8": "An unexpected error occurred",
    "api_health.error.database_connection_failed": "Database connection failed: ",
    "api_health.error.redis_connection_failed": "Redis connection failed: ",
    "api_health.error.error_generating_metrics": "# Error generating metrics: ",
    "api_webrtc.error.error_creating_webrtc_room": "Error creating WebRTC room: ",
    "api_webrtc.error.internal_server_error": "Internal server error",
    "api_webrtc.error.error_getting_webrtc_room_info": "Error getting WebRTC room info: ",
    "api_webrtc.error.internal_server_error_1": "Internal server error",
    "api_webrtc.error.error_joining_webrtc_room": "Error joining WebRTC room: ",
    "api_webrtc.error.internal_server_error_2": "Internal server error",
    "api_webrtc.error.error_getting_room_participant": "Error getting room participants: ",
    "api_webrtc.error.internal_server_error_3": "Internal server error",
    "api_webrtc.error.error_getting_webrtc_config": "Error getting WebRTC config: ",
    "api_webrtc.error.internal_server_error_4": "Internal server error",
    "api_webrtc.error.error_getting_room_stats": "Error getting room stats: ",
    "api_webrtc.error.internal_server_error_5": "Internal server error",
    "api_webrtc.error.error_getting_user_active_sess": "Error getting user active sessions: ",
    "api_webrtc.error.internal_server_error_6": "Internal server error",
    "api_webrtc.error.internal_server_error_7": "Internal server error",
    "api_documents.error.error_updating_document": "Error updating document: ",
    "api_documents.error.error_deleting_file": "Error deleting file: ",
    "api_documents.error.error_deleting_document": "Error deleting document: ",
    "api_documents.error.invalid_permission_type": "Invalid permission type",
    "api_documents.error.error_sharing_document": "Error sharing document: ",
    "api_documents.error.failed_to_share_document": "Failed to share document",
    "api_documents.error.invalid_request_data": "Invalid request data",
    "api_documents.error.failed_to_grant_permission": "Failed to grant permission",
    "api_documents.error.invalid_request_data_1": "Invalid request data",
    "api_documents.error.failed_to_revoke_permission": "Failed to revoke permission",
    "api_documents.error.error_creating_document_versio": "Error creating document version: ",
    "api_documents.error.failed_to_create_document_vers": "Failed to create document version",
    "api_documents.error.error_restoring_document_versi": "Error restoring document version: ",
    "api_documents.error.failed_to_restore_document_ver": "Failed to restore document version",
    "api_documents.error.error_comparing_document_versi": "Error comparing document versions: ",
    "api_documents.error.failed_to_compare_document_ver": "Failed to compare document versions",
    "api_documents.error.error_enabling_document_versio": "Error enabling document versioning: ",
    "api_documents.error.failed_to_enable_document_vers": "Failed to enable document versioning",
    "api_profile.error.validation_failed": "Validation failed",
    "api_profile.error.validation_failed_1": "Validation failed",
    "api_appointments.error.error_getting_appointments": "Error getting appointments: ",
    "api_appointments.error.failed_to_get_appointments": "Failed to get appointments",
    "api_appointments.error.error_creating_appointment": "Error creating appointment: ",
    "api_appointments.error.failed_to_create_appointment": "Failed to create appointment",
    "api_appointments.error.error_updating_appointment": "Error updating appointment: ",
    "api_appointments.error.error_deleting_appointment": "Error deleting appointment: ",
    "api_appointments.error.error_syncing_appointment": "Error syncing appointment: ",
    "api_appointments.error.failed_to_sync_appointment": "Failed to sync appointment",
    "api_appointments.error.error_unsyncing_appointment": "Error unsyncing appointment: ",
    "api_appointments.error.failed_to_unsync_appointment": "Failed to unsync appointment",
    "api_appointments.error.authorization_failed": "Authorization failed",
    "api_appointments.error.invalid_callback_parameters": "Invalid callback parameters",
    "api_appointments.error.failed_to_complete_authorizati": "Failed to complete authorization",
    "api_video_conferences.error.invalid_provider": "Invalid provider",
    "api_video_conferences.error.error_creating_video_conferenc": "Error creating video conference: ",
    "api_video_conferences.error.internal_server_error": "Internal server error",
    "api_video_conferences.error.error_getting_video_conference": "Error getting video conference: ",
    "api_video_conferences.error.internal_server_error_1": "Internal server error",
    "api_video_conferences.error.error_updating_video_conferenc": "Error updating video conference: ",
    "api_video_conferences.error.internal_server_error_2": "Internal server error",
    "api_video_conferences.error.failed_to_cancel_conference": "Failed to cancel conference",
    "api_video_conferences.error.error_cancelling_video_confere": "Error cancelling video conference: ",
    "api_video_conferences.error.internal_server_error_3": "Internal server error",
    "api_video_conferences.error.error_starting_video_conferenc": "Error starting video conference: ",
    "api_video_conferences.error.internal_server_error_4": "Internal server error",
    "api_video_conferences.error.failed_to_end_conference": "Failed to end conference",
    "api_video_conferences.error.error_ending_video_conference": "Error ending video conference: ",
    "api_video_conferences.error.internal_server_error_5": "Internal server error",
    "api_video_conferences.error.error_adding_participant": "Error adding participant: ",
    "api_video_conferences.error.internal_server_error_6": "Internal server error",
    "api_video_conferences.error.error_getting_participants": "Error getting participants: ",
    "api_video_conferences.error.internal_server_error_7": "Internal server error",
    "api_video_conferences.error.error_sending_invitation": "Error sending invitation: ",
    "api_video_conferences.error.internal_server_error_8": "Internal server error",
    "api_video_conferences.error.error_starting_recording": "Error starting recording: ",
    "api_video_conferences.error.internal_server_error_9": "Internal server error",
    "api_video_conferences.error.failed_to_stop_recording": "Failed to stop recording",
    "api_video_conferences.error.error_stopping_recording": "Error stopping recording: ",
    "api_video_conferences.error.internal_server_error_10": "Internal server error",
    "api_video_conferences.error.error_getting_recordings": "Error getting recordings: ",
    "api_video_conferences.error.internal_server_error_11": "Internal server error",
    "api_video_conferences.error.error_getting_analytics": "Error getting analytics: ",
    "api_video_conferences.error.internal_server_error_12": "Internal server error",
    "api_video_conferences.error.error_getting_user_conferences": "Error getting user conferences: ",
    "api_video_conferences.error.internal_server_error_13": "Internal server error",
    "api_video_conferences.error.error_getting_providers": "Error getting providers: ",
    "api_video_conferences.error.internal_server_error_14": "Internal server error",
    "api_video_conferences.error.error_getting_dashboard": "Error getting dashboard: ",
    "api_video_conferences.error.internal_server_error_15": "Internal server error",
    "api_video_conferences.error.internal_server_error_16": "Internal server error",
    "api_performance_predictions.error.train_a_new_pass_fail_classifi": "Train a new pass/fail classifier model.",
    "api_performance_predictions.error.pass_fail_classifier_trained_s": "Pass/fail classifier trained successfully",
    "api_performance_predictions.error.invalid_prediction_horizon_us": "Invalid prediction horizon. Use week, month, or quarter",
    "api_evaluations.error.get_evaluations_error": "Get evaluations error: ",
    "api_evaluations.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "api_evaluations.error.get_evaluation_error": "Get evaluation error: ",
    "api_evaluations.error.an_unexpected_error_occurred_1": "An unexpected error occurred",
    "api_evaluations.error.validation_failed": "Validation failed",
    "api_evaluations.error.create_evaluation_error": "Create evaluation error: ",
    "api_evaluations.error.an_unexpected_error_occurred_2": "An unexpected error occurred",
    "api_evaluations.error.validation_failed_1": "Validation failed",
    "api_evaluations.error.an_unexpected_error_occurred_3": "An unexpected error occurred",
    "api_evaluations.error.an_unexpected_error_occurred_4": "An unexpected error occurred",
    "api_evaluations.error.get_questions_error": "Get questions error: ",
    "api_evaluations.error.an_unexpected_error_occurred_5": "An unexpected error occurred",
    "api_evaluations.error.validation_failed_2": "Validation failed",
    "api_evaluations.error.create_question_error": "Create question error: ",
    "api_evaluations.error.an_unexpected_error_occurred_6": "An unexpected error occurred",
    "api_evaluations.error.validation_failed_3": "Validation failed",
    "api_evaluations.error.an_unexpected_error_occurred_7": "An unexpected error occurred",
    "api_evaluations.error.an_unexpected_error_occurred_8": "An unexpected error occurred",
    "api_evaluations.error.get_sessions_error": "Get sessions error: ",
    "api_evaluations.error.an_unexpected_error_occurred_9": "An unexpected error occurred",
    "api_evaluations.error.submit_evaluation_error": "Submit evaluation error: ",
    "api_evaluations.error.an_unexpected_error_occurred_10": "An unexpected error occurred",
    "api_evaluations.error.get_evaluation_results_error": "Get evaluation results error: ",
    "api_evaluations.error.an_unexpected_error_occurred_11": "An unexpected error occurred",
    "api_evaluations.error.analyze_evaluation_error": "Analyze evaluation error: ",
    "api_evaluations.error.an_unexpected_error_occurred_12": "An unexpected error occurred",
    "api_performance_monitoring.error.performance_dashboard_error": "Performance dashboard error: ",
    "api_performance_monitoring.error.system_metrics_error": "System metrics error: ",
    "api_performance_monitoring.error.database_metrics_error": "Database metrics error: ",
    "api_performance_monitoring.error.slow_queries_error": "Slow queries error: ",
    "api_performance_monitoring.error.query_analysis_error": "Query analysis error: ",
    "api_performance_monitoring.error.cache_metrics_error": "Cache metrics error: ",
    "api_performance_monitoring.error.cache_clear_error": "Cache clear error: ",
    "api_performance_monitoring.error.memory_metrics_error": "Memory metrics error: ",
    "api_performance_monitoring.error.memory_optimization_error": "Memory optimization error: ",
    "api_performance_monitoring.error.api_metrics_error": "API metrics error: ",
    "api_performance_monitoring.error.celery_metrics_error": "Celery metrics error: ",
    "api_performance_monitoring.error.index_optimization_error": "Index optimization error: ",
    "api_performance_monitoring.error.performance_alerts_error": "Performance alerts error: ",
    "api_performance_monitoring.error.database_connection_failed": "Database connection failed: ",
    "api_performance_monitoring.error.cache_connection_failed": "Cache connection failed: ",
    "api_performance_monitoring.error.health_check_error": "Health check error: ",
    "api_performance_monitoring.error.system_overview_error": "System overview error: ",
    "api_performance_monitoring.error.database_performance_error": "Database performance error: ",
    "api_performance_monitoring.error.cache_performance_error": "Cache performance error: ",
    "api_performance_monitoring.error.memory_usage_error": "Memory usage error: ",
    "api_performance_monitoring.error.api_performance_error": "API performance error: ",
    "api_performance_monitoring.error.celery_performance_error": "Celery performance error: ",
    "api_performance_monitoring.error.performance_alerts_error_1": "Performance alerts error: ",
    "api_tests_simple.error.get_tests_error": "Get tests error: ",
    "api_tests_simple.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "api_tests_simple.error.get_test_error": "Get test error: ",
    "api_tests_simple.error.an_unexpected_error_occurred_1": "An unexpected error occurred",
    "api_calendar.error.calendar_error": "Calendar error: ",
    "api_programs.error.failed_to_emit_program_created": "Failed to emit program_created event: ",
    "api_chat.error.invalid_context_type": "Invalid context type",
    "api_chat.error.invalid_status": "Invalid status",
    "api_chat.error.invalid_export_format": "Invalid export format",
    "api_chat.error.internal_server_error": "Internal server error",
    "api_two_factor_auth.error.2fa_setup_error": "2FA setup error: ",
    "api_two_factor_auth.error.failed_to_set_up_2fa": "Failed to set up 2FA",
    "api_two_factor_auth.error.2fa_verification_error": "2FA verification error: ",
    "api_two_factor_auth.error.failed_to_verify_2fa_setup": "Failed to verify 2FA setup",
    "api_two_factor_auth.error.2fa_verify_error": "2FA verify error: ",
    "api_two_factor_auth.error.failed_to_verify_2fa_token": "Failed to verify 2FA token",
    "api_two_factor_auth.error.invalid_password": "Invalid password",
    "api_two_factor_auth.error.2fa_disable_error": "2FA disable error: ",
    "api_two_factor_auth.error.failed_to_disable_2fa": "Failed to disable 2FA",
    "api_two_factor_auth.error.invalid_password_1": "Invalid password",
    "api_two_factor_auth.error.backup_code_regeneration_error": "Backup code regeneration error: ",
    "api_two_factor_auth.error.failed_to_regenerate_backup_co": "Failed to regenerate backup codes",
    "api_two_factor_auth.error.2fa_status_error": "2FA status error: ",
    "api_two_factor_auth.error.failed_to_get_2fa_status": "Failed to get 2FA status",
    "api_two_factor_auth.error.qr_code_generation_error": "QR code generation error: ",
    "api_two_factor_auth.error.failed_to_generate_qr_code": "Failed to generate QR code",
    "api_settings_general.error.invalid_file_type_allowed_pn": "Invalid file type. Allowed: png, jpg, jpeg, gif, svg",
    "api_settings_general.error.failed_to_reset_settings": "Failed to reset settings",
    "api_ai_question_generation.error.error_getting_content_types": "Error getting content types: ",
    "api_ai_question_generation.error.invalid_file_type": "Invalid file type",
    "api_ai_question_generation.error.error_creating_source_content": "Error creating source content: ",
    "api_ai_question_generation.error.error_getting_source_content": "Error getting source content: ",
    "api_ai_question_generation.error.error_getting_source_content_d": "Error getting source content detail: ",
    "api_ai_question_generation.error.error_processing_source_conten": "Error processing source content: ",
    "api_ai_question_generation.error.error_getting_question_types": "Error getting question types: ",
    "api_ai_question_generation.error.error_getting_bloom_s_taxonomy": "Error getting Bloom's taxonomy: ",
    "api_ai_question_generation.error.error_getting_learning_objecti": "Error getting learning objectives: ",
    "api_ai_question_generation.error.error_creating_learning_object": "Error creating learning objective: ",
    "api_ai_question_generation.error.invalid_difficulty_range": "Invalid difficulty range",
    "api_ai_question_generation.error.error_generating_questions": "Error generating questions: ",
    "api_ai_question_generation.error.error_getting_generation_statu": "Error getting generation status: ",
    "api_ai_question_generation.error.error_getting_generated_questi": "Error getting generated questions: ",
    "api_ai_question_generation.error.error_getting_question_detail": "Error getting question detail: ",
    "api_ai_question_generation.error.error_approving_question": "Error approving question: ",
    "api_ai_question_generation.error.error_rejecting_question": "Error rejecting question: ",
    "api_ai_question_generation.error.error_getting_question_banks": "Error getting question banks: ",
    "api_ai_question_generation.error.error_creating_question_bank": "Error creating question bank: ",
    "api_ai_question_generation.error.error_adding_question_to_bank": "Error adding question to bank: ",
    "api_ai_question_generation.error.error_getting_bank_questions": "Error getting bank questions: ",
    "api_ai_question_generation.error.error_getting_analytics": "Error getting analytics: ",
    "api_ai_question_generation.error.error_getting_analytics_summar": "Error getting analytics summary: ",
    "api_ai_question_generation.error.error_getting_duplicates": "Error getting duplicates: ",
    "api_ai_question_generation.error.invalid_action": "Invalid action",
    "api_ai_question_generation.error.error_resolving_duplicate": "Error resolving duplicate: ",
    "api_ai_question_generation.error.error_exporting_questions": "Error exporting questions: ",
    "api_ai_question_generation.error.error_initializing_system": "Error initializing system: ",
    "api_ai_question_generation.error.handle_file_too_large_error": "Handle file too large error.",
    "api_ai_question_generation.error.handle_internal_server_errors": "Handle internal server errors.",
    "api_ai_question_generation.error.internal_server_error": "Internal server error: ",
    "api_ai_question_generation.error.internal_server_error_1": "Internal server error",
    "api_ai_reports.error.invalid_report_type_must_be_o": "Invalid report type. Must be one of: ",
    "api_ai_reports.error.invalid_time_period_must_be_o": "Invalid time period. Must be one of: ",
    "api_ai_reports.error.invalid_time_period_must_be_o_1": "Invalid time period. Must be one of: ",
    "api_ai_reports.error.invalid_metrics": "Invalid metrics: ",
    "api_ai_reports.error.invalid_sources": "Invalid sources: ",
    "api_ai_reports.error.invalid_format_must_be_one_of": "Invalid format. Must be one of: ",
    "api_messages.error.invalid_start_date_format": "Invalid start_date format",
    "api_messages.error.invalid_end_date_format": "Invalid end_date format",
    "api_messages.error.invalid_start_date_format_1": "Invalid start_date format",
    "api_messages.error.invalid_end_date_format_1": "Invalid end_date format",
    "api_messages.error.invalid_start_date_format_2": "Invalid start_date format",
    "api_messages.error.invalid_end_date_format_2": "Invalid end_date format",
    "api_messages.error.invalid_start_date_format_3": "Invalid start_date format",
    "api_messages.error.invalid_end_date_format_3": "Invalid end_date format",
    "api_notifications.error.failed_to_create_notification": "Failed to create notification",
    "api_notifications.error.invalid_request_data": "Invalid request data",
    "api_notifications.error.failed_to_create_notification_1": "Failed to create notification",
    "api_notifications.error.invalid_request_data_1": "Invalid request data",
    "api_notifications.error.invalid_request_data_2": "Invalid request data",
    "api_notifications.error.failed_to_create_notification_2": "Failed to create notification",
    "api_notifications.error.invalid_request_data_3": "Invalid request data",
    "api_notifications.error.invalid_request_data_4": "Invalid request data",
    "api_i18n.error.error_getting_languages": "Error getting languages: ",
    "api_i18n.error.failed_to_get_languages": "Failed to get languages",
    "api_i18n.error.error_creating_language": "Error creating language: ",
    "api_i18n.error.failed_to_create_language": "Failed to create language",
    "api_i18n.error.error_updating_language": "Error updating language: ",
    "api_i18n.error.error_detecting_language": "Error detecting language: ",
    "api_i18n.error.failed_to_detect_language": "Failed to detect language",
    "api_i18n.error.error_getting_language_info": "Error getting language info: ",
    "api_i18n.error.failed_to_get_language_info": "Failed to get language info",
    "api_i18n.error.error_translating_text": "Error translating text: ",
    "api_i18n.error.failed_to_translate_text": "Failed to translate text",
    "api_i18n.error.error_getting_translation": "Error getting translation: ",
    "api_i18n.error.failed_to_get_translation": "Failed to get translation",
    "api_i18n.error.error_getting_translations": "Error getting translations: ",
    "api_i18n.error.failed_to_get_translations": "Failed to get translations",
    "api_i18n.error.error_creating_multilingual_co": "Error creating multilingual content: ",
    "api_i18n.error.failed_to_create_content": "Failed to create content",
    "api_i18n.error.error_getting_multilingual_con": "Error getting multilingual content: ",
    "api_i18n.error.failed_to_get_content": "Failed to get content",
    "api_i18n.error.error_updating_multilingual_co": "Error updating multilingual content: ",
    "api_i18n.error.error_getting_user_language_pr": "Error getting user language preferences: ",
    "api_i18n.error.failed_to_get_preferences": "Failed to get preferences",
    "api_i18n.error.error_updating_user_language_p": "Error updating user language preferences: ",
    "api_i18n.error.invalid_format_type": "Invalid format type",
    "api_i18n.error.error_formatting_locale_data": "Error formatting locale data: ",
    "api_i18n.error.failed_to_format_data": "Failed to format data",
    "api_i18n.error.error_getting_translation_stat": "Error getting translation stats: ",
    "api_i18n.error.failed_to_get_stats": "Failed to get stats",
    "api_i18n.error.error_in_bulk_translate": "Error in bulk translate: ",
    "api_i18n.error.failed_to_bulk_translate": "Failed to bulk translate",
    "api_i18n.error.error_exporting_translations": "Error exporting translations: ",
    "api_i18n.error.failed_to_export_translations": "Failed to export translations",
    "api_i18n.error.error_importing_translations": "Error importing translations: ",
    "api_i18n.error.failed_to_import_translations": "Failed to import translations",
    "api_adaptive_tests.error.validation_error": "Validation error",
    "api_adaptive_tests.error.validation_error_1": "Validation error",
    "api_adaptive_tests.error.invalid_configuration": "Invalid configuration",
    "api_adaptive_tests.error.validation_error_2": "Validation error",
    "api_adaptive_tests.error.invalid_configuration_1": "Invalid configuration",
    "api_adaptive_tests.error.sync_failed": "Sync failed",
    "api_availability.error.invalid_date_format_use_yyyy": "Invalid date format. Use YYYY-MM-DD.",
    "api_availability.error.failed_to_add_availability_exc": "Failed to add availability exception",
    "api_availability.error.invalid_date_format_use_yyyy_1": "Invalid date format. Use YYYY-MM-DD.",
    "api_availability.error.invalid_date_format_use_yyyy_2": "Invalid date format. Use YYYY-MM-DD.",
    "api_availability.error.invalid_date_format_use_yyyy_3": "Invalid date format. Use YYYY-MM-DD.",
    "api_sms.error.failed_to_send_sms": "Failed to send SMS",
    "api_sms.error.failed_to_send_sms_1": "Failed to send SMS",
    "api_sms.error.invalid_scheduled_time_format": "Invalid scheduled time format",
    "api_sms.error.failed_to_schedule_sms": "Failed to schedule SMS",
    "api_sms.error.failed_to_cancel_sms": "Failed to cancel SMS",
    "api_sms.error.invalid_scheduled_time_format_1": "Invalid scheduled time format",
    "api_sms.error.failed_to_create_campaign": "Failed to create campaign",
    "api_sms.error.failed_to_execute_campaign": "Failed to execute campaign",
    "api_gamification.error.invalid_category": "Invalid category",
    "api_gamification.error.invalid_category_1": "Invalid category",
    "api_gamification.error.invalid_category_2": "Invalid category",
    "api_gamification.error.invalid_leaderboard_type": "Invalid leaderboard type",
    "api_gamification.error.invalid_leaderboard_type_1": "Invalid leaderboard type",
    "api_gamification.error.invalid_challenge_type": "Invalid challenge type",
    "api_gamification.error.failed_to_join_team": "Failed to join team",
    "api_gamification.error.failed_to_leave_team": "Failed to leave team",
    "api_gamification.error.invalid_reward_type": "Invalid reward type",
    "api_gamification.error.internal_server_error": "Internal server error",
    "beneficiaries_v2_detail_routes.error.unexpected_error": "Unexpected error",
    "beneficiaries_v2_detail_routes.error.validation_failed": "Validation failed",
    "beneficiaries_v2_detail_routes.error.unexpected_error_1": "Unexpected error",
    "beneficiaries_v2_detail_routes.error.unexpected_error_2": "Unexpected error",
    "beneficiaries_v2_list_routes.error.get_beneficiaries_error": "Get beneficiaries error: ",
    "beneficiaries_v2_list_routes.error.an_unexpected_error_occurred": "An unexpected error occurred",
    "beneficiaries_v2_list_routes.error.failed_to_create_beneficiary": "Failed to create beneficiary. User may already exist with a beneficiary profile.",
    "beneficiaries_v2_list_routes.error.create_beneficiary_error": "Create beneficiary error: ",
    "beneficiaries_v2_list_routes.error.an_unexpected_error_occurred_1": "An unexpected error occurred",
    "beneficiaries_v2_evaluations_routes.error.unexpected_error": "Unexpected error",
    "beneficiaries_v2_evaluations_routes.error.unexpected_error_1": "Unexpected error",
    "beneficiaries_v2_evaluations_routes.error.unexpected_error_2": "Unexpected error",
    "beneficiaries_v2_evaluations_routes.error.unexpected_error_3": "Unexpected error",
    "beneficiaries_v2_evaluations_routes.error.unexpected_error_4": "Unexpected error",
    "beneficiaries_v2_evaluations_routes.error.unexpected_error_5": "Unexpected error",
    "beneficiaries_v2_documents_routes.error.unexpected_error": "Unexpected error",
    "beneficiaries_v2_documents_routes.error.invalid_file_type": "Invalid file type",
    "beneficiaries_v2_documents_routes.error.unexpected_error_1": "Unexpected error",
    "beneficiaries_v2_trainer_routes.error.unexpected_error": "Unexpected error",
    "beneficiaries_v2_trainer_routes.error.failed_to_assign_trainer": "Failed to assign trainer",
    "beneficiaries_v2_trainer_routes.error.unexpected_error_1": "Unexpected error",
    "beneficiaries_v2_notes_routes.error.unexpected_error": "Unexpected error",
    "beneficiaries_v2_notes_routes.error.failed_to_create_note": "Failed to create note",
    "beneficiaries_v2_notes_routes.error.validation_failed": "Validation failed",
    "beneficiaries_v2_notes_routes.error.unexpected_error_1": "Unexpected error",
    "beneficiaries_v2_notes_routes.error.validation_failed_1": "Validation failed",
    "beneficiaries_v2_notes_routes.error.unexpected_error_2": "Unexpected error",
    "beneficiaries_v2_notes_routes.error.unexpected_error_3": "Unexpected error",
    "v2_auth.error.invalid_credentials": "Invalid credentials",
    "v2_auth.error.invalid_refresh_token": "Invalid refresh token",
    "v2_auth.error.invalid_or_expired_token": "Invalid or expired token",
    "v2_auth.error.invalid_current_password": "Invalid current password",
    "v2_auth.error.invalid_token": "Invalid token",
    "v2_cached_endpoints.error.invalid_cache_clear_request": "Invalid cache clear request",
    "programs_v2_module_routes.error.failed_to_emit_program_module": "Failed to emit program_module_created event: ",
    "programs_v2_module_routes.error.invalid_module_order_data": "Invalid module order data",
    "programs_v2_module_routes.error.failed_to_emit_program_modules": "Failed to emit program_modules_reordered event: ",
    "routes_alerts.error.error_getting_alert_stats": "Error getting alert stats: ",
    "routes_alerts.error.failed_to_get_alert_statistics": "Failed to get alert statistics",
    "routes_alerts.error.invalid_severity_must_be_one": "Invalid severity. Must be one of: ",
    "routes_alerts.error.invalid_channel": "Invalid channel: ",
    "routes_alerts.error.error_sending_test_alert": "Error sending test alert: ",
    "routes_alerts.error.failed_to_send_test_alert": "Failed to send test alert",
    "routes_alerts.error.invalid_severity_must_be_one_1": "Invalid severity. Must be one of: ",
    "routes_alerts.error.error_sending_manual_alert": "Error sending manual alert: ",
    "routes_alerts.error.failed_to_send_alert": "Failed to send alert",
    "routes_alerts.error.invalid_start_date_format_use": "Invalid start_date format. Use ISO format.",
    "routes_alerts.error.invalid_end_date_format_use_i": "Invalid end_date format. Use ISO format.",
    "routes_alerts.error.error_getting_alert_history": "Error getting alert history: ",
    "routes_alerts.error.failed_to_get_alert_history": "Failed to get alert history",
    "routes_alerts.error.error_getting_alert_config": "Error getting alert config: ",
    "routes_alerts.error.failed_to_get_alert_configurat": "Failed to get alert configuration",
    "routes_alerts.error.invalid_webhook_token": "Invalid webhook token",
    "routes_alerts.error.invalid_severity_must_be_one_2": "Invalid severity. Must be one of: ",
    "routes_alerts.error.error_processing_webhook_alert": "Error processing webhook alert: ",
    "routes_alerts.error.failed_to_process_webhook_aler": "Failed to process webhook alert",
    "routes_alerts.error.error_checking_alert_system_he": "Error checking alert system health: ",
    "routes_alerts.error.failed_to_check_alert_system_h": "Failed to check alert system health",
    "routes_alerts.error.internal_error_in_alerts_api": "Internal error in alerts API: ",
    "routes_alerts.error.internal_server_error_in_alert": "Internal server error in alert system",
    "routes_analytics.error.error_getting_log_insights": "Error getting log insights: ",
    "routes_analytics.error.failed_to_get_log_insights": "Failed to get log insights",
    "routes_analytics.error.invalid_analysis_type": "Invalid analysis type: ",
    "routes_analytics.error.error_analyzing_log_patterns": "Error analyzing log patterns: ",
    "routes_analytics.error.failed_to_analyze_log_patterns": "Failed to analyze log patterns",
    "routes_analytics.error.invalid_timestamp_format_use": "Invalid timestamp format. Use ISO format.",
    "routes_analytics.error.invalid_log_level": "Invalid log level: ",
    "routes_analytics.error.error_searching_logs": "Error searching logs: ",
    "routes_analytics.error.failed_to_search_logs": "Failed to search logs",
    "routes_analytics.error.error_getting_log_trends": "Error getting log trends: ",
    "routes_analytics.error.failed_to_get_log_trends": "Failed to get log trends",
    "routes_analytics.error.invalid_format_use_json_or_cs": "Invalid format. Use json or csv.",
    "routes_analytics.error.invalid_timestamp_format_use_1": "Invalid timestamp format. Use ISO format.",
    "routes_analytics.error.error_exporting_logs": "Error exporting logs: ",
    "routes_analytics.error.failed_to_export_logs": "Failed to export logs",
    "routes_analytics.error.error_getting_analytics_status": "Error getting analytics status: ",
    "routes_analytics.error.failed_to_get_analytics_status": "Failed to get analytics status",
    "routes_analytics.error.internal_error_in_analytics_ap": "Internal error in analytics API: ",
    "routes_analytics.error.internal_server_error_in_analy": "Internal server error in analytics system",
    "monitoring_performance_monitor.error.record_application_errors": "Record application errors",
    "monitoring_performance_monitor.error.system_monitoring_error": "System monitoring error: ",
    "monitoring_performance_monitor.error.high_error_rate": "High error rate",
    "monitoring_metrics_exporter.error.application_error_rate": "Application error rate",
    "monitoring_metrics_exporter.error.error_setting_up_connections": "Error setting up connections: ",
    "monitoring_metrics_exporter.error.error_collecting_metrics": "Error collecting metrics: ",
    "monitoring_metrics_exporter.error.error_collecting_database_metr": "Error collecting database metrics: ",
    "monitoring_metrics_exporter.error.error_collecting_redis_metrics": "Error collecting Redis metrics: ",
    "monitoring_metrics_exporter.error.error_collecting_system_metric": "Error collecting system metrics: ",
    "monitoring_metrics_exporter.error.error_collecting_application_m": "Error collecting application metrics: ",
    "monitoring_metrics_exporter.error.error_calculating_health_score": "Error calculating health score: ",
    "database_query_optimizer.error.query_optimization_rule_failed": "Query optimization rule failed: ",
    "database_query_optimizer.error.query_execution_measurement_fa": "Query execution measurement failed: ",
    "database_index_manager.error.failed_to_create_index_on": "Failed to create index on ",
    "database_index_manager.error.failed_to_drop_index": "Failed to drop index ",
    "database_index_manager.error.failed_to_load_existing_indexe": "Failed to load existing indexes: ",
    "testing_load_tester.error.load_test_failed": "Load test failed: ",
    "testing_load_tester.error.run_stress_test_with": "\n        Run stress test with increasing load until failure.\n        ",
    "testing_load_tester.error.stress_test_failed_at": "Stress test failed at ",
    "testing_load_tester.error.error": " error: ",
    "testing_load_tester.error.doctype_html": "\n        <!DOCTYPE html>\n        <html>\n        <head>\n            <title>Load Test Report</title>\n            <style>\n                body { font-family: Arial, sans-serif; margin: 20px; }\n                .summary { background: #f5f5f5; padding: 15px; border-radius: 5px; margin-bottom: 20px; }\n                .metric { display: inline-block; margin: 10px 20px; }\n                .metric-value { font-size: 24px; font-weight: bold; color: #2196F3; }\n                .metric-label { font-size: 14px; color: #666; }\n                table { border-collapse: collapse; width: 100%; margin-bottom: 20px; }\n                th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n                th { background-color: #f2f2f2; }\n                .success { color: #4CAF50; }\n                .error { color: #f44336; }\n            </style>\n        </head>\n        <body>\n            <h1>Load Test Report</h1>\n        ",
    "testing_load_tester.error.div_d": "%</div>\n                    <div class=\"metric-label\">Error Rate</div>\n                </div>\n            </div>\n            ",
    "testing_benchmark_runner.error.benchmark_failed": "Benchmark failed: ",
    "testing_benchmark_runner.error.benchmark_suite_error": "Benchmark suite error: ",
    "testing_benchmark_runner.error.failed": " failed: ",
    "api_pagination_optimizer.error.failed_to_parse_cursor": "Failed to parse cursor: ",
    "api_pagination_optimizer.error.count_estimation_failed": "Count estimation failed: ",
    "api_pagination_optimizer.error.invalid_sort_column": "Invalid sort column: ",
    "api_response_optimizer.error.response_optimization_failed": "Response optimization failed: ",
    "api_response_optimizer.error.response_compression_failed": "Response compression failed: ",
    "api_compression_manager.error.compression_failed_with": "Compression failed with ",
    "api_compression_manager.error.benchmark_failed_for": "Benchmark failed for ",
    "api_compression_manager.error.optimization_benchmark_failed": "Optimization benchmark failed for ",
    "api_compression_manager.error.perform_compression_with_timin": "Perform compression with timing and error handling",
    "monitoring_performance_monitor.error.monitoring_loop_error": "Monitoring loop error: ",
    "monitoring_performance_monitor.error.system_metrics_collection_fail": "System metrics collection failed: ",
    "monitoring_performance_monitor.error.alert_callback_failed": "Alert callback failed: ",
    "monitoring_performance_monitor.error.alert_callback_failed_1": "Alert callback failed: ",
    "monitoring_performance_monitor.error.high_error_rate_detected_inv": "High error rate detected - investigate error logs and fix failing endpoints",
    "monitoring_profiler.error.continuous_profiling_error": "Continuous profiling error: ",
    "monitoring_profiler.error.performance_snapshot_collectio": "Performance snapshot collection failed: ",
    "caching_cache_manager.error.advanced_cache_manager_provi": "\nAdvanced Cache Manager\n\nProvides comprehensive caching strategies including multi-level caching,\nintelligent cache warming, and automatic cache invalidation.\n",
    "caching_cache_manager.error.redis_cache_initialization_fai": "Redis cache initialization failed: ",
    "caching_cache_manager.error.invalidate_all_cache": "\n        Invalidate all cache entries with specific tags.\n        ",
    "caching_cache_manager.error.cache_warming_failed_for_key": "Cache warming failed for key ",
    "caching_cache_manager.error.failed_to_clear_cache_level": "Failed to clear cache level ",
    "caching_cache_manager.error.register_callback_for": "\n        Register callback for cache invalidation events.\n        ",
    "caching_cache_manager.error.error_setting_in": "Error setting in ",
    "caching_redis_optimizer.error.redis_optimizer_initialization": "Redis optimizer initialization failed: ",
    "caching_redis_optimizer.error.optimized_set_failed_for_key": "Optimized SET failed for key ",
    "caching_redis_optimizer.error.optimized_get_failed_for_key": "Optimized GET failed for key ",
    "caching_redis_optimizer.error.batch_set_failed": "Batch SET failed: ",
    "caching_redis_optimizer.error.batch_get_failed": "Batch GET failed: ",
    "caching_redis_optimizer.error.scan_and_process_failed": "Scan and process failed: ",
    "caching_redis_optimizer.error.memory_optimization_failed": "Memory optimization failed: ",
    "caching_redis_optimizer.error.failed_to_get_redis_info": "Failed to get Redis info: ",
    "caching_redis_optimizer.error.decompression_failed": "Decompression failed: ",
    "caching_redis_optimizer.error.deserialization_failed": "Deserialization failed: ",
    "caching_redis_optimizer.error.memory_config_analysis_failed": "Memory config analysis failed: ",
    "assets_cdn_manager.error.failed_to_upload_to": "Failed to upload to ",
    "assets_cdn_manager.error.purge_failed_for": "Purge failed for ",
    "assets_cdn_manager.error.purge_error_for": "Purge error for ",
    "assets_cdn_manager.error.preload_failed_for": "Preload failed for ",
    "assets_cdn_manager.error.high_failover_rate_investiga": "High failover rate - investigate CDN provider reliability",
    "assets_image_optimizer.error.invalid_directory": "Invalid directory: ",
    "assets_image_optimizer.error.failed_to_optimize": "Failed to optimize ",
    "assets_image_optimizer.error.failed_to_convert_to": "Failed to convert to ",
    "assets_image_optimizer.error.auto_orient_failed": "Auto-orient failed: ",
    "assets_image_optimizer.error.auto_orientation_failed": "Auto-orientation failed: ",
    "i18n_locale_manager.error.failed_to_parse_locale": "Failed to parse locale ",
    "i18n_locale_manager.error.error_formatting_date": "Error formatting date: ",
    "i18n_locale_manager.error.error_formatting_time": "Error formatting time: ",
    "i18n_locale_manager.error.error_formatting_datetime": "Error formatting datetime: ",
    "i18n_locale_manager.error.error_formatting_timedelta": "Error formatting timedelta: ",
    "i18n_locale_manager.error.error_formatting_number": "Error formatting number: ",
    "i18n_locale_manager.error.error_formatting_currency": "Error formatting currency: ",
    "i18n_locale_manager.error.error_parsing_number": "Error parsing number: ",
    "i18n_locale_manager.error.error_parsing_decimal": "Error parsing decimal: ",
    "i18n_locale_manager.error.error_getting_calendar_info": "Error getting calendar info: ",
    "i18n_locale_manager.error.error_getting_number_symbols": "Error getting number symbols: ",
    "i18n_locale_manager.error.error_formatting_file_size": "Error formatting file size: ",
    "i18n_locale_manager.error.error_formatting_distance": "Error formatting distance: ",
    "i18n_config.error.error": "[ERROR]",
    "i18n_content_manager.error.error_getting_translation": "Error getting translation: ",
    "i18n_content_manager.error.error_getting_translations": "Error getting translations: ",
    "i18n_content_manager.error.error_saving_translation": "Error saving translation: ",
    "i18n_content_manager.error.error_in_batch_save": "Error in batch save: ",
    "i18n_content_manager.error.error_deleting_translation": "Error deleting translation: ",
    "i18n_content_manager.error.error_copying_translations": "Error copying translations: ",
    "i18n_content_manager.error.error_getting_translation_cove": "Error getting translation coverage: ",
    "i18n_translator.error.error_evaluating_plural_rule_f": "Error evaluating plural rule for ",
    "i18n_manager.error.failed_to_load_translations_fo": "Failed to load translations for ",
    "i18n_manager.error.failed_to_import_translations": "Failed to import translations: ",
    "infrastructure_query_optimizer.error.cache_query_results_with_autom": "Cache query results with automatic invalidation",
    "infrastructure_cache_config.error.redis_connection_failed": "Redis connection failed: ",
    "infrastructure_cache_config.error.cache_get_error": "Cache get error: ",
    "infrastructure_cache_config.error.cache_set_error": "Cache set error: ",
    "infrastructure_cache_config.error.cache_increment_error": "Cache increment error: ",
    "infrastructure_cache_config.error.cache_get_many_error": "Cache get_many error: ",
    "infrastructure_cache_config.error.cache_set_many_error": "Cache set_many error: ",
    "infrastructure_cache_config.error.decorator_to_invalidate_cache": "Decorator to invalidate cache keys matching pattern after function execution",
    "services_appointment_service.error.invalid_date_format": "Invalid date format",
    "services_appointment_service.error.cannot_create_appointments_in": "Cannot create appointments in the past",
    "services_appointment_service.error.invalid_start_time_format": "Invalid start time format",
    "services_appointment_service.error.invalid_end_time_format": "Invalid end time format",
    "services_appointment_service.error.failed_to_create_calendar_even": "Failed to create calendar event",
    "services_auth_service.error.logout_user_and_invalidate_tok": "Logout user and invalidate token.",
    "services_auth_service.error.failed_to_log_activity": "Failed to log activity: ",
    "services_sms_service.error.error_initializing_sms_templat": "Error initializing SMS templates: ",
    "services_sms_service.error.invalid_phone_number": "Invalid phone number",
    "services_sms_service.error.error_sending_sms": "Error sending SMS: ",
    "services_sms_service.error.twilio_error": "Twilio error: ",
    "services_sms_service.error.aws_sns_error": "AWS SNS error: ",
    "services_sms_service.error.provider_error": "Provider error: ",
    "services_sms_service.error.error_sending_templated_sms": "Error sending templated SMS: ",
    "services_sms_service.error.error_sending_bulk_sms": "Error sending bulk SMS: ",
    "services_sms_service.error.error_scheduling_sms": "Error scheduling SMS: ",
    "services_sms_service.error.error_cancelling_sms": "Error cancelling SMS: ",
    "services_sms_service.error.error_getting_sms_status": "Error getting SMS status: ",
    "services_sms_service.error.error_updating_delivery_status": "Error updating delivery status: ",
    "services_sms_service.error.error_getting_sms_history": "Error getting SMS history: ",
    "services_sms_service.error.error_getting_sms_stats": "Error getting SMS stats: ",
    "services_sms_service.error.error_validating_phone_number": "Error validating phone number: ",
    "services_sms_service.error.error_sending_appointment_remi": "Error sending appointment reminder: ",
    "services_sms_service.error.error_sending_assessment_notif": "Error sending assessment notification: ",
    "services_sms_service.error.error_sending_password_reset_c": "Error sending password reset code: ",
    "services_sms_service.error.error_sending_2fa_code": "Error sending 2FA code: ",
    "services_sms_service.error.error_creating_sms_campaign": "Error creating SMS campaign: ",
    "services_sms_service.error.error_executing_sms_campaign": "Error executing SMS campaign: ",
    "services_sms_service.error.error_getting_campaign_status": "Error getting campaign status: ",
    "services_document_service.error.error_granting_permission": "Error granting permission: ",
    "services_document_service.error.error_revoking_permission": "Error revoking permission: ",
    "services_document_service.error.error_getting_document_permiss": "Error getting document permissions: ",
    "services_document_service.error.error_getting_user_document_pe": "Error getting user document permissions: ",
    "services_ai_chat_service.error.error_creating_conversation": "Error creating conversation: ",
    "services_ai_chat_service.error.failed_to_create_conversation": "Failed to create conversation",
    "services_ai_chat_service.error.error_sending_message": "Error sending message: ",
    "services_ai_chat_service.error.failed_to_send_message": "Failed to send message",
    "services_ai_chat_service.error.error_generating_response": "Error generating response: ",
    "services_ai_chat_service.error.failed_to_generate_response": "Failed to generate response",
    "services_ai_chat_service.error.error_handling_function_call": "Error handling function call ",
    "services_ai_chat_service.error.error_getting_conversation_his": "Error getting conversation history: ",
    "services_ai_chat_service.error.failed_to_get_conversation_his": "Failed to get conversation history",
    "services_ai_chat_service.error.error_exporting_conversation": "Error exporting conversation: ",
    "services_ai_chat_service.error.failed_to_export_conversation": "Failed to export conversation",
    "services_ai_chat_service.error.error_flagging_conversation": "Error flagging conversation: ",
    "services_ai_chat_service.error.failed_to_flag_conversation": "Failed to flag conversation",
    "services_ai_chat_service.error.error_getting_conversation_ana": "Error getting conversation analytics: ",
    "services_ai_chat_service.error.failed_to_get_analytics": "Failed to get analytics",
    "services_ai_chat_service.error.get_error_message_in_appropria": "Get error message in appropriate language.",
    "services_ai_chat_service.error.i_m_sorry_an_error_occurred": "I'm sorry, an error occurred. Please try again later.",
    "services_ai_chat_service.error.error_updating_conversation_su": "Error updating conversation summary: ",
    "services_ai_chat_service.error.error_getting_entity_context": "Error getting entity context: ",
    "services_ai_chat_service.error.error_getting_beneficiary_cont": "Error getting beneficiary context: ",
    "services_ai_chat_service.error.error_getting_beneficiary_prog": "Error getting beneficiary progress: ",
    "services_calendar_service.error.error_getting_authorization_ur": "Error getting authorization URL: ",
    "services_calendar_service.error.error_handling_callback": "Error handling callback: ",
    "services_calendar_service.error.error_getting_credentials": "Error getting credentials: ",
    "services_calendar_service.error.create_a_calendar_eve": "\n        Create a calendar event for an appointment.\n        \n        Args:\n            user_id (int): The user's ID\n            appointment (dict): The appointment details\n            \n        Returns:\n            str: The event ID or None if creation fails\n        ",
    "services_calendar_service.error.error_creating_calendar_event": "Error creating calendar event: ",
    "services_calendar_service.error.error_creating_calendar_event_1": "Error creating calendar event: ",
    "services_calendar_service.error.error_updating_calendar_event": "Error updating calendar event: ",
    "services_calendar_service.error.error_updating_calendar_event_1": "Error updating calendar event: ",
    "services_calendar_service.error.error_deleting_calendar_event": "Error deleting calendar event: ",
    "services_calendar_service.error.error_deleting_calendar_event_1": "Error deleting calendar event: ",
    "services_calendar_service.error.get_calendar_events_f": "\n        Get calendar events for a user.\n        \n        Args:\n            user_id (int): The user's ID\n            start_time (datetime): The start time for the time range\n            end_time (datetime): The end time for the time range\n            max_results (int): The maximum number of results to return\n            \n        Returns:\n            list: The events or None if retrieval fails\n        ",
    "services_calendar_service.error.error_getting_calendar_events": "Error getting calendar events: ",
    "services_calendar_service.error.error_getting_calendar_events_1": "Error getting calendar events: ",
    "services_question_randomization_service.error.invalid_template": "Invalid template: ",
    "services_log_analytics_service.error.failed_to_initialize_log_analy": "Failed to initialize log analytics service: ",
    "services_log_analytics_service.error.cannot_connect_to_elasticsearc": "Cannot connect to Elasticsearch",
    "services_log_analytics_service.error.failed_login": "failed login",
    "services_log_analytics_service.error.error_in_background_analysis": "Error in background analysis: ",
    "services_log_analytics_service.error.error_retrieving_logs": "Error retrieving logs: ",
    "services_log_analytics_service.error.analyze_error_patterns_in_logs": "Analyze error patterns in logs",
    "services_log_analytics_service.error.group_similar_error_messages_u": "Group similar error messages using TF-IDF and clustering",
    "services_log_analytics_service.error.error_clustering_error_message": "Error clustering error messages: ",
    "services_log_analytics_service.error.analyze_a_group_of_similar_err": "Analyze a group of similar errors",
    "services_log_analytics_service.error.recurring_error_pattern_detect": "Recurring Error Pattern Detected",
    "services_log_analytics_service.error.similar_errors": " similar errors: ",
    "services_log_analytics_service.error.high_database_error_rate": "High Database Error Rate",
    "services_log_analytics_service.error.database_error_rate": "Database error rate: ",
    "services_log_analytics_service.error.analyze_authentication_failure": "Analyze authentication failure patterns",
    "services_log_analytics_service.error.login_failed": "login failed",
    "services_log_analytics_service.error.authentication_failed": "authentication failed",
    "services_log_analytics_service.error.invalid_credentials": "invalid credentials",
    "services_log_analytics_service.error.authentication_failure_pattern": "Authentication Failure Pattern Detected",
    "services_log_analytics_service.error.authentication_failures": " authentication failures",
    "services_log_analytics_service.error.error_in_pattern_anomaly_detec": "Error in pattern anomaly detection: ",
    "services_log_analytics_service.error.generate_recommendations_based": "Generate recommendations based on error patterns",
    "services_log_analytics_service.error.error_in_periodic_analysis": "Error in periodic analysis: ",
    "services_log_analytics_service.error.failed_to_send_analysis_alert": "Failed to send analysis alert: ",
    "services_log_analytics_service.error.failed_to_cache_analysis_resul": "Failed to cache analysis results: ",
    "services_log_analytics_service.error.failed_to_get_analysis_history": "Failed to get analysis history: ",
    "services_notification_service.error.create_a_new_notifica": "\n        Create a new notification.\n        \n        Args:\n            user_id (int): The recipient user ID\n            type (str): Notification type (e.g., 'appointment', 'message', 'system')\n            title (str): Notification title\n            message (str): Notification message\n            data (dict): Additional data for the notification\n            related_id (int): ID of the related entity (e.g., appointment ID)\n            related_type (str): Type of the related entity (e.g., 'appointment')\n            sender_id (int): The sender user ID (if applicable)\n            priority (str): Notification priority ('low', 'normal', 'high', 'urgent')\n            send_email (bool): Whether to send an email\n            tenant_id (int): The tenant ID (if applicable)\n            \n        Returns:\n            Notification: The created notification or None if creation fails\n        ",
    "services_notification_service.error.error_creating_notification": "Error creating notification: ",
    "services_notification_service.error.error_creating_role_notificati": "Error creating role notification: ",
    "services_notification_service.error.error_creating_tenant_notifica": "Error creating tenant notification: ",
    "services_notification_service.error.error_marking_notification_as": "Error marking notification as read: ",
    "services_notification_service.error.error_marking_all_notification": "Error marking all notifications as read: ",
    "services_notification_service.error.error_deleting_notification": "Error deleting notification: ",
    "services_notification_service.error.error_getting_user_notificatio": "Error getting user notifications: ",
    "services_notification_service.error.error_getting_unread_count": "Error getting unread count: ",
    "services_video_conference_service_updated.error.failed_to_start_recording_with": "Failed to start recording with provider",
    "services_video_conference_service_updated.error.error_sending_email_invitation": "Error sending email invitation: ",
    "services_video_conference_service_updated.error.error_sending_sms_invitation": "Error sending SMS invitation: ",
    "services_program_service.error.failed_to_emit_program_created": "Failed to emit program_created event: ",
    "services_ai_question_generator_service.error.error_processing_content": "Error processing content: ",
    "services_ai_question_generator_service.error.pdf_processing_failed": "PDF processing failed: ",
    "services_ai_question_generator_service.error.docx_processing_failed": "DOCX processing failed: ",
    "services_ai_question_generator_service.error.txt_processing_failed": "TXT processing failed: ",
    "services_ai_question_generator_service.error.audio_processing_failed": "Audio processing failed: ",
    "services_ai_question_generator_service.error.url_processing_failed": "URL processing failed: ",
    "services_ai_question_generator_service.error.text_processing_failed": "Text processing failed: ",
    "services_ai_question_generator_service.error.nlp_enhancement_failed": "NLP enhancement failed: ",
    "services_ai_question_generator_service.error.question_generation_failed": "Question generation failed: ",
    "services_ai_question_generator_service.error.error_generating": "Error generating ",
    "services_ai_question_generator_service.error.openai_api_call_failed": "OpenAI API call failed: ",
    "services_ai_question_generator_service.error.error_creating_question_object": "Error creating question object: ",
    "services_ai_question_generator_service.error.error_saving_questions": "Error saving questions: ",
    "services_ai_question_generator_service.error.semantic_similarity_detection": "Semantic similarity detection failed: ",
    "services_ai_question_generator_service.error.content_processing_failed": "Content processing failed: ",
    "services_gamification_integration.error.gamification_login_error_for_u": "Gamification login error for user ",
    "services_gamification_integration.error.gamification_logout_error_for": "Gamification logout error for user ",
    "services_gamification_integration.error.gamification_evaluation_start": "Gamification evaluation start error: ",
    "services_gamification_integration.error.gamification_evaluation_comple": "Gamification evaluation completion error: ",
    "services_gamification_integration.error.gamification_evaluation_review": "Gamification evaluation review error: ",
    "services_gamification_integration.error.gamification_program_enrollmen": "Gamification program enrollment error: ",
    "services_gamification_integration.error.gamification_module_completion": "Gamification module completion error: ",
    "services_gamification_integration.error.gamification_program_completio": "Gamification program completion error: ",
    "services_gamification_integration.error.gamification_appointment_sched": "Gamification appointment scheduling error: ",
    "services_gamification_integration.error.gamification_appointment_atten": "Gamification appointment attendance error: ",
    "services_gamification_integration.error.gamification_document_upload_e": "Gamification document upload error: ",
    "services_gamification_integration.error.gamification_document_sharing": "Gamification document sharing error: ",
    "services_gamification_integration.error.gamification_message_sending_e": "Gamification message sending error: ",
    "services_gamification_integration.error.gamification_help_request_erro": "Gamification help request error: ",
    "services_gamification_integration.error.gamification_help_provision_er": "Gamification help provision error: ",
    "services_gamification_integration.error.gamification_custom_achievemen": "Gamification custom achievement error: ",
    "services_gamification_integration.error.error_updating_evaluation_chal": "Error updating evaluation challenges: ",
    "services_gamification_integration.error.error_updating_program_challen": "Error updating program challenges: ",
    "services_gamification_integration.error.error_checking_improvement_ach": "Error checking improvement achievements: ",
    "services_gamification_integration.error.error_getting_engagement_summa": "Error getting engagement summary: ",
    "services_availability_service.error.error_updating_availability_sc": "Error updating availability schedule: ",
    "services_availability_service.error.add_an_availability_e": "\n        Add an availability exception.\n        \n        Args:\n            user_id (int): The user ID\n            data (dict): The exception data\n            \n        Returns:\n            AvailabilityException: The created exception or None if creation fails\n        ",
    "services_availability_service.error.invalid_date_format": "Invalid date format: ",
    "services_availability_service.error.error_adding_availability_exce": "Error adding availability exception: ",
    "services_availability_service.error.error_deleting_availability_ex": "Error deleting availability exception: ",
    "services_webrtc_service.error.error_updating_conference_part": "Error updating conference participant: ",
    "services_webrtc_service.error.error_joining_webrtc_room": "Error joining WebRTC room: ",
    "services_webrtc_service.error.error_handling_webrtc_signal": "Error handling WebRTC signal: ",
    "services_webrtc_service.error.error_sending_chat_message": "Error sending chat message: ",
    "services_webrtc_service.error.error_starting_recording": "Error starting recording: ",
    "services_webrtc_service.error.error_stopping_recording": "Error stopping recording: ",
    "services_webrtc_service.error.error_handling_disconnect": "Error handling disconnect: ",
    "services_two_factor_service.error.invalid_token": "Invalid token",
    "services_two_factor_service.error.invalid_token_or_backup_code": "Invalid token or backup code",
    "services_two_factor_service.error.invalid_session": "Invalid session",
    "services_email_service.error.email_sending_error": "Email sending error: ",
    "services_email_service.error.verify_a_secure_token": "\n    Verify a secure token.\n    \n    Args:\n        token (str): Token to verify\n        salt (str): Secret salt used for the token\n        expires_in (int): Token expiration time in seconds\n        \n    Returns:\n        dict: Decoded data or None if verification fails\n    ",
    "services_recurring_appointment_service.error.create_a_new_recurring_appoint": "Create a new recurring appointment series.\n        \n        Args:\n            trainer_id: ID of the trainer\n            beneficiary_id: ID of the beneficiary\n            title: Title of the appointment\n            pattern_data: Recurrence pattern configuration\n            start_date: First occurrence date\n            duration_minutes: Duration of each appointment\n            description: Optional description\n            location: Optional location\n            \n        Returns:\n            Tuple of (AppointmentSeries, error_message)\n        ",
    "services_recurring_appointment_service.error.invalid_trainer_id": "Invalid trainer ID",
    "services_recurring_appointment_service.error.invalid_beneficiary_id": "Invalid beneficiary ID",
    "services_recurring_appointment_service.error.error_creating_recurring_appoi": "Error creating recurring appointment: ",
    "services_recurring_appointment_service.error.error_updating_series": "Error updating series: ",
    "services_recurring_appointment_service.error.error_updating_pattern": "Error updating pattern: ",
    "services_recurring_appointment_service.error.add_an_exception_date_to_the_s": "Add an exception date to the series.\n        \n        Args:\n            series_id: ID of the series\n            exception_date: Date to skip\n            \n        Returns:\n            Tuple of (success, error_message)\n        ",
    "services_recurring_appointment_service.error.error_adding_exception": "Error adding exception: ",
    "services_recurring_appointment_service.error.error_removing_exception": "Error removing exception: ",
    "services_recurring_appointment_service.error.error_updating_appointment": "Error updating appointment: ",
    "services_recurring_appointment_service.error.error_cancelling_series": "Error cancelling series: ",
    "services_recurring_appointment_service.error.generate_more_occurrences_for": "Generate more occurrences for a series.\n        \n        Args:\n            series_id: ID of the series\n            months_ahead: How many months ahead to generate\n            \n        Returns:\n            Tuple of (created_count, error_message)\n        ",
    "services_recurring_appointment_service.error.error_generating_occurrences": "Error generating occurrences: ",
    "services_video_conference_service.error.error_getting_zoom_access_toke": "Error getting Zoom access token: ",
    "services_video_conference_service.error.zoom_api_request_failed": "Zoom API request failed: ",
    "services_video_conference_service.error.zoom_api_error": "Zoom API error: ",
    "services_video_conference_service.error.error_deleting_zoom_meeting": "Error deleting Zoom meeting: ",
    "services_video_conference_service.error.error_starting_zoom_recording": "Error starting Zoom recording: ",
    "services_video_conference_service.error.error_stopping_zoom_recording": "Error stopping Zoom recording: ",
    "services_video_conference_service.error.error_getting_zoom_recordings": "Error getting Zoom recordings: ",
    "services_video_conference_service.error.failed_to_start_recording_with": "Failed to start recording with provider",
    "services_video_conference_service.error.error_sending_email_invitation": "Error sending email invitation: ",
    "services_video_conference_service.error.error_sending_sms_invitation": "Error sending SMS invitation: ",
    "services_tracing_service.error.failed_to_initialize_tracing": "Failed to initialize tracing: ",
    "services_tracing_service.error.total_number_of_errors": "Total number of errors",
    "services_tracing_service.error.failed_to_initialize_metrics": "Failed to initialize metrics: ",
    "services_tracing_service.error.auto_instrumentation_failed": "Auto-instrumentation failed: ",
    "services_tracing_service.error.failed_to_record_request_metri": "Failed to record request metrics: ",
    "services_tracing_service.error.failed_to_record_database_metr": "Failed to record database metrics: ",
    "services_alert_service.error.failed_to_send_alert_via": "Failed to send alert via ",
    "services_alert_service.error.error_sending_alert_via": "Error sending alert via ",
    "services_alert_service.error.error_sending_to": "Error sending to ",
    "services_alert_service.error.failed_to_send_email_alert": "Failed to send email alert: ",
    "services_alert_service.error.webhook_alert_failed": "Webhook alert failed: ",
    "services_alert_service.error.teams_alert_failed": "Teams alert failed: ",
    "services_alert_service.error.discord_alert_failed": "Discord alert failed: ",
    "services_alert_service.error.create_and_send_an_al": "\n        Create and send an alert event\n        \n        Args:\n            title: Alert title\n            message: Alert message\n            severity: Alert severity level\n            source: Source of the alert (e.g., 'flask-app', 'nginx', 'database')\n            event_type: Type of event (e.g., 'error', 'security', 'performance')\n            metadata: Additional metadata\n            affected_users: List of affected user IDs\n            correlation_id: Correlation ID for tracking\n        \n        Returns:\n            Created AlertEvent\n        ",
    "services_adaptive_test_service.error.invalid_or_completed_session": "Invalid or completed session",
    "services_adaptive_test_service.error.invalid_question": "Invalid question",
    "services_adaptive_test_service.error.invalid_or_already_completed_s": "Invalid or already completed session",
    "services_evaluation_service.error.error_creating_evaluation": "Error creating evaluation: ",
    "services_evaluation_service.error.error_getting_evaluation": "Error getting evaluation ",
    "services_evaluation_service.error.error_getting_evaluations": "Error getting evaluations: ",
    "services_evaluation_service.error.error_updating_evaluation": "Error updating evaluation ",
    "services_evaluation_service.error.error_submitting_responses": "Error submitting responses: ",
    "services_evaluation_service.error.error_deleting_evaluation": "Error deleting evaluation ",
    "services_evaluation_service.error.error_getting_beneficiary_eval": "Error getting beneficiary evaluations: ",
    "services_evaluation_service.error.error_getting_evaluation_stati": "Error getting evaluation statistics: ",
    "services_performance_prediction_service.error.train_a_classificatio": "\n        Train a classification model to predict pass/fail outcomes.\n        \n        Args:\n            tenant_id: ID of the tenant\n            user_id: ID of the user training the model\n            \n        Returns:\n            Dictionary with training results\n        ",
    "services_performance_prediction_service.error.training_pass_fail_classifier": "Training pass/fail classifier for tenant ",
    "services_performance_prediction_service.error.pass_fail_classifier_v": "Pass/Fail Classifier v",
    "services_performance_prediction_service.error.error_training_time_series_mod": "Error training time series model: ",
    "services_performance_prediction_service.error.failed_to_train_time_series_mo": "Failed to train time series model: ",
    "services_performance_prediction_service.error.prepare_training_data_for_pass": "Prepare training data for pass/fail classification.",
    "services_performance_prediction_service.error.make_pass_fail_prediction_usin": "Make pass/fail prediction using trained classifier.",
    "services_performance_prediction_service.error.high_risk_of_program_failure": "High Risk of Program Failure",
    "services_storage_service.error.invalid_file_type_for": "Invalid file type for ",
    "services_storage_service.error.s3_upload_failed": "S3 upload failed: ",
    "services_storage_service.error.error_processing_image": "Error processing image: ",
    "services_ai_report_service.error.generate_a_comprehensive_ai_po": "Generate a comprehensive AI-powered report for a beneficiary.\n        \n        Args:\n            beneficiary_id: ID of the beneficiary\n            report_type: Type of report (comprehensive, progress, assessment)\n            time_period: Time period for analysis\n            include_sections: Specific sections to include\n            \n        Returns:\n            Tuple of (report_data, error_message)\n        ",
    "services_ai_report_service.error.error_generating_beneficiary_r": "Error generating beneficiary report: ",
    "services_ai_report_service.error.error_generating_report": "Error generating report: ",
    "services_ai_report_service.error.generate_ai_powered_report_for": "Generate AI-powered report for a program.\n        \n        Args:\n            program_id: ID of the program\n            time_period: Time period for analysis\n            \n        Returns:\n            Tuple of (report_data, error_message)\n        ",
    "services_ai_report_service.error.error_generating_program_repor": "Error generating program report: ",
    "services_ai_report_service.error.error_generating_report_1": "Error generating report: ",
    "services_ai_report_service.error.generate_comparative_report_fo": "Generate comparative report for multiple beneficiaries.\n        \n        Args:\n            beneficiary_ids: List of beneficiary IDs to compare\n            metrics: Specific metrics to compare\n            \n        Returns:\n            Tuple of (report_data, error_message)\n        ",
    "services_ai_report_service.error.error_generating_comparative_r": "Error generating comparative report: ",
    "services_ai_report_service.error.error_generating_report_2": "Error generating report: ",
    "services_ai_report_service.error.error_synthesizing_multi_sourc": "Error synthesizing multi-source data: ",
    "services_ai_report_service.error.error_synthesizing_data": "Error synthesizing data: ",
    "services_ai_report_service.error.openai_api_error": "OpenAI API error: ",
    "services_document_version_service.error.error_creating_document_versio": "Error creating document version: ",
    "services_document_version_service.error.error_restoring_document_versi": "Error restoring document version: ",
    "services_document_version_service.error.error_comparing_document_versi": "Error comparing document versions: ",
    "services_document_version_service.error.error_enabling_document_versio": "Error enabling document versioning: ",
    "reporting_realtime_service.error.invalid_subscription_type": "Invalid subscription type: ",
    "reporting_realtime_service.error.error_in_periodic_scheduler": "Error in periodic scheduler: ",
    "reporting_realtime_service.error.error_emitting_to_client": "Error emitting to client ",
    "reporting_visualization_service.error.invalid_chart_type": "Invalid chart type: ",
    "reporting_dashboard_service.error.invalid_widget_configuration": "Invalid widget configuration: ",
    "reporting_dashboard_service.error.invalid_widget_configuration_1": "Invalid widget configuration: ",
    "reporting_dashboard_service.error.invalid_widget_type": "Invalid widget type: ",
    "reporting_dashboard_service.error.has_invalid_value": "' has invalid value: ",
    "reporting_export_service.error.file_name_contains_invalid_cha": "File name contains invalid characters",
    "reporting_scheduler_service.error.invalid_schedule_configuration": "Invalid schedule configuration: ",
    "reporting_scheduler_service.error.invalid_schedule_type": "Invalid schedule type: ",
    "reporting_scheduler_service.error.invalid_cron_expression": "Invalid cron expression",
    "reporting_scheduler_service.error.invalid_delivery_method": "Invalid delivery method: ",
    "file_upload_image_processor.error.error_processing_image": "Error processing image ",
    "file_upload_image_processor.error.image_processing_failed": "Image processing failed: ",
    "file_upload_image_processor.error.failed_to_open_image": "Failed to open image: ",
    "file_upload_image_processor.error.error_adding_watermark": "Error adding watermark: ",
    "file_upload_image_processor.error.failed_to_add_watermark": "Failed to add watermark: ",
    "file_upload_image_processor.error.error_blurring_image": "Error blurring image: ",
    "file_upload_image_processor.error.failed_to_blur_image": "Failed to blur image: ",
    "file_upload_file_scanner.error.perform_comprehensive": "\n        Perform comprehensive file scanning.\n        \n        Args:\n            file_path: Path to the file to scan\n            \n        Returns:\n            Dictionary with scan results\n            \n        Raises:\n            FileTypeNotAllowedException: If file type is not allowed\n            VirusDetectedException: If virus is detected\n            FileScanException: For other scanning errors\n        ",
    "file_upload_file_scanner.error.error_scanning_file": "Error scanning file ",
    "file_upload_file_scanner.error.file_scan_failed": "File scan failed: ",
    "file_upload_file_scanner.error.error_detecting_mime_type": "Error detecting MIME type: ",
    "file_upload_file_scanner.error.failed_to_detect_mime_type": "Failed to detect MIME type: ",
    "file_upload_file_scanner.error.error_getting_file_description": "Error getting file description: ",
    "file_upload_file_scanner.error.clamav_connection_failed": "ClamAV connection failed: ",
    "file_upload_file_scanner.error.virus_scan_error": "Virus scan error: ",
    "file_upload_file_scanner.error.failed_to_quarantine_file": "Failed to quarantine file: ",
    "file_upload_file_scanner.error.failed_to_quarantine_file_1": "Failed to quarantine file: ",
    "file_upload_storage_manager.error.failed_to_initialize_s3_client": "Failed to initialize S3 client: ",
    "file_upload_storage_manager.error.error_storing_file": "Error storing file: ",
    "file_upload_storage_manager.error.failed_to_store_file": "Failed to store file: ",
    "file_upload_storage_manager.error.error_retrieving_file": "Error retrieving file: ",
    "file_upload_storage_manager.error.failed_to_retrieve_file": "Failed to retrieve file: ",
    "file_upload_storage_manager.error.error_deleting_file": "Error deleting file: ",
    "file_upload_storage_manager.error.failed_to_encrypt_file": "Failed to encrypt file: ",
    "file_upload_storage_manager.error.failed_to_decrypt_file": "Failed to decrypt file: ",
    "file_upload_storage_manager.error.failed_to_upload_to_s3": "Failed to upload to S3: ",
    "file_upload_storage_manager.error.failed_to_create_signed_url": "Failed to create signed URL: ",
    "file_upload_storage_manager.error.failed_to_create_signed_url_1": "Failed to create signed URL: ",
    "file_upload_file_upload_service.error.unexpected_error_during_file_u": "Unexpected error during file upload: ",
    "file_upload_file_upload_service.error.upload_failed": "Upload failed: ",
    "file_upload_file_upload_service.error.error_downloading_file": "Error downloading file ",
    "file_upload_file_upload_service.error.download_failed": "Download failed: ",
    "file_upload_file_upload_service.error.error_deleting_file": "Error deleting file ",
    "file_upload_file_upload_service.error.deletion_failed": "Deletion failed: ",
    "file_upload_file_upload_service.error.error_updating_file": "Error updating file ",
    "file_upload_file_upload_service.error.failed_to_save_temporary_file": "Failed to save temporary file: ",
    "file_upload_file_upload_service.error.error_cleaning_temp_files": "Error cleaning temp files: ",
    "file_upload_api_example.error.unexpected_error_in_file_uploa": "Unexpected error in file upload: ",
    "file_upload_api_example.error.internal_server_error": "Internal server error",
    "file_upload_api_example.error.unexpected_error_in_file_downl": "Unexpected error in file download: ",
    "file_upload_api_example.error.internal_server_error_1": "Internal server error",
    "file_upload_api_example.error.unexpected_error_in_file_delet": "Unexpected error in file deletion: ",
    "file_upload_api_example.error.internal_server_error_2": "Internal server error",
    "file_upload_api_example.error.internal_server_error_3": "Internal server error",
    "file_upload_api_example.error.unexpected_error_getting_file": "Unexpected error getting file history: ",
    "file_upload_api_example.error.internal_server_error_4": "Internal server error",
    "file_upload_api_example.error.unexpected_error_getting_user": "Unexpected error getting user stats: ",
    "file_upload_api_example.error.internal_server_error_5": "Internal server error",
    "file_upload_api_example.error.invalid_expiration_time_must": "Invalid expiration time (must be between 60 and 86400 seconds)",
    "file_upload_api_example.error.unexpected_error_creating_sign": "Unexpected error creating signed URL: ",
    "file_upload_api_example.error.internal_server_error_6": "Internal server error",
    "file_upload_api_example.error.handle_file_too_large_errors": "Handle file too large errors.",
    "file_upload_api_example.error.handle_bad_request_errors": "Handle bad request errors.",
    "file_upload_audit_logger.error.failed_to_log_file_upload": "Failed to log file upload: ",
    "file_upload_audit_logger.error.failed_to_log_file_download": "Failed to log file download: ",
    "file_upload_audit_logger.error.failed_to_log_file_deletion": "Failed to log file deletion: ",
    "file_upload_audit_logger.error.failed_to_add_file_version": "Failed to add file version: ",
    "file_upload_audit_logger.error.failed_to_get_file_history": "Failed to get file history: ",
    "file_upload_audit_logger.error.failed_to_cleanup_old_audits": "Failed to cleanup old audits: ",
    "file_upload_audit_logger.error.failed_to_get_user_upload_stat": "Failed to get user upload stats: ",
    "file_upload_exceptions.error.raised_when_file_scanning_fail": "Raised when file scanning fails.",
    "file_upload_exceptions.error.raised_when_image_processing_f": "Raised when image processing fails.",
    "file_upload_exceptions.error.raised_when_storage_operations": "Raised when storage operations fail.",
    "file_upload_exceptions.error.raised_when_encryption_decrypt": "Raised when encryption/decryption fails.",
    "file_upload_exceptions.error.raised_when_file_versioning_fa": "Raised when file versioning fails.",
    "file_upload_exceptions.error.raised_when_audit_logging_fail": "Raised when audit logging fails.",
    "core_service_container.error.resolve_a_service_by": "\n        Resolve a service by name.\n        \n        Args:\n            name: Service name or alias\n            \n        Returns:\n            Service instance\n            \n        Raises:\n            ValueError: If service is not registered\n            RuntimeError: If circular dependency detected\n        ",
    "core_base_service.error.base_implementation_for_a": "\n    Base implementation for all services with common functionality.\n    \n    This class provides:\n    - Dependency injection support\n    - Repository pattern integration\n    - Caching capabilities\n    - Logging\n    - Transaction management\n    - Lifecycle hooks\n    - Error handling\n    ",
    "core_base_service.error.create_repository_ins": "\n        Create repository instance. Override in subclasses.\n        \n        Raises:\n            NotImplementedError: Must be implemented by subclasses\n        ",
    "core_base_service.error.create_a_new_entity": "\n        Create a new entity.\n        \n        Args:\n            data: Entity data\n            \n        Returns:\n            Created entity\n            \n        Raises:\n            ValueError: If validation fails\n            SQLAlchemyError: If database operation fails\n        ",
    "core_base_service.error.database_error_in": "Database error in ",
    "core_base_service.error.error_in": "Error in ",
    "core_base_service.error.database_error_in_1": "Database error in ",
    "core_base_service.error.error_in_1": "Error in ",
    "core_base_service.error.database_error_in_2": "Database error in ",
    "core_base_service.error.error_in_2": "Error in ",
    "core_service_factory.error.failed_to_create": "Failed to create ",
    "core_user_service_example.error.invalid_email_format": "Invalid email format",
    "core_user_service_example.error.invalid_role_must_be_one_of": "Invalid role. Must be one of: ",
    "core_user_service_example.error.validation_errors": "Validation errors: ",
    "core_user_service_example.error.invalid_password_attempt_for_u": "Invalid password attempt for user ",
    "core_user_service_example.error.failed_to_create_profile_for_u": "Failed to create profile for user ",
    "core_user_service_example.error.failed_to_log_activity": "Failed to log activity: ",
    "core_decorators.error.database_error_in": "Database error in ",
    "core_decorators.error.invalid_type_for": "Invalid type for ",
    "gamification_achievement_service.error.error_creating_achievement": "Error creating achievement: ",
    "gamification_achievement_service.error.error_awarding_achievement": "Error awarding achievement: ",
    "gamification_achievement_service.error.error_checking_achievements_fo": "Error checking achievements for user ",
    "gamification_achievement_service.error.error_getting_user_achievement": "Error getting user achievements: ",
    "gamification_achievement_service.error.error_getting_achievement_prog": "Error getting achievement progress: ",
    "gamification_achievement_service.error.error_getting_available_achiev": "Error getting available achievements: ",
    "gamification_achievement_service.error.error_checking_achievement_eli": "Error checking achievement eligibility: ",
    "gamification_achievement_service.error.error_calculating_achievement": "Error calculating achievement progress: ",
    "gamification_learning_path_service.error.error_creating_learning_path": "Error creating learning path: ",
    "gamification_learning_path_service.error.error_adding_path_node": "Error adding path node: ",
    "gamification_learning_path_service.error.error_generating_personalized": "Error generating personalized path: ",
    "gamification_learning_path_service.error.error_assigning_path_to_user": "Error assigning path to user: ",
    "gamification_learning_path_service.error.error_starting_learning_path": "Error starting learning path: ",
    "gamification_learning_path_service.error.error_completing_node": "Error completing node: ",
    "gamification_learning_path_service.error.error_getting_user_learning_pa": "Error getting user learning paths: ",
    "gamification_learning_path_service.error.error_getting_path_progress": "Error getting path progress: ",
    "gamification_learning_path_service.error.error_getting_recommended_path": "Error getting recommended paths: ",
    "gamification_learning_path_service.error.error_creating_adaptive_path": "Error creating adaptive path: ",
    "gamification_learning_path_service.error.error_calculating_estimated_co": "Error calculating estimated completion: ",
    "gamification_learning_path_service.error.error_getting_next_available_n": "Error getting next available node: ",
    "gamification_learning_path_service.error.error_checking_node_availabili": "Error checking node availability: ",
    "gamification_learning_path_service.error.error_checking_if_node_is_mand": "Error checking if node is mandatory: ",
    "gamification_learning_path_service.error.error_getting_user_learning_pr": "Error getting user learning profile: ",
    "gamification_learning_path_service.error.error_calculating_path_relevan": "Error calculating path relevance score: ",
    "gamification_gamification_manager.error.error_processing_gamification": "Error processing gamification event ",
    "gamification_gamification_manager.error.error_getting_user_gamificatio": "Error getting user gamification summary: ",
    "gamification_gamification_manager.error.error_getting_gamification_das": "Error getting gamification dashboard: ",
    "gamification_gamification_manager.error.error_creating_gamification_ch": "Error creating gamification challenge: ",
    "gamification_gamification_manager.error.error_in_bulk_reward_awarding": "Error in bulk reward awarding: ",
    "gamification_gamification_manager.error.error_handling_evaluation_comp": "Error handling evaluation completed event: ",
    "gamification_gamification_manager.error.error_handling_program_complet": "Error handling program completed event: ",
    "gamification_gamification_manager.error.error_handling_daily_login_eve": "Error handling daily login event: ",
    "gamification_gamification_manager.error.error_handling_perfect_score_e": "Error handling perfect score event: ",
    "gamification_gamification_manager.error.error_handling_first_evaluatio": "Error handling first evaluation event: ",
    "gamification_gamification_manager.error.error_handling_streak_mileston": "Error handling streak milestone event: ",
    "gamification_gamification_manager.error.error_handling_social_interact": "Error handling social interaction event: ",
    "gamification_gamification_manager.error.error_handling_learning_path_n": "Error handling learning path node completed event: ",
    "gamification_gamification_manager.error.error_handling_team_challenge": "Error handling team challenge completed event: ",
    "gamification_gamification_manager.error.error_updating_leaderboards": "Error updating leaderboards: ",
    "gamification_gamification_manager.error.error_calculating_overall_gami": "Error calculating overall gamification score: ",
    "gamification_xp_service.error.error_awarding_xp": "Error awarding XP: ",
    "gamification_xp_service.error.error_awarding_activity_xp": "Error awarding activity XP: ",
    "gamification_xp_service.error.error_getting_xp_history": "Error getting XP history: ",
    "gamification_xp_service.error.error_getting_xp_statistics": "Error getting XP statistics: ",
    "gamification_xp_service.error.error_getting_xp_leaderboard": "Error getting XP leaderboard: ",
    "gamification_xp_service.error.error_creating_xp_multiplier": "Error creating XP multiplier: ",
    "gamification_xp_service.error.error_calculating_total_multip": "Error calculating total multiplier: ",
    "gamification_xp_service.error.error_calculating_activity_bon": "Error calculating activity bonus: ",
    "gamification_xp_service.error.error_checking_multiplier_appl": "Error checking multiplier applicability: ",
    "gamification_xp_service.error.error_getting_time_based_multi": "Error getting time-based multiplier: ",
    "gamification_xp_service.error.error_getting_streak_multiplie": "Error getting streak multiplier: ",
    "gamification_xp_service.error.error_calculating_current_stre": "Error calculating current streak: ",
    "gamification_progress_service.error.error_creating_progress_tracke": "Error creating progress tracker: ",
    "gamification_progress_service.error.error_updating_progress": "Error updating progress: ",
    "gamification_progress_service.error.error_getting_user_progress": "Error getting user progress: ",
    "gamification_progress_service.error.error_creating_milestone": "Error creating milestone: ",
    "gamification_progress_service.error.error_checking_milestones": "Error checking milestones: ",
    "gamification_progress_service.error.error_awarding_milestone": "Error awarding milestone: ",
    "gamification_progress_service.error.error_getting_user_milestones": "Error getting user milestones: ",
    "gamification_progress_service.error.error_getting_progress_dashboa": "Error getting progress dashboard: ",
    "gamification_progress_service.error.error_creating_progress_goal": "Error creating progress goal: ",
    "gamification_progress_service.error.error_tracking_program_complet": "Error tracking program completion: ",
    "gamification_progress_service.error.error_tracking_skill_developme": "Error tracking skill development: ",
    "gamification_progress_service.error.error_tracking_evaluation_perf": "Error tracking evaluation performance: ",
    "gamification_progress_service.error.error_tracking_learning_streak": "Error tracking learning streak: ",
    "gamification_progress_service.error.error_tracking_participation": "Error tracking participation: ",
    "gamification_progress_service.error.error_tracking_custom_objectiv": "Error tracking custom objective: ",
    "gamification_progress_service.error.error_checking_milestone_eligi": "Error checking milestone eligibility: ",
    "gamification_progress_service.error.error_processing_milestone_rew": "Error processing milestone rewards: ",
    "gamification_progress_service.error.error_calculating_overall_prog": "Error calculating overall progress: ",
    "gamification_progress_service.error.error_getting_next_milestones": "Error getting next milestones: ",
    "gamification_progress_service.error.error_calculating_milestone_pr": "Error calculating milestone progress: ",
    "gamification_progress_service.error.error_calculating_learning_str": "Error calculating learning streak: ",
    "gamification_progress_service.error.error_creating_milestone_achie": "Error creating milestone achievement: ",
    "gamification_social_service.error.error_creating_team": "Error creating team: ",
    "gamification_social_service.error.error_joining_team": "Error joining team: ",
    "gamification_social_service.error.error_leaving_team": "Error leaving team: ",
    "gamification_social_service.error.error_getting_user_teams": "Error getting user teams: ",
    "gamification_social_service.error.error_getting_team_details": "Error getting team details: ",
    "gamification_social_service.error.error_creating_team_challenge": "Error creating team challenge: ",
    "gamification_social_service.error.error_starting_team_challenge": "Error starting team challenge: ",
    "gamification_social_service.error.error_getting_team_challenges": "Error getting team challenges: ",
    "gamification_social_service.error.error_creating_social_share": "Error creating social share: ",
    "gamification_social_service.error.error_getting_social_feed": "Error getting social feed: ",
    "gamification_social_service.error.error_reacting_to_share": "Error reacting to share: ",
    "gamification_social_service.error.error_creating_collaboration": "Error creating collaboration: ",
    "gamification_social_service.error.error_getting_team_leaderboard": "Error getting team leaderboard: ",
    "gamification_social_service.error.error_getting_team_statistics": "Error getting team statistics: ",
    "gamification_level_service.error.error_updating_user_level": "Error updating user level: ",
    "gamification_level_service.error.error_getting_level_progress": "Error getting level progress: ",
    "gamification_level_service.error.error_getting_level_title": "Error getting level title: ",
    "gamification_level_service.error.error_getting_level_rewards": "Error getting level rewards: ",
    "gamification_level_service.error.error_getting_level_leaderboar": "Error getting level leaderboard: ",
    "gamification_level_service.error.error_getting_level_statistics": "Error getting level statistics: ",
    "gamification_level_service.error.invalid_level_system_configura": "Invalid level system configuration",
    "gamification_level_service.error.error_creating_custom_level_sy": "Error creating custom level system: ",
    "gamification_level_service.error.error_previewing_level_progres": "Error previewing level progression: ",
    "gamification_level_service.error.error_getting_xp_for_level": "Error getting XP for level: ",
    "gamification_level_service.error.invalid_max_level": "Invalid max_level",
    "gamification_level_service.error.invalid_base_xp": "Invalid base_xp",
    "gamification_level_service.error.error_validating_level_system": "Error validating level system: ",
    "gamification_badge_service.error.error_creating_badge": "Error creating badge: ",
    "gamification_badge_service.error.error_awarding_badge": "Error awarding badge: ",
    "gamification_badge_service.error.error_getting_user_badges": "Error getting user badges: ",
    "gamification_badge_service.error.error_getting_badge_showcase": "Error getting badge showcase: ",
    "gamification_badge_service.error.error_getting_available_badges": "Error getting available badges: ",
    "gamification_badge_service.error.error_getting_badge_statistics": "Error getting badge statistics: ",
    "gamification_badge_service.error.error_creating_custom_badge_de": "Error creating custom badge design: ",
    "gamification_badge_service.error.error_generating_badge_css": "Error generating badge CSS: ",
    "gamification_badge_service.error.error_calculating_completion_r": "Error calculating completion rate: ",
    "gamification_badge_service.error.error_getting_most_earned_badg": "Error getting most earned badges: ",
    "gamification_badge_service.error.error_getting_rarest_badges": "Error getting rarest badges: ",
    "gamification_leaderboard_service.error.error_creating_leaderboard": "Error creating leaderboard: ",
    "gamification_leaderboard_service.error.error_getting_leaderboard": "Error getting leaderboard: ",
    "gamification_leaderboard_service.error.error_getting_leaderboard_by_t": "Error getting leaderboard by type: ",
    "gamification_leaderboard_service.error.error_updating_leaderboard": "Error updating leaderboard: ",
    "gamification_leaderboard_service.error.error_getting_user_rankings": "Error getting user rankings: ",
    "gamification_leaderboard_service.error.error_creating_competition": "Error creating competition: ",
    "gamification_leaderboard_service.error.error_getting_active_competiti": "Error getting active competitions: ",
    "gamification_leaderboard_service.error.error_getting_global_leaderboa": "Error getting global leaderboards: ",
    "gamification_leaderboard_service.error.error_calculating_xp_leaderboa": "Error calculating XP leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_level_leader": "Error calculating level leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_badges_leade": "Error calculating badges leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_achievements": "Error calculating achievements leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_evaluation_s": "Error calculating evaluation score leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_completion_r": "Error calculating completion rate leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_streak_leade": "Error calculating streak leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_program_prog": "Error calculating program progress leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_participatio": "Error calculating participation leaderboard: ",
    "gamification_leaderboard_service.error.error_calculating_overall_rank": "Error calculating overall ranking score: ",
    "optimization_cache_strategy.error.invalidate_cache_entries_match": "Invalidate cache entries matching pattern",
    "optimization_cache_strategy.error.invalidated": "Invalidated ",
    "optimization_cache_strategy.error.failed_to_warm_cache_for_key": "Failed to warm cache for key ",
    "optimization_cache_strategy.error.failed_to_write": "Failed to write ",
    "optimization_db_indexing.error.failed_to_create_index": "Failed to create index ",
    "optimization_db_indexing.error.failed_to_drop_index": "Failed to drop index ",
    "optimization_db_indexing.error.failed_to_create_covering_inde": "Failed to create covering index: ",
    "optimization_db_indexing.error.failed_to_create_partial_index": "Failed to create partial index: ",
    "video_conference_providers_base_provider.error.base_exception_for_provider_er": "Base exception for provider errors.",
    "video_conference_providers_base_provider.error.exception_for_provider_configu": "Exception for provider configuration errors.",
    "video_conference_providers_base_provider.error.exception_for_provider_api_err": "Exception for provider API errors.",
    "video_conference_providers_base_provider.error.exception_for_provider_authent": "Exception for provider authentication errors.",
    "video_conference_providers_base_provider.error.exception_for_provider_rate_li": "Exception for provider rate limit errors.",
    "video_conference_providers_webrtc_provider.error.error_creating_webrtc_meeting": "Error creating WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.error.failed_to_create_webrtc_meetin": "Failed to create WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.error.error_updating_webrtc_meeting": "Error updating WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.error.error_deleting_webrtc_meeting": "Error deleting WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.error.error_getting_webrtc_meeting_i": "Error getting WebRTC meeting info: ",
    "video_conference_providers_webrtc_provider.error.failed_to_get_webrtc_meeting_i": "Failed to get WebRTC meeting info: ",
    "video_conference_providers_webrtc_provider.error.error_starting_webrtc_recordin": "Error starting WebRTC recording: ",
    "video_conference_providers_webrtc_provider.error.error_stopping_webrtc_recordin": "Error stopping WebRTC recording: ",
    "video_conference_providers_webrtc_provider.error.error_getting_webrtc_recording": "Error getting WebRTC recordings: ",
    "video_conference_providers_webrtc_provider.error.error_adding_participants_to_w": "Error adding participants to WebRTC meeting: ",
    "video_conference_providers_webrtc_provider.error.error_getting_webrtc_meeting_p": "Error getting WebRTC meeting participants: ",
    "video_conference_providers_webrtc_provider.error.error_sending_webrtc_invitatio": "Error sending WebRTC invitations: ",
    "video_conference_providers_webrtc_provider.error.error_getting_webrtc_meeting_a": "Error getting WebRTC meeting analytics: ",
    "video_conference_providers_webrtc_provider.error.error_getting_active_webrtc_ro": "Error getting active WebRTC rooms: ",
    "video_conference_providers_webrtc_provider.error.error_cleaning_up_webrtc_rooms": "Error cleaning up WebRTC rooms: ",
    "video_conference_providers_google_meet_provider.error.google_meet_provider_configura": "Google Meet provider configuration is invalid",
    "video_conference_providers_google_meet_provider.error.error_setting_up_google_creden": "Error setting up Google credentials: ",
    "video_conference_providers_google_meet_provider.error.failed_to_authenticate_with_go": "Failed to authenticate with Google: ",
    "video_conference_providers_google_meet_provider.error.invalid_google_credentials": "Invalid Google credentials",
    "video_conference_providers_google_meet_provider.error.error_getting_google_calendar": "Error getting Google Calendar service: ",
    "video_conference_providers_google_meet_provider.error.failed_to_get_google_calendar": "Failed to get Google Calendar service: ",
    "video_conference_providers_google_meet_provider.error.google_api_error_creating_meet": "Google API error creating meeting: ",
    "video_conference_providers_google_meet_provider.error.google_meet_api_error": "Google Meet API error: ",
    "video_conference_providers_google_meet_provider.error.error_creating_google_meet_mee": "Error creating Google Meet meeting: ",
    "video_conference_providers_google_meet_provider.error.failed_to_create_google_meet_m": "Failed to create Google Meet meeting: ",
    "video_conference_providers_google_meet_provider.error.google_api_error_updating_meet": "Google API error updating meeting: ",
    "video_conference_providers_google_meet_provider.error.google_meet_api_error_1": "Google Meet API error: ",
    "video_conference_providers_google_meet_provider.error.error_updating_google_meet_mee": "Error updating Google Meet meeting: ",
    "video_conference_providers_google_meet_provider.error.google_api_error_deleting_meet": "Google API error deleting meeting: ",
    "video_conference_providers_google_meet_provider.error.error_deleting_google_meet_mee": "Error deleting Google Meet meeting: ",
    "video_conference_providers_google_meet_provider.error.google_api_error_getting_meeti": "Google API error getting meeting info: ",
    "video_conference_providers_google_meet_provider.error.google_meet_api_error_2": "Google Meet API error: ",
    "video_conference_providers_google_meet_provider.error.error_getting_google_meet_meet": "Error getting Google Meet meeting info: ",
    "video_conference_providers_google_meet_provider.error.failed_to_get_google_meet_meet": "Failed to get Google Meet meeting info: ",
    "video_conference_providers_google_meet_provider.error.google_meet_recording_cannot_b": "Google Meet recording cannot be started programmatically",
    "video_conference_providers_google_meet_provider.error.google_meet_recording_cannot_b_1": "Google Meet recording cannot be stopped programmatically",
    "video_conference_providers_google_meet_provider.error.error_adding_participants_to_g": "Error adding participants to Google Meet: ",
    "video_conference_providers_google_meet_provider.error.error_sending_google_meet_invi": "Error sending Google Meet invitations: ",
    "video_conference_providers_google_meet_provider.error.error_getting_google_meet_anal": "Error getting Google Meet analytics: ",
    "video_conference_providers_google_meet_provider.error.error_getting_google_meet_part": "Error getting Google Meet participants: ",
    "video_conference_providers_zoom_provider.error.zoom_provider_configuration_is": "Zoom provider configuration is invalid",
    "video_conference_providers_zoom_provider.error.error_getting_zoom_access_toke": "Error getting Zoom access token: ",
    "video_conference_providers_zoom_provider.error.failed_to_authenticate_with_zo": "Failed to authenticate with Zoom: ",
    "video_conference_providers_zoom_provider.error.zoom_api_request_failed": "Zoom API request failed: ",
    "video_conference_providers_zoom_provider.error.zoom_api_error": "Zoom API error: ",
    "video_conference_providers_zoom_provider.error.error_creating_zoom_meeting": "Error creating Zoom meeting: ",
    "video_conference_providers_zoom_provider.error.failed_to_create_zoom_meeting": "Failed to create Zoom meeting: ",
    "video_conference_providers_zoom_provider.error.error_updating_zoom_meeting": "Error updating Zoom meeting: ",
    "video_conference_providers_zoom_provider.error.error_deleting_zoom_meeting": "Error deleting Zoom meeting: ",
    "video_conference_providers_zoom_provider.error.error_getting_zoom_meeting_inf": "Error getting Zoom meeting info: ",
    "video_conference_providers_zoom_provider.error.failed_to_get_zoom_meeting_inf": "Failed to get Zoom meeting info: ",
    "video_conference_providers_zoom_provider.error.error_starting_zoom_recording": "Error starting Zoom recording: ",
    "video_conference_providers_zoom_provider.error.error_stopping_zoom_recording": "Error stopping Zoom recording: ",
    "video_conference_providers_zoom_provider.error.error_getting_zoom_recordings": "Error getting Zoom recordings: ",
    "video_conference_providers_zoom_provider.error.error_adding_participants_to_z": "Error adding participants to Zoom meeting: ",
    "video_conference_providers_zoom_provider.error.error_getting_zoom_meeting_par": "Error getting Zoom meeting participants: ",
    "video_conference_providers_zoom_provider.error.failed_to_register_participant": "Failed to register participant ",
    "video_conference_providers_zoom_provider.error.error_sending_zoom_invitations": "Error sending Zoom invitations: ",
    "video_conference_providers_zoom_provider.error.error_getting_zoom_meeting_ana": "Error getting Zoom meeting analytics: ",
    "video_conference_providers_microsoft_teams_provider.error.microsoft_teams_provider_confi": "Microsoft Teams provider configuration is invalid",
    "video_conference_providers_microsoft_teams_provider.error.error_getting_teams_access_tok": "Error getting Teams access token: ",
    "video_conference_providers_microsoft_teams_provider.error.failed_to_authenticate_with_mi": "Failed to authenticate with Microsoft Teams: ",
    "video_conference_providers_microsoft_teams_provider.error.teams_api_request_failed": "Teams API request failed: ",
    "video_conference_providers_microsoft_teams_provider.error.microsoft_teams_api_error": "Microsoft Teams API error: ",
    "video_conference_providers_microsoft_teams_provider.error.error_creating_teams_meeting": "Error creating Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.error.failed_to_create_teams_meeting": "Failed to create Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.error.error_updating_teams_meeting": "Error updating Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.error.error_deleting_teams_meeting": "Error deleting Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.error.error_getting_teams_meeting_in": "Error getting Teams meeting info: ",
    "video_conference_providers_microsoft_teams_provider.error.failed_to_get_teams_meeting_in": "Failed to get Teams meeting info: ",
    "video_conference_providers_microsoft_teams_provider.error.error_starting_teams_recording": "Error starting Teams recording: ",
    "video_conference_providers_microsoft_teams_provider.error.error_stopping_teams_recording": "Error stopping Teams recording: ",
    "video_conference_providers_microsoft_teams_provider.error.error_getting_teams_recordings": "Error getting Teams recordings: ",
    "video_conference_providers_microsoft_teams_provider.error.error_adding_participants_to_t": "Error adding participants to Teams meeting: ",
    "video_conference_providers_microsoft_teams_provider.error.failed_to_send_invitation_to": "Failed to send invitation to ",
    "video_conference_providers_microsoft_teams_provider.error.error_sending_teams_invitation": "Error sending Teams invitations: ",
    "video_conference_providers_microsoft_teams_provider.error.error_getting_teams_meeting_pa": "Error getting Teams meeting participants: ",
    "video_conference_providers_microsoft_teams_provider.error.error_getting_teams_meeting_an": "Error getting Teams meeting analytics: ",
    "v2_auth_service.error.account_locked_due_to_failed_a": "Account locked due to failed attempts: ",
    "v2_auth_service.error.login_error_for": "Login error for ",
    "v2_auth_service.error.registration_error_for": "Registration error for ",
    "v2_auth_service.error.token_refresh_error_for_user": "Token refresh error for user ",
    "v2_auth_service.error.logout_error": "Logout error: ",
    "v2_auth_service.error.change_password_error_for_user": "Change password error for user ",
    "v2_auth_service.error.password_reset_error_for": "Password reset error for ",
    "v2_auth_service.error.failed_to_log_activity": "Failed to log activity: ",
    "v2_user_service.error.error_getting_users": "Error getting users: ",
    "v2_user_service.error.error_getting_user": "Error getting user ",
    "v2_user_service.error.error_getting_user_by_email": "Error getting user by email ",
    "v2_user_service.error.error_creating_user": "Error creating user: ",
    "v2_user_service.error.error_updating_user": "Error updating user ",
    "v2_user_service.error.error_deleting_user": "Error deleting user ",
    "v2_user_service.error.error_activating_user": "Error activating user ",
    "v2_user_service.error.error_deactivating_user": "Error deactivating user ",
    "v2_user_service.error.invalid_role": "Invalid role: ",
    "v2_user_service.error.error_changing_user_role": "Error changing user role: ",
    "v2_user_service.error.error_getting_users_by_role": "Error getting users by role ",
    "v2_beneficiary_service.error.error_getting_beneficiaries": "Error getting beneficiaries: ",
    "v2_beneficiary_service.error.error_getting_beneficiary": "Error getting beneficiary ",
    "v2_beneficiary_service.error.error_creating_beneficiary": "Error creating beneficiary: ",
    "v2_beneficiary_service.error.error_updating_beneficiary": "Error updating beneficiary ",
    "v2_beneficiary_service.error.error_deleting_beneficiary": "Error deleting beneficiary ",
    "v2_beneficiary_service.error.error_searching_beneficiaries": "Error searching beneficiaries: ",
    "v2_beneficiary_service.error.error_getting_beneficiary_prog": "Error getting beneficiary programs: ",
    "v2_beneficiary_service.error.error_getting_beneficiary_eval": "Error getting beneficiary evaluations: ",
    "interfaces_auth_service_interface.error.logout_user_and_invalidate_tok": "Logout user and invalidate token.",
    "ai_human_review_workflow.error.error_creating_review_workflow": "Error creating review workflow: ",
    "ai_human_review_workflow.error.error_starting_review": "Error starting review: ",
    "ai_human_review_workflow.error.invalid_action": "Invalid action: ",
    "ai_human_review_workflow.error.error_completing_review": "Error completing review: ",
    "ai_human_review_workflow.error.error_revising_content": "Error revising content: ",
    "ai_human_review_workflow.error.error_auto_approving_workflow": "Error auto-approving workflow: ",
    "ai_human_review_workflow.error.error_getting_pending_reviews": "Error getting pending reviews: ",
    "ai_human_review_workflow.error.error_getting_review_statistic": "Error getting review statistics: ",
    "ai_human_review_workflow.error.error_integrating_with_ai_serv": "Error integrating with AI services: ",
    "ai_content_recommendations.error.error_generating_content_recom": "Error generating content recommendations: ",
    "ai_content_recommendations.error.error_generating_structure_sug": "Error generating structure suggestions: ",
    "ai_content_recommendations.error.ai_recommendation_generation_f": "AI recommendation generation failed: ",
    "ai_content_recommendations.error.get_fallback_structure_when_ai": "Get fallback structure when AI fails",
    "ai_content_recommendations.error.generate_fallback_recommendati": "Generate fallback recommendations when AI fails",
    "ai_report_synthesis.error.error_generating_report": "Error generating report: ",
    "orchestration_tasks.error.task_failed": "Task failed: ",
    "orchestration_monitoring.error.high_error_rate": "High Error Rate",
    "orchestration_monitoring.error.pipeline_pipeline_has_high_e": "Pipeline {pipeline} has high error rate: {current_value:.2%} (threshold: {threshold:.2%})",
    "orchestration_monitoring.error.critical_error_rate": "Critical Error Rate",
    "orchestration_monitoring.error.pipeline_pipeline_has_critic": "Pipeline {pipeline} has critical error rate: {current_value:.2%} (threshold: {threshold:.2%})",
    "orchestration_monitoring.error.error_in_metric_collection": "Error in metric collection: ",
    "orchestration_monitoring.error.error_in_alert_checking": "Error in alert checking: ",
    "orchestration_monitoring.error.error_in_cleanup": "Error in cleanup: ",
    "orchestration_monitoring.error.error_in_alert_handler": "Error in alert handler: ",
    "orchestration_monitoring.error.error_during_cleanup": "Error during cleanup: ",
    "orchestration_cache.error.error_in_periodic_cleanup": "Error in periodic cleanup: ",
    "orchestration_cache.error.error_updating_stats": "Error updating stats: ",
    "orchestration_cache.error.error_setting_cache_value": "Error setting cache value: ",
    "orchestration_cache.error.error_getting_cache_value": "Error getting cache value: ",
    "orchestration_cache.error.error_deleting_cache_value": "Error deleting cache value: ",
    "orchestration_cache.error.error_deleting_by_tags": "Error deleting by tags: ",
    "orchestration_cache.error.error_clearing_cache": "Error clearing cache: ",
    "orchestration_cache.error.error_during_cleanup": "Error during cleanup: ",
    "orchestration_cache.error.error_during_lru_eviction": "Error during LRU eviction: ",
    "orchestration_cache.error.error_updating_access_stats": "Error updating access stats: ",
    "orchestration_cache.error.error_updating_cache_stats": "Error updating cache stats: ",
    "orchestration_cache.error.error_during_cache_optimizatio": "Error during cache optimization: ",
    "orchestration_cache.error.error_calculating_total_size": "Error calculating total size: ",
    "orchestration_pipeline.error.cannot_remove_task": "Cannot remove task '",
    "orchestration_orchestrator.error.failed": "' failed: ",
    "orchestration_orchestrator.error.pipeline_execution_failed": "Pipeline execution failed: ",
    "orchestration_orchestrator.error.task_execution_failed": "Task execution failed: ",
    "orchestration_orchestrator.error.add_a_callback_for_pipeline_er": "Add a callback for pipeline errors.",
    "orchestration_orchestrator.error.error_in_completion_callback": "Error in completion callback: ",
    "orchestration_orchestrator.error.handle_pipeline_failure": "Handle pipeline failure.",
    "orchestration_orchestrator.error.error_in_error_callback": "Error in error callback: ",
    "orchestration_orchestrator.error.error_in_progress_callback": "Error in progress callback: ",
    "orchestration_versioning.error.failed_to_load_registry": "Failed to load registry: ",
    "orchestration_examples.error.failed_to_register": "  ❌ Failed to register ",
    "orchestration_examples.error.very_high_error_rate": "Very High Error Rate",
    "orchestration_examples.error.critical_pipeline_pipeline": "CRITICAL: Pipeline {pipeline} has very high error rate: {current_value:.2%}",
    "orchestration_examples.error.error_running_example": "❌ Error running example: ",
    "sync_offline_handler.error.error_in_state_change_handler": "Error in state change handler: ",
    "sync_offline_handler.error.connectivity_monitoring_error": "Connectivity monitoring error: ",
    "sync_offline_handler.error.queue_processing_error": "Queue processing error: ",
    "sync_offline_handler.error.error_in_operation_callback": "Error in operation callback: ",
    "sync_offline_handler.error.failed_to_execute_operation": "Failed to execute operation ",
    "sync_offline_handler.error.error_in_operation_error_callb": "Error in operation error callback: ",
    "sync_offline_handler.error.failed_operations": "Failed operations: ",
    "sync_offline_handler.error.cleanup_task_error": "Cleanup task error: ",
    "sync_offline_handler.error.error_saving_queue": "Error saving queue: ",
    "sync_offline_handler.error.error_loading_queue": "Error loading queue: ",
    "sync_conflict_resolver.error.error_resolving_conflict": "Error resolving conflict ",
    "sync_conflict_resolver.error.custom_rule_failed": "Custom rule failed: ",
    "sync_conflict_resolver.error.user_decision_callback_error": "User decision callback error: ",
    "sync_config.error.error_loading_config_file": "Error loading config file ",
    "sync_config.error.invalid_value_for": "Invalid value for ",
    "sync_config.error.invalid_enum_value_for": "Invalid enum value for ",
    "sync_config.error.cannot_create_offline_storage": "Cannot create offline storage path: ",
    "sync_config.error.configuration_validation_error": "Configuration validation errors:\n",
    "sync_config.error.invalid_enum_value_for_1": "Invalid enum value for ",
    "sync_config.error.error_saving_configuration_to": "Error saving configuration to ",
    "sync_version_manager.error.failed": " failed: ",
    "sync_version_manager.error.error_in_change_listener": "Error in change listener: ",
    "sync_event_sourcing.error.event_integrity_verification_f": "Event integrity verification failed for event ",
    "sync_event_sourcing.error.failed_to_append_event": "Failed to append event ",
    "sync_event_sourcing.error.event_handler_error": "Event handler error: ",
    "sync_event_sourcing.error.event_subscriber_error": "Event subscriber error: ",
    "sync_event_sourcing.error.error_replaying_event": "Error replaying event ",
    "sync_event_sourcing.error.projection_handler_error_for": "Projection handler error for ",
    "sync_event_sourcing.error.projection_processing_error": "Projection processing error: ",
    "sync_sync_service.error.failed_to_initialize_sync_serv": "Failed to initialize sync service: ",
    "sync_sync_service.error.failed_to_start_sync_service": "Failed to start sync service: ",
    "sync_sync_service.error.error_stopping_sync_service": "Error stopping sync service: ",
    "sync_sync_service.error.error_processing_sync_request": "Error processing sync request ",
    "sync_sync_service.error.error_handling_websocket_sync": "Error handling WebSocket sync request: ",
    "sync_sync_service.error.health_monitor_error": "Health monitor error: ",
    "sync_sync_service.error.metrics_collector_error": "Metrics collector error: ",
    "sync_utils.error.failed_retrying_in": " failed, retrying in ",
    "sync_exceptions.error.custom_exceptions_for_synchro": "\nCustom Exceptions for Synchronization System\n\nDefines specific exceptions for different synchronization scenarios:\n- Connection and network related errors\n- Conflict resolution failures\n- Version management issues\n- Event sourcing problems\n- Device synchronization errors\n",
    "sync_exceptions.error.base_exception_for_all_synchro": "Base exception for all synchronization errors",
    "sync_exceptions.error.authentication_and_authorizati": "Authentication and authorization failures",
    "sync_exceptions.error.conflict_resolution_failures": "Conflict resolution failures",
    "sync_exceptions.error.version_management_errors": "Version management errors",
    "sync_exceptions.error.event_sourcing_related_errors": "Event sourcing related errors",
    "sync_exceptions.error.device_synchronization_errors": "Device synchronization errors",
    "sync_exceptions.error.offline_operation_errors": "Offline operation errors",
    "sync_exceptions.error.configuration_related_errors": "Configuration related errors",
    "sync_exceptions.error.storage_backend_errors": "Storage backend errors",
    "sync_exceptions.error.data_validation_errors": "Data validation errors",
    "sync_exceptions.error.rate_limiting_errors": "Rate limiting errors",
    "sync_exceptions.error.timeout_related_errors": "Timeout related errors",
    "sync_device_sync.error.sync_scheduler_error": "Sync scheduler error: ",
    "sync_device_sync.error.failed_to_sync_to_device": "Failed to sync to device ",
    "sync_device_sync.error.error_executing_sync_operation": "Error executing sync operation ",
    "sync_device_sync.error.failed_to_send_sync_message_to": "Failed to send sync message to device ",
    "sync_device_sync.error.device_monitor_error": "Device monitor error: ",
    "sync_websocket_manager.error.error_handling_connection": "Error handling connection ",
    "sync_websocket_manager.error.connection_lifecycle_error_for": "Connection lifecycle error for ",
    "sync_websocket_manager.error.invalid_json_format": "Invalid JSON format",
    "sync_websocket_manager.error.message_processing_error": "Message processing error",
    "sync_websocket_manager.error.invalid_token_for_connection": "Invalid token for connection ",
    "sync_websocket_manager.error.invalid_authentication_token": "Invalid authentication token",
    "sync_websocket_manager.error.authentication_error_for": "Authentication error for ",
    "sync_websocket_manager.error.authentication_failed": "Authentication failed",
    "sync_websocket_manager.error.error_sending_message_to": "Error sending message to ",
    "sync_websocket_manager.error.send_error_message_to_connecti": "Send error message to connection",
    "sync_websocket_manager.error.heartbeat_monitor_error": "Heartbeat monitor error: ",
    "sync_websocket_manager.error.cleanup_task_error": "Cleanup task error: ",
    "i18n_language_detection_service.error.error_in_detect_best_language": "Error in detect_best_language: ",
    "i18n_i18n_manager.error.error_getting_active_languages": "Error getting active languages: ",
    "i18n_i18n_manager.error.error_creating_language": "Error creating language: ",
    "i18n_i18n_manager.error.error_updating_language": "Error updating language: ",
    "i18n_i18n_manager.error.error_creating_multilingual_co": "Error creating multilingual content: ",
    "i18n_i18n_manager.error.error_getting_multilingual_con": "Error getting multilingual content: ",
    "i18n_i18n_manager.error.error_translating_field": "Error translating field ",
    "i18n_i18n_manager.error.error_translating_entity_conte": "Error translating entity content: ",
    "i18n_i18n_manager.error.error_getting_user_language_pr": "Error getting user language preferences: ",
    "i18n_i18n_manager.error.error_updating_user_language_p": "Error updating user language preferences: ",
    "i18n_i18n_manager.error.error_detecting_user_language": "Error detecting user language: ",
    "i18n_i18n_manager.error.error_creating_translation_pro": "Error creating translation project: ",
    "i18n_i18n_manager.error.error_calculating_project_scop": "Error calculating project scope: ",
    "i18n_i18n_manager.error.error_getting_translation_proj": "Error getting translation project status: ",
    "i18n_i18n_manager.error.error_getting_translation_anal": "Error getting translation analytics: ",
    "i18n_i18n_manager.error.error_getting_language_coverag": "Error getting language coverage report: ",
    "i18n_i18n_manager.error.error_cleaning_up_old_translat": "Error cleaning up old translations: ",
    "i18n_i18n_manager.error.error_exporting_language_data": "Error exporting language data: ",
    "i18n_translation_service.error.error_loading_translations": "Error loading translations: ",
    "i18n_translation_service.error.error_loading_translation_file": "Error loading translation file for ",
    "i18n_translation_service.error.error_creating_default_transla": "Error creating default translation file for ",
    "i18n_translation_service.error.error": "Error",
    "i18n_translation_service.error.login_failed": "Login failed",
    "i18n_translation_service.error.invalid_credentials": "Invalid credentials",
    "i18n_translation_service.error.operation_failed": "Operation failed",
    "i18n_translation_service.error.invalid_input": "Invalid input",
    "i18n_translation_service.error.invalid_email_address": "Invalid email address",
    "i18n_translation_service.error.invalid_file_type": "Invalid file type",
    "i18n_translation_service.error.network_error_occurred": "Network error occurred",
    "i18n_translation_service.error.server_error_occurred": "Server error occurred",
    "i18n_translation_service.error.validation_error": "Validation error",
    "i18n_translation_service.error.unknown_error_occurred": "Unknown error occurred",
    "i18n_translation_service.error.error_1": "Error",
    "i18n_translation_service.error.error_formatting_translation": "Error formatting translation ",
    "i18n_translation_service.error.error_translating_key": "Error translating key ",
    "i18n_translation_service.error.error_getting_translation_dict": "Error getting translation dict for ",
    "i18n_translation_service.error.error_updating_translation": "Error updating translation ",
    "i18n_translation_service.error.error_saving_translation_file": "Error saving translation file for ",
    "i18n_translation_service.error.error_getting_missing_translat": "Error getting missing translations: ",
    "i18n_translation_service.error.error_calculating_translation": "Error calculating translation coverage: ",
    "i18n_locale_service.error.error_getting_locale_for": "Error getting locale for ",
    "i18n_locale_service.error.error_formatting_date": "Error formatting date: ",
    "i18n_locale_service.error.error_formatting_datetime": "Error formatting datetime: ",
    "i18n_locale_service.error.error_formatting_time": "Error formatting time: ",
    "i18n_locale_service.error.error_formatting_currency": "Error formatting currency: ",
    "i18n_locale_service.error.error_formatting_number": "Error formatting number: ",
    "i18n_locale_service.error.error_formatting_percent": "Error formatting percent: ",
    "i18n_locale_service.error.error_formatting_relative_time": "Error formatting relative time: ",
    "i18n_locale_service.error.error_getting_weekday_names": "Error getting weekday names: ",
    "i18n_locale_service.error.error_getting_month_names": "Error getting month names: ",
    "i18n_locale_service.error.error_getting_locale_info": "Error getting locale info: ",
    "i18n_locale_service.error.error_getting_first_day_of_wee": "Error getting first day of week: ",
    "i18n_locale_service.error.error_parsing_date": "Error parsing date: ",
    "i18n_locale_service.error.error_getting_calendar_data": "Error getting calendar data: ",
    "i18n_content_translation_service.error.error_translating_content": "Error translating content: ",
    "i18n_content_translation_service.error.error_in_ai_translation": "Error in AI translation: ",
    "i18n_content_translation_service.error.error_calculating_ai_confidenc": "Error calculating AI confidence: ",
    "i18n_content_translation_service.error.error_checking_translation_mem": "Error checking translation memory: ",
    "i18n_content_translation_service.error.error_calculating_text_similar": "Error calculating text similarity: ",
    "i18n_content_translation_service.error.error_storing_in_translation_m": "Error storing in translation memory: ",
    "i18n_content_translation_service.error.error_storing_content_translat": "Error storing content translation: ",
    "i18n_content_translation_service.error.error_getting_content_translat": "Error getting content translations: ",
    "i18n_content_translation_service.error.error_getting_translation_stat": "Error getting translation stats: ",
    "i18n_content_translation_service.error.failed_to_store_translation_fo": "Failed to store translation for ",
    "i18n_content_translation_service.error.error_translating": "Error translating ",
    "i18n_content_translation_service.error.error_in_bulk_translate": "Error in bulk translate: ",
    "analytics_real_time_dashboard.error.error_in_real_time_monitoring": "Error in real-time monitoring: ",
    "analytics_real_time_dashboard.error.error_rate": "Error Rate (%)",
    "analytics_performance_metrics.error.error_getting_performance_dash": "Error getting performance dashboard: ",
    "analytics_performance_metrics.error.error_getting_business_metrics": "Error getting business metrics: ",
    "analytics_performance_metrics.error.error_getting_operational_metr": "Error getting operational metrics: ",
    "analytics_performance_metrics.error.error_rate": "Error Rate",
    "analytics_performance_metrics.error.error_getting_technical_metric": "Error getting technical metrics: ",
    "analytics_performance_metrics.error.error_getting_user_experience": "Error getting user experience metrics: ",
    "analytics_performance_metrics.error.error_rate_1": "Error Rate",
    "analytics_performance_metrics.error.error_getting_metric_history": "Error getting metric history: ",
    "analytics_performance_metrics.error.error_getting_comparative_anal": "Error getting comparative analysis: ",
    "analytics_performance_metrics.error.error_exporting_metrics_report": "Error exporting metrics report: ",
    "analytics_user_behavior_analytics.error.error_performing_cohort_analys": "Error performing cohort analysis: ",
    "analytics_user_behavior_analytics.error.error_analyzing_user_journeys": "Error analyzing user journeys: ",
    "analytics_user_behavior_analytics.error.error_calculating_engagement_m": "Error calculating engagement metrics: ",
    "analytics_user_behavior_analytics.error.cannot_lose_them": "Cannot Lose Them",
    "analytics_user_behavior_analytics.error.error_segmenting_users_by_beha": "Error segmenting users by behavior: ",
    "analytics_user_behavior_analytics.error.error_analyzing_feature_usage": "Error analyzing feature usage: ",
    "analytics_user_behavior_analytics.error.error_calculating_feature_corr": "Error calculating feature correlation: ",
    "analytics_user_behavior_analytics.error.error_identifying_usage_patter": "Error identifying usage patterns: ",
    "analytics_user_behavior_analytics.error.error_analyzing_temporal_patte": "Error analyzing temporal patterns: ",
    "analytics_user_behavior_analytics.error.error_analyzing_sequence_patte": "Error analyzing sequence patterns: ",
    "analytics_user_behavior_analytics.error.error_analyzing_session_patter": "Error analyzing session patterns: ",
    "analytics_user_behavior_analytics.error.cannot_lose_them_1": "Cannot Lose Them",
    "analytics_user_behavior_analytics.error.error_getting_user_behavior_su": "Error getting user behavior summary: ",
    "analytics_data_export.error.error_during_data_export": "Error during data export: ",
    "analytics_data_export.error.error_collecting_data": "Error collecting data: ",
    "analytics_data_export.error.error_applying_filters": "Error applying filters: ",
    "analytics_data_export.error.error_converting_to_dataframe": "Error converting to DataFrame: ",
    "analytics_data_export.error.error_optimizing_dataframe": "Error optimizing DataFrame: ",
    "analytics_data_export.error.error_preparing_data_for_expor": "Error preparing data for export: ",
    "analytics_data_export.error.error_cleaning_dataframe": "Error cleaning DataFrame: ",
    "analytics_data_export.error.error_applying_transformations": "Error applying transformations: ",
    "analytics_data_export.error.error_exporting_to_format": "Error exporting to format: ",
    "analytics_data_export.error.error_creating_visualization": "Error creating visualization: ",
    "analytics_data_export.error.error_deleting_export": "Error deleting export: ",
    "analytics_report_generator.error.error_generating_report": "Error generating report: ",
    "analytics_report_generator.error.error_generating_executive_sum": "Error generating executive summary: ",
    "analytics_report_generator.error.error_generating_operational_a": "Error generating operational analytics: ",
    "analytics_report_generator.error.error_generating_user_behavior": "Error generating user behavior report: ",
    "analytics_report_generator.error.error_generating_performance_m": "Error generating performance metrics report: ",
    "analytics_report_generator.error.error_generating_custom_report": "Error generating custom report: ",
    "analytics_report_generator.error.error_generating_section_conte": "Error generating section content: ",
    "analytics_report_generator.error.error_generating_automated_ins": "Error generating automated insights: ",
    "analytics_report_generator.error.unable_to_generate_insights_du": "Unable to generate insights due to processing error",
    "analytics_report_generator.error.error_exporting_report": "Error exporting report: ",
    "analytics_examples.error.errors_encountered": "⚠️  Errors encountered: ",
    "analytics_examples.error.example_error_handling_and_re": "Example: Error handling and recovery",
    "analytics_examples.error.error_handling_example": "\n=== Error Handling Example ===",
    "analytics_examples.error.testing_error_handling": "Testing error handling...",
    "analytics_examples.error.cohort_analysis_failed_gra": "⚠️  Cohort analysis failed gracefully: ",
    "analytics_examples.error.prediction_failed_graceful": "⚠️  Prediction failed gracefully: ",
    "analytics_examples.error.example_failed": "❌ Example failed: ",
    "analytics_analytics_orchestrator.error.error_starting_orchestrator": "Error starting orchestrator: ",
    "analytics_analytics_orchestrator.error.error_initializing_services": "Error initializing services: ",
    "analytics_analytics_orchestrator.error.error_starting_scheduled_workf": "Error starting scheduled workflows: ",
    "analytics_analytics_orchestrator.error.error_in_continuous_monitoring": "Error in continuous monitoring: ",
    "analytics_analytics_orchestrator.error.error_in_component": "Error in component ",
    "analytics_analytics_orchestrator.error.error_executing_workflow": "Error executing workflow: ",
    "analytics_analytics_orchestrator.error.error_executing_component": "Error executing component ",
    "analytics_analytics_orchestrator.error.error_generating_workflow_insi": "Error generating workflow insights: ",
    "analytics_analytics_orchestrator.error.error_checking_system_alerts": "Error checking system alerts: ",
    "analytics_analytics_orchestrator.error.error_handling_alerts": "Error handling alerts: ",
    "analytics_analytics_orchestrator.error.error_in_continuous_workflow": "Error in continuous workflow ",
    "analytics_analytics_orchestrator.error.error_in_scheduled_workflow": "Error in scheduled workflow ",
    "analytics_analytics_orchestrator.error.error_getting_analytics_summar": "Error getting analytics summary: ",
    "analytics_analytics_orchestrator.error.error_creating_custom_workflow": "Error creating custom workflow: ",
    "analytics_predictive_analytics.error.error_initializing_models": "Error initializing models: ",
    "analytics_predictive_analytics.error.error_training_appointment_no": "Error training appointment no-show model: ",
    "analytics_predictive_analytics.error.error_training_user_churn_mode": "Error training user churn model: ",
    "analytics_predictive_analytics.error.error_training_evaluation_outc": "Error training evaluation outcome model: ",
    "analytics_predictive_analytics.error.error_training_engagement_pred": "Error training engagement prediction model: ",
    "analytics_predictive_analytics.error.error_training_capacity_foreca": "Error training capacity forecasting model: ",
    "analytics_predictive_analytics.error.error_predicting_appointment_n": "Error predicting appointment no-show: ",
    "analytics_predictive_analytics.error.error_predicting_user_churn": "Error predicting user churn: ",
    "analytics_predictive_analytics.error.error_predicting_evaluation_ou": "Error predicting evaluation outcome: ",
    "analytics_predictive_analytics.error.error_forecasting_capacity_nee": "Error forecasting capacity needs: ",
    "interfaces_calendar_service_interface.error.create_a_new_appointment": "Create a new appointment.\n        \n        Args:\n            title: Appointment title\n            start_time: Start time\n            end_time: End time\n            trainer_id: Trainer ID\n            beneficiary_id: Beneficiary ID\n            student_id: Student ID\n            **kwargs: Additional appointment data\n            \n        Returns:\n            Created appointment data or None if failed\n        ",
    "interfaces_program_service_interface.error.create_a_new_program": "Create a new program.\n        \n        Args:\n            name: Program name\n            description: Program description\n            trainer_id: Trainer ID\n            tenant_id: Tenant ID\n            **kwargs: Additional program data\n            \n        Returns:\n            Created program data or None if failed\n        ",
    "interfaces_auth_service_interface.error.authenticate_user_and": "\n        Authenticate user and return tokens.\n        \n        Args:\n            email: User's email\n            password: User's password\n            \n        Returns:\n            Dictionary with access_token, refresh_token, and expires_in\n            or None if authentication fails\n        ",
    "interfaces_auth_service_interface.error.register_a_new_user": "\n        Register a new user.\n        \n        Args:\n            email: User's email\n            password: User's password\n            **kwargs: Additional user attributes\n            \n        Returns:\n            Newly created User instance\n            \n        Raises:\n            ValueError: If email already exists\n        ",
    "interfaces_auth_service_interface.error.logout_user_and_inval": "\n        Logout user and invalidate token.\n        \n        Args:\n            user_id: ID of the user\n            token: JWT token to invalidate\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_auth_service_interface.error.refresh_access_token": "\n        Refresh access token using refresh token.\n        \n        Args:\n            refresh_token: Valid refresh token\n            \n        Returns:\n            Dictionary with new access_token and expires_in\n            or None if refresh token is invalid\n        ",
    "interfaces_sms_service_interface.error.send_sms_to_multiple": "\n        Send SMS to multiple recipients.\n        \n        Returns:\n            Dict with success count, failed count, and details\n        ",
    "interfaces_evaluation_service_interface.error.create_a_new_evaluation": "Create a new evaluation.\n        \n        Args:\n            beneficiary_id: Beneficiary ID\n            test_id: Test ID\n            trainer_id: Trainer ID\n            creator_id: Creator ID\n            tenant_id: Tenant ID\n            **kwargs: Additional evaluation data\n            \n        Returns:\n            Created evaluation data or None if failed\n        ",
    "interfaces_evaluation_service_interface.error.calculate_evaluation_score": "Calculate evaluation score.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            \n        Returns:\n            Calculated score or None if failed\n        "
  },
  "success": {
    "realtime.success.emit_event_when_a_program_is_c": "Emit event when a program is created.",
    "realtime.success.emit_event_when_a_module_is_cr": "Emit event when a module is created.",
    "realtime.success.emit_event_when_an_enrollment": "Emit event when an enrollment is created.",
    "realtime.success.emit_event_when_a_notification": "Emit event when a notification is created.",
    "__init__.success.i18n_middleware_initializati": "✅ I18n middleware initialization completed successfully!",
    "__init__.success.performance_optimization_ini": "✅ Performance optimization initialization completed successfully!",
    "__init__.success.database_optimization_comple": "✅ Database optimization completed: ",
    "__init__.success.performance_report_generated": "✅ Performance report generated successfully",
    "__init__.success.bdc_application_created_succ": "🎉 BDC Application created successfully with comprehensive performance optimization!",
    "cli.success.test_data_created_successful": "✅ Test data created successfully.",
    "cli.success.successful": " successful, ",
    "cli.success.all_migrations_completed_suc": "✅ All migrations completed successfully.",
    "socketio_events.success.connected_successfully": ") connected successfully",
    "socketio_events.success.connected_successfully_1": "Connected successfully",
    "middleware_tracing_middleware.success.request_completed": "Request completed: ",
    "validation_example_usage.success.registration_successful": "Registration successful",
    "validation_example_usage.success.beneficiary_created_successful": "Beneficiary created successfully",
    "validation_example_usage.success.appointment_scheduled_successf": "Appointment scheduled successfully",
    "validation_example_usage.success.document_uploaded_successfully": "Document uploaded successfully",
    "validation_example_usage.success.successfully_enrolled_in_progr": "Successfully enrolled in program",
    "validation_business_validators.success.beneficiary_has_not_completed": "Beneficiary has not completed required prerequisites",
    "tasks_maintenance.success.database_optimization_complete": "Database optimization completed for ",
    "tasks_maintenance.success.storage_check_complete": "Storage check complete: ",
    "tasks_evaluations.success.is_overdue_please_complete": "\" is overdue. Please complete it as soon as possible.",
    "tasks_evaluations.success.process_ai_analysis_for_a_comp": "Process AI analysis for a completed evaluation session.",
    "tasks_evaluations.success.ai_analysis_complete": "AI Analysis Complete",
    "tasks_evaluations.success.ai_analysis_completed_for_sess": "AI analysis completed for session ",
    "tasks_email.success.bulk_email_complete": "Bulk email complete: ",
    "tasks_email.success.send_email_when_evaluation_is": "Send email when evaluation is completed.",
    "tasks_email.success.evaluation_complete_emails_sen": "Evaluation complete emails sent for session ",
    "core_app_factory.success.application_created_successful": "Application created successfully",
    "core_app_factory.success.logging_configured_successfull": "Logging configured successfully",
    "core_app_factory.success.blueprints_registered_successf": "Blueprints registered successfully",
    "core_app_factory.success.middleware_registered_successf": "Middleware registered successfully",
    "core_app_factory.success.cli_commands_registered_succes": "CLI commands registered successfully",
    "core_app_factory.success.cors_test_successful": "CORS test successful",
    "core_app_factory.success.advanced_health_check_endpoint": "Advanced health check endpoints created",
    "core_app_factory.success.database_tables_created_succes": "Database tables created successfully",
    "core_query_cache.success.cache_warming_completed": "Cache warming completed",
    "core_config_manager.success.created_upload_folder": "Created upload folder: ",
    "core_extension_manager.success.initialize_the_extension": "Initialize the extension.\n        \n        Args:\n            app: Flask application instance\n            \n        Returns:\n            True if initialization was successful\n        ",
    "core_extension_manager.success.database_extensions_initialize": "Database extensions initialized successfully",
    "core_extension_manager.success.authentication_extensions_init": "Authentication extensions initialized successfully",
    "core_extension_manager.success.cors_extensions_initialized_su": "CORS extensions initialized successfully",
    "core_extension_manager.success.caching_extensions_initialized": "Caching extensions initialized successfully",
    "core_extension_manager.success.mail_extensions_initialized_su": "Mail extensions initialized successfully",
    "core_extension_manager.success.rate_limiting_extensions_initi": "Rate limiting extensions initialized successfully",
    "core_extension_manager.success.socketio_extensions_initialize": "SocketIO extensions initialized successfully",
    "core_extension_manager.success.initialize_all_extensions_in_d": "Initialize all extensions in dependency order.\n        \n        Args:\n            app: Flask application instance\n            \n        Returns:\n            True if all extensions were initialized successfully\n        ",
    "core_extension_manager.success.successfully_initialized_exten": "Successfully initialized extension: ",
    "core_extension_manager.success.all_extensions_initialized_suc": "All extensions initialized successfully",
    "core_extension_manager.success.get_list_of_successfully_initi": "Get list of successfully initialized extensions.",
    "core_performance_init.success.initial_performance_optimiza": "✅ Initial performance optimizations completed",
    "core_performance_init.success.performance_optimization_ini": "🎉 Performance optimization initialization completed!",
    "core_performance_init.success.critical_caches_warmed_success": "Critical caches warmed successfully",
    "core_database_manager.success.initialize_database_with_optio": "Initialize database with optional test data creation.\n        \n        Args:\n            app: Flask application instance\n            create_tables: Whether to create database tables\n            create_test_data: Whether to create test users and data\n            \n        Returns:\n            True if initialization was successful\n        ",
    "core_database_manager.success.database_initialized_successfu": "Database initialized successfully",
    "core_database_manager.success.database_tables_created": "Database tables created",
    "core_database_manager.success.test_data_created_successfully": "Test data created successfully",
    "core_database_manager.success.created_default_tenant": "Created default tenant",
    "core_database_manager.success.created_user": "Created user: ",
    "core_database_manager.success.default_tenant_created_success": "Default tenant created successfully",
    "core_database_manager.success.default_tenant_removed_success": "Default tenant removed successfully",
    "core_database_manager.success.admin_user_created_successfull": "Admin user created successfully",
    "core_database_manager.success.admin_user_removed_successfull": "Admin user removed successfully",
    "core_database_manager.success.completed": " completed: ",
    "core_database_manager.success.successful": " successful, ",
    "core_database_performance.success.completed_in": "' completed in ",
    "core_celery_optimizer.success.process_a_complete_batch": "Process a complete batch",
    "core_celery_optimizer.success.task_completed": "Task completed: ",
    "core_tenant_isolation.success.comprehensive_tenant_isolatio": "\nComprehensive Tenant Isolation System for BDC Project\n\nThis module provides a complete tenant isolation framework including:\n- TenantMixin for all models\n- Automatic tenant filtering in all queries\n- Tenant context management\n- Request-level tenant validation\n",
    "core_tenant_isolation.success.bulk_create_instances": "\n        Bulk create instances for a tenant.\n        \n        Args:\n            tenant_id: Tenant ID or None for current tenant\n            instances: List of instance dictionaries\n            \n        Returns:\n            List of created instances\n        ",
    "core_initialization.success.created_default_tenant": "Created default tenant",
    "core_initialization.success.created_user": "Created user: ",
    "core_memory_optimizer.success.memory_optimization_completed": "Memory optimization completed",
    "core_tenant_isolation_example.success.created": "Created ",
    "core_tenant_isolation_example.success.tenant_switched_successfully": "Tenant switched successfully",
    "error_handling_user_messages.success.your_data_has_been_saved_and_w": "Your data has been saved and will be available after you log in",
    "error_handling_config.success.circuit_breaker_success_thresh": "Circuit breaker success_threshold must be positive",
    "error_handling_error_recovery.success.recovery_successful_with_handl": "Recovery successful with handler: ",
    "error_handling_circuit_breaker.success.closed_after_successful_reco": "' closed after successful recovery",
    "error_handling_circuit_breaker.success.record_a_successful_operation": "Record a successful operation.",
    "error_handling_circuit_breaker.success.successful_call_in": "' successful call in ",
    "error_handling_circuit_breaker.success.created_circuit_breaker": "Created circuit breaker: ",
    "error_handling_examples.success.operation_completed": "operation completed",
    "error_handling_examples.success.success_rate": "Success rate: ",
    "error_handling_examples.success.success": "Success: ",
    "error_handling_examples.success.success_1": "Success: ",
    "error_handling_examples.success.testing_cache_fallback_after": "\nTesting cache fallback (after initial success):",
    "error_handling_examples.success.all_examples_completed_succe": "✅ All examples completed successfully!",
    "security_audit_logger.success.completed_operation": "Completed operation: ",
    "utils_content_processing.success.create_success_result": "Create success result.",
    "utils_pdf_generator.success.evaluations_completed": " evaluations completed",
    "utils_backup_manager.success.database_backup_created": "Database backup created: ",
    "utils_backup_manager.success.files_backup_created": "Files backup created: ",
    "utils_backup_manager.success.full_backup_completed_successf": "Full backup completed successfully",
    "utils_backup_manager.success.database_restored_successfully": "Database restored successfully",
    "utils_notifications.success.email_sent_successfully_to": "Email sent successfully to ",
    "utils_notifications.success.slack_message_sent_successfull": "Slack message sent successfully",
    "utils_notifications.success.sms_sent_successfully_to": "SMS sent successfully to ",
    "utils_sentry.success.sentry_initialized_successfull": "Sentry initialized successfully",
    "utils_adaptive_test_setup.success.session_completed": "\nSession completed!",
    "database_backup.success.backup_created": "Backup created: ",
    "database_backup.success.backup_created_1": "Backup created: ",
    "database_optimization.success.create_index_if_not_exists_idx": "CREATE INDEX IF NOT EXISTS idx_evaluations_created_at ON evaluations(created_at)",
    "database_optimization.success.create_index_if_not_exists_idx_1": "CREATE INDEX IF NOT EXISTS idx_documents_created_at ON documents(created_at)",
    "database_optimization.success.created_index": "Created index: ",
    "database_optimization.success.created_partitioned_tables": "Created partitioned tables",
    "database_optimization.success.created_materialized_view": "Created materialized view",
    "database_migrations.success.created_migration": "Created migration: ",
    "database_migrations.success.migrations_completed_successfu": "Migrations completed successfully",
    "database_migrations.success.created_backup": "Created backup: ",
    "monitoring_alarm_system.success.slack_notification_sent_succes": "Slack notification sent successfully",
    "monitoring_app_monitoring.success.request_completed": "Request completed: ",
    "monitoring_app_monitoring.success.completed_in": " completed in ",
    "interfaces_evaluation_repository_interface.success.find_completed_evaluations_op": "Find completed evaluations, optionally filtered by beneficiary.",
    "interfaces_evaluation_repository_interface.success.add_feedback_to_evaluation": "Add feedback to evaluation.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            feedback: Feedback text\n            strengths: Strengths text\n            weaknesses: Weaknesses text\n            recommendations: Recommendations text\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_calendar_repository_interface.success.reschedule_appointment": "Reschedule appointment.\n        \n        Args:\n            appointment_id: Appointment ID\n            new_start_time: New start time\n            new_end_time: New end time\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_calendar_repository_interface.success.cancel_appointment": "Cancel appointment.\n        \n        Args:\n            appointment_id: Appointment ID\n            reason: Cancellation reason\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_program_repository_interface.success.enroll_beneficiary_in_program": "Enroll beneficiary in program.\n        \n        Args:\n            program_id: Program ID\n            beneficiary_id: Beneficiary ID\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_appointment_repository_interface.success.create_a_new_appointm": "\n        Create a new appointment.\n        \n        Args:\n            appointment_data: Dict containing appointment details\n            \n        Returns:\n            Created appointment object\n        ",
    "models_beneficiary.success.get_completed_evaluation_count": "Get completed evaluation count.",
    "models_evaluation.success.mark_evaluation_as_completed": "Mark evaluation as completed.",
    "cli_i18n_commands.success.created_language": "  ✨ Created language: ",
    "cli_i18n_commands.success.language_initialization_com": "\n🎉 Language initialization completed!",
    "cli_i18n_commands.success.created": "   Created: ",
    "cli_i18n_commands.success.language_import_completed_fo": "🎉 Language import completed for ",
    "cli_i18n_commands.success.complete_entities": "   Complete entities: ",
    "cli_i18n_commands.success.cleanup_completed": "✅ Cleanup completed:",
    "cli_i18n_commands.success.translation_completed": "✅ Translation completed:",
    "cli_i18n_commands.success.success": "   Success: ",
    "cli_i18n_commands.success.created_1": "   Created ",
    "schemas_adaptive_test.success.calculate_success_rate": "Calculate success rate.",
    "schemas_gamification.success.schema_for_success_responses": "Schema for success responses.",
    "integrations_config.success.saved": "Saved ",
    "integrations_registry.success.created_integration_instance": "Created integration instance: ",
    "integrations_registry.success.list_all_created_integration_i": "List all created integration instances.",
    "integrations_examples.success.created_event": "Created event: ",
    "integrations_examples.success.created_customer": "Created customer: ",
    "integrations_examples.success.created_payment_intent": "Created payment intent: ",
    "integrations_examples.success.created_meeting": "Created meeting: ",
    "integrations_examples.success.created_instant_meeting": "Created instant meeting: ",
    "integrations_examples.success.created_recurring_meeting": "Created recurring meeting: ",
    "integrations_examples.success.created_email_template_id": "Created email template (ID: ",
    "integrations_examples.success.created": "Created ",
    "integrations_examples.success.successfully_created": "Successfully created ",
    "integrations_examples.success.examples_completed": "Examples completed!",
    "integrations_testing.success.calculate_success_rate": "Calculate success rate.",
    "integrations_testing.success.test_passed_successfully": "Test passed successfully",
    "integrations_testing.success.no_integrations_could_be_creat": "No integrations could be created",
    "integrations_testing.success.success_rate": "  Success Rate: ",
    "integrations_testing.success.success_rate_1": "  Success Rate: ",
    "payments_base_payment.success.represents_a_completed_transac": "Represents a completed transaction.",
    "calendar_outlook_calendar.success.createddatetime": "createdDateTime",
    "calendar_outlook_calendar.success.createddatetime_1": "createdDateTime",
    "api_auth.success.user_registered_successfully": "User registered successfully",
    "api_auth.success.successfully_logged_out": "Successfully logged out",
    "api_auth.success.password_changed_successfully": "Password changed successfully",
    "api_auth.success.password_reset_successfully": "Password reset successfully",
    "api_gamification_v2.success.success": "Success",
    "api_gamification_v2.success.create_standardized_success_re": "Create standardized success response",
    "api_gamification_v2.success.xp_awarded_successfully": "XP awarded successfully",
    "api_gamification_v2.success.badge_created_successfully": "Badge created successfully",
    "api_gamification_v2.success.badge_awarded_successfully": "Badge awarded successfully",
    "api_gamification_v2.success.achievement_created_successful": "Achievement created successfully",
    "api_gamification_v2.success.leaderboard_created_successful": "Leaderboard created successfully",
    "api_gamification_v2.success.team_created_successfully": "Team created successfully",
    "api_gamification_v2.success.joined_team_successfully": "Joined team successfully",
    "api_gamification_v2.success.learning_path_created_successf": "Learning path created successfully",
    "api_settings_routes.success.successfully_connected_to": "Successfully connected to ",
    "api_portal.success.completed": "Completed ",
    "api_portal.success.successfully_completed_the": "Successfully completed the ",
    "api_portal.success.get_student_s_complete_profile": "Get student's complete profile information.",
    "api_users.success.profile_picture_uploaded_succe": "Profile picture uploaded successfully",
    "api_users.success.user_created_successfully": "User created successfully",
    "api_users.success.user_deactivated_successfully": "User deactivated successfully",
    "api_health.success.database_connection_successful": "Database connection successful",
    "api_health.success.redis_connection_successful": "Redis connection successful",
    "api_beneficiaries_dashboard.success.complete_javascript_course": "Complete JavaScript Course",
    "api_beneficiaries_dashboard.success.completed_html_css_module": "Completed HTML/CSS Module",
    "api_webrtc.success.webrtc_room_created_successful": "WebRTC room created successfully",
    "api_documents.success.document_shared_successfully": "Document shared successfully",
    "api_documents.success.document_uploaded_successfully": "Document uploaded successfully",
    "api_documents.success.permission_granted_successfull": "Permission granted successfully",
    "api_documents.success.permission_revoked_successfull": "Permission revoked successfully",
    "api_documents.success.new_version_created_successful": "New version created successfully",
    "api_documents.success.version_restored_successfully": "Version restored successfully",
    "api_documents.success.versions_compared_successfully": "Versions compared successfully",
    "api_documents.success.versioning_enabled_successfull": "Versioning enabled successfully",
    "api_profile.success.avatar_uploaded_successfully": "Avatar uploaded successfully",
    "api_appointments.success.google_calendar_disconnected_s": "Google Calendar disconnected successfully",
    "api_video_conferences.success.video_conference_created_succe": "Video conference created successfully",
    "api_video_conferences.success.video_conference_cancelled_suc": "Video conference cancelled successfully",
    "api_video_conferences.success.video_conference_ended_success": "Video conference ended successfully",
    "api_video_conferences.success.participant_added_successfully": "Participant added successfully",
    "api_video_conferences.success.invitation_sent_successfully": "Invitation sent successfully",
    "api_video_conferences.success.recording_started_successfully": "Recording started successfully",
    "api_video_conferences.success.recording_stopped_successfully": "Recording stopped successfully",
    "api_performance_predictions.success.score_prediction_model_trained": "Score prediction model trained successfully",
    "api_performance_predictions.success.attendance_model_trained_succe": "Attendance model trained successfully",
    "api_evaluations.success.evaluation_submitted_successfu": "Evaluation submitted successfully",
    "api_evaluations.success.no_completed_evaluation_sessio": "No completed evaluation session found",
    "api_evaluations.success.analysis_completed_successfull": "Analysis completed successfully",
    "api_performance_monitoring.success.cache_cleared_successfully": "Cache cleared successfully",
    "api_performance_monitoring.success.database_connection_successful": "Database connection successful",
    "api_performance_monitoring.success.cache_connection_successful": "Cache connection successful",
    "api_calendar.success.appointment_created_successful": "Appointment created successfully",
    "api_programs.success.has_been_created": "\" has been created",
    "api_chat.success.conversation_closed_successful": "Conversation closed successfully",
    "api_chat.success.template_created_successfully": "Template created successfully",
    "api_recurring_appointments.success.recurring_appointment_series_c": "Recurring appointment series created successfully",
    "api_recurring_appointments.success.exception_added_successfully": "Exception added successfully",
    "api_recurring_appointments.success.exception_removed_successfully": "Exception removed successfully",
    "api_recurring_appointments.success.successfully_cancelled": "Successfully cancelled ",
    "api_recurring_appointments.success.successfully_generated": "Successfully generated ",
    "api_two_factor_auth.success.2fa_verification_successful": "2FA verification successful",
    "api_two_factor_auth.success.backup_codes_regenerated_succe": "Backup codes regenerated successfully",
    "api_settings_general.success.logo_uploaded_successfully": "Logo uploaded successfully",
    "api_messages.success.thread_created_successfully": "Thread created successfully",
    "api_messages.success.message_sent_successfully": "Message sent successfully",
    "api_messages.success.thread_archived_successfully": "Thread archived successfully",
    "api_messages.success.thread_unarchived_successfully": "Thread unarchived successfully",
    "api_messages.success.threads_archived_successfully": " threads archived successfully",
    "api_messages.success.threads_unarchived_successful": " threads unarchived successfully",
    "api_messages.success.thread_muted_successfully": "Thread muted successfully",
    "api_messages.success.thread_unmuted_successfully": "Thread unmuted successfully",
    "api_reports.success.get_saved_reports_for_the_curr": "Get saved reports for the current user.",
    "api_reports.success.created": "Created",
    "api_reports.success.completed": "Completed",
    "api_reports.success.demo_reports_created_successfu": "Demo reports created successfully",
    "api_reports.success.created_date": "Created Date",
    "api_reports.success.time_taken_to_complete": "Time taken to complete",
    "api_reports.success.completed_1": "Completed",
    "api_reports.success.created_date_1": "Created Date",
    "api_reports.success.completed_2": "Completed",
    "api_reports.success.completed_3": "Completed",
    "api_notifications.success.test_notification_created": "Test notification created",
    "api_notifications.success.notification_sent_successfully": "Notification sent successfully",
    "api_notifications.success.notification_created": "Notification created",
    "api_notifications.success.notifications_created": " notifications created",
    "api_notifications.success.notifications_created_for": " notifications created for ",
    "api_adaptive_tests.success.pool_created_successfully": "Pool created successfully",
    "api_adaptive_tests.success.question_added_successfully": "Question added successfully",
    "api_adaptive_tests.success.calibration_completed": "Calibration completed",
    "api_adaptive_tests.success.session_started_successfully": "Session started successfully",
    "api_adaptive_tests.success.response_submitted_successfull": "Response submitted successfully",
    "api_adaptive_tests.success.complete_an_adaptive_test_sess": "Complete an adaptive test session.",
    "api_adaptive_tests.success.session_completed_successfully": "Session completed successfully",
    "api_adaptive_tests.success.get_report_for_a_completed_ses": "Get report for a completed session.",
    "api_adaptive_tests.success.session_not_completed": "Session not completed",
    "api_adaptive_tests.success.adaptive_evaluation_created_su": "Adaptive evaluation created successfully",
    "api_adaptive_tests.success.sync_completed_successfully": "Sync completed successfully",
    "api_sms.success.sms_cancelled_successfully": "SMS cancelled successfully",
    "api_gamification.success.badge_created_successfully": "Badge created successfully",
    "api_gamification.success.badge_awarded_successfully": "Badge awarded successfully",
    "api_gamification.success.leaderboard_created_successful": "Leaderboard created successfully",
    "api_gamification.success.successfully_joined_challenge": "Successfully joined challenge",
    "api_gamification.success.challenge_created_successfully": "Challenge created successfully",
    "api_gamification.success.team_created_successfully": "Team created successfully",
    "api_gamification.success.successfully_joined_team": "Successfully joined team",
    "api_gamification.success.successfully_left_team": "Successfully left team",
    "api_gamification.success.reward_redeemed_successfully": "Reward redeemed successfully",
    "api_gamification.success.reward_created_successfully": "Reward created successfully",
    "api_gamification.success.goal_created_successfully": "Goal created successfully",
    "api_gamification.success.event_logged_successfully": "Event logged successfully",
    "api_gamification.success.login_processed_successfully": "Login processed successfully",
    "api_gamification.success.evaluation_completion_processe": "Evaluation completion processed successfully",
    "api_gamification.success.program_completion_processed_s": "Program completion processed successfully",
    "beneficiaries_v2_list_routes.success.beneficiary_created_successful": "Beneficiary created successfully",
    "v2_auth.success.user_registered_successfully": "User registered successfully",
    "v2_auth.success.logged_out_successfully": "Logged out successfully",
    "v2_auth.success.password_reset_successfully": "Password reset successfully",
    "v2_auth.success.password_changed_successfully": "Password changed successfully",
    "v2_cached_endpoints.success.beneficiary_created_successful": "Beneficiary created successfully",
    "v2_beneficiaries.success.beneficiary_created_successful": "Beneficiary created successfully",
    "v2_beneficiaries.success.note_added_successfully": "Note added successfully",
    "v2_beneficiaries.success.document_uploaded_successfully": "Document uploaded successfully",
    "v2_beneficiaries.success.appointment_scheduled_successf": "Appointment scheduled successfully",
    "v2_beneficiaries.success.appointment_cancelled_successf": "Appointment cancelled successfully",
    "programs_v2_session_routes.success.attendance_recorded_successful": "Attendance recorded successfully",
    "routes_alerts.success.test_alert_sent_successfully": "Test alert sent successfully",
    "routes_alerts.success.alert_sent_successfully": "Alert sent successfully",
    "routes_alerts.success.webhook_alert_processed_succes": "Webhook alert processed successfully",
    "database_index_manager.success.created_index_on": "Created index on ",
    "core_optimizer.success.performance_optimizer_initiali": "Performance Optimizer initialized successfully",
    "testing_load_tester.success.complete_load_test_results": "Complete load test results",
    "testing_load_tester.success.run_the_complete_load": "\n        Run the complete load test.\n        ",
    "testing_load_tester.success.load_test_completed": "Load test completed: ",
    "testing_load_tester.success.stress_test_completed_with": "Stress test completed with ",
    "testing_benchmark_runner.success.complete_benchmark_result": "Complete benchmark result",
    "testing_benchmark_runner.success.benchmark_completed": "Benchmark completed: ",
    "testing_benchmark_runner.success.benchmark_suite_completed": "Benchmark suite completed: ",
    "testing_benchmark_runner.success.successful": " successful",
    "testing_benchmark_runner.success.success": "Success",
    "testing_benchmark_runner.success.csv_export_completed": "CSV export completed: ",
    "caching_cache_manager.success.redis_cache_initialized_succes": "Redis cache initialized successfully",
    "caching_redis_optimizer.success.redis_optimizer_initialized_su": "Redis optimizer initialized successfully",
    "services_appointment_service.success.create_a_new_appointm": "\n        Create a new appointment.\n        \n        Args:\n            trainer_id: The trainer's user ID\n            appointment_data: Dict containing appointment details\n            \n        Returns:\n            Created appointment object\n        ",
    "services_appointment_service.success.appointment_synced_to_google_c": "Appointment synced to Google Calendar successfully",
    "services_sms_service.success.you_have_a_new_assessment_to_c": "You have a new assessment to complete: {{assessment_name}}. Please complete it by {{due_date}}.",
    "services_ai_chat_service.success.complete": "% complete",
    "services_ai_chat_service.success.your_appointment_has_been_book": "Your appointment has been booked successfully. Appointment ID: ",
    "services_ai_chat_service.success.completed_sessions": "%. Completed sessions: ",
    "services_log_analytics_service.success.log_analytics_service_initiali": "Log analytics service initialized successfully",
    "services_log_analytics_service.success.periodic_analysis_completed_f": "Periodic analysis completed. Found ",
    "services_notification_service.success.create_notifications": "\n        Create notifications for multiple users.\n        \n        Args:\n            user_ids (list): List of recipient user IDs\n            type (str): Notification type\n            title (str): Notification title\n            message (str): Notification message\n            data (dict): Additional data for the notification\n            related_id (int): ID of the related entity\n            related_type (str): Type of the related entity\n            sender_id (int): The sender user ID\n            priority (str): Notification priority\n            send_email (bool): Whether to send emails\n            tenant_id (int): The tenant ID\n            \n        Returns:\n            list: List of created notifications\n        ",
    "services_notification_service.success.create_notification_f": "\n        Create notification for users with a specific role.\n        \n        Args:\n            role (str): User role (e.g., 'super_admin', 'tenant_admin', 'trainer')\n            type (str): Notification type\n            title (str): Notification title\n            message (str): Notification message\n            data (dict): Additional data for the notification\n            related_id (int): ID of the related entity\n            related_type (str): Type of the related entity\n            sender_id (int): The sender user ID\n            priority (str): Notification priority\n            send_email (bool): Whether to send emails\n            tenant_id (int): The tenant ID\n            \n        Returns:\n            list: List of created notifications\n        ",
    "services_notification_service.success.create_notification_f_1": "\n        Create notification for all users in a tenant.\n        \n        Args:\n            tenant_id (int): The tenant ID\n            type (str): Notification type\n            title (str): Notification title\n            message (str): Notification message\n            data (dict): Additional data for the notification\n            related_id (int): ID of the related entity\n            related_type (str): Type of the related entity\n            sender_id (int): The sender user ID\n            priority (str): Notification priority\n            send_email (bool): Whether to send emails\n            exclude_roles (list): List of roles to exclude\n            \n        Returns:\n            list: List of created notifications\n        ",
    "services_notification_service.success.mark_a_notification_a": "\n        Mark a notification as read.\n        \n        Args:\n            notification_id (int): The notification ID\n            user_id (int): The user ID\n            \n        Returns:\n            bool: True if successful, False otherwise\n        ",
    "services_video_conference_service_updated.success.create_a_video_confer": "\n        Create a video conference for an appointment.\n        \n        Args:\n            appointment_id: The appointment ID\n            host_id: The host user ID\n            provider: Video conference provider\n            settings: Conference settings\n            \n        Returns:\n            VideoConference: Created conference object\n        ",
    "services_video_conference_service_updated.success.cancel_a_video_confer": "\n        Cancel a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            user_id: The requesting user ID\n            \n        Returns:\n            bool: Success status\n        ",
    "services_video_conference_service_updated.success.end_a_video_conferenc": "\n        End a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            user_id: The user ID ending the conference\n            \n        Returns:\n            bool: Success status\n        ",
    "services_video_conference_service_updated.success.add_a_participant_to": "\n        Add a participant to a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            email: Participant email\n            name: Participant name\n            role: Participant role\n            user_id: User ID if registered user\n            \n        Returns:\n            VideoConferenceParticipant: Created participant object\n        ",
    "services_video_conference_service_updated.success.send_invitation_for_a": "\n        Send invitation for a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            email: Recipient email\n            name: Recipient name\n            delivery_method: Delivery method ('email', 'sms', 'both')\n            phone_number: Phone number for SMS\n            \n        Returns:\n            VideoConferenceInvitation: Created invitation object\n        ",
    "services_video_conference_service_updated.success.start_recording_a_vid": "\n        Start recording a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            user_id: The user ID starting the recording\n            \n        Returns:\n            VideoConferenceRecording: Created recording object\n        ",
    "services_video_conference_service_updated.success.stop_recording_a_vide": "\n        Stop recording a video conference.\n        \n        Args:\n            recording_id: The recording ID\n            user_id: The user ID stopping the recording\n            \n        Returns:\n            bool: Success status\n        ",
    "services_gamification_integration.success.handle_gamification_when_user": "Handle gamification when user completes an evaluation.",
    "services_gamification_integration.success.handle_gamification_when_user_1": "Handle gamification when user completes a program module.",
    "services_gamification_integration.success.handle_gamification_when_user_2": "Handle gamification when user completes a program.",
    "services_webrtc_service.success.created_webrtc_room": "Created WebRTC room ",
    "services_two_factor_service.success.two_factor_authentication_has": "Two-factor authentication has been successfully enabled for your account.",
    "services_two_factor_service.success.2fa_successfully_enabled": "2FA successfully enabled",
    "services_two_factor_service.success.2fa_successfully_disabled": "2FA successfully disabled",
    "services_email_service.success.send_an_email_a": "\n    Send an email.\n    \n    Args:\n        subject (str): Email subject\n        recipients (list): List of recipient email addresses\n        text_body (str): Email body in plain text\n        html_body (str): Email body in HTML\n        sender (str): Sender email address\n        attachments (list): List of attachments (tuples of filename, media_type, data)\n        \n    Returns:\n        bool: True if successful, False otherwise\n    ",
    "services_email_service.success.send_a_password_reset_ema": "\n    Send a password reset email to a user.\n    \n    Args:\n        user: User to send the email to\n        \n    Returns:\n        bool: True if successful, False otherwise\n    ",
    "services_email_service.success.send_a_welcome_email_to_a": "\n    Send a welcome email to a new user.\n    \n    Args:\n        user: User to send the email to\n        \n    Returns:\n        bool: True if successful, False otherwise\n    ",
    "services_email_service.success.welcome_to_bdc_we": ",\n    \n    Welcome to BDC! We're excited to have you on board.\n    \n    Your account has been created successfully.\n    \n    Best regards,\n    BDC Team\n    ",
    "services_email_service.success.p_p_welcome_to_bdc_w": ",</p>\n    <p>Welcome to BDC! We're excited to have you on board.</p>\n    <p>Your account has been created successfully.</p>\n    <p>Best regards,<br>BDC Team</p>\n    ",
    "services_email_service.success.send_a_notification_email": "\n    Send a notification email to a user.\n    \n    Args:\n        user: User to send the email to\n        notification: Notification details\n        \n    Returns:\n        bool: True if successful, False otherwise\n    ",
    "services_email_service.success.send_email_when_a_recurring_ap": "Send email when a recurring appointment series is created.",
    "services_email_service.success.recurring_appointment_created": "Recurring Appointment Created: ",
    "services_email_service.success.a_recurring_appointment_ser": ",\n\nA recurring appointment series has been created for you:\n\nTitle: ",
    "services_email_service.success.h2_recurring_appointment_cre": "\n<h2>Recurring Appointment Created</h2>\n<p>Dear ",
    "services_email_service.success.p_p_a_recurring_appointme": ",</p>\n<p>A recurring appointment series has been created for you:</p>\n<ul>\n    <li><strong>Title:</strong> ",
    "services_video_conference_service.success.create_a_video_confer": "\n        Create a video conference for an appointment.\n        \n        Args:\n            appointment_id: The appointment ID\n            host_id: The host user ID\n            provider: Video conference provider\n            settings: Conference settings\n            \n        Returns:\n            VideoConference: Created conference object\n        ",
    "services_video_conference_service.success.cancel_a_video_confer": "\n        Cancel a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            user_id: The requesting user ID\n            \n        Returns:\n            bool: Success status\n        ",
    "services_video_conference_service.success.end_a_video_conferenc": "\n        End a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            user_id: The user ID ending the conference\n            \n        Returns:\n            bool: Success status\n        ",
    "services_video_conference_service.success.add_a_participant_to": "\n        Add a participant to a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            email: Participant email\n            name: Participant name\n            role: Participant role\n            user_id: User ID if registered user\n            \n        Returns:\n            VideoConferenceParticipant: Created participant object\n        ",
    "services_video_conference_service.success.send_invitation_for_a": "\n        Send invitation for a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            email: Recipient email\n            name: Recipient name\n            delivery_method: Delivery method ('email', 'sms', 'both')\n            phone_number: Phone number for SMS\n            \n        Returns:\n            VideoConferenceInvitation: Created invitation object\n        ",
    "services_video_conference_service.success.start_recording_a_vid": "\n        Start recording a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            user_id: The user ID starting the recording\n            \n        Returns:\n            VideoConferenceRecording: Created recording object\n        ",
    "services_video_conference_service.success.stop_recording_a_vide": "\n        Stop recording a video conference.\n        \n        Args:\n            recording_id: The recording ID\n            user_id: The user ID stopping the recording\n            \n        Returns:\n            bool: Success status\n        ",
    "services_tracing_service.success.auto_instrumentation_completed": "Auto-instrumentation completed",
    "services_alert_service.success.send_alert_through_sp": "\n        Send alert through specified channels\n        \n        Args:\n            event: Alert event to send\n            channels: Specific channels to use (defaults to all enabled)\n        \n        Returns:\n            True if alert was sent successfully through at least one channel\n        ",
    "services_adaptive_test_service.success.complete_an_adaptive_test_sess": "Complete an adaptive test session and generate report.",
    "services_adaptive_test_service.success.generate_detailed_report_for_c": "Generate detailed report for completed session.",
    "services_adaptive_test_service.success.session_not_completed": "Session not completed",
    "services_adaptive_test_service.success.complete_a_session_with_given": "Complete a session with given reason.",
    "services_evaluation_service.success.created_evaluation": "Created evaluation ",
    "services_gamification_service.success.challenge_completed": "🎉 Challenge Completed: ",
    "services_gamification_service.success.congratulations_you_ve_comple": "Congratulations! You've completed the ",
    "services_gamification_service.success.you_ve_successfully_redeemed": "You've successfully redeemed ",
    "services_performance_prediction_service.success.identify_and_address_barriers": "Identify and address barriers to success",
    "services_performance_prediction_service.success.success_coaching_program": "Success coaching program",
    "services_beneficiary_service.success.created_at": "Created At",
    "services_beneficiary_service.success.created_at_1": "Created At",
    "services_ai_report_service.success.completed_appointm": "%\n        - Completed Appointments: ",
    "services_ai_report_service.success.analysis_complete": "Analysis complete",
    "services_ai_report_service.success.proactive_risk_management_impr": "Proactive risk management improves program success",
    "services_ai_report_service.success.identify_factors_contributing": "Identify factors contributing to program success.",
    "services_ai_report_service.success.document_successful_strategies": "Document successful strategies for replication with other beneficiaries",
    "reporting_report_builder_service.success.get_field_suggestions_for_auto": "Get field suggestions for autocomplete",
    "reporting_scheduler_service.success.calculate_success_rate_for_a_s": "Calculate success rate for a schedule",
    "file_upload_tests_example.success.test_complete_upload_workflow": "Test complete upload workflow with encryption.",
    "file_upload_file_upload_service.success.file_uploaded_successfully": "File uploaded successfully",
    "file_upload_file_upload_service.success.get_complete_history_and_versi": "Get complete history and versions of a file.",
    "file_upload_api_example.success.get_complete_history_of_a": "\n    Get complete history of a file.\n    \n    Args:\n        file_id: ID of file\n        \n    Returns:\n        JSON response with file history\n    ",
    "file_upload_audit_logger.success.get_complete_history_of_a_file": "Get complete history of a file.",
    "core_service_container.success.register_a_pre_created_instanc": "Register a pre-created instance as a singleton.",
    "core_service_container.success.created_alias": "Created alias: ",
    "core_base_service.success.created": "Created ",
    "core_service_config.success.service_configuration_complete": "Service configuration completed",
    "core_service_config.success.service_configuration_validate": "Service configuration validated successfully",
    "core_service_factory.success.created": "Created ",
    "gamification_achievement_service.success.created_achievement": "Created achievement: ",
    "gamification_achievement_service.success.complete": "Complete ",
    "gamification_learning_path_service.success.created_learning_path": "Created learning path: ",
    "gamification_learning_path_service.success.completed_node": "Completed node ",
    "gamification_gamification_manager.success.gamification_event_processed_s": "Gamification event processed successfully: ",
    "gamification_xp_service.success.created_xp_multiplier": "Created XP multiplier: ",
    "gamification_progress_service.success.complete_your_first_evaluation": "Complete your first evaluation",
    "gamification_progress_service.success.complete_an_entire_program": "Complete an entire program",
    "gamification_progress_service.success.created_progress_tracker_for_u": "Created progress tracker for user ",
    "gamification_progress_service.success.created_milestone": "Created milestone: ",
    "gamification_progress_service.success.created_progress_goal": "Created progress goal: ",
    "gamification_social_service.success.created_team": "Created team: ",
    "gamification_social_service.success.created_team_challenge": "Created team challenge: ",
    "gamification_social_service.success.created_social_share_by_user": "Created social share by user ",
    "gamification_social_service.success.created_collaboration": "Created collaboration: ",
    "gamification_level_service.success.created_custom_level_system": "Created custom level system: ",
    "gamification_badge_service.success.complete_your_first_evaluation": "Complete your first evaluation",
    "gamification_badge_service.success.complete_10_different_learning": "Complete 10 different learning modules",
    "gamification_badge_service.success.created_badge": "Created badge: ",
    "gamification_leaderboard_service.success.created_leaderboard": "Created leaderboard: ",
    "gamification_leaderboard_service.success.created_competition": "Created competition: ",
    "optimization_db_indexing.success.created_index": "Created index ",
    "optimization_db_indexing.success.created_covering_index": "Created covering index ",
    "optimization_db_indexing.success.created_partial_index": "Created partial index ",
    "video_conference_providers_base_provider.success.start_recording_a_mee": "\n        Start recording a meeting.\n        \n        Args:\n            meeting_id: Provider-specific meeting identifier\n            \n        Returns:\n            bool: Success status\n        ",
    "video_conference_providers_base_provider.success.stop_recording_a_meet": "\n        Stop recording a meeting.\n        \n        Args:\n            meeting_id: Provider-specific meeting identifier\n            \n        Returns:\n            bool: Success status\n        ",
    "video_conference_providers_base_provider.success.add_participants_to_a": "\n        Add participants to a meeting.\n        \n        Args:\n            meeting_id: Provider-specific meeting identifier\n            participants: List of participant data\n            \n        Returns:\n            bool: Success status\n        ",
    "video_conference_providers_base_provider.success.send_meeting_invitati": "\n        Send meeting invitations.\n        \n        Args:\n            meeting_id: Provider-specific meeting identifier\n            participants: List of participant data with email/contact info\n            \n        Returns:\n            bool: Success status\n        ",
    "v2_user_service.success.created_user": "Created user: ",
    "v2_beneficiary_service.success.created_beneficiary": "Created beneficiary: ",
    "interfaces_auth_service_interface.success.authenticate_user_wit": "\n        Authenticate user with email and password.\n        Returns dict with user and tokens if successful, None otherwise.\n        ",
    "ai_human_review_workflow.success.notification_created": "Notification created: ",
    "ai_human_review_workflow.success.complete_the_review_process": "Complete the review process",
    "ai_content_recommendations.success.get_history_of_completed_asses": "Get history of completed assessments and activities",
    "orchestration_tasks.success.task_completed": "Task completed: ",
    "orchestration_monitoring.success.completed_monitoring_data_clea": "Completed monitoring data cleanup",
    "orchestration_cache.success.cache_optimization_completed": "Cache optimization completed: ",
    "orchestration_human_loop.success.created_review_request": "Created review request: ",
    "orchestration_human_loop.success.complete_a_review_with_results": "Complete a review with results.",
    "orchestration_human_loop.success.completed_review": "Completed review ",
    "orchestration_orchestrator.success.completed_stage": "Completed stage ",
    "orchestration_orchestrator.success.pipeline_execution_completed": "Pipeline execution completed: ",
    "orchestration_orchestrator.success.created_human_review_request": "Created human review request: ",
    "orchestration_examples.success.complete_example_of_using_the": "Complete example of using the AI pipeline orchestration system.",
    "orchestration_examples.success.orchestration_system_initial": "✅ Orchestration system initialized successfully!",
    "orchestration_examples.success.run_a_complete_example_showcas": "Run a complete example showcasing all features.",
    "orchestration_examples.success.complete_example_finished_s": "\n🎉 Complete example finished successfully!",
    "orchestration_examples.success.created_review_request": "  📝 Created review request: ",
    "orchestration_examples.success.review_completed_successfu": "  ✅ Review completed successfully",
    "orchestration_examples.success.success_rate": "    Success rate: ",
    "orchestration_examples.success.success_rate_1": "      Success rate: ",
    "sync_offline_handler.success.successfully_executed_operatio": "Successfully executed operation ",
    "sync_offline_handler.success.periodic_cleanup_of_completed": "Periodic cleanup of completed operations",
    "sync_offline_handler.success.completed_operations": "Completed operations: ",
    "sync_config.success.get_complete_configuration_as": "Get complete configuration as dictionary",
    "sync_config.success.configuration_saved_to": "Configuration saved to: ",
    "sync_version_manager.success.created_version": "Created version ",
    "sync_version_manager.success.completed_with_success": " completed with success=",
    "sync_version_manager.success.created_branch": "Created branch ",
    "sync_event_sourcing.success.handle_an_event_and_return_suc": "Handle an event and return success status",
    "sync_event_sourcing.success.created_snapshot_for": "Created snapshot for ",
    "sync_event_sourcing.success.created_projection": "Created projection: ",
    "sync_sync_service.success.synchronization_service_initia": "Synchronization service initialized successfully",
    "sync_sync_service.success.synchronization_service_starte": "Synchronization service started successfully",
    "sync_sync_service.success.version_created": "Version created: ",
    "sync_device_sync.success.created_sync_operation": "Created sync operation ",
    "sync_device_sync.success.completed_sync_operation": "Completed sync operation ",
    "sync_device_sync.success.success": " (success: ",
    "i18n_language_detection_service.success.detect_the_best_langu": "\n        Detect the best language for a user using multiple sources.\n        \n        Args:\n            user_preference: User's saved language preference\n            accept_language: Browser's Accept-Language header\n            content: Content to analyze\n            country_code: User's country code\n            \n        Returns:\n            Best detected language code\n        ",
    "i18n_i18n_manager.success.create_multilingual_c": "\n        Create multilingual content for an entity.\n        \n        Args:\n            entity_type: Type of entity (e.g., 'program', 'document')\n            entity_id: ID of the entity\n            field_name: Name of the field being localized\n            content_data: Dictionary of {language_code: content}\n            user_id: ID of user creating content\n            \n        Returns:\n            List of created MultilingualContent objects\n        ",
    "i18n_translation_service.success.created_default_translation_fi": "Created default translation file for ",
    "i18n_translation_service.success.success": "Success",
    "i18n_translation_service.success.login_successful": "Login successful",
    "i18n_translation_service.success.logout_successful": "Logout successful",
    "i18n_translation_service.success.registration_successful": "Registration successful",
    "i18n_translation_service.success.data_saved_successfully": "Data saved successfully",
    "i18n_translation_service.success.file_uploaded_successfully": "File uploaded successfully",
    "analytics_real_time_dashboard.success.appointments_completed": "Appointments Completed",
    "analytics_data_export.success.export_completed": "Export completed: ",
    "analytics_report_generator.success.report_generated_successfully": "Report generated successfully: ",
    "analytics_report_generator.success.most_users_complete_onboarding": "Most users complete onboarding within 3 days",
    "analytics_report_generator.success.users_who_complete_evaluations": "Users who complete evaluations have 90% higher retention",
    "analytics_examples.success.report_saved_to": "✓ Report saved to: ",
    "analytics_examples.success.export_completed": "✓ Export completed: ",
    "analytics_examples.success.visualization_created": "✓ Visualization created: ",
    "analytics_examples.success.custom_workflow_created": "✓ Custom workflow created: ",
    "analytics_examples.success.cohort_analysis_completed_su": "✓ Cohort analysis completed successfully",
    "analytics_examples.success.prediction_completed_success": "✓ Prediction completed successfully",
    "analytics_examples.success.all_examples_completed": "✅ All examples completed!",
    "analytics_analytics_orchestrator.success.analytics_orchestrator_started": "Analytics Orchestrator started successfully",
    "analytics_analytics_orchestrator.success.workflow_execution_completed": "Workflow execution completed: ",
    "analytics_analytics_orchestrator.success.consider_expanding_successful": "Consider expanding successful features",
    "analytics_predictive_analytics.success.all_predictive_models_initiali": "All predictive models initialized successfully",
    "interfaces_calendar_service_interface.success.reschedule_appointment": "Reschedule appointment.\n        \n        Args:\n            appointment_id: Appointment ID\n            new_start_time: New start time\n            new_end_time: New end time\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_calendar_service_interface.success.cancel_appointment": "Cancel appointment.\n        \n        Args:\n            appointment_id: Appointment ID\n            reason: Cancellation reason\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_calendar_service_interface.success.confirm_appointment": "Confirm appointment.\n        \n        Args:\n            appointment_id: Appointment ID\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_program_service_interface.success.enroll_beneficiary_in_program": "Enroll beneficiary in program.\n        \n        Args:\n            program_id: Program ID\n            beneficiary_id: Beneficiary ID\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_program_service_interface.success.activate_program": "Activate program.\n        \n        Args:\n            program_id: Program ID\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_program_service_interface.success.deactivate_program": "Deactivate program.\n        \n        Args:\n            program_id: Program ID\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_auth_service_interface.success.request_password_rese": "\n        Request password reset for user.\n        \n        Args:\n            email: User's email\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_auth_service_interface.success.reset_user_password_u": "\n        Reset user password using reset token.\n        \n        Args:\n            token: Password reset token\n            password: New password\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_auth_service_interface.success.change_user_password": "\n        Change user password.\n        \n        Args:\n            user_id: User's ID\n            current_password: Current password\n            new_password: New password\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_appointment_service_interface.success.create_a_new_appointm": "\n        Create a new appointment.\n        \n        Args:\n            trainer_id: The trainer's user ID\n            appointment_data: Dict containing appointment details\n            \n        Returns:\n            Created appointment object\n        ",
    "interfaces_sms_service_interface.success.send_an_sms_message": "\n        Send an SMS message.\n        \n        Returns:\n            Tuple of (success, message_id, response_data)\n        ",
    "interfaces_sms_service_interface.success.send_an_sms_using_a_t": "\n        Send an SMS using a template.\n        \n        Returns:\n            Tuple of (success, message_id, response_data)\n        ",
    "interfaces_sms_service_interface.success.schedule_an_sms_for_f": "\n        Schedule an SMS for future delivery.\n        \n        Returns:\n            Tuple of (success, scheduled_message_id)\n        ",
    "interfaces_sms_service_interface.success.cancel_a_scheduled_sm": "\n        Cancel a scheduled SMS.\n        \n        Returns:\n            Success status\n        ",
    "interfaces_sms_service_interface.success.send_appointment_remi": "\n        Send appointment reminder SMS.\n        \n        Returns:\n            Tuple of (success, message_id)\n        ",
    "interfaces_sms_service_interface.success.send_assessment_notif": "\n        Send assessment notification SMS.\n        \n        Returns:\n            Tuple of (success, message_id)\n        ",
    "interfaces_sms_service_interface.success.send_password_reset_c": "\n        Send password reset code via SMS.\n        \n        Returns:\n            Tuple of (success, message_id)\n        ",
    "interfaces_sms_service_interface.success.send_2fa_verification": "\n        Send 2FA verification code via SMS.\n        \n        Returns:\n            Tuple of (success, message_id)\n        ",
    "interfaces_sms_service_interface.success.execute_an_sms_campai": "\n        Execute an SMS campaign.\n        \n        Returns:\n            Success status\n        ",
    "interfaces_evaluation_service_interface.success.submit_evaluation_responses": "Submit evaluation responses.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            responses: List of responses\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_evaluation_service_interface.success.add_feedback_to_evaluation": "Add feedback to evaluation.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            feedback: Feedback text\n            strengths: Strengths text\n            weaknesses: Weaknesses text\n            recommendations: Recommendations text\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_evaluation_service_interface.success.mark_evaluation_as_completed": "Mark evaluation as completed.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            \n        Returns:\n            True if successful, False otherwise\n        ",
    "interfaces_evaluation_service_interface.success.mark_evaluation_as_reviewed": "Mark evaluation as reviewed.\n        \n        Args:\n            evaluation_id: Evaluation ID\n            \n        Returns:\n            True if successful, False otherwise\n        "
  },
  "validation": {
    "cli.validation.validate_application_configura": "Validate application configuration.",
    "cli.validation.validating_application_configu": "Validating application configuration...",
    "cli.validation.configuration_is_valid": "✅ Configuration is valid.",
    "exceptions.validation.initialize_the_validation_exce": "Initialize the validation exception.",
    "socketio_events.validation.valid_token_but_user": "Valid token but user ",
    "socketio_events.validation.handle_sending_a_message": "\n    Handle sending a message in a thread.\n    \n    Required data keys:\n    - thread_id: ID of the message thread\n    - content: Message content\n    - token: JWT token for authentication\n    \n    Optional data keys:\n    - attachments: List of attachment IDs or URLs\n    ",
    "socketio_events.validation.authentication_required": "Authentication required",
    "socketio_events.validation.thread_id_is_required": "Thread ID is required",
    "socketio_events.validation.message_content_is_required": "Message content is required",
    "socketio_events.validation.handle_typing_indicator_i": "\n    Handle typing indicator in a message thread.\n    \n    Required data keys:\n    - thread_id: ID of the message thread\n    - token: JWT token for authentication\n    \n    Optional data keys:\n    - is_typing: Boolean indicating whether user is typing (default: True)\n    ",
    "socketio_events.validation.mark_notifications_or_mes": "\n    Mark notifications or messages as read.\n    \n    Required data keys:\n    - token: JWT token for authentication\n    \n    Optional data keys (at least one required):\n    - notification_ids: List of notification IDs to mark as read\n    - thread_id: Thread ID to mark as read\n    - message_ids: List of message IDs to mark as read\n    ",
    "socketio_events.validation.authentication_required_1": "Authentication required",
    "socketio_events.validation.no_valid_items_to_mark_as_read": "No valid items to mark as read",
    "middleware_alert_middleware.validation.authentication_required": "Authentication required",
    "middleware_alert_middleware.validation.check_if_endpoint_is_critical": "Check if endpoint is critical and should be monitored closely",
    "middleware_i18n_middleware.validation.check_if_i18n_processing_shoul": "Check if i18n processing should be skipped for this request.",
    "middleware_i18n_middleware.validation.check_if_a_field_should_be_tra": "Check if a field should be translated.",
    "middleware_request_context.validation.admin_role_required": "Admin role required",
    "middleware_cache_middleware.validation.must_revalidate": "must-revalidate",
    "middleware_security_middleware.validation.check_if_https_should_be_enfor": "Check if HTTPS should be enforced.",
    "middleware_security_middleware.validation.check_if_request_should_be_rat": "Check if request should be rate limited.",
    "middleware_security_middleware.validation.admin_access_required": "Admin access required",
    "middleware_security_middleware.validation.validate_csrf_token": "Validate CSRF token.",
    "middleware_performance_middleware.validation.determine_if_response_should_b": "Determine if response should be compressed",
    "middleware_auth_middleware.validation.access_denied_required_roles": "Access denied. Required roles: ",
    "middleware_auth_middleware.validation.user_must_belong_to_a_tenant": "User must belong to a tenant",
    "middleware_auth_middleware.validation.permission_denied_required": "Permission denied. Required: ",
    "validation_schema_validator.validation.schema_based_validation_using": "\nSchema-based validation using Marshmallow.\n",
    "validation_schema_validator.validation.centralized_schema_valida": "\n    Centralized schema validation with enhanced security features.\n    ",
    "validation_schema_validator.validation.initialize_the_schema_validato": "Initialize the schema validator.",
    "validation_schema_validator.validation.register_default_custom_valida": "Register default custom validators.",
    "validation_schema_validator.validation.register_a_custom_validator": "Register a custom validator.",
    "validation_schema_validator.validation.missing_data_for_required_fiel": "Missing data for required field.",
    "validation_schema_validator.validation.not_a_valid_email_address": "Not a valid email address.",
    "validation_schema_validator.validation.not_a_valid_url": "Not a valid URL.",
    "validation_schema_validator.validation.not_a_valid_number": "Not a valid number.",
    "validation_schema_validator.validation.this_field_is_required": "This field is required.",
    "validation_schema_validator.validation.please_enter_a_valid_email_add": "Please enter a valid email address.",
    "validation_schema_validator.validation.please_enter_a_valid_url": "Please enter a valid URL.",
    "validation_schema_validator.validation.please_enter_a_valid_number": "Please enter a valid number.",
    "validation_schema_validator.validation.validate_string_is_safe_no_xs": "Validate string is safe (no XSS attempts).",
    "validation_schema_validator.validation.validate_html_content_is_safe": "Validate HTML content is safe.",
    "validation_schema_validator.validation.validate_phone_number_format": "Validate phone number format.",
    "validation_schema_validator.validation.validate_username_format": "Validate username format.",
    "validation_schema_validator.validation.username_must_be_3_30_characte": "Username must be 3-30 characters and contain only letters, numbers, underscore, hyphen, or dot",
    "validation_schema_validator.validation.validate_string_contains_only": "Validate string contains only alphanumeric characters.",
    "validation_schema_validator.validation.validate_string_contains_no_sp": "Validate string contains no special characters.",
    "validation_schema_validator.validation.email_is_required": "Email is required",
    "validation_schema_validator.validation.password_must_contain_uppercas": "Password must contain uppercase, lowercase, number, and special character",
    "validation_schema_validator.validation.password_is_required": "Password is required",
    "validation_schema_validator.validation.value_must_be_positive": "Value must be positive",
    "validation_validators.validation.specialized_validators_for_di": "\nSpecialized validators for different data types and security concerns.\n",
    "validation_validators.validation.base_class_for_all_validators": "Base class for all validators.",
    "validation_validators.validation.check_if_value_is_valid_withou": "Check if value is valid without raising exception.",
    "validation_validators.validation.email_validation_with_advanced": "Email validation with advanced checks.",
    "validation_validators.validation.initialize_email_vali": "\n        Initialize email validator.\n        \n        Args:\n            check_deliverability: Whether to check if email is deliverable\n            allowed_domains: List of allowed email domains\n            blocked_domains: List of blocked email domains\n        ",
    "validation_validators.validation.validate_email_address": "Validate email address.",
    "validation_validators.validation.email_address_is_required": "Email address is required",
    "validation_validators.validation.password_validation_with_confi": "Password validation with configurable complexity rules.",
    "validation_validators.validation.initialize_password_validator": "Initialize password validator.",
    "validation_validators.validation.validate_password_against_secu": "Validate password against security requirements.",
    "validation_validators.validation.password_is_required": "Password is required",
    "validation_validators.validation.password_must_be_at_least": "Password must be at least ",
    "validation_validators.validation.password_must_not_exceed": "Password must not exceed ",
    "validation_validators.validation.password_must_contain_at_least": "Password must contain at least one uppercase letter",
    "validation_validators.validation.password_must_contain_at_least_1": "Password must contain at least one lowercase letter",
    "validation_validators.validation.password_must_contain_at_least_2": "Password must contain at least one digit",
    "validation_validators.validation.password_must_contain_at_least_3": "Password must contain at least one special character",
    "validation_validators.validation.url_validation_with_security_c": "URL validation with security checks.",
    "validation_validators.validation.initialize_url_validator": "Initialize URL validator.",
    "validation_validators.validation.validate_url": "Validate URL.",
    "validation_validators.validation.url_is_required": "URL is required",
    "validation_validators.validation.url_must_include_a_scheme_e_g": "URL must include a scheme (e.g., http://)",
    "validation_validators.validation.url_scheme_must_be_one_of": "URL scheme must be one of: ",
    "validation_validators.validation.url_must_include_a_domain": "URL must include a domain",
    "validation_validators.validation.url_must_include_a_valid_top_l": "URL must include a valid top-level domain",
    "validation_validators.validation.file_upload_validation": "File upload validation.",
    "validation_validators.validation.initialize_file_validator": "Initialize file validator.",
    "validation_validators.validation.validate_file_upload": "Validate file upload.",
    "validation_validators.validation.file_must_have_a_filename": "File must have a filename",
    "validation_validators.validation.json_data_validation": "JSON data validation.",
    "validation_validators.validation.initialize_json_validator": "Initialize JSON validator.",
    "validation_validators.validation.validate_json_data_structure": "Validate JSON data structure.",
    "validation_validators.validation.json_keys_must_be_strings": "JSON keys must be strings",
    "validation_validators.validation.sql_injection_prevention_valid": "SQL injection prevention validator.",
    "validation_validators.validation.validate_input_for_sql_injecti": "Validate input for SQL injection attempts.",
    "validation_validators.validation.phone_number_validation": "Phone number validation.",
    "validation_validators.validation.initialize_phone_validator": "Initialize phone validator.",
    "validation_validators.validation.validate_phone_number": "Validate phone number.",
    "validation_validators.validation.phone_number_is_required": "Phone number is required",
    "validation_validators.validation.date_and_datetime_validation": "Date and datetime validation.",
    "validation_validators.validation.initialize_date_validator": "Initialize date validator.",
    "validation_validators.validation.validate_date": "Validate date.",
    "validation_validators.validation.date_must_be_after": "Date must be after ",
    "validation_validators.validation.date_must_be_before": "Date must be before ",
    "validation_validators.validation.credit_card_number_validation": "Credit card number validation.",
    "validation_validators.validation.validate_credit_card_number_us": "Validate credit card number using Luhn algorithm.",
    "validation_validators.validation.credit_card_number_is_required": "Credit card number is required",
    "validation_validators.validation.credit_card_number_must_contai": "Credit card number must contain only digits",
    "validation___init__.validation.input_validation_and_sanitiza": "\nInput validation and sanitization middleware package.\n",
    "validation___init__.validation.validationmiddleware": "ValidationMiddleware",
    "validation___init__.validation.schemavalidator": "SchemaValidator",
    "validation___init__.validation.emailvalidator": "EmailValidator",
    "validation___init__.validation.passwordvalidator": "PasswordValidator",
    "validation___init__.validation.urlvalidator": "URLValidator",
    "validation___init__.validation.filevalidator": "FileValidator",
    "validation___init__.validation.jsonvalidator": "JSONValidator",
    "validation___init__.validation.sqlvalidator": "SQLValidator",
    "validation_example_usage.validation.example_usage_of_the_validati": "\nExample usage of the validation system in API endpoints.\n",
    "validation_example_usage.validation.login_endpoint_with_validation": "Login endpoint with validation.",
    "validation_example_usage.validation.registration_endpoint_with_val": "Registration endpoint with validation.",
    "validation_example_usage.validation.create_beneficiary_with_valida": "Create beneficiary with validation.",
    "validation_example_usage.validation.create_appointment_with_busine": "Create appointment with business rule validation.",
    "validation_example_usage.validation.upload_document_with_file_vali": "Upload document with file validation.",
    "validation_example_usage.validation.global_search_with_validation": "Global search with validation and rate limiting.",
    "validation_example_usage.validation.enroll_beneficiary_in_program": "Enroll beneficiary in program with complex validation.",
    "validation_example_usage.validation.generate_report_with_custom_va": "Generate report with custom validation.",
    "validation_example_usage.validation.custom_validator_for_report_pe": "Custom validator for report permissions.",
    "validation_example_usage.validation.custom_validator_for_data_avai": "Custom validator for data availability.",
    "validation_example_usage.validation.register_validation_middleware": "Register validation middleware with the Flask app.",
    "validation_example_usage.validation.custom_validator_for_tenant_co": "Custom validator for tenant codes.",
    "validation_example_usage.validation.tenant_code_must_be_3_uppercas": "Tenant code must be 3 uppercase letters followed by 4 digits",
    "validation_example_usage.validation.custom_validator_for_currency": "Custom validator for currency codes.",
    "validation_example_usage.validation.currency_must_be_one_of": "Currency must be one of: ",
    "validation_schemas.validation.enhanced_validation_schemas_f": "\nEnhanced validation schemas for the BDC project using Marshmallow.\n",
    "validation_schemas.validation.page_must_be_a_positive_intege": "Page must be a positive integer",
    "validation_schemas.validation.items_per_page_must_be_between": "Items per page must be between 1 and 100",
    "validation_schemas.validation.you_must_accept_the_terms_and": "You must accept the terms and conditions",
    "validation_schemas.validation.beneficiary_must_be_at_least_1": "Beneficiary must be at least 16 years old",
    "validation_schemas.validation.end_date_must_be_after_start_d": "End date must be after start date",
    "validation_schemas.validation.program_must_be_at_least_7_day": "Program must be at least 7 days long",
    "validation_schemas.validation.appointment_must_be_in_the_fut": "Appointment must be in the future",
    "validation_schemas.validation.appointment_must_be_during_bus": "Appointment must be during business hours (8 AM - 6 PM)",
    "validation_schemas.validation.duration_must_be_in_15_minute": "Duration must be in 15-minute increments",
    "validation_schemas.validation.end_date_must_be_after_start_d_1": "End date must be after start date",
    "validation_schemas.validation.search_query_is_required": "Search query is required",
    "validation_schemas.validation.search_query_must_be_at_least": "Search query must be at least 2 characters",
    "validation_schemas.validation.file_upload_validation_schema": "File upload validation schema.",
    "validation_schemas.validation.file_must_have_a_filename": "File must have a filename",
    "validation_validation_middleware.validation.main_validation_middleware_fo": "\nMain validation middleware for Flask applications.\n",
    "validation_validation_middleware.validation.comprehensive_validation": "\n    Comprehensive validation middleware for API endpoints.\n    ",
    "validation_validation_middleware.validation.initialize_the_validation_midd": "Initialize the validation middleware.",
    "validation_validation_middleware.validation.validate_incoming_requests_bef": "Validate incoming requests before processing.",
    "validation_validation_middleware.validation.content_type_must_be_applicati": "Content-Type must be application/json",
    "validation_validation_middleware.validation.decorator_to_validate_api_key": "Decorator to validate API key.",
    "validation_validation_middleware.validation.api_key_required": "API key required",
    "validation_validation_middleware.validation.validate_api_key_format_and_ex": "Validate API key format and existence.",
    "validation_business_validators.validation.business_logic_validators_spe": "\nBusiness logic validators specific to the BDC project.\n",
    "validation_business_validators.validation.validator_for_beneficiary_rela": "Validator for beneficiary-related business rules.",
    "validation_business_validators.validation.validate_beneficiary_registrat": "Validate beneficiary registration data.",
    "validation_business_validators.validation.beneficiary_must_be_at_least_1": "Beneficiary must be at least 16 years old",
    "validation_business_validators.validation.validate_if_beneficiary_can_en": "Validate if beneficiary can enroll in program.",
    "validation_business_validators.validation.beneficiary_must_be_at_least": "Beneficiary must be at least ",
    "validation_business_validators.validation.beneficiary_must_be_no_more_th": "Beneficiary must be no more than ",
    "validation_business_validators.validation.validator_for_appointment_rela": "Validator for appointment-related business rules.",
    "validation_business_validators.validation.validate_appointment_booking": "Validate appointment booking.",
    "validation_business_validators.validation.appointment_must_be_in_the_fut": "Appointment must be in the future",
    "validation_business_validators.validation.appointment_must_be_during_bus": "Appointment must be during business hours (8 AM - 6 PM)",
    "validation_business_validators.validation.appointments_must_be_booked_at": "Appointments must be booked at least 24 hours in advance",
    "validation_business_validators.validation.appointment_duration_must_be_a": "Appointment duration must be at least 15 minutes",
    "validation_business_validators.validation.appointment_duration_must_be_i": "Appointment duration must be in 15-minute increments",
    "validation_business_validators.validation.validate_appointment_cancellat": "Validate appointment cancellation.",
    "validation_business_validators.validation.appointments_must_be_cancelled": "Appointments must be cancelled at least 4 hours in advance",
    "validation_business_validators.validation.validator_for_program_related": "Validator for program-related business rules.",
    "validation_business_validators.validation.validate_program_creation_data": "Validate program creation data.",
    "validation_business_validators.validation.program_end_date_must_be_after": "Program end date must be after start date",
    "validation_business_validators.validation.program_must_be_at_least_7_day": "Program must be at least 7 days long",
    "validation_business_validators.validation.maximum_participants_must_be_a": "Maximum participants must be at least 1",
    "validation_business_validators.validation.must_have_at_least_1_session_p": "Must have at least 1 session per week",
    "validation_business_validators.validation.validate_session_attendance_ma": "Validate session attendance marking.",
    "validation_business_validators.validation.validator_for_evaluation_relat": "Validator for evaluation-related business rules.",
    "validation_business_validators.validation.validate_evaluation_submission": "Validate evaluation submission.",
    "validation_business_validators.validation.score_must_be_a_number": "Score must be a number",
    "validation_business_validators.validation.score_must_be_between_0_and_10": "Score must be between 0 and 100",
    "validation_business_validators.validation.time_taken_must_be_at_least_1": "Time taken must be at least 1 minute",
    "validation_business_validators.validation.validator_for_user_related_bus": "Validator for user-related business rules.",
    "validation_business_validators.validation.validate_user_role_change": "Validate user role change.",
    "validation_business_validators.validation.username_must_be_3_30_characte": "Username must be 3-30 characters and contain only letters, numbers, underscore, hyphen, or dot",
    "validation_business_validators.validation.language_must_be_one_of": "Language must be one of: ",
    "validation_decorators.validation.validation_decorators_for_eas": "\nValidation decorators for easy integration with Flask routes.\n",
    "validation_decorators.validation.shorthand_decorator_for_j": "\n    Shorthand decorator for JSON validation.\n    \n    Example:\n        @app.route('/api/login', methods=['POST'])\n        @validate_json(LoginSchema)\n        def login():\n            data = g.validated_data\n    ",
    "validation_decorators.validation.shorthand_decorator_for_q": "\n    Shorthand decorator for query parameter validation.\n    \n    Example:\n        @app.route('/api/users')\n        @validate_query(UserSearchSchema)\n        def list_users():\n            filters = g.validated_data\n    ",
    "validation_decorators.validation.shorthand_decorator_for_f": "\n    Shorthand decorator for form data validation.\n    \n    Example:\n        @app.route('/api/upload', methods=['POST'])\n        @validate_form(FileUploadSchema)\n        def upload_file():\n            data = g.validated_data\n    ",
    "validation_decorators.validation.decorator_to_validate_fil": "\n    Decorator to validate file uploads.\n    \n    Args:\n        max_size: Maximum file size in bytes\n        allowed_extensions: List of allowed file extensions\n        required: Whether file is required\n    \n    Example:\n        @app.route('/api/documents', methods=['POST'])\n        @validate_files(max_size=5*1024*1024, allowed_extensions=['pdf', 'doc'])\n        def upload_document():\n            file = request.files.get('file')\n    ",
    "validation_decorators.validation.decorator_to_validate_ema": "\n    Decorator to validate email fields.\n    \n    Example:\n        @app.route('/api/check-email', methods=['POST'])\n        @validate_email()\n        def check_email():\n            email = request.json.get('email')\n    ",
    "validation_decorators.validation.is_required": " is required",
    "validation_decorators.validation.decorator_to_validate_pas": "\n    Decorator to validate password fields.\n    \n    Example:\n        @app.route('/api/change-password', methods=['POST'])\n        @validate_password(field_name='new_password')\n        def change_password():\n            data = request.json\n    ",
    "validation_decorators.validation.is_required_1": " is required",
    "validation_decorators.validation.decorator_to_validate_bus": "\n    Decorator to validate business rules.\n    \n    Args:\n        rule_type: Type of business rule ('beneficiary', 'appointment', 'program', 'evaluation', 'user')\n        **rule_params: Additional parameters for the validator\n    \n    Example:\n        @app.route('/api/appointments', methods=['POST'])\n        @validate_json(AppointmentCreateSchema)\n        @validate_business_rule('appointment', action='booking')\n        def create_appointment():\n            data = g.validated_data\n    ",
    "validation_decorators.validation.shorthand_for_api_key_val": "\n    Shorthand for API key validation.\n    \n    Example:\n        @app.route('/api/external/webhook')\n        @require_api_key()\n        def webhook():\n            # Requires valid API key\n    ",
    "core_query_cache.validation.query_must_be_a_sqlalchemy_que": "Query must be a SQLAlchemy Query or callable",
    "core_config_manager.validation.result_of_configuration_valida": "Result of configuration validation.",
    "core_config_manager.validation.interface_for_configuration_va": "Interface for configuration validators.",
    "core_config_manager.validation.validate_configuration": "Validate configuration.",
    "core_config_manager.validation.validates_database_configurati": "Validates database configuration.",
    "core_config_manager.validation.validate_database_configuratio": "Validate database configuration.",
    "core_config_manager.validation.sqlalchemy_database_uri_is_req": "SQLALCHEMY_DATABASE_URI is required",
    "core_config_manager.validation.validates_security_configurati": "Validates security configuration.",
    "core_config_manager.validation.validate_security_configuratio": "Validate security configuration.",
    "core_config_manager.validation.production_secret_key_must_be": "Production SECRET_KEY must be set and not use default value",
    "core_config_manager.validation.production_jwt_secret_key_must": "Production JWT_SECRET_KEY must be set and not use default value",
    "core_config_manager.validation.validates_redis_configuration": "Validates Redis configuration.",
    "core_config_manager.validation.validate_redis_configuration": "Validate Redis configuration.",
    "core_config_manager.validation.enhanced_configuration_manager": "Enhanced configuration manager with validation and environment handling.",
    "core_config_manager.validation.load_and_validate_configuratio": "Load and validate configuration for the Flask app.\n        \n        Args:\n            app: Flask application instance\n            config_object: Optional configuration object to use\n            \n        Returns:\n            ConfigValidationResult with validation status\n        ",
    "core_config_manager.validation.validate_configuration_using_a": "Validate configuration using all validators.",
    "core_config_manager.validation.validator": "Validator ",
    "core_config_manager.validation.log_validation_results": "Log validation results.",
    "core_config_manager.validation.configuration_validation_passe": "Configuration validation passed",
    "core_config_manager.validation.add_a_custom_configuration_val": "Add a custom configuration validator.",
    "core_extension_manager.validation.information_about_an_extension": "Information about an extension.",
    "core_extension_manager.validation.authorization_is_required": "Authorization is required",
    "core_extension_manager.validation.get_the_order_in_which_extensi": "Get the order in which extensions should be initialized.",
    "core_cache_manager.validation.check_if_caching_should_be_ski": "Check if caching should be skipped for current request.",
    "core_tenant_isolation.validation.validate_that_a_tenan": "\n        Validate that a tenant ID exists and is active.\n        \n        Args:\n            tenant_id: The tenant ID to validate\n            \n        Returns:\n            bool: True if tenant is valid and active\n        ",
    "core_tenant_isolation.validation.validate_that_this_in": "\n        Validate that this instance belongs to the specified tenant.\n        \n        Args:\n            tenant_id: Tenant ID to check or None for current tenant\n            \n        Returns:\n            bool: True if access is allowed\n        ",
    "core_tenant_isolation.validation.no_tenant_context_for_data_val": "No tenant context for data validation",
    "core_cache_config.validation.determine_if_an_endpoint_shoul": "Determine if an endpoint should be cached.",
    "core_session_cache.validation.get_security_information_for_a": "Get security information for a session",
    "core_session_cache.validation.get_information_about_the_curr": "Get information about the current session",
    "core_tenant_isolation_example.validation.get_a_specific_document_with_t": "Get a specific document with tenant validation.",
    "core_tenant_isolation_example.validation.get_information_about_the_curr": "Get information about the current tenant.",
    "error_handling_user_messages.validation.the_information_you_provided_i": "The information you provided is not valid. Please check your input and try again.",
    "error_handling_user_messages.validation.check_that_all_required_fields": "Check that all required fields are filled out",
    "error_handling_user_messages.validation.ensure_email_addresses_are_in": "Ensure email addresses are in the correct format",
    "error_handling_user_messages.validation.verify_that_dates_are_valid_an": "Verify that dates are valid and in the correct format",
    "error_handling_user_messages.validation.please_enter_a_valid_email_add": "Please enter a valid email address.",
    "error_handling_user_messages.validation.aseg_rese_de_que_las_direccion": "Asegúrese de que las direcciones de correo electrónico estén en el formato correcto",
    "error_handling_user_messages.validation.verifique_que_las_fechas_sean": "Verifique que las fechas sean válidas y estén en el formato correcto",
    "error_handling_user_messages.validation.formats_user_messages_for_diff": "Formats user messages for different output formats.",
    "error_handling_user_messages.validation.convert_usermessage_to_html_fo": "Convert UserMessage to HTML format.",
    "error_handling_config.validation.unsupported_file_format": "Unsupported file format: ",
    "error_handling_config.validation.validate_the_current_configura": "Validate the current configuration and return any issues.",
    "error_handling_config.validation.circuit_breaker_recovery_timeo": "Circuit breaker recovery_timeout must be positive",
    "error_handling_config.validation.retry_max_attempts_must_be_pos": "Retry max_attempts must be positive",
    "error_handling_config.validation.retry_base_delay_must_be_non_n": "Retry base_delay must be non-negative",
    "error_handling_config.validation.retry_max_delay_must_be_bas": "Retry max_delay must be >= base_delay",
    "error_handling_config.validation.monitoring_metrics_retention_h": "Monitoring metrics_retention_hours must be positive",
    "error_handling_config.validation.export_current_configuration_i": "Export current configuration in specified format.",
    "error_handling_config.validation.unsupported_export_format": "Unsupported export format: ",
    "error_handling_retry_manager.validation.information_about_a_retry_atte": "Information about a retry attempt.",
    "error_handling_retry_manager.validation.check_if_an_exception_should_t": "Check if an exception should trigger a retry.",
    "error_handling_error_recovery.validation.check_if_cache_entry_is_valid": "Check if cache entry is valid.",
    "error_handling_error_recovery.validation.no_valid_cache_entry_found": "No valid cache entry found",
    "error_handling_examples.validation.authentication_required": "Authentication required",
    "error_handling_examples.validation.configuration_is_valid": "Configuration is valid",
    "error_handling_error_monitor.validation.export_current_metrics_in_spec": "Export current metrics in specified format.",
    "error_handling_error_monitor.validation.unsupported_export_format": "Unsupported export format: ",
    "error_handling_middleware.validation.get_safe_request_data_excludi": "Get safe request data (excluding sensitive information).",
    "security_password_policy.validation.comprehensive_password_policy": "\nComprehensive password policy enforcement and validation.\n",
    "security_password_policy.validation.comprehensive_password_validat": "Comprehensive password validation service.",
    "security_password_policy.validation.initialize_password_validator": "Initialize password validator with policy.",
    "security_password_policy.validation.comprehensive_password_validat_1": "Comprehensive password validation.",
    "security_password_policy.validation.password_must_be_a_string": "Password must be a string",
    "security_password_policy.validation.password_must_be_at_least": "Password must be at least ",
    "security_password_policy.validation.password_must_be_no_more_than": "Password must be no more than ",
    "security_password_policy.validation.password_must_contain_at_least": "Password must contain at least one uppercase letter",
    "security_password_policy.validation.password_must_contain_at_least_1": "Password must contain at least one lowercase letter",
    "security_password_policy.validation.password_must_contain_at_least_2": "Password must contain at least one digit",
    "security_password_policy.validation.password_must_contain_at_least_3": "Password must contain at least one special character (",
    "security_password_policy.validation.password_must_contain_at_least_4": "Password must contain at least ",
    "security_password_policy.validation.password_should_not_contain_co": "Password should not contain common dictionary words",
    "security_password_policy.validation.is_below_required_threshold": ") is below required threshold (",
    "security_password_policy.validation.this_password_has_been_found_i": "This password has been found in data breaches and should not be used",
    "security_password_policy.validation.check_if_password_contains_per": "Check if password contains personal information.",
    "security_security_headers.validation.no_cache_no_store_must_reval": "no-cache, no-store, must-revalidate",
    "security_security_headers.validation.validate_incoming_request_for": "Validate incoming request for security issues.",
    "security_security_headers.validation.validate_request_origin_agains": "Validate request origin against allowed origins.",
    "security_csrf_protection.validation.validate_csrf_token": "Validate CSRF token.",
    "security_csrf_protection.validation.check_if_request_has_valid_api": "Check if request has valid API authentication.",
    "security_csrf_protection.validation.validate_double_submit_cookie": "Validate double-submit cookie tokens.",
    "security_csrf_protection.validation.validate_signed_token_with_cus": "Validate signed token with custom data.",
    "security___init__.validation.inputvalidator": "InputValidator",
    "security_security_config.validation.validate_that_all_required_sec": "Validate that all required security settings are configured for production.",
    "security_security_config.validation.missing_required_environment_v": "Missing required environment variable: ",
    "security_security_config.validation.cors_origins_should_not_includ": "CORS origins should not include '*' in production",
    "security_input_validator.validation.comprehensive_input_validatio": "\nComprehensive input validation and sanitization.\n",
    "security_input_validator.validation.comprehensive_input_validation": "Comprehensive input validation and sanitization service.",
    "security_input_validator.validation.validate_and_sanitize_email_ad": "Validate and sanitize email address.",
    "security_input_validator.validation.validate_password_against_secu": "Validate password against security policy.",
    "security_input_validator.validation.password_must_be_a_string": "Password must be a string",
    "security_input_validator.validation.password_must_be_at_least_12_c": "Password must be at least 12 characters long",
    "security_input_validator.validation.password_must_contain_at_least": "Password must contain at least one uppercase letter",
    "security_input_validator.validation.password_must_contain_at_least_1": "Password must contain at least one lowercase letter",
    "security_input_validator.validation.password_must_contain_at_least_2": "Password must contain at least one digit",
    "security_input_validator.validation.password_must_contain_at_least_3": "Password must contain at least one special character",
    "security_input_validator.validation.validate_and_sanitize_url": "Validate and sanitize URL.",
    "security_input_validator.validation.url_scheme_must_be_one_of": "URL scheme must be one of: ",
    "security_input_validator.validation.url_must_have_a_valid_domain": "URL must have a valid domain",
    "security_input_validator.validation.validate_file_upload_security": "Validate file upload security.",
    "security_input_validator.validation.file_must_have_an_extension": "File must have an extension",
    "security_input_validator.validation.validate_json_payload_for_secu": "Validate JSON payload for security issues.",
    "security_input_validator.validation.payload_must_be_a_dictionary": "Payload must be a dictionary",
    "utils_content_processing.validation.unsupported_file_format": "Unsupported file format: ",
    "utils_content_processing.validation.validate_content_for_question": "Validate content for question generation suitability.",
    "utils_content_processing.validation.validate_content_for_question_1": "Validate content for question generation.",
    "utils_content_processing.validation.get_basic_file_information": "Get basic file information.",
    "utils_file_upload_security.validation.validates_and_secures_file_upl": "Validates and secures file uploads.",
    "utils_file_upload_security.validation.initialize_the_validator": "Initialize the validator.",
    "utils_file_upload_security.validation.could_not_validate_file_type": "Could not validate file type: ",
    "utils_file_upload_security.validation.save_file_securely_with_valida": "Save file securely with validation.",
    "utils_pdf_generator.validation.beneficiary_information": "Beneficiary Information",
    "utils_pdf_generator.validation.beneficiary_information_1": "Beneficiary Information",
    "utils_pdf_generator.validation.trainer_information": "Trainer Information",
    "utils_pdf_generator.validation.report_information": "Report Information",
    "utils_ai.validation.provide_the_analysis": "\n    \n    Provide the analysis in the following JSON format:\n    {\n        \"strengths\": [\"strength 1\", \"strength 2\", ...],\n        \"areas_to_improve\": [\"area 1\", \"area 2\", ...],\n        \"recommendations\": [\"recommendation 1\", \"recommendation 2\", ...],\n        \"summary\": \"A brief summary paragraph of the overall performance.\"\n    }\n    \n    Keep the response concise and focused on the most important insights.\n    ",
    "utils_ai.validation.generate_report_content_w": "\n    Generate report content with recommendations using OpenAI.\n    \n    Args:\n        beneficiary_data: Dictionary with beneficiary information\n        evaluation_data: List of evaluation dictionaries with results\n        \n    Returns:\n        Dictionary with generated report sections\n    ",
    "utils_ai.validation.as_an_educational_expert": "\n    As an educational expert, generate a comprehensive report for a beneficiary based on their evaluation results.\n    \n    Beneficiary Information:\n    Name: ",
    "utils_ai.validation.generate_a_report_wi": "\n    \n    Generate a report with the following sections in JSON format:\n    {\n        \"executive_summary\": \"A concise summary of the overall performance and key findings\",\n        \"strengths\": [\"strength 1\", \"strength 2\", ...],\n        \"areas_for_development\": [\"area 1\", \"area 2\", ...],\n        \"recommendations\": [\"recommendation 1\", \"recommendation 2\", ...],\n        \"conclusion\": \"A concluding paragraph with next steps and encouragement\"\n    }\n    \n    Make the report professional, constructive, and actionable.\n    ",
    "utils_data_encryption.validation.decrypt_and_validate_password": "Decrypt and validate password reset token.",
    "utils_logger.validation.custom_formatter_for_flask_req": "Custom formatter for Flask request logging.",
    "utils_logger.validation.format_the_record_with_request": "Format the record with request-specific information.",
    "utils_backup_manager.validation.get_file_size_in_human_readabl": "Get file size in human readable format.",
    "utils_datetime_utils.validation.format_datetime_to_string": "Format datetime to string.\n    \n    Args:\n        dt: datetime object\n        fmt: Format string\n        \n    Returns:\n        Formatted string or empty string if dt is None\n    ",
    "utils_datetime_utils.validation.format_date_to_string": "Format date to string.\n    \n    Args:\n        dt: datetime object\n        fmt: Format string\n        \n    Returns:\n        Formatted string or empty string if dt is None\n    ",
    "utils_health_checker.validation.missing_required_environment_v": "Missing required environment variable: ",
    "utils_error_handler.validation.authentication_required": "Authentication required",
    "utils_error_handler.validation.validate_request_data_has_requ": "Validate request data has required fields.",
    "utils_error_handler.validation.missing_required_fields": "Missing required fields",
    "utils_error_handler.validation.this_field_is_required": "This field is required",
    "utils_error_handler.validation.validate_pagination_parameters": "Validate pagination parameters.",
    "utils_error_handler.validation.page_must_be_greater_than_0": "Page must be greater than 0",
    "utils_error_handler.validation.per_page_must_be_between_1_and": "Per page must be between 1 and 100",
    "utils_multi_tenancy.validation.validate_that_instance_belongs": "Validate that instance belongs to current tenant.",
    "utils_multi_tenancy.validation.save_instance_with_tenant_vali": "Save instance with tenant validation.",
    "utils_sentry.validation.configure_sentry_scope_with_re": "Configure Sentry scope with request information.",
    "utils_decorators.validation.decorator_to_validate_request": "Decorator to validate request data using a Marshmallow schema.",
    "utils_decorators.validation.decorator_to_check_if_user_has": "Decorator to check if user has required permission.",
    "utils_decorators.validation.authentication_required": "Authentication required",
    "utils_decorators.validation.required_permission": "Required permission: ",
    "utils_decorators.validation.admin_access_required": "Admin access required",
    "database_indexing_strategy.validation.determine_if_a_column_should_b": "Determine if a column should be indexed",
    "database_backup.validation.format_plain": "--format=plain",
    "database_backup.validation.backup_is_valid": "Backup is valid",
    "database_migrations.validation.validate_migration_files": "Validate migration files",
    "database_migrations.validation.migrate_user_roles_to_new_form": "Migrate user roles to new format",
    "database_migrations.validation.normalize_phone_number_formats": "Normalize phone number formats",
    "monitoring_error_tracking.validation.export_metrics_in_prometheus_f": "Export metrics in Prometheus format",
    "monitoring_alarm_system.validation.addi": "\n            \n            Additional Information:\n            ",
    "models_adaptive_test.validation.calculate_information_value_at": "Calculate information value at given ability level.",
    "models_adaptive_test.validation.check_if_test_should_stop_base": "Check if test should stop based on stopping criteria.",
    "models_gamification.validation.calculate_total_xp_required_fo": "Calculate total XP required for a given level.",
    "cli_i18n_commands.validation.both_key_and_value_are_r": "❌ Both --key and --value are required for updating translations",
    "cli_i18n_commands.validation.validate_i18n_configuration_an": "Validate i18n configuration and data integrity.",
    "cli_i18n_commands.validation.validating_i18n_configuratio": "🔍 Validating i18n configuration...",
    "cli_i18n_commands.validation.validation_warnings": "⚠️  Validation Warnings:",
    "cli_i18n_commands.validation.all_i18n_validations_passed": "✅ All i18n validations passed!",
    "cli_i18n_commands.validation.validation_summary": "\n📊 Validation Summary:",
    "schemas_auth.validation.password_must_be_at_least_8_ch": "Password must be at least 8 characters long",
    "schemas_auth.validation.validate_that_passwords_match": "Validate that passwords match.",
    "schemas_auth.validation.validate_that_email_is_not_alr": "Validate that email is not already in use.",
    "schemas_auth.validation.validate_that_passwords_match_1": "Validate that passwords match.",
    "schemas_auth.validation.validate_that_passwords_match_2": "Validate that passwords match.",
    "schemas_assessment.validation.assessment_schemas_for_validat": "Assessment schemas for validation.",
    "schemas_assessment.validation.validate_question_based_on_typ": "Validate question based on type.",
    "schemas_assessment.validation.answer_options_are_required_fo": "Answer options are required for multiple choice questions",
    "schemas_assessment.validation.at_least_2_answer_options_are": "At least 2 answer options are required",
    "schemas_assessment.validation.true_false_questions_must_have": "True/False questions must have exactly 2 options",
    "schemas_assessment.validation.validate_scoring_settings": "Validate scoring settings.",
    "schemas_user.validation.password_must_be_at_least_8_ch": "Password must be at least 8 characters long",
    "schemas_user.validation.validate_that_passwords_match": "Validate that passwords match.",
    "schemas_user.validation.validate_that_email_is_not_alr": "Validate that email is not already in use.",
    "schemas_user.validation.validate_that_email_is_not_alr_1": "Validate that email is not already in use by another user.",
    "schemas_user.validation.validate_that_subdomain_is_val": "Validate that subdomain is valid and not already in use.",
    "schemas_user.validation.validate_that_passwords_match_1": "Validate that passwords match.",
    "schemas_video_conference.validation.video_conference_schemas_for_r": "Video Conference schemas for request/response validation.",
    "schemas_video_conference.validation.validate_start_and_end_times": "Validate start and end times.",
    "schemas_video_conference.validation.start_time_must_be_before_end": "Start time must be before end time.",
    "schemas_video_conference.validation.validate_delivery_method_requi": "Validate delivery method requirements.",
    "schemas_video_conference.validation.phone_number_is_required_for_s": "Phone number is required for SMS delivery.",
    "schemas_video_conference.validation.schema_for_video_conference_pr": "Schema for video conference provider information.",
    "schemas_video_conference.validation.schema_for_webrtc_room_informa": "Schema for WebRTC room information.",
    "schemas_video_conference.validation.schema_for_webrtc_active_sessi": "Schema for WebRTC active session information.",
    "schemas_beneficiary.validation.schema_for_creating_a_benefici": "Schema for creating a beneficiary with user information.",
    "schemas_beneficiary.validation.password_must_be_at_least_8_ch": "Password must be at least 8 characters long",
    "schemas_beneficiary.validation.validate_that_passwords_match": "Validate that passwords match if password is provided.",
    "schemas_beneficiary.validation.validate_that_email_is_not_alr": "Validate that email is not already in use by a beneficiary.",
    "schemas_beneficiary.validation.preprocess_the_data_before_val": "Preprocess the data before validation.",
    "schemas_beneficiary.validation.validate_that_email_is_not_alr_1": "Validate that email is not already in use by another user.",
    "schemas_beneficiary.validation.preprocess_the_data_before_val_1": "Preprocess the data before validation.",
    "schemas_beneficiary.validation.validate_that_end_time_is_afte": "Validate that end_time is after start_time.",
    "schemas_beneficiary.validation.end_time_must_be_after_start_t": "End time must be after start time",
    "schemas_beneficiary.validation.validate_that_end_time_is_afte_1": "Validate that end_time is after start_time.",
    "schemas_beneficiary.validation.end_time_must_be_after_start_t_1": "End time must be after start time",
    "schemas_profile.validation.validate_linkedin_url_format": "Validate LinkedIn URL format.",
    "schemas_profile.validation.must_be_a_valid_linkedin_url": "Must be a valid LinkedIn URL",
    "schemas_profile.validation.validate_twitter_url_format": "Validate Twitter URL format.",
    "schemas_profile.validation.must_be_a_valid_twitter_x_url": "Must be a valid Twitter/X URL",
    "schemas_settings.validation.settings_schemas_for_validatio": "Settings schemas for validation.",
    "schemas_adaptive_test.validation.validate_guessing_parameter_ba": "Validate guessing parameter based on question type.",
    "schemas_availability.validation.availability_schemas_for_valid": "Availability schemas for validation.",
    "schemas_availability.validation.validate_recurrence_settings": "Validate recurrence settings.",
    "schemas_availability.validation.recurrence_pattern_is_required": "Recurrence pattern is required when is_recurring is True",
    "schemas_availability.validation.recurrence_end_date_is_require": "Recurrence end date is required when is_recurring is True",
    "schemas_gamification.validation.schemas_for_gamification_syste": "Schemas for Gamification system validation and serialization.",
    "schemas_gamification.validation.validate_that_end_date_is_afte": "Validate that end_date is after start_date.",
    "schemas_gamification.validation.end_date_must_be_after_start_d": "end_date must be after start_date",
    "schemas_gamification.validation.validate_challenge_data": "Validate challenge data.",
    "schemas_gamification.validation.end_date_must_be_after_start_d_1": "end_date must be after start_date",
    "schemas_gamification.validation.validate_availability_dates": "Validate availability dates.",
    "schemas_gamification.validation.validate_goal_data": "Validate goal data.",
    "schemas_gamification.validation.deadline_must_be_in_the_future": "deadline must be in the future",
    "integrations_registry.validation.get_information_about_all_regi": "Get information about all registrations.",
    "integrations_testing.validation.missing_required_configuration": "Missing required configurations: ",
    "integrations_base.validation.get_integration_status_informa": "Get integration status information.",
    "video_base_video.validation.information_about_meeting_reco": "Information about meeting recordings.",
    "video_base_video.validation.parse_recurrence_pattern_into": "Parse recurrence pattern into provider-specific format.",
    "video_teams_integration.validation.aiohttp_is_required_for_teams": "aiohttp is required for Teams integration",
    "video_teams_integration.validation.convert_videomeetinginput_to_t": "Convert VideoMeetingInput to Teams meeting format.",
    "video_teams_integration.validation.joininformation": "joinInformation",
    "video_teams_integration.validation.joininformation_1": "joinInformation",
    "video_zoom_integration.validation.convert_videomeetinginput_to_z": "Convert VideoMeetingInput to Zoom meeting format.",
    "payments_stripe_integration.validation.validate_stripe_webhook_signat": "Validate Stripe webhook signature.",
    "payments_paypal_integration.validation.aiohttp_is_required_for_paypal": "aiohttp is required for PayPal integration",
    "payments_base_payment.validation.validate_webhook_signature": "Validate webhook signature.",
    "payments_base_payment.validation.convert_decimal_amount_to_api": "Convert decimal amount to API format (usually cents).",
    "payments_base_payment.validation.convert_api_amount_format_to_d": "Convert API amount format to decimal.",
    "calendar_outlook_calendar.validation.aiohttp_is_required_for_outloo": "aiohttp is required for Outlook integration",
    "calendar_outlook_calendar.validation.convert_calendareventinput_to": "Convert CalendarEventInput to Outlook event format.",
    "calendar_google_calendar.validation.convert_calendareventinput_to": "Convert CalendarEventInput to Google Calendar event format.",
    "email_base_email.validation.validate_email_address_format": "Validate email address format.",
    "email_base_email.validation.validate_and_filter_email_list": "Validate and filter email list.",
    "api_assessment.validation.is_required": " is required",
    "api_gamification_v2.validation.event_type_is_required": "Event type is required",
    "api_gamification_v2.validation.amount_must_be_positive": "Amount must be positive",
    "api_gamification_v2.validation.badge_id_is_required": "Badge ID is required",
    "api_gamification_v2.validation.team_id_or_join_code_is_requir": "Team ID or join code is required",
    "api_settings_routes.validation.missing_required_field": "Missing required field: ",
    "api_settings_routes.validation.provider_is_required": "Provider is required",
    "api_settings_appearance.validation.request_body_is_required": "Request body is required",
    "api_users.validation.get_the_current_user_s_profile": "Get the current user's profile information.",
    "api_webrtc.validation.get_webrtc_room_information": "Get WebRTC room information.",
    "api_documents.validation.either_user_id_or_role_must_be": "Either user_id or role must be provided",
    "api_documents.validation.either_user_id_or_role_must_be_1": "Either user_id or role must be provided",
    "api_documents.validation.both_version_ids_are_required": "Both version IDs are required",
    "api_video_conferences.validation.missing_required_field": "Missing required field: ",
    "api_video_conferences.validation.missing_required_field_1": "Missing required field: ",
    "api_video_conferences.validation.missing_required_field_2": "Missing required field: ",
    "api_evaluations.validation.tenant_admin_must_belong_to_a": "Tenant admin must belong to a tenant",
    "api_evaluations.validation.student_must_have_a_beneficiar": "Student must have a beneficiary profile",
    "api_evaluations.validation.tenant_admin_must_belong_to_a_1": "Tenant admin must belong to a tenant",
    "api_evaluations.validation.trainer_must_belong_to_a_tenan": "Trainer must belong to a tenant",
    "api_evaluations.validation.must_filter_by_evaluation_id_o": "Must filter by evaluation_id or beneficiary_id",
    "api_evaluations.validation.must_filter_by_evaluation_id_o_1": "Must filter by evaluation_id or beneficiary_id",
    "api_evaluations.validation.student_must_have_a_beneficiar_1": "Student must have a beneficiary profile",
    "api_evaluations.validation.session_id_is_required": "Session ID is required",
    "api_performance_monitoring.validation.query_sql_is_required": "Query SQL is required",
    "api_calendar.validation.is_required": " is required",
    "api_programs.validation.beneficiary_id_required": "Beneficiary ID required",
    "api_programs.validation.beneficiary_id_required_1": "Beneficiary ID required",
    "api_programs.validation.information_technology": "Information Technology",
    "api_chat.validation.message_is_required": "Message is required",
    "api_chat.validation.reason_is_required": "Reason is required",
    "api_chat.validation.is_required": " is required",
    "api_recurring_appointments.validation.missing_required_field": "Missing required field: ",
    "api_recurring_appointments.validation.missing_required_field_1": "Missing required field: ",
    "api_recurring_appointments.validation.missing_required_field_2": "Missing required field: ",
    "api_recurring_appointments.validation.missing_required_field_3": "Missing required field: ",
    "api_two_factor_auth.validation.token_is_required": "Token is required",
    "api_two_factor_auth.validation.session_token_and_verification": "Session token and verification token are required",
    "api_two_factor_auth.validation.password_confirmation_required": "Password confirmation required",
    "api_two_factor_auth.validation.password_confirmation_required_1": "Password confirmation required",
    "api_settings_general.validation.get_list_of_available_date_for": "Get list of available date formats.",
    "api_ai_question_generation.validation.missing_required_fields": "Missing required fields",
    "api_ai_question_generation.validation.missing_required_fields_1": "Missing required fields",
    "api_ai_question_generation.validation.missing_required_fields_2": "Missing required fields",
    "api_ai_question_generation.validation.question_count_must_be_between": "Question count must be between 1 and 100",
    "api_ai_question_generation.validation.rejection_notes_required": "Rejection notes required",
    "api_ai_question_generation.validation.missing_required_fields_3": "Missing required fields",
    "api_ai_question_generation.validation.question_id_required": "Question ID required",
    "api_ai_question_generation.validation.action_required": "Action required",
    "api_ai_question_generation.validation.export_questions_to_various_fo": "Export questions to various formats.",
    "api_ai_question_generation.validation.question_ids_required": "Question IDs required",
    "api_ai_question_generation.validation.unsupported_format": "Unsupported format",
    "api_ai_question_generation.validation.format_not_implemented_yet": "Format not implemented yet",
    "api_ai_question_generation.validation.admin_access_required": "Admin access required",
    "api_ai_reports.validation.at_least_2_beneficiary_ids_req": "At least 2 beneficiary IDs required",
    "api_ai_reports.validation.beneficiary_id_is_required": "beneficiary_id is required",
    "api_ai_reports.validation.at_least_one_source_is_require": "At least one source is required",
    "api_ai_reports.validation.beneficiary_ids_array_is_requi": "beneficiary_ids array is required",
    "api_ai_reports.validation.export_a_report_in_different_f": "Export a report in different formats (PDF, DOCX, etc.).",
    "api_ai_reports.validation.format": " format",
    "api_messages.validation.search_query_is_required": "Search query is required",
    "api_reports.validation.export_report_in_different_for": "Export report in different formats.",
    "api_reports.validation.generate_a_report_in_the_reque": "Generate a report in the requested format.",
    "api_notifications.validation.user_id_is_required": "User ID is required",
    "api_notifications.validation.user_ids_are_required_as_a_lis": "User IDs are required as a list",
    "api_notifications.validation.role_is_required": "Role is required",
    "api_i18n.validation.get_comprehensive_language_inf": "Get comprehensive language information.",
    "api_i18n.validation.format_data_according_to_local": "Format data according to locale.",
    "api_adaptive_tests.validation.pool_id_and_beneficiary_id_are": "pool_id and beneficiary_id are required",
    "api_adaptive_tests.validation.test_set_id_and_pool_id_are_re": "test_set_id and pool_id are required",
    "api_adaptive_tests.validation.adaptive_session_id_and_evalua": "adaptive_session_id and evaluation_id are required",
    "api_folders.validation.folder_name_is_required": "Folder name is required",
    "api_tests.validation.missing_required_field": "Missing required field: ",
    "api_tenants.validation.tenant_name_is_required": "Tenant name is required",
    "api_availability.validation.trainer_id_is_required": "trainer_id is required",
    "api_sms.validation.phone_number_and_message_are_r": "Phone number and message are required",
    "api_sms.validation.phone_number_and_template_id_a": "Phone number and template ID are required",
    "api_sms.validation.phone_numbers_and_message_are": "Phone numbers and message are required",
    "api_sms.validation.phone_number_message_and_sch": "Phone number, message, and scheduled time are required",
    "api_sms.validation.validate_a_phone_number": "Validate a phone number.",
    "api_sms.validation.phone_number_is_required": "Phone number is required",
    "api_sms.validation.is_required": " is required",
    "api_sms.validation.campaign_name_is_required": "Campaign name is required",
    "api_sms.validation.either_template_id_or_message": "Either template_id or message_content is required",
    "api_gamification.validation.get_current_user_s_xp_and_leve": "Get current user's XP and level information.",
    "api_gamification.validation.user_id_is_required": "user_id is required",
    "api_gamification.validation.event_type_is_required": "event_type is required",
    "api_gamification.validation.evaluation_id_and_score_are_re": "evaluation_id and score are required",
    "api_gamification.validation.program_id_is_required": "program_id is required",
    "beneficiaries_v2_list_routes.validation.email_is_required": "Email is required",
    "beneficiaries_v2_list_routes.validation.first_name_and_last_name_are_r": "First name and last name are required",
    "beneficiaries_v2_list_routes.validation.tenant_id_is_required_for_supe": "Tenant ID is required for super admin",
    "beneficiaries_v2_trainer_routes.validation.trainer_id_required": "Trainer ID required",
    "v2_auth.validation.refresh_token_required": "Refresh token required",
    "v2_auth.validation.email_required": "Email required",
    "v2_auth.validation.token_and_new_password_require": "Token and new password required",
    "v2_auth.validation.current_and_new_password_requi": "Current and new password required",
    "v2_beneficiaries.validation.content_required": "Content required",
    "programs_v2_enrollment_routes.validation.beneficiary_must_belong_to_sam": "Beneficiary must belong to same tenant as program",
    "programs_v2_progress_routes.validation.module_id_is_required": "Module ID is required",
    "programs_v2_module_routes.validation.module_name_is_required": "Module name is required",
    "routes_alerts.validation.missing_required_field": "Missing required field: ",
    "routes_alerts.validation.missing_required_field_1": "Missing required field: ",
    "routes_analytics.validation.export_logs_in_various_formats": "Export logs in various formats",
    "database_query_optimizer.validation.slow_query_information": "Slow query information",
    "database_query_optimizer.validation.analyze_a_query_and_p": "\n        Analyze a query and provide detailed optimization information.\n        ",
    "config_performance_config.validation.validate_configuration_and_ret": "Validate configuration and return list of issues",
    "config_performance_config.validation.unsupported_configuration_file": "Unsupported configuration file format: ",
    "config_performance_config.validation.unsupported_format": "Unsupported format: ",
    "testing_benchmark_runner.validation.unsupported_format": "Unsupported format: ",
    "testing_benchmark_runner.validation.export_report_to_csv_format": "Export report to CSV format",
    "api_pagination_optimizer.validation.cursor_pagination_information": "Cursor pagination information",
    "api_pagination_optimizer.validation.parse_a_cursor_string": "\n        Parse a cursor string back to cursor information.\n        ",
    "api_response_optimizer.validation.add_timing_informatio": "\n        Add timing information to response headers.\n        ",
    "api_response_optimizer.validation.check_if_response_should_skip": "Check if response should skip optimization",
    "api_response_optimizer.validation.no_cache_no_store_must_reval": "no-cache, no-store, must-revalidate",
    "monitoring_profiler.validation.export_profiling_data_in_vario": "Export profiling data in various formats",
    "monitoring_profiler.validation.unsupported_export_format": "Unsupported export format: ",
    "monitoring_profiler.validation.export_report_data_to_csv_form": "Export report data to CSV format",
    "assets_image_optimizer.validation.image_optimizer_advanced_ima": "\nImage Optimizer\n\nAdvanced image optimization including compression, format conversion,\nresponsive images, and automatic optimization based on client capabilities.\n",
    "assets_image_optimizer.validation.advanced_image_optimizer": "\n    Advanced image optimizer with format conversion and responsive image generation.\n    ",
    "assets_image_optimizer.validation.convert_image_to_mode": "\n        Convert image to modern formats (WebP, AVIF).\n        ",
    "assets_image_optimizer.validation.determine_optimal_format_based": "Determine optimal format based on image characteristics",
    "assets_image_optimizer.validation.save_image_with_format_specifi": "Save image with format-specific optimizations",
    "i18n_locale_manager.validation.locale_manager_handles_date": "\nLocale Manager\nHandles date, time, number, and currency formatting\n",
    "i18n_locale_manager.validation.manager_for_locale_specific_fo": "Manager for locale-specific formatting.",
    "i18n_locale_manager.validation.format_date_according_to_local": "Format date according to locale.",
    "i18n_locale_manager.validation.format_time_according_to_local": "Format time according to locale.",
    "i18n_locale_manager.validation.format_datetime_according_to_l": "Format datetime according to locale.",
    "i18n_locale_manager.validation.format_time_delta_relative_ti": "Format time delta (relative time).",
    "i18n_locale_manager.validation.format_number_according_to_loc": "Format number according to locale.",
    "i18n_locale_manager.validation.format_currency_according_to_l": "Format currency according to locale.",
    "i18n_locale_manager.validation.get_calendar_information_for_a": "Get calendar information for a locale.",
    "i18n_locale_manager.validation.get_number_formatting_symbols": "Get number formatting symbols for a locale.",
    "i18n_locale_manager.validation.format_file_size_with_locale_s": "Format file size with locale-specific units.",
    "i18n_locale_manager.validation.format_distance_with_appropria": "Format distance with appropriate units.",
    "i18n_rtl_support.validation.get_rtl_information_for_a_lang": "Get RTL information for a language.",
    "i18n_rtl_support.validation.wrap_mixed_directiona": "\n        Wrap mixed directional content for proper display.\n        \n        Args:\n            text: Text containing mixed directional content\n            base_direction: Base direction of the document\n            \n        Returns:\n            Text with proper directional formatting\n        ",
    "i18n_translator.validation.format_number_according_to_lan": "Format number according to language locale.",
    "i18n_manager.validation.get_detailed_information_about": "Get detailed information about a language.",
    "i18n_manager.validation.format_date_according_to_langu": "Format date according to language locale.",
    "i18n_manager.validation.format_number_according_to_lan": "Format number according to language locale.",
    "i18n_manager.validation.format_currency_according_to_l": "Format currency according to language locale.",
    "i18n_manager.validation.get_rtl_information_for_a_lang": "Get RTL information for a language.",
    "i18n_manager.validation.unsupported_export_format": "Unsupported export format: ",
    "i18n_manager.validation.unsupported_import_format": "Unsupported import format: ",
    "services_appointment_service.validation.missing_required_field": "Missing required field: ",
    "services_appointment_service.validation.start_time_must_be_before_end": "Start time must be before end time",
    "services_appointment_service.validation.start_time_must_be_before_end_1": "Start time must be before end time",
    "services_ai_verification.validation.check_for_personal_information": "Check for personal information in content",
    "services_sms_service.validation.validate_and_format_a_phone_nu": "Validate and format a phone number.",
    "services_document_service.validation.either_user_id_or_role_must_be": "Either user_id or role must be provided",
    "services_document_service.validation.either_user_id_or_role_must_be_1": "Either user_id or role must be provided",
    "services_ai_chat_service.validation.you_are_an_appointment_schedul": "You are an appointment scheduling assistant. Help users with booking, rescheduling, \n                         and managing their appointments. Provide clear information about availability and \n                         appointment procedures.",
    "services_ai_chat_service.validation.get_information_about_programs": "Get information about programs",
    "services_ai_chat_service.validation.export_a_conversation_in_speci": "Export a conversation in specified format.",
    "services_ai_chat_service.validation.unsupported_export_format": "Unsupported export format",
    "services_ai_chat_service.validation.what_areas_should_i_focus_on": "What areas should I focus on?",
    "services_ai_chat_service.validation.check_if_conversation_should_b": "Check if conversation should be closed.",
    "services_ai_chat_service.validation.get_program_information": "Get program information.",
    "services_ai_chat_service.validation.get_context_information_for_re": "Get context information for related entity.",
    "services_ai_chat_service.validation.get_beneficiary_context_inform": "Get beneficiary context information.",
    "services_ai_chat_service.validation.format_availability_check_resp": "Format availability check response.",
    "services_ai_chat_service.validation.format_appointment_booking_res": "Format appointment booking response.",
    "services_ai_chat_service.validation.format_progress_report_respons": "Format progress report response.",
    "services_ai_chat_service.validation.format_program_information_res": "Format program information response.",
    "services_question_randomization_service.validation.extract_questions_that_should": "Extract questions that should appear at fixed positions.",
    "services_question_randomization_service.validation.find_a_valid_position_for_a_qu": "Find a valid position for a question given blocking constraints.",
    "services_log_analytics_service.validation.check_if_log_analytics_should": "Check if log analytics should be enabled",
    "services_video_conference_service_updated.validation.start_a_video_confere": "\n        Start a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            user_id: The user ID starting the conference\n            \n        Returns:\n            Dict: Conference start information\n        ",
    "services_ai_question_generator_service.validation.unsupported_file_format": "Unsupported file format: ",
    "services_ai_question_generator_service.validation.no_valid_question_types_specif": "No valid question types specified",
    "services_ai_question_generator_service.validation.each_question_should_have_4": "\n- Each question should have 4 options (A, B, C, D)\n- Only one correct answer per question\n- Include explanations for correct answers\n- Vary difficulty across questions\n- Ensure questions test understanding, not just memorization\n\n",
    "services_ai_question_generator_service.validation.please_respond_with_a_json_a": "\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Question text here?\",\n    \"options\": {\n      \"A\": \"First option\",\n      \"B\": \"Second option\", \n      \"C\": \"Third option\",\n      \"D\": \"Fourth option\"\n    },\n    \"correct_answer\": \"A\",\n    \"explanation\": \"Explanation of why A is correct\",\n    \"difficulty\": 5.5,\n    \"blooms_level\": \"understand\",\n    \"keywords\": [\"keyword1\", \"keyword2\"],\n    \"topics\": [\"topic1\"],\n    \"confidence\": 0.9\n  }\n]\n",
    "services_ai_question_generator_service.validation.clear_unambiguous_statemen": "\n- Clear, unambiguous statements\n- Mix of true and false answers\n- Include explanations\n- Avoid trick questions\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Statement to evaluate\",\n    \"correct_answer\": true,\n    \"explanation\": \"Explanation of why this is true/false\",\n    \"difficulty\": 4.0,\n    \"blooms_level\": \"remember\",\n    \"keywords\": [\"keyword1\"],\n    \"confidence\": 0.85\n  }\n]\n",
    "services_ai_question_generator_service.validation.requirements_use_undersco": "\n\nREQUIREMENTS:\n- Use underscores (____) for blanks\n- Provide clear context clues\n- Include correct answers\n- Vary the difficulty\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"The ____ is responsible for ____.\",\n    \"correct_answer\": [\"brain\", \"thinking\"],\n    \"explanation\": \"The brain is the organ responsible for thinking and cognitive functions.\",\n    \"difficulty\": 5.0,\n    \"keywords\": [\"brain\", \"thinking\"]\n  }\n]\n",
    "services_ai_question_generator_service.validation.requirements_questions_sh": "\n\nREQUIREMENTS:\n- Questions should require 2-3 sentence answers\n- Test comprehension and application\n- Include sample answers\n- Focus on key concepts\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Explain the main concept discussed in the passage.\",\n    \"correct_answer\": \"Sample answer showing expected response length and content.\",\n    \"explanation\": \"Key points that should be covered in the answer.\",\n    \"difficulty\": 6.0,\n    \"blooms_level\": \"understand\"\n  }\n]\n",
    "services_ai_question_generator_service.validation.requirements_questions_sh_1": "\n\nREQUIREMENTS:\n- Questions should require detailed, multi-paragraph responses\n- Encourage critical thinking and analysis\n- Include grading criteria\n- Test higher-order thinking skills\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Analyze and discuss the implications of...\",\n    \"correct_answer\": \"Essay should include: 1) Introduction with thesis, 2) Analysis of key points, 3) Examples and evidence, 4) Conclusion with synthesis\",\n    \"explanation\": \"Grading criteria and key points to address\",\n    \"difficulty\": 8.0,\n    \"blooms_level\": \"analyze\"\n  }\n]\n",
    "services_ai_question_generator_service.validation.requirements_create_pairs": "\n\nREQUIREMENTS:\n- Create pairs of related items\n- Include at least 5 pairs per question\n- Ensure clear relationships\n- Avoid ambiguous matches\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Match the following terms with their definitions:\",\n    \"options\": {\n      \"terms\": [\"Term 1\", \"Term 2\", \"Term 3\"],\n      \"definitions\": [\"Definition A\", \"Definition B\", \"Definition C\"]\n    },\n    \"correct_answer\": {\"Term 1\": \"Definition A\", \"Term 2\": \"Definition B\", \"Term 3\": \"Definition C\"},\n    \"difficulty\": 5.5\n  }\n]\n",
    "services_ai_question_generator_service.validation.requirements_create_logic": "\n\nREQUIREMENTS:\n- Create logical sequences (steps, chronological order, etc.)\n- Include 4-6 items to order\n- Ensure clear correct sequence\n- Test understanding of processes or relationships\n\nPlease respond with a JSON array in this format:\n[\n  {\n    \"question\": \"Arrange the following steps in the correct order:\",\n    \"options\": [\"Step A\", \"Step B\", \"Step C\", \"Step D\"],\n    \"correct_answer\": [\"Step C\", \"Step A\", \"Step D\", \"Step B\"],\n    \"explanation\": \"The correct sequence is based on...\",\n    \"difficulty\": 6.0\n  }\n]\n",
    "services_ai_question_generator_service.validation.assess_technical_quality_form": "Assess technical quality (formatting, structure, etc.).",
    "services_ai_question_generator_service.validation.use_information_in_new_situati": "Use information in new situations",
    "services_availability_service.validation.date_is_required_for_availabil": "Date is required for availability exception",
    "services_webrtc_service.validation.join_a_webrtc_room": "\n        Join a WebRTC room.\n        \n        Args:\n            room_id: Room ID to join\n            user_id: User ID joining\n            socket_id: Socket connection ID\n            \n        Returns:\n            Dict: Room join information\n        ",
    "services_webrtc_service.validation.leave_a_webrtc_room": "\n        Leave a WebRTC room.\n        \n        Args:\n            socket_id: Socket connection ID\n            \n        Returns:\n            Dict: Leave information or None if not in room\n        ",
    "services_webrtc_service.validation.get_room_information": "\n        Get room information.\n        \n        Args:\n            room_id: Room ID\n            \n        Returns:\n            Dict: Room information\n        ",
    "services_webrtc_service.validation.get_participant_infor": "\n        Get participant information.\n        \n        Args:\n            socket_id: Socket connection ID\n            \n        Returns:\n            Dict: Participant information or None\n        ",
    "services_two_factor_service.validation.valid_token": "Valid token",
    "services_two_factor_service.validation.valid_backup_code": "Valid backup code",
    "services_two_factor_service.validation.check_if_2fa_is_required_for_a": "Check if 2FA is required for a user.",
    "services_two_factor_service.validation.check_if_2fa_should_be_enforce": "Check if 2FA should be enforced for a specific role.",
    "services_video_conference_service.validation.get_zoom_meeting_information": "Get Zoom meeting information.",
    "services_video_conference_service.validation.get_google_meet_meeting_inform": "Get Google Meet meeting information.",
    "services_video_conference_service.validation.get_microsoft_teams_meeting_in": "Get Microsoft Teams meeting information.",
    "services_video_conference_service.validation.get_webrtc_meeting_information": "Get WebRTC meeting information.",
    "services_video_conference_service.validation.start_a_video_confere": "\n        Start a video conference.\n        \n        Args:\n            conference_id: The conference ID\n            user_id: The user ID starting the conference\n            \n        Returns:\n            Dict: Conference start information\n        ",
    "services_alert_service.validation.check_if_alert_should_be_sent": "Check if alert should be sent based on rate limiting",
    "services_performance_prediction_service.validation.intensive_support_required": "Intensive Support Required",
    "services_performance_prediction_service.validation.chance_of_completion_urgent": "% chance of completion. Urgent intervention required.",
    "services_performance_prediction_service.validation.risk_level_immediate_attenti": " risk level. Immediate attention required.",
    "services_beneficiary_service.validation.export_beneficiary_data_in_spe": "Export beneficiary data in specified format.",
    "services_beneficiary_service.validation.unsupported_export_format": "Unsupported export format: ",
    "services_beneficiary_service.validation.unsupported_export_format_1": "Unsupported export format: ",
    "services_beneficiary_service.validation.personal_information": "Personal Information",
    "services_storage_service.validation.validate_file_size_based_on_ty": "Validate file size based on type.",
    "services_storage_service.validation.get_file_information": "Get file information.",
    "services_ai_report_service.validation.at_least_2_beneficiaries_requi": "At least 2 beneficiaries required for comparison",
    "services_ai_report_service.validation.get_beneficiary_profile_inform": "Get beneficiary profile information.",
    "services_ai_report_service.validation.plea": "\n            \n            Please provide:\n            1. An executive summary (2-3 sentences)\n            2. 3-5 key findings\n            3. Analysis of strengths and areas for improvement\n            4. 3-5 specific, actionable recommendations\n            5. Priority action items\n            \n            Format the response as a structured analysis with clear sections.\n            ",
    "services_ai_report_service.validation.parse_ai_response_into_structu": "Parse AI response into structured format.",
    "reporting_realtime_service.validation.dashboard_id_required_for_dash": "Dashboard ID required for dashboard subscription",
    "reporting_realtime_service.validation.validate_subscription_configur": "Validate subscription configuration",
    "reporting_realtime_service.validation.report_configuration_required": "Report configuration required for report subscription",
    "reporting_realtime_service.validation.dashboard_id_required_for_dash_1": "Dashboard ID required for dashboard subscription",
    "reporting_realtime_service.validation.widget_configuration_required": "Widget configuration required for widget subscription",
    "reporting_realtime_service.validation.chart_and_data_configuration_r": "Chart and data configuration required for chart subscription",
    "reporting_visualization_service.validation.visualization_service_provid": "\nVisualization Service\n\nProvides advanced data visualization capabilities:\n- Chart generation (bar, line, pie, scatter, area, etc.)\n- Geographic maps with various overlays\n- Heat maps and density plots\n- Interactive visualizations\n- Custom color schemes and styling\n- Data aggregation and transformation\n",
    "reporting_visualization_service.validation.show_hierarchical_data_in_circ": "Show hierarchical data in circular format",
    "reporting_visualization_service.validation.both_x_axis_and_y_axis_are_req": "Both x_axis and y_axis are required for bar chart",
    "reporting_visualization_service.validation.both_x_axis_and_y_axis_are_req_1": "Both x_axis and y_axis are required for line chart",
    "reporting_visualization_service.validation.both_label_and_value_columns_a": "Both label and value columns are required for pie chart",
    "reporting_visualization_service.validation.both_x_axis_and_y_axis_are_req_2": "Both x_axis and y_axis are required for scatter plot",
    "reporting_visualization_service.validation.both_x_axis_and_y_axis_are_req_3": "Both x_axis and y_axis are required for area chart",
    "reporting_visualization_service.validation.x_axis_column_is_required_for": "x_axis column is required for histogram",
    "reporting_visualization_service.validation.y_axis_column_is_required_for": "y_axis column is required for box plot",
    "reporting_visualization_service.validation.both_x_axis_and_y_axis_are_req_4": "Both x_axis and y_axis are required for heatmap",
    "reporting_visualization_service.validation.both_labels_and_values_are_req": "Both labels and values are required for treemap",
    "reporting_visualization_service.validation.both_labels_and_values_are_req_1": "Both labels and values are required for sunburst",
    "reporting_visualization_service.validation.both_x_axis_and_y_axis_are_req_5": "Both x_axis and y_axis are required for waterfall chart",
    "reporting_visualization_service.validation.validate_chart_configuration": "Validate chart configuration",
    "reporting_visualization_service.validation.chart_type_is_required": "Chart type is required",
    "reporting_report_builder_service.validation.no_valid_data_source_found_in": "No valid data source found in fields",
    "reporting_report_builder_service.validation.format_field_value_based_on_ty": "Format field value based on type",
    "reporting_report_builder_service.validation.validate_report_configuration": "Validate report configuration",
    "reporting_report_builder_service.validation.field_name_is_required": "Field name is required",
    "reporting_report_builder_service.validation.field_source_is_required": "Field source is required",
    "reporting_report_builder_service.validation.filter_field_is_required": "Filter field is required",
    "reporting_report_builder_service.validation.filter_value_is_required": "Filter value is required",
    "reporting_dashboard_service.validation.display_data_in_various_chart": "Display data in various chart formats",
    "reporting_dashboard_service.validation.display_data_in_tabular_format": "Display data in tabular format",
    "reporting_dashboard_service.validation.validate_widget_configuration": "Validate widget configuration",
    "reporting_dashboard_service.validation.widget_type_is_required": "Widget type is required",
    "reporting_dashboard_service.validation.required_field": "Required field '",
    "reporting_dashboard_service.validation.must_be_a_number": "' must be a number",
    "reporting_dashboard_service.validation.must_be_a_boolean": "' must be a boolean",
    "reporting_dashboard_service.validation.widget_position_must_include_x": "Widget position must include x, y, width, and height",
    "reporting_export_service.validation.export_service_provides_comp": "\nExport Service\n\nProvides comprehensive export capabilities:\n- PDF reports with custom layouts and styling\n- Excel workbooks with multiple sheets and formatting\n- CSV files with various delimiters and encodings\n- PowerPoint presentations with charts and data\n- Word documents with tables and formatting\n- JSON and XML data exports\n",
    "reporting_export_service.validation.service_for_exporting_reports": "Service for exporting reports in various formats",
    "reporting_export_service.validation.export_report_in_the_specified": "Export report in the specified format",
    "reporting_export_service.validation.unsupported_export_format": "Unsupported export format: ",
    "reporting_export_service.validation.export_format": "Export format ",
    "reporting_export_service.validation.return_supported_export_format": "Return supported export formats",
    "reporting_export_service.validation.validate_export_configuration": "Validate export configuration",
    "reporting_export_service.validation.unsupported_export_format_1": "Unsupported export format: ",
    "reporting_export_service.validation.csv_delimiter_must_be_a_single": "CSV delimiter must be a single character",
    "reporting_scheduler_service.validation.validate_schedule_configuratio": "Validate schedule configuration",
    "reporting_scheduler_service.validation.schedule_name_is_required": "Schedule name is required",
    "reporting_scheduler_service.validation.report_configuration_is_requir": "Report configuration is required",
    "reporting_scheduler_service.validation.delivery_configuration_is_requ": "Delivery configuration is required",
    "reporting_scheduler_service.validation.cron_expression_is_required_fo": "Cron expression is required for cron schedule type",
    "reporting_scheduler_service.validation.delivery_method_is_required": "Delivery method is required",
    "reporting_scheduler_service.validation.email_recipients_are_required": "Email recipients are required for email delivery",
    "reporting_scheduler_service.validation.webhook_url_is_required_for_we": "Webhook URL is required for webhook delivery",
    "reporting_scheduler_service.validation.target_path_is_required_for_fi": "Target path is required for filesystem delivery",
    "file_upload_image_processor.validation.open_and_validate_image_file": "Open and validate image file.",
    "file_upload_image_processor.validation.convert_image_to_a_safe_format": "Convert image to a safe format.",
    "file_upload_file_scanner.validation.scans_files_for_security_threa": "Scans files for security threats and validates file types.",
    "file_upload_file_scanner.validation.validate_file_type_ag": "\n        Validate file type against allowed types.\n        \n        Returns:\n            File category (image, document, video, audio)\n        ",
    "file_upload_file_scanner.validation.additional_validation_for_imag": "Additional validation for image files.",
    "file_upload_storage_manager.validation.store_file_securely_w": "\n        Store file securely with optional encryption and cloud upload.\n        \n        Args:\n            file_path: Path to file to store\n            file_category: Category of file (image, document, etc.)\n            user_id: ID of user uploading the file\n            metadata: Optional metadata to store with file\n            \n        Returns:\n            Dictionary with storage information\n        ",
    "file_upload_tests_example.validation.test_processing_a_valid_image": "Test processing a valid image.",
    "file_upload_tests_example.validation.test_uploading_a_valid_file": "Test uploading a valid file.",
    "file_upload_file_upload_service.validation.upload_a_file_with_co": "\n        Upload a file with comprehensive security checks.\n        \n        Args:\n            file: Werkzeug FileStorage object\n            user_id: ID of user uploading the file\n            tenant_id: Tenant ID for multi-tenancy\n            category: Optional file category override\n            metadata: Optional metadata to store with file\n            request_info: Request information (IP, user agent)\n            \n        Returns:\n            Dictionary with upload results and file information\n        ",
    "file_upload_file_upload_service.validation.download_a_file_with": "\n        Download a file with audit logging.\n        \n        Args:\n            file_id: ID of file to download\n            user_id: ID of user downloading the file\n            request_info: Request information for audit\n            \n        Returns:\n            Dictionary with file information and path\n        ",
    "file_upload_api_example.validation.upload_a_file_with_securi": "\n    Upload a file with security scanning.\n    \n    Expected form data:\n    - file: The file to upload\n    - category: Optional file category (image, document, video, audio)\n    - metadata: Optional JSON metadata\n    \n    Returns:\n        JSON response with file information\n    ",
    "core_base_service.validation.subclasses_must_implement_cre": "Subclasses must implement _create_repository",
    "core_base_service.validation.validate_data_before": "\n        Validate data before processing.\n        \n        Default implementation - override in subclasses for specific validation.\n        \n        Args:\n            data: Data to validate\n            context: Validation context\n            \n        Returns:\n            Validated data\n        ",
    "core_service_config.validation.validate_that_all_required_ser": "Validate that all required services are configured.",
    "core_service_config.validation.missing_required_services": "Missing required services: ",
    "core_service_factory.validation.register_this_factory": "\n        Register this factory's service in the container.\n        \n        Args:\n            singleton: Whether service should be singleton\n            **metadata: Additional metadata\n        ",
    "core_user_service_example.validation.validate_user_data": "Validate user data.",
    "core_user_service_example.validation.email_is_required": "Email is required",
    "core_user_service_example.validation.password_is_required": "Password is required",
    "core_user_service_example.validation.password_must_be_at_least_8_ch": "Password must be at least 8 characters",
    "core_user_service_example.validation.get_user_with_profile_informat": "Get user with profile information.",
    "core_decorators.validation.class_decorator_to_regist": "\n    Class decorator to register a service in the container.\n    \n    Args:\n        name: Service name (defaults to class name)\n        singleton: Whether service should be singleton\n        dependencies: List of dependency service names\n        interface: Interface that the service implements\n        \n    Example:\n        @service(name='my_service', singleton=True)\n        class MyService:\n            def __init__(self, user_repository):\n                self.user_repository = user_repository\n    ",
    "core_decorators.validation.decorator_to_cache_functi": "\n    Decorator to cache function results.\n    \n    Args:\n        timeout: Cache timeout in seconds\n        key_prefix: Cache key prefix\n        unless: Function to determine if result should be cached\n        \n    Example:\n        @cached(timeout=600)\n        def get_user(user_id):\n            return User.query.get(user_id)\n        \n        @cached(unless=lambda x: x is None)\n        def find_user(email):\n            return User.query.filter_by(email=email).first()\n    ",
    "core_decorators.validation.decorator_to_validate_fun": "\n    Decorator to validate function input.\n    \n    Args:\n        schema: Validation schema (dict or marshmallow schema)\n        \n    Example:\n        @validate_input({'name': str, 'age': int})\n        def create_user(data):\n            pass\n    ",
    "core_decorators.validation.decorator_to_check_author": "\n    Decorator to check authorization before executing function.\n    \n    Args:\n        required_permission: Required permission name\n        required_role: Required role name\n        \n    Example:\n        @authorize(required_permission='users.create')\n        def create_user(data):\n            pass\n        \n        @authorize(required_role='admin')\n        def admin_function():\n            pass\n    ",
    "core_decorators.validation.authentication_required": "Authentication required",
    "core_decorators.validation.required": "' required",
    "core_decorators.validation.required_1": "' required",
    "gamification_social_service.validation.get_detailed_team_information": "Get detailed team information",
    "gamification_level_service.validation.get_detailed_level_progress_in": "Get detailed level progress information for a user",
    "gamification_level_service.validation.get_xp_required_to_reach_a_spe": "Get XP required to reach a specific level",
    "gamification_level_service.validation.validate_a_level_system_config": "Validate a level system configuration",
    "gamification_level_service.validation.missing_required_field": "Missing required field: ",
    "optimization_query_optimizer.validation.should_have_an_index": " should have an index",
    "optimization_db_indexing.validation.determine_if_an_index_should_b": "Determine if an index should be dropped",
    "video_conference_providers_base_provider.validation.get_recordings_for_a": "\n        Get recordings for a meeting.\n        \n        Args:\n            meeting_id: Provider-specific meeting identifier\n            \n        Returns:\n            List of recording information dictionaries\n        ",
    "video_conference_providers_base_provider.validation.get_current_meeting_p": "\n        Get current meeting participants.\n        \n        Args:\n            meeting_id: Provider-specific meeting identifier\n            \n        Returns:\n            List of participant information dictionaries\n        ",
    "video_conference_providers_base_provider.validation.validate_provider_con": "\n        Validate provider configuration.\n        \n        Returns:\n            bool: True if configuration is valid\n        ",
    "video_conference_providers_webrtc_provider.validation.validate_webrtc_configuration": "Validate WebRTC configuration.",
    "video_conference_providers_webrtc_provider.validation.get_webrtc_meeting_information": "Get WebRTC meeting information.",
    "video_conference_providers_google_meet_provider.validation.validate_google_meet_configura": "Validate Google Meet configuration.",
    "video_conference_providers_google_meet_provider.validation.get_google_meet_meeting_inform": "Get Google Meet meeting information.",
    "video_conference_providers_zoom_provider.validation.validate_zoom_configuration": "Validate Zoom configuration.",
    "video_conference_providers_zoom_provider.validation.get_zoom_meeting_information": "Get Zoom meeting information.",
    "video_conference_providers_microsoft_teams_provider.validation.validate_microsoft_teams_confi": "Validate Microsoft Teams configuration.",
    "video_conference_providers_microsoft_teams_provider.validation.get_microsoft_teams_meeting_in": "Get Microsoft Teams meeting information.",
    "interfaces_auth_service_interface.validation.verify_token_and_return_user_i": "Verify token and return user if valid.",
    "interfaces_beneficiary_service_interface.validation.export_beneficiary_data_in_spe": "Export beneficiary data in specified format.",
    "ai_content_recommendations.validation.generate_rec": "\n        \n        Generate recommendations in the following JSON format:\n        {\n            \"primary_recommendations\": [\n                {\n                    \"title\": \"...\",\n                    \"description\": \"...\",\n                    \"type\": \"video/article/exercise/etc\",\n                    \"difficulty\": \"beginner/intermediate/advanced\",\n                    \"estimated_time\": \"...\",\n                    \"learning_objectives\": [\"...\"],\n                    \"relevance_score\": 0.95\n                }\n            ],\n            \"supplementary_resources\": [...],\n            \"learning_path\": {\n                \"immediate\": [\"Resource 1\", \"Resource 2\"],\n                \"short_term\": [\"Resource 3\", \"Resource 4\"],\n                \"long_term\": [\"Resource 5\", \"Resource 6\"]\n            },\n            \"personalized_tips\": [\"Tip 1\", \"Tip 2\", ...],\n            \"engagement_strategies\": [\"Strategy 1\", \"Strategy 2\", ...]\n        }\n        ",
    "ai_content_recommendations.validation.provide_sugg": "\n        \n        Provide suggestions in the following JSON format:\n        {\n            \"overall_structure\": {\n                \"introduction\": {...},\n                \"main_sections\": [{...}],\n                \"conclusion\": {...}\n            },\n            \"content_elements\": {\n                \"required\": [\"...\"],\n                \"recommended\": [\"...\"],\n                \"optional\": [\"...\"]\n            },\n            \"formatting_guidelines\": {...},\n            \"enhancement_suggestions\": [\"...\"],\n            \"common_pitfalls\": [\"...\"],\n            \"examples\": [{\n                \"type\": \"...\",\n                \"content\": \"...\"\n            }]\n        }\n        ",
    "ai_content_recommendations.validation.include_both_formative_and_sum": "Include both formative and summative elements",
    "ai_content_recommendations.validation.core_information_here": "Core information here",
    "orchestration_tasks.validation.handle_validation_tasks": "Handle validation tasks.",
    "orchestration_monitoring.validation.check_if_the_rule_should_trigg": "Check if the rule should trigger an alert.",
    "orchestration_pipeline.validation.unsupported_configuration_file": "Unsupported configuration file format: ",
    "orchestration_pipeline.validation.validate_pipeline_configuratio": "Validate pipeline configuration.",
    "orchestration_orchestrator.validation.initialize_the_orchestrator_wi": "Initialize the orchestrator with required services.",
    "orchestration_examples.validation.display_monitoring_and_system": "Display monitoring and system health information.",
    "sync_offline_handler.validation.current_network_status_informa": "Current network status information",
    "sync_conflict_resolver.validation.version_information_for_confli": "Version information for conflict detection",
    "sync_conflict_resolver.validation.information_about_a_detected_c": "Information about a detected conflict",
    "sync_conflict_resolver.validation.insufficient_version_informati": "Insufficient version information",
    "sync_conflict_resolver.validation.insufficient_version_informati_1": "Insufficient version information",
    "sync_config.validation.validate_configuration_values": "Validate configuration values",
    "sync_config.validation.jwt_secret_is_required_when_au": "JWT secret is required when authentication is enabled",
    "sync_config.validation.websocket_heartbeat_interval_m": "WebSocket heartbeat interval must be positive",
    "sync_config.validation.connectivity_check_interval_mu": "Connectivity check interval must be positive",
    "sync___init__.validation.validationexception": "ValidationException",
    "sync_sync_service.validation.validate_request_format_and_re": "Validate request format and required fields",
    "sync_sync_service.validation.entity_type_and_entity_id_are": "entity_type and entity_id are required",
    "sync_sync_service.validation.user_id_is_required": "user_id is required",
    "sync_utils.validation.utility_functions_for_synchro": "\nUtility Functions for Synchronization System\n\nCommon utility functions used across sync components:\n- Data serialization and compression\n- Checksum and hashing utilities\n- Time and timestamp helpers\n- Network and connectivity utilities\n- Validation helpers\n",
    "sync_utils.validation.format_timestamp_as_string": "Format timestamp as string",
    "sync_utils.validation.simple_email_validation": "Simple email validation",
    "sync_utils.validation.validate_uuid_string_format": "Validate UUID string format",
    "sync_utils.validation.format_bytes_value_as_human_re": "Format bytes value as human readable string",
    "sync_utils.validation.format_duration_in_seconds_as": "Format duration in seconds as human readable string",
    "sync_device_sync.validation.information_about_a_registered": "Information about a registered device",
    "sync_device_sync.validation.no_valid_target_devices": "No valid target devices",
    "sync_device_sync.validation.check_if_device_has_required_c": "Check if device has required capabilities for sync operation",
    "sync_device_sync.validation.get_information_about_a_specif": "Get information about a specific device",
    "sync_websocket_manager.validation.information_about_a_websocket": "Information about a WebSocket connection",
    "sync_websocket_manager.validation.must_be_authenticated_to_subsc": "Must be authenticated to subscribe",
    "sync_websocket_manager.validation.get_information_about_a_specif": "Get information about a specific connection",
    "i18n_language_detection_service.validation.get_comprehensive_inf": "\n        Get comprehensive information about a language.\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            Language information dictionary\n        ",
    "i18n_language_detection_service.validation.get_list_of_all_suppo": "\n        Get list of all supported languages.\n        \n        Returns:\n            List of language information dictionaries\n        ",
    "i18n_language_detection_service.validation.normalize_language_co": "\n        Normalize language code to supported format.\n        \n        Args:\n            language_code: Raw language code\n            \n        Returns:\n            Normalized language code\n        ",
    "i18n_translation_service.validation.information": "Information",
    "i18n_translation_service.validation.this_field_is_required": "This field is required",
    "i18n_translation_service.validation.information_1": "Information",
    "i18n_translation_service.validation.information_2": "Information",
    "i18n_translation_service.validation.translate_a_key_to_th": "\n        Translate a key to the specified language.\n        \n        Args:\n            key: Translation key (e.g., 'common.save', 'auth.login')\n            language: Target language code\n            **kwargs: Variables for string formatting\n            \n        Returns:\n            Translation result\n        ",
    "i18n_locale_service.validation.locale_service_for_date_time": "Locale service for date, time, and number formatting.",
    "i18n_locale_service.validation.service_for_handling_locale_sp": "Service for handling locale-specific formatting.",
    "i18n_locale_service.validation.format_date_according": "\n        Format date according to locale.\n        \n        Args:\n            date_obj: Date object to format\n            language_code: Language code\n            format_type: Format type ('short', 'medium', 'long', 'full')\n            \n        Returns:\n            Formatted date string\n        ",
    "i18n_locale_service.validation.format_datetime_accor": "\n        Format datetime according to locale.\n        \n        Args:\n            datetime_obj: Datetime object to format\n            language_code: Language code\n            format_type: Format type ('short', 'medium', 'long', 'full')\n            \n        Returns:\n            Formatted datetime string\n        ",
    "i18n_locale_service.validation.format_time_according": "\n        Format time according to locale.\n        \n        Args:\n            time_obj: Time object to format\n            language_code: Language code\n            format_type: Format type ('short', 'medium', 'long', 'full')\n            \n        Returns:\n            Formatted time string\n        ",
    "i18n_locale_service.validation.format_currency_amoun": "\n        Format currency amount according to locale.\n        \n        Args:\n            amount: Amount to format\n            language_code: Language code\n            currency_code: Currency code (e.g., 'USD', 'EUR')\n            \n        Returns:\n            Formatted currency string\n        ",
    "i18n_locale_service.validation.format_number_accordi": "\n        Format number according to locale.\n        \n        Args:\n            number: Number to format\n            language_code: Language code\n            decimal_places: Number of decimal places\n            \n        Returns:\n            Formatted number string\n        ",
    "i18n_locale_service.validation.format_percentage_acc": "\n        Format percentage according to locale.\n        \n        Args:\n            number: Number to format as percentage (0.0-1.0)\n            language_code: Language code\n            decimal_places: Number of decimal places\n            \n        Returns:\n            Formatted percentage string\n        ",
    "i18n_locale_service.validation.get_comprehensive_loc": "\n        Get comprehensive locale information.\n        \n        Args:\n            language_code: Language code\n            \n        Returns:\n            Locale information dictionary\n        ",
    "i18n_locale_service.validation.parse_date_string_acc": "\n        Parse date string according to locale.\n        \n        Args:\n            date_string: Date string to parse\n            language_code: Language code\n            format_type: Format type ('short', 'medium', 'long', 'full')\n            \n        Returns:\n            Parsed date object or None\n        ",
    "i18n_content_translation_service.validation.you_are_a_professional_transla": "You are a professional translator. Translate the Markdown content while preserving all formatting and structure.",
    "analytics_config.validation.get_export_format_specific_con": "Get export format specific configuration",
    "analytics_performance_metrics.validation.check_if_cached_data_is_still": "Check if cached data is still valid",
    "analytics_performance_metrics.validation.immediate_attention_required_f": "Immediate attention required for ",
    "analytics_user_behavior_analytics.validation.check_if_cached_data_is_still": "Check if cached data is still valid",
    "analytics_data_export.validation.data_export_and_visualization": "\nData Export and Visualization Service\n\nComprehensive data export service with multiple formats,\nadvanced visualizations, and automated data preparation.\n",
    "analytics_data_export.validation.export_format_types": "Export format types",
    "analytics_data_export.validation.comprehensive_data_export": "\n    Comprehensive data export and visualization service\n    with support for multiple formats and advanced analytics.\n    ",
    "analytics_data_export.validation.prepare_data_for_export_with_c": "Prepare data for export with cleaning and transformations",
    "analytics_data_export.validation.apply_data_transformations_bas": "Apply data transformations based on source and requirements",
    "analytics_data_export.validation.apply_user_specific_data_trans": "Apply user-specific data transformations",
    "analytics_data_export.validation.apply_appointment_specific_dat": "Apply appointment-specific data transformations",
    "analytics_data_export.validation.apply_evaluation_specific_data": "Apply evaluation-specific data transformations",
    "analytics_data_export.validation.apply_activity_specific_data_t": "Apply activity-specific data transformations",
    "analytics_data_export.validation.apply_general_transformations": "Apply general transformations to any DataFrame",
    "analytics_data_export.validation.export_data_to_specified_forma": "Export data to specified format",
    "analytics_data_export.validation.unsupported_export_format": "Unsupported export format: ",
    "analytics_data_export.validation.export_data_to_csv_format": "Export data to CSV format",
    "analytics_data_export.validation.export_data_to_json_format": "Export data to JSON format",
    "analytics_data_export.validation.export_data_to_excel_format": "Export data to Excel format",
    "analytics_data_export.validation.export_data_to_parquet_format": "Export data to Parquet format",
    "analytics_data_export.validation.export_data_to_xml_format": "Export data to XML format",
    "analytics_data_export.validation.export_data_to_yaml_format": "Export data to YAML format",
    "analytics_report_generator.validation.custom_report_generation_serv": "\nCustom Report Generation Service\n\nAdvanced report generation system with customizable templates,\nscheduling, automated insights, and multiple output formats.\n",
    "analytics_report_generator.validation.report_output_formats": "Report output formats",
    "analytics_report_generator.validation.advanced_report_generatio": "\n    Advanced report generation service with customizable templates,\n    automated insights, and multiple output formats.\n    ",
    "analytics_report_generator.validation.export_report_to_specified_for": "Export report to specified format",
    "analytics_report_generator.validation.convert_report_content_to_html": "Convert report content to HTML format",
    "interfaces_sms_service_interface.validation.validate_and_format_a": "\n        Validate and format a phone number.\n        \n        Returns:\n            Tuple of (is_valid, formatted_number)\n        "
  }
}