# ================================
# Metricbeat Configuration for BDC
# ================================

# --------------------------------
# Global Configuration
# --------------------------------
name: bdc-metricbeat
tags: ["bdc", "metricbeat", "metrics"]
fields:
  environment: ${BDC_ENVIRONMENT:production}
  service: bdc
  version: ${BDC_VERSION:1.0.0}
fields_under_root: true

# --------------------------------
# Modules Configuration
# --------------------------------
metricbeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: true
  reload.period: 30s

# --------------------------------
# Module Definitions
# --------------------------------
metricbeat.modules:

# System Metrics
- module: system
  period: 30s
  metricsets:
    - cpu
    - load
    - memory
    - network
    - process
    - process_summary
    - socket_summary
    - filesystem
    - fsstat
    - uptime
  processes: ['.*']
  process.include_top_n:
    by_cpu: 5
    by_memory: 5
  cpu.metrics: ["percentages", "normalized_percentages"]
  filesystem.ignore_types: ["tmpfs", "devtmpfs", "debugfs"]

# Docker Metrics
- module: docker
  period: 30s
  hosts: ["unix:///var/run/docker.sock"]
  metricsets:
    - container
    - cpu
    - diskio
    - healthcheck
    - info
    - memory
    - network
  processors:
    - add_docker_metadata: ~

# PostgreSQL Metrics
- module: postgresql
  period: 30s
  hosts: ["postgres://bdc_user:${DATABASE_PASSWORD}@postgres:5432/bdc_production?sslmode=disable"]
  metricsets:
    - database
    - bgwriter
    - activity
    - statement
  queries:
    - query: "SELECT COUNT(*) as active_connections FROM pg_stat_activity WHERE state = 'active'"
      name: "active_connections"

# Redis Metrics
- module: redis
  period: 30s
  hosts: ["redis://redis:6379"]
  password: "${REDIS_PASSWORD}"
  metricsets:
    - info
    - keyspace

# Nginx Metrics (if status module is enabled)
- module: nginx
  period: 30s
  hosts: ["http://frontend/nginx_status"]
  metricsets:
    - stubstatus
  server_status_path: "/nginx_status"

# HTTP Metrics for API endpoints
- module: http
  period: 30s
  hosts: ["http://backend:5000/health"]
  metricsets:
    - json
  namespace: "bdc_api"
  method: GET
  json.is_array: false

# --------------------------------
# Output Configuration
# --------------------------------
output.elasticsearch:
  enabled: true
  hosts: ["http://elasticsearch:9200"]
  index: "metricbeat-bdc-%{+yyyy.MM.dd}"
  template.enabled: true
  template.name: "metricbeat-bdc"
  template.pattern: "metricbeat-bdc-*"
  template.settings:
    index:
      number_of_shards: 1
      number_of_replicas: 0
      refresh_interval: "30s"
      codec: "best_compression"

# --------------------------------
# Kibana Configuration
# --------------------------------
setup.kibana:
  host: "http://kibana:5601"

# --------------------------------
# Index Lifecycle Management
# --------------------------------
setup.ilm.enabled: true
setup.ilm.rollover_alias: "metricbeat-bdc"
setup.ilm.pattern: "{now/d}-000001"
setup.ilm.policy: "metricbeat-bdc-policy"

# --------------------------------
# Template Configuration
# --------------------------------
setup.template.enabled: true
setup.template.name: "metricbeat-bdc"
setup.template.pattern: "metricbeat-bdc-*"

# --------------------------------
# Dashboard Configuration
# --------------------------------
setup.dashboards.enabled: true
setup.dashboards.index: "metricbeat-bdc-*"

# --------------------------------
# Monitoring Configuration
# --------------------------------
monitoring.enabled: true
monitoring.elasticsearch:
  hosts: ["http://elasticsearch:9200"]

# --------------------------------
# Logging Configuration
# --------------------------------
logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/metricbeat
  name: metricbeat.log
  keepfiles: 7
  permissions: 0644

# --------------------------------
# Processor Configuration
# --------------------------------
processors:
  - add_host_metadata:
      when.not.contains.tags: forwarded
  - add_docker_metadata:
      host: "unix:///var/run/docker.sock"
  - add_kubernetes_metadata:
      in_cluster: false
      host: ${NODE_NAME}

# --------------------------------
# Performance Tuning
# --------------------------------
queue.mem:
  events: 4096
  flush.min_events: 512
  flush.timeout: 5s

# --------------------------------
# Custom Processors for BDC
# --------------------------------
processors:
  - script:
      lang: javascript
      id: bdc_enrichment
      source: >
        function process(event) {
          // Add custom fields for BDC monitoring
          if (event.Get("service.type") === "postgresql") {
            event.Put("bdc.database.monitored", true);
          }
          if (event.Get("service.type") === "redis") {
            event.Put("bdc.cache.monitored", true);
          }
          if (event.Get("docker.container.name")) {
            var containerName = event.Get("docker.container.name");
            if (containerName.includes("bdc")) {
              event.Put("bdc.service.monitored", true);
            }
          }
        }