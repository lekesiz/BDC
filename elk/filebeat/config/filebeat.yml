# ================================
# Filebeat Configuration for BDC
# ================================

# --------------------------------
# Global Configuration
# --------------------------------
name: bdc-filebeat
tags: ["bdc", "filebeat", "logs"]
fields:
  environment: ${BDC_ENVIRONMENT:production}
  service: bdc
  version: ${BDC_VERSION:1.0.0}
fields_under_root: true

# --------------------------------
# File Inputs
# --------------------------------
filebeat.inputs:

# Flask Application Logs
- type: log
  enabled: true
  paths:
    - /var/log/bdc/*.log
  fields:
    logtype: application
    service: flask
  fields_under_root: false
  json.keys_under_root: true
  json.add_error_key: true
  multiline.pattern: '^\d{4}-\d{2}-\d{2}'
  multiline.negate: true
  multiline.match: after
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"

# Security Audit Logs
- type: log
  enabled: true
  paths:
    - /var/log/bdc/security/*.log
  fields:
    logtype: security
    service: audit
  fields_under_root: false
  json.keys_under_root: true
  json.add_error_key: true
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"

# Nginx Access Logs
- type: log
  enabled: true
  paths:
    - /var/log/nginx/access.log
  fields:
    logtype: access
    service: nginx
  fields_under_root: false
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"

# Nginx Error Logs
- type: log
  enabled: true
  paths:
    - /var/log/nginx/error.log
  fields:
    logtype: error
    service: nginx
  fields_under_root: false
  multiline.pattern: '^\d{4}/\d{2}/\d{2}'
  multiline.negate: true
  multiline.match: after
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"

# Docker Container Logs
- type: container
  enabled: true
  paths:
    - '/var/lib/docker/containers/*/*.log'
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"
    - decode_json_fields:
        fields: ["message"]
        target: ""
        overwrite_keys: true

# --------------------------------
# Output Configuration
# --------------------------------
output.elasticsearch:
  enabled: true
  hosts: ["http://elasticsearch:9200"]
  index: "filebeat-bdc-%{+yyyy.MM.dd}"
  template.enabled: true
  template.name: "filebeat-bdc"
  template.pattern: "filebeat-bdc-*"
  template.settings:
    index:
      number_of_shards: 1
      number_of_replicas: 0
      refresh_interval: "30s"
      codec: "best_compression"

# Alternative: Logstash output
# output.logstash:
#   enabled: false
#   hosts: ["logstash:5044"]

# --------------------------------
# Kibana Configuration
# --------------------------------
setup.kibana:
  host: "http://kibana:5601"

# --------------------------------
# Index Lifecycle Management
# --------------------------------
setup.ilm.enabled: true
setup.ilm.rollover_alias: "filebeat-bdc"
setup.ilm.pattern: "{now/d}-000001"
setup.ilm.policy: "filebeat-bdc-policy"

# --------------------------------
# Template Configuration
# --------------------------------
setup.template.enabled: true
setup.template.name: "filebeat-bdc"
setup.template.pattern: "filebeat-bdc-*"

# --------------------------------
# Dashboard Configuration
# --------------------------------
setup.dashboards.enabled: true
setup.dashboards.index: "filebeat-bdc-*"

# --------------------------------
# Monitoring Configuration
# --------------------------------
monitoring.enabled: true
monitoring.elasticsearch:
  hosts: ["http://elasticsearch:9200"]

# --------------------------------
# Logging Configuration
# --------------------------------
logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat.log
  keepfiles: 7
  permissions: 0644

# --------------------------------
# Processor Configuration
# --------------------------------
processors:
  - add_host_metadata:
      when.not.contains.tags: forwarded
  - add_docker_metadata:
      host: "unix:///var/run/docker.sock"
  - add_kubernetes_metadata:
      in_cluster: false
      host: ${NODE_NAME}
      matchers:
      - logs_path:
          logs_path: "/var/log/containers/"

# --------------------------------
# Performance Tuning
# --------------------------------
filebeat.registry.path: "/usr/share/filebeat/data/registry"
filebeat.registry.file_permissions: 0600
filebeat.registry.flush: 5s

queue.mem:
  events: 4096
  flush.min_events: 512
  flush.timeout: 5s

# --------------------------------
# Security Configuration
# --------------------------------
# SSL/TLS Configuration (if needed)
# output.elasticsearch.ssl.enabled: true
# output.elasticsearch.ssl.certificate_authorities: ["/etc/ssl/certs/ca.crt"]
# output.elasticsearch.ssl.certificate: "/etc/ssl/certs/client.crt"
# output.elasticsearch.ssl.key: "/etc/ssl/private/client.key"