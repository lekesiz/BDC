groups:
  - name: bdc.system
    rules:
      # High CPU usage
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 5 minutes on {{ $labels.instance }}"

      # High memory usage
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 85% for more than 5 minutes on {{ $labels.instance }}"

      # High disk usage
      - alert: HighDiskUsage
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High disk usage detected"
          description: "Disk usage is above 85% for more than 5 minutes on {{ $labels.instance }} at {{ $labels.mountpoint }}"

      # Critical disk usage
      - alert: CriticalDiskUsage
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 95
        for: 2m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "Critical disk usage detected"
          description: "Disk usage is above 95% for more than 2 minutes on {{ $labels.instance }} at {{ $labels.mountpoint }}"

      # High load average
      - alert: HighLoadAverage
        expr: node_load15 > 2
        for: 10m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High load average detected"
          description: "Load average is above 2 for more than 10 minutes on {{ $labels.instance }}"

  - name: bdc.application
    rules:
      # Application down
      - alert: ApplicationDown
        expr: up{job="bdc-backend"} == 0
        for: 1m
        labels:
          severity: critical
          service: application
        annotations:
          summary: "BDC Application is down"
          description: "BDC backend application has been down for more than 1 minute"

      # High response time
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(flask_request_duration_seconds_bucket{job="bdc-backend"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          service: application
        annotations:
          summary: "High application response time"
          description: "95th percentile response time is above 2 seconds for more than 5 minutes"

      # High error rate
      - alert: HighErrorRate
        expr: rate(flask_request_exceptions_total{job="bdc-backend"}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          service: application
        annotations:
          summary: "High application error rate"
          description: "Application error rate is above 10% for more than 5 minutes"

      # Critical error rate
      - alert: CriticalErrorRate
        expr: rate(flask_request_exceptions_total{job="bdc-backend"}[5m]) > 0.2
        for: 2m
        labels:
          severity: critical
          service: application
        annotations:
          summary: "Critical application error rate"
          description: "Application error rate is above 20% for more than 2 minutes"

  - name: bdc.database
    rules:
      # Database down
      - alert: DatabaseDown
        expr: up{job="postgres-exporter"} == 0
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "Database is down"
          description: "PostgreSQL database has been down for more than 1 minute"

      # High database connections
      - alert: HighDatabaseConnections
        expr: (pg_stat_database_numbackends / pg_settings_max_connections) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "High database connection usage"
          description: "Database connection usage is above 80% for more than 5 minutes"

      # Slow queries
      - alert: SlowQueries
        expr: rate(pg_stat_statements_mean_time_ms[5m]) > 1000
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "Slow database queries detected"
          description: "Average query time is above 1 second for more than 5 minutes"

      # Database replication lag (if applicable)
      - alert: DatabaseReplicationLag
        expr: pg_stat_replication_replay_lag > 300
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "Database replication lag detected"
          description: "Database replication lag is above 5 minutes"

  - name: bdc.redis
    rules:
      # Redis down
      - alert: RedisDown
        expr: up{job="redis-exporter"} == 0
        for: 1m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis is down"
          description: "Redis server has been down for more than 1 minute"

      # High Redis memory usage
      - alert: HighRedisMemoryUsage
        expr: (redis_memory_used_bytes / redis_memory_max_bytes) * 100 > 90
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "High Redis memory usage"
          description: "Redis memory usage is above 90% for more than 5 minutes"

      # High Redis evicted keys
      - alert: HighRedisEvictedKeys
        expr: rate(redis_evicted_keys_total[5m]) > 100
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "High Redis key eviction rate"
          description: "Redis is evicting more than 100 keys per second for more than 5 minutes"

  - name: bdc.containers
    rules:
      # Container down
      - alert: ContainerDown
        expr: absent(container_last_seen{name=~"bdc-.*"})
        for: 1m
        labels:
          severity: critical
          service: containers
        annotations:
          summary: "BDC Container is down"
          description: "Container {{ $labels.name }} has been down for more than 1 minute"

      # High container CPU usage
      - alert: HighContainerCPU
        expr: rate(container_cpu_usage_seconds_total{name=~"bdc-.*"}[5m]) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: containers
        annotations:
          summary: "High container CPU usage"
          description: "Container {{ $labels.name }} CPU usage is above 80% for more than 5 minutes"

      # High container memory usage
      - alert: HighContainerMemory
        expr: (container_memory_usage_bytes{name=~"bdc-.*"} / container_spec_memory_limit_bytes{name=~"bdc-.*"}) * 100 > 90
        for: 5m
        labels:
          severity: warning
          service: containers
        annotations:
          summary: "High container memory usage"
          description: "Container {{ $labels.name }} memory usage is above 90% for more than 5 minutes"

      # Container restart
      - alert: ContainerRestart
        expr: increase(container_restart_count{name=~"bdc-.*"}[10m]) > 0
        for: 0m
        labels:
          severity: warning
          service: containers
        annotations:
          summary: "Container restart detected"
          description: "Container {{ $labels.name }} has restarted"

  - name: bdc.monitoring
    rules:
      # Prometheus target down
      - alert: PrometheusTargetDown
        expr: up == 0
        for: 1m
        labels:
          severity: warning
          service: monitoring
        annotations:
          summary: "Prometheus target is down"
          description: "Prometheus target {{ $labels.instance }} for job {{ $labels.job }} has been down for more than 1 minute"

      # Prometheus config reload failed
      - alert: PrometheusConfigReloadFailed
        expr: prometheus_config_last_reload_successful == 0
        for: 1m
        labels:
          severity: warning
          service: monitoring
        annotations:
          summary: "Prometheus configuration reload failed"
          description: "Prometheus configuration reload has failed"

      # AlertManager instance down
      - alert: AlertManagerDown
        expr: up{job="alertmanager"} == 0
        for: 1m
        labels:
          severity: critical
          service: monitoring
        annotations:
          summary: "AlertManager is down"
          description: "AlertManager has been down for more than 1 minute"

  - name: bdc.security
    rules:
      # High authentication failure rate
      - alert: HighAuthFailureRate
        expr: rate(flask_request_total{status="401",job="bdc-backend"}[5m]) > 10
        for: 5m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High authentication failure rate"
          description: "Authentication failure rate is above 10 requests per second for more than 5 minutes"

      # Potential brute force attack
      - alert: PotentialBruteForceAttack
        expr: rate(flask_request_total{status="401",job="bdc-backend"}[1m]) > 50
        for: 2m
        labels:
          severity: critical
          service: security
        annotations:
          summary: "Potential brute force attack detected"
          description: "Authentication failure rate is above 50 requests per second for more than 2 minutes"

      # SSL certificate expiry
      - alert: SSLCertificateExpiry
        expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 7
        for: 1m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "SSL certificate expiring soon"
          description: "SSL certificate for {{ $labels.instance }} expires in less than 7 days"