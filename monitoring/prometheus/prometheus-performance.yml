global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'bdc-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

# Load rules
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
    - targets: 
      - 'node-exporter:9100'

  # Backend application metrics
  - job_name: 'backend'
    metrics_path: '/api/metrics'
    static_configs:
    - targets: 
      - 'backend1:5000'
      - 'backend2:5000'
      - 'backend3:5000'
    relabel_configs:
    - source_labels: [__address__]
      target_label: instance
      regex: '([^:]+):.*'
      replacement: '${1}'

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
    - targets: 
      - 'nginx-exporter:9113'

  # PostgreSQL metrics
  - job_name: 'postgresql'
    static_configs:
    - targets: 
      - 'postgres-exporter:9187'

  # Redis metrics
  - job_name: 'redis'
    static_configs:
    - targets: 
      - 'redis-exporter:9121'

  # Kubernetes metrics
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  # Kubernetes nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)

  # Kubernetes pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name

  # Custom application metrics
  - job_name: 'bdc-application'
    metrics_path: '/metrics'
    static_configs:
    - targets:
      - 'frontend:3000'
      - 'api-gateway:8080'
    metric_relabel_configs:
    - source_labels: [__name__]
      regex: 'bdc_.*'
      action: keep

# Remote write for long-term storage
remote_write:
  - url: "http://prometheus-long-term-storage:9090/api/v1/write"
    write_relabel_configs:
    - source_labels: [__name__]
      regex: 'bdc_.*|http_.*|process_.*|node_.*'
      action: keep
    queue_config:
      capacity: 10000
      max_shards: 200
      min_shards: 1
      max_samples_per_send: 5000
      batch_send_deadline: 10s
      min_backoff: 30ms
      max_backoff: 100ms