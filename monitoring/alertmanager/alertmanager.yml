global:
  smtp_smarthost: '${MAIL_SERVER}:${MAIL_PORT}'
  smtp_from: '${MAIL_DEFAULT_SENDER}'
  smtp_auth_username: '${MAIL_USERNAME}'
  smtp_auth_password: '${MAIL_PASSWORD}'
  smtp_require_tls: true

# The directory from which notification templates are read.
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together.
  group_by: ['alertname', 'cluster', 'service']
  
  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  group_wait: 10s
  
  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 10s
  
  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 1h
  
  # A default receiver
  receiver: 'default'
  
  # All the above attributes are inherited by all child routes and can
  # overwritten on each.
  routes:
    # Critical alerts go to multiple channels
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 5s
      group_interval: 5s
      repeat_interval: 30m
    
    # Security alerts
    - match:
        service: security
      receiver: 'security-alerts'
      group_wait: 5s
      group_interval: 5s
      repeat_interval: 1h
    
    # Database alerts
    - match:
        service: database
      receiver: 'database-alerts'
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 2h
    
    # Application alerts
    - match:
        service: application
      receiver: 'application-alerts'
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 2h

# Inhibition rules allow to mute a set of alerts given that another alert is firing.
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']

receivers:
  - name: 'default'
    email_configs:
      - to: '${ADMIN_EMAILS}'
        subject: '[BDC Alert] {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          {{ end }}
        headers:
          Subject: '[BDC Alert] {{ .GroupLabels.alertname }}'

  - name: 'critical-alerts'
    email_configs:
      - to: '${ADMIN_EMAILS}'
        subject: '[BDC CRITICAL] {{ .GroupLabels.alertname }}'
        body: |
          ðŸš¨ CRITICAL ALERT ðŸš¨
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          Started: {{ .StartsAt }}
          {{ end }}
        headers:
          Subject: '[BDC CRITICAL] {{ .GroupLabels.alertname }}'
          Priority: 'high'
    
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#alerts'
        title: 'ðŸš¨ BDC Critical Alert'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          *Service:* {{ .Labels.service }}
          {{ end }}
        color: 'danger'
        send_resolved: true
    
    webhook_configs:
      - url: '${ALERT_WEBHOOK_URL}'
        send_resolved: true
        http_config:
          bearer_token: '${ALERT_API_KEY}'
        title: 'BDC Critical Alert'
        text: |
          {{ range .Alerts }}
          {{ .Annotations.summary }}
          {{ end }}

  - name: 'security-alerts'
    email_configs:
      - to: '${ADMIN_EMAILS}'
        subject: '[BDC SECURITY] {{ .GroupLabels.alertname }}'
        body: |
          ðŸ”’ SECURITY ALERT ðŸ”’
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Started: {{ .StartsAt }}
          {{ end }}
        headers:
          Subject: '[BDC SECURITY] {{ .GroupLabels.alertname }}'
          Priority: 'high'
    
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#security'
        title: 'ðŸ”’ BDC Security Alert'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        color: 'warning'
        send_resolved: true

  - name: 'database-alerts'
    email_configs:
      - to: '${ADMIN_EMAILS}'
        subject: '[BDC DATABASE] {{ .GroupLabels.alertname }}'
        body: |
          ðŸ’¾ DATABASE ALERT ðŸ’¾
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Started: {{ .StartsAt }}
          {{ end }}
        headers:
          Subject: '[BDC DATABASE] {{ .GroupLabels.alertname }}'
    
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#database'
        title: 'ðŸ’¾ BDC Database Alert'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        color: 'warning'
        send_resolved: true

  - name: 'application-alerts'
    email_configs:
      - to: '${ADMIN_EMAILS}'
        subject: '[BDC APPLICATION] {{ .GroupLabels.alertname }}'
        body: |
          ðŸš€ APPLICATION ALERT ðŸš€
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Started: {{ .StartsAt }}
          {{ end }}
        headers:
          Subject: '[BDC APPLICATION] {{ .GroupLabels.alertname }}'
    
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#application'
        title: 'ðŸš€ BDC Application Alert'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        color: 'warning'
        send_resolved: true