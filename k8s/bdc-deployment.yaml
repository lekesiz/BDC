apiVersion: apps/v1
kind: Deployment
metadata:
  name: bdc-app
  namespace: bdc-production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bdc-app
  template:
    metadata:
      labels:
        app: bdc-app
    spec:
      containers:
      - name: bdc-app
        image: bdc:latest
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: bdc-config
        - secretRef:
            name: bdc-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
  name: bdc-service
  namespace: bdc-production
spec:
  selector:
    app: bdc-app
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bdc-ingress
  namespace: bdc-production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/websocket-services: bdc-service
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: bdc-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bdc-service
            port:
              number: 80